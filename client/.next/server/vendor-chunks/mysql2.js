"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/mysql2";
exports.ids = ["vendor-chunks/mysql2"];
exports.modules = {

/***/ "(rsc)/./node_modules/mysql2/index.js":
/*!**************************************!*\
  !*** ./node_modules/mysql2/index.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nconst SqlString = __webpack_require__(/*! sqlstring */ \"(rsc)/./node_modules/sqlstring/index.js\");\n\nconst Connection = __webpack_require__(/*! ./lib/connection.js */ \"(rsc)/./node_modules/mysql2/lib/connection.js\");\nconst ConnectionConfig = __webpack_require__(/*! ./lib/connection_config.js */ \"(rsc)/./node_modules/mysql2/lib/connection_config.js\");\nconst parserCache = __webpack_require__(/*! ./lib/parsers/parser_cache */ \"(rsc)/./node_modules/mysql2/lib/parsers/parser_cache.js\");\n\nexports.createConnection = function(opts) {\n  return new Connection({ config: new ConnectionConfig(opts) });\n};\n\nexports.connect = exports.createConnection;\nexports.Connection = Connection;\nexports.ConnectionConfig = ConnectionConfig;\n\nconst Pool = __webpack_require__(/*! ./lib/pool.js */ \"(rsc)/./node_modules/mysql2/lib/pool.js\");\nconst PoolCluster = __webpack_require__(/*! ./lib/pool_cluster.js */ \"(rsc)/./node_modules/mysql2/lib/pool_cluster.js\");\n\nexports.createPool = function(config) {\n  const PoolConfig = __webpack_require__(/*! ./lib/pool_config.js */ \"(rsc)/./node_modules/mysql2/lib/pool_config.js\");\n  return new Pool({ config: new PoolConfig(config) });\n};\n\nexports.createPoolCluster = function(config) {\n  const PoolCluster = __webpack_require__(/*! ./lib/pool_cluster.js */ \"(rsc)/./node_modules/mysql2/lib/pool_cluster.js\");\n  return new PoolCluster(config);\n};\n\nexports.createQuery = Connection.createQuery;\n\nexports.Pool = Pool;\n\nexports.PoolCluster = PoolCluster;\n\nexports.createServer = function(handler) {\n  const Server = __webpack_require__(/*! ./lib/server.js */ \"(rsc)/./node_modules/mysql2/lib/server.js\");\n  const s = new Server();\n  if (handler) {\n    s.on('connection', handler);\n  }\n  return s;\n};\n\nexports.PoolConnection = __webpack_require__(/*! ./lib/pool_connection */ \"(rsc)/./node_modules/mysql2/lib/pool_connection.js\");\nexports.authPlugins = __webpack_require__(/*! ./lib/auth_plugins */ \"(rsc)/./node_modules/mysql2/lib/auth_plugins/index.js\");\nexports.escape = SqlString.escape;\nexports.escapeId = SqlString.escapeId;\nexports.format = SqlString.format;\nexports.raw = SqlString.raw;\n\nexports.__defineGetter__(\n  'createConnectionPromise',\n  () => (__webpack_require__(/*! ./promise.js */ \"(rsc)/./node_modules/mysql2/promise.js\").createConnection)\n);\n\nexports.__defineGetter__(\n  'createPoolPromise',\n  () => (__webpack_require__(/*! ./promise.js */ \"(rsc)/./node_modules/mysql2/promise.js\").createPool)\n);\n\nexports.__defineGetter__(\n  'createPoolClusterPromise',\n  () => (__webpack_require__(/*! ./promise.js */ \"(rsc)/./node_modules/mysql2/promise.js\").createPoolCluster)\n);\n\nexports.__defineGetter__('Types', () => __webpack_require__(/*! ./lib/constants/types.js */ \"(rsc)/./node_modules/mysql2/lib/constants/types.js\"));\n\nexports.__defineGetter__('Charsets', () =>\n  __webpack_require__(/*! ./lib/constants/charsets.js */ \"(rsc)/./node_modules/mysql2/lib/constants/charsets.js\")\n);\n\nexports.__defineGetter__('CharsetToEncoding', () =>\n  __webpack_require__(/*! ./lib/constants/charset_encodings.js */ \"(rsc)/./node_modules/mysql2/lib/constants/charset_encodings.js\")\n);\n\nexports.setMaxParserCache = function(max) {\n  parserCache.setMaxCache(max);\n};\n\nexports.clearParserCache = function() {\n  parserCache.clearCache();\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLGtCQUFrQixtQkFBTyxDQUFDLDBEQUFXOztBQUVyQyxtQkFBbUIsbUJBQU8sQ0FBQywwRUFBcUI7QUFDaEQseUJBQXlCLG1CQUFPLENBQUMsd0ZBQTRCO0FBQzdELG9CQUFvQixtQkFBTyxDQUFDLDJGQUE0Qjs7QUFFeEQsd0JBQXdCO0FBQ3hCLDBCQUEwQixvQ0FBb0M7QUFDOUQ7O0FBRUEsZUFBZTtBQUNmLGtCQUFrQjtBQUNsQix3QkFBd0I7O0FBRXhCLGFBQWEsbUJBQU8sQ0FBQyw4REFBZTtBQUNwQyxvQkFBb0IsbUJBQU8sQ0FBQyw4RUFBdUI7O0FBRW5ELGtCQUFrQjtBQUNsQixxQkFBcUIsbUJBQU8sQ0FBQyw0RUFBc0I7QUFDbkQsb0JBQW9CLGdDQUFnQztBQUNwRDs7QUFFQSx5QkFBeUI7QUFDekIsc0JBQXNCLG1CQUFPLENBQUMsOEVBQXVCO0FBQ3JEO0FBQ0E7O0FBRUEsbUJBQW1COztBQUVuQixZQUFZOztBQUVaLG1CQUFtQjs7QUFFbkIsb0JBQW9CO0FBQ3BCLGlCQUFpQixtQkFBTyxDQUFDLGtFQUFpQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsK0hBQXlEO0FBQ3pELDRIQUFtRDtBQUNuRCxjQUFjO0FBQ2QsZ0JBQWdCO0FBQ2hCLGNBQWM7QUFDZCxXQUFXOztBQUVYO0FBQ0E7QUFDQSxRQUFRLG9HQUF3QztBQUNoRDs7QUFFQTtBQUNBO0FBQ0EsUUFBUSw4RkFBa0M7QUFDMUM7O0FBRUE7QUFDQTtBQUNBLFFBQVEscUdBQXlDO0FBQ2pEOztBQUVBLHdDQUF3QyxtQkFBTyxDQUFDLG9GQUEwQjs7QUFFMUU7QUFDQSxFQUFFLG1CQUFPLENBQUMsMEZBQTZCO0FBQ3ZDOztBQUVBO0FBQ0EsRUFBRSxtQkFBTyxDQUFDLDRHQUFzQztBQUNoRDs7QUFFQSx5QkFBeUI7QUFDekI7QUFDQTs7QUFFQSx3QkFBd0I7QUFDeEI7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JlYWxfZXN0YXRlLy4vbm9kZV9tb2R1bGVzL215c3FsMi9pbmRleC5qcz9lZTBiIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgU3FsU3RyaW5nID0gcmVxdWlyZSgnc3Fsc3RyaW5nJyk7XG5cbmNvbnN0IENvbm5lY3Rpb24gPSByZXF1aXJlKCcuL2xpYi9jb25uZWN0aW9uLmpzJyk7XG5jb25zdCBDb25uZWN0aW9uQ29uZmlnID0gcmVxdWlyZSgnLi9saWIvY29ubmVjdGlvbl9jb25maWcuanMnKTtcbmNvbnN0IHBhcnNlckNhY2hlID0gcmVxdWlyZSgnLi9saWIvcGFyc2Vycy9wYXJzZXJfY2FjaGUnKTtcblxuZXhwb3J0cy5jcmVhdGVDb25uZWN0aW9uID0gZnVuY3Rpb24ob3B0cykge1xuICByZXR1cm4gbmV3IENvbm5lY3Rpb24oeyBjb25maWc6IG5ldyBDb25uZWN0aW9uQ29uZmlnKG9wdHMpIH0pO1xufTtcblxuZXhwb3J0cy5jb25uZWN0ID0gZXhwb3J0cy5jcmVhdGVDb25uZWN0aW9uO1xuZXhwb3J0cy5Db25uZWN0aW9uID0gQ29ubmVjdGlvbjtcbmV4cG9ydHMuQ29ubmVjdGlvbkNvbmZpZyA9IENvbm5lY3Rpb25Db25maWc7XG5cbmNvbnN0IFBvb2wgPSByZXF1aXJlKCcuL2xpYi9wb29sLmpzJyk7XG5jb25zdCBQb29sQ2x1c3RlciA9IHJlcXVpcmUoJy4vbGliL3Bvb2xfY2x1c3Rlci5qcycpO1xuXG5leHBvcnRzLmNyZWF0ZVBvb2wgPSBmdW5jdGlvbihjb25maWcpIHtcbiAgY29uc3QgUG9vbENvbmZpZyA9IHJlcXVpcmUoJy4vbGliL3Bvb2xfY29uZmlnLmpzJyk7XG4gIHJldHVybiBuZXcgUG9vbCh7IGNvbmZpZzogbmV3IFBvb2xDb25maWcoY29uZmlnKSB9KTtcbn07XG5cbmV4cG9ydHMuY3JlYXRlUG9vbENsdXN0ZXIgPSBmdW5jdGlvbihjb25maWcpIHtcbiAgY29uc3QgUG9vbENsdXN0ZXIgPSByZXF1aXJlKCcuL2xpYi9wb29sX2NsdXN0ZXIuanMnKTtcbiAgcmV0dXJuIG5ldyBQb29sQ2x1c3Rlcihjb25maWcpO1xufTtcblxuZXhwb3J0cy5jcmVhdGVRdWVyeSA9IENvbm5lY3Rpb24uY3JlYXRlUXVlcnk7XG5cbmV4cG9ydHMuUG9vbCA9IFBvb2w7XG5cbmV4cG9ydHMuUG9vbENsdXN0ZXIgPSBQb29sQ2x1c3RlcjtcblxuZXhwb3J0cy5jcmVhdGVTZXJ2ZXIgPSBmdW5jdGlvbihoYW5kbGVyKSB7XG4gIGNvbnN0IFNlcnZlciA9IHJlcXVpcmUoJy4vbGliL3NlcnZlci5qcycpO1xuICBjb25zdCBzID0gbmV3IFNlcnZlcigpO1xuICBpZiAoaGFuZGxlcikge1xuICAgIHMub24oJ2Nvbm5lY3Rpb24nLCBoYW5kbGVyKTtcbiAgfVxuICByZXR1cm4gcztcbn07XG5cbmV4cG9ydHMuUG9vbENvbm5lY3Rpb24gPSByZXF1aXJlKCcuL2xpYi9wb29sX2Nvbm5lY3Rpb24nKTtcbmV4cG9ydHMuYXV0aFBsdWdpbnMgPSByZXF1aXJlKCcuL2xpYi9hdXRoX3BsdWdpbnMnKTtcbmV4cG9ydHMuZXNjYXBlID0gU3FsU3RyaW5nLmVzY2FwZTtcbmV4cG9ydHMuZXNjYXBlSWQgPSBTcWxTdHJpbmcuZXNjYXBlSWQ7XG5leHBvcnRzLmZvcm1hdCA9IFNxbFN0cmluZy5mb3JtYXQ7XG5leHBvcnRzLnJhdyA9IFNxbFN0cmluZy5yYXc7XG5cbmV4cG9ydHMuX19kZWZpbmVHZXR0ZXJfXyhcbiAgJ2NyZWF0ZUNvbm5lY3Rpb25Qcm9taXNlJyxcbiAgKCkgPT4gcmVxdWlyZSgnLi9wcm9taXNlLmpzJykuY3JlYXRlQ29ubmVjdGlvblxuKTtcblxuZXhwb3J0cy5fX2RlZmluZUdldHRlcl9fKFxuICAnY3JlYXRlUG9vbFByb21pc2UnLFxuICAoKSA9PiByZXF1aXJlKCcuL3Byb21pc2UuanMnKS5jcmVhdGVQb29sXG4pO1xuXG5leHBvcnRzLl9fZGVmaW5lR2V0dGVyX18oXG4gICdjcmVhdGVQb29sQ2x1c3RlclByb21pc2UnLFxuICAoKSA9PiByZXF1aXJlKCcuL3Byb21pc2UuanMnKS5jcmVhdGVQb29sQ2x1c3RlclxuKTtcblxuZXhwb3J0cy5fX2RlZmluZUdldHRlcl9fKCdUeXBlcycsICgpID0+IHJlcXVpcmUoJy4vbGliL2NvbnN0YW50cy90eXBlcy5qcycpKTtcblxuZXhwb3J0cy5fX2RlZmluZUdldHRlcl9fKCdDaGFyc2V0cycsICgpID0+XG4gIHJlcXVpcmUoJy4vbGliL2NvbnN0YW50cy9jaGFyc2V0cy5qcycpXG4pO1xuXG5leHBvcnRzLl9fZGVmaW5lR2V0dGVyX18oJ0NoYXJzZXRUb0VuY29kaW5nJywgKCkgPT5cbiAgcmVxdWlyZSgnLi9saWIvY29uc3RhbnRzL2NoYXJzZXRfZW5jb2RpbmdzLmpzJylcbik7XG5cbmV4cG9ydHMuc2V0TWF4UGFyc2VyQ2FjaGUgPSBmdW5jdGlvbihtYXgpIHtcbiAgcGFyc2VyQ2FjaGUuc2V0TWF4Q2FjaGUobWF4KTtcbn07XG5cbmV4cG9ydHMuY2xlYXJQYXJzZXJDYWNoZSA9IGZ1bmN0aW9uKCkge1xuICBwYXJzZXJDYWNoZS5jbGVhckNhY2hlKCk7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/auth_41.js":
/*!********************************************!*\
  !*** ./node_modules/mysql2/lib/auth_41.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\n/*\n4.1 authentication: (http://bazaar.launchpad.net/~mysql/mysql-server/5.5/view/head:/sql/password.c)\n\n  SERVER:  public_seed=create_random_string()\n           send(public_seed)\n\n  CLIENT:  recv(public_seed)\n           hash_stage1=sha1(\"password\")\n           hash_stage2=sha1(hash_stage1)\n           reply=xor(hash_stage1, sha1(public_seed,hash_stage2)\n\n           // this three steps are done in scramble()\n\n           send(reply)\n\n\n  SERVER:  recv(reply)\n           hash_stage1=xor(reply, sha1(public_seed,hash_stage2))\n           candidate_hash2=sha1(hash_stage1)\n           check(candidate_hash2==hash_stage2)\n\nserver stores sha1(sha1(password)) ( hash_stag2)\n*/\n\nconst crypto = __webpack_require__(/*! crypto */ \"crypto\");\n\nfunction sha1(msg, msg1, msg2) {\n  const hash = crypto.createHash('sha1');\n  hash.update(msg);\n  if (msg1) {\n    hash.update(msg1);\n  }\n\n  if (msg2) {\n    hash.update(msg2);\n  }\n\n  return hash.digest();\n}\n\nfunction xor(a, b) {\n  const result = Buffer.allocUnsafe(a.length);\n  for (let i = 0; i < a.length; i++) {\n    result[i] = a[i] ^ b[i];\n  }\n  return result;\n}\n\nexports.xor = xor;\n\nfunction token(password, scramble1, scramble2) {\n  if (!password) {\n    return Buffer.alloc(0);\n  }\n  const stage1 = sha1(password);\n  return exports.calculateTokenFromPasswordSha(stage1, scramble1, scramble2);\n}\n\nexports.calculateTokenFromPasswordSha = function(\n  passwordSha,\n  scramble1,\n  scramble2\n) {\n  // we use AUTH 41 here, and we need only the bytes we just need.\n  const authPluginData1 = scramble1.slice(0, 8);\n  const authPluginData2 = scramble2.slice(0, 12);\n  const stage2 = sha1(passwordSha);\n  const stage3 = sha1(authPluginData1, authPluginData2, stage2);\n  return xor(stage3, passwordSha);\n};\n\nexports.calculateToken = token;\n\nexports.verifyToken = function(publicSeed1, publicSeed2, token, doubleSha) {\n  const hashStage1 = xor(token, sha1(publicSeed1, publicSeed2, doubleSha));\n  const candidateHash2 = sha1(hashStage1);\n  return candidateHash2.compare(doubleSha) === 0;\n};\n\nexports.doubleSha1 = function(password) {\n  return sha1(sha1(password));\n};\n\nfunction xorRotating(a, seed) {\n  const result = Buffer.allocUnsafe(a.length);\n  const seedLen = seed.length;\n\n  for (let i = 0; i < a.length; i++) {\n    result[i] = a[i] ^ seed[i % seedLen];\n  }\n  return result;\n}\nexports.xorRotating = xorRotating;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9hdXRoXzQxLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSxlQUFlLG1CQUFPLENBQUMsc0JBQVE7O0FBRS9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0Esa0JBQWtCLGNBQWM7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsV0FBVzs7QUFFWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxxQ0FBcUM7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxzQkFBc0I7O0FBRXRCLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxrQkFBa0I7QUFDbEI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsa0JBQWtCLGNBQWM7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZWFsX2VzdGF0ZS8uL25vZGVfbW9kdWxlcy9teXNxbDIvbGliL2F1dGhfNDEuanM/YzBkMyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8qXG40LjEgYXV0aGVudGljYXRpb246IChodHRwOi8vYmF6YWFyLmxhdW5jaHBhZC5uZXQvfm15c3FsL215c3FsLXNlcnZlci81LjUvdmlldy9oZWFkOi9zcWwvcGFzc3dvcmQuYylcblxuICBTRVJWRVI6ICBwdWJsaWNfc2VlZD1jcmVhdGVfcmFuZG9tX3N0cmluZygpXG4gICAgICAgICAgIHNlbmQocHVibGljX3NlZWQpXG5cbiAgQ0xJRU5UOiAgcmVjdihwdWJsaWNfc2VlZClcbiAgICAgICAgICAgaGFzaF9zdGFnZTE9c2hhMShcInBhc3N3b3JkXCIpXG4gICAgICAgICAgIGhhc2hfc3RhZ2UyPXNoYTEoaGFzaF9zdGFnZTEpXG4gICAgICAgICAgIHJlcGx5PXhvcihoYXNoX3N0YWdlMSwgc2hhMShwdWJsaWNfc2VlZCxoYXNoX3N0YWdlMilcblxuICAgICAgICAgICAvLyB0aGlzIHRocmVlIHN0ZXBzIGFyZSBkb25lIGluIHNjcmFtYmxlKClcblxuICAgICAgICAgICBzZW5kKHJlcGx5KVxuXG5cbiAgU0VSVkVSOiAgcmVjdihyZXBseSlcbiAgICAgICAgICAgaGFzaF9zdGFnZTE9eG9yKHJlcGx5LCBzaGExKHB1YmxpY19zZWVkLGhhc2hfc3RhZ2UyKSlcbiAgICAgICAgICAgY2FuZGlkYXRlX2hhc2gyPXNoYTEoaGFzaF9zdGFnZTEpXG4gICAgICAgICAgIGNoZWNrKGNhbmRpZGF0ZV9oYXNoMj09aGFzaF9zdGFnZTIpXG5cbnNlcnZlciBzdG9yZXMgc2hhMShzaGExKHBhc3N3b3JkKSkgKCBoYXNoX3N0YWcyKVxuKi9cblxuY29uc3QgY3J5cHRvID0gcmVxdWlyZSgnY3J5cHRvJyk7XG5cbmZ1bmN0aW9uIHNoYTEobXNnLCBtc2cxLCBtc2cyKSB7XG4gIGNvbnN0IGhhc2ggPSBjcnlwdG8uY3JlYXRlSGFzaCgnc2hhMScpO1xuICBoYXNoLnVwZGF0ZShtc2cpO1xuICBpZiAobXNnMSkge1xuICAgIGhhc2gudXBkYXRlKG1zZzEpO1xuICB9XG5cbiAgaWYgKG1zZzIpIHtcbiAgICBoYXNoLnVwZGF0ZShtc2cyKTtcbiAgfVxuXG4gIHJldHVybiBoYXNoLmRpZ2VzdCgpO1xufVxuXG5mdW5jdGlvbiB4b3IoYSwgYikge1xuICBjb25zdCByZXN1bHQgPSBCdWZmZXIuYWxsb2NVbnNhZmUoYS5sZW5ndGgpO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IGEubGVuZ3RoOyBpKyspIHtcbiAgICByZXN1bHRbaV0gPSBhW2ldIF4gYltpXTtcbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5leHBvcnRzLnhvciA9IHhvcjtcblxuZnVuY3Rpb24gdG9rZW4ocGFzc3dvcmQsIHNjcmFtYmxlMSwgc2NyYW1ibGUyKSB7XG4gIGlmICghcGFzc3dvcmQpIHtcbiAgICByZXR1cm4gQnVmZmVyLmFsbG9jKDApO1xuICB9XG4gIGNvbnN0IHN0YWdlMSA9IHNoYTEocGFzc3dvcmQpO1xuICByZXR1cm4gZXhwb3J0cy5jYWxjdWxhdGVUb2tlbkZyb21QYXNzd29yZFNoYShzdGFnZTEsIHNjcmFtYmxlMSwgc2NyYW1ibGUyKTtcbn1cblxuZXhwb3J0cy5jYWxjdWxhdGVUb2tlbkZyb21QYXNzd29yZFNoYSA9IGZ1bmN0aW9uKFxuICBwYXNzd29yZFNoYSxcbiAgc2NyYW1ibGUxLFxuICBzY3JhbWJsZTJcbikge1xuICAvLyB3ZSB1c2UgQVVUSCA0MSBoZXJlLCBhbmQgd2UgbmVlZCBvbmx5IHRoZSBieXRlcyB3ZSBqdXN0IG5lZWQuXG4gIGNvbnN0IGF1dGhQbHVnaW5EYXRhMSA9IHNjcmFtYmxlMS5zbGljZSgwLCA4KTtcbiAgY29uc3QgYXV0aFBsdWdpbkRhdGEyID0gc2NyYW1ibGUyLnNsaWNlKDAsIDEyKTtcbiAgY29uc3Qgc3RhZ2UyID0gc2hhMShwYXNzd29yZFNoYSk7XG4gIGNvbnN0IHN0YWdlMyA9IHNoYTEoYXV0aFBsdWdpbkRhdGExLCBhdXRoUGx1Z2luRGF0YTIsIHN0YWdlMik7XG4gIHJldHVybiB4b3Ioc3RhZ2UzLCBwYXNzd29yZFNoYSk7XG59O1xuXG5leHBvcnRzLmNhbGN1bGF0ZVRva2VuID0gdG9rZW47XG5cbmV4cG9ydHMudmVyaWZ5VG9rZW4gPSBmdW5jdGlvbihwdWJsaWNTZWVkMSwgcHVibGljU2VlZDIsIHRva2VuLCBkb3VibGVTaGEpIHtcbiAgY29uc3QgaGFzaFN0YWdlMSA9IHhvcih0b2tlbiwgc2hhMShwdWJsaWNTZWVkMSwgcHVibGljU2VlZDIsIGRvdWJsZVNoYSkpO1xuICBjb25zdCBjYW5kaWRhdGVIYXNoMiA9IHNoYTEoaGFzaFN0YWdlMSk7XG4gIHJldHVybiBjYW5kaWRhdGVIYXNoMi5jb21wYXJlKGRvdWJsZVNoYSkgPT09IDA7XG59O1xuXG5leHBvcnRzLmRvdWJsZVNoYTEgPSBmdW5jdGlvbihwYXNzd29yZCkge1xuICByZXR1cm4gc2hhMShzaGExKHBhc3N3b3JkKSk7XG59O1xuXG5mdW5jdGlvbiB4b3JSb3RhdGluZyhhLCBzZWVkKSB7XG4gIGNvbnN0IHJlc3VsdCA9IEJ1ZmZlci5hbGxvY1Vuc2FmZShhLmxlbmd0aCk7XG4gIGNvbnN0IHNlZWRMZW4gPSBzZWVkLmxlbmd0aDtcblxuICBmb3IgKGxldCBpID0gMDsgaSA8IGEubGVuZ3RoOyBpKyspIHtcbiAgICByZXN1bHRbaV0gPSBhW2ldIF4gc2VlZFtpICUgc2VlZExlbl07XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbmV4cG9ydHMueG9yUm90YXRpbmcgPSB4b3JSb3RhdGluZztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/auth_41.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/auth_plugins/caching_sha2_password.js":
/*!***********************************************************************!*\
  !*** ./node_modules/mysql2/lib/auth_plugins/caching_sha2_password.js ***!
  \***********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\n// https://mysqlserverteam.com/mysql-8-0-4-new-default-authentication-plugin-caching_sha2_password/\n\nconst PLUGIN_NAME = 'caching_sha2_password';\nconst crypto = __webpack_require__(/*! crypto */ \"crypto\");\nconst { xor, xorRotating } = __webpack_require__(/*! ../auth_41 */ \"(rsc)/./node_modules/mysql2/lib/auth_41.js\");\n\nconst REQUEST_SERVER_KEY_PACKET = Buffer.from([2]);\nconst FAST_AUTH_SUCCESS_PACKET = Buffer.from([3]);\nconst PERFORM_FULL_AUTHENTICATION_PACKET = Buffer.from([4]);\n\nconst STATE_INITIAL = 0;\nconst STATE_TOKEN_SENT = 1;\nconst STATE_WAIT_SERVER_KEY = 2;\nconst STATE_FINAL = -1;\n\nfunction sha256(msg) {\n  const hash = crypto.createHash('sha256');\n  hash.update(msg);\n  return hash.digest();\n}\n\nfunction calculateToken(password, scramble) {\n  if (!password) {\n    return Buffer.alloc(0);\n  }\n  const stage1 = sha256(Buffer.from(password));\n  const stage2 = sha256(stage1);\n  const stage3 = sha256(Buffer.concat([stage2, scramble]));\n  return xor(stage1, stage3);\n}\n\nfunction encrypt(password, scramble, key) {\n  const stage1 = xorRotating(\n    Buffer.from(`${password}\\0`, 'utf8'),\n    scramble\n  );\n  return crypto.publicEncrypt({\n    key,\n    padding: crypto.constants.RSA_PKCS1_OAEP_PADDING\n  }, stage1);\n}\n\nmodule.exports = (pluginOptions = {}) => ({ connection }) => {\n  let state = 0;\n  let scramble = null;\n\n  const password = connection.config.password;\n\n  const authWithKey = serverKey => {\n    const _password = encrypt(password, scramble, serverKey);\n    state = STATE_FINAL;\n    return _password;\n  };\n\n  return data => {\n    switch (state) {\n      case STATE_INITIAL:\n        scramble = data.slice(0, 20);\n        state = STATE_TOKEN_SENT;\n        return calculateToken(password, scramble);\n\n      case STATE_TOKEN_SENT:\n        if (FAST_AUTH_SUCCESS_PACKET.equals(data)) {\n          state = STATE_FINAL;\n          return null;\n        }\n\n        if (PERFORM_FULL_AUTHENTICATION_PACKET.equals(data)) {\n          const isSecureConnection =\n            typeof pluginOptions.overrideIsSecure === 'undefined'\n              ? connection.config.ssl || connection.config.socketPath\n              : pluginOptions.overrideIsSecure;\n          if (isSecureConnection) {\n            state = STATE_FINAL;\n            return Buffer.from(`${password}\\0`, 'utf8');\n          }\n\n          // if client provides key we can save one extra roundrip on first connection\n          if (pluginOptions.serverPublicKey) {\n            return authWithKey(pluginOptions.serverPublicKey);\n          }\n\n          state = STATE_WAIT_SERVER_KEY;\n          return REQUEST_SERVER_KEY_PACKET;\n        }\n        throw new Error(\n          `Invalid AuthMoreData packet received by ${PLUGIN_NAME} plugin in STATE_TOKEN_SENT state.`\n        );\n      case STATE_WAIT_SERVER_KEY:\n        if (pluginOptions.onServerPublicKey) {\n          pluginOptions.onServerPublicKey(data);\n        }\n        return authWithKey(data);\n      case STATE_FINAL:\n        throw new Error(\n          `Unexpected data in AuthMoreData packet received by ${PLUGIN_NAME} plugin in STATE_FINAL state.`\n        );\n    }\n\n    throw new Error(\n      `Unexpected data in AuthMoreData packet received by ${PLUGIN_NAME} plugin in state ${state}`\n    );\n  };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9hdXRoX3BsdWdpbnMvY2FjaGluZ19zaGEyX3Bhc3N3b3JkLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViOztBQUVBO0FBQ0EsZUFBZSxtQkFBTyxDQUFDLHNCQUFRO0FBQy9CLFFBQVEsbUJBQW1CLEVBQUUsbUJBQU8sQ0FBQyw4REFBWTs7QUFFakQ7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxtQkFBbUIsU0FBUztBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBLG9DQUFvQyxRQUFRLFlBQVk7QUFDeEQ7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLFNBQVM7QUFDM0M7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxREFBcUQsYUFBYTtBQUNsRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0VBQWdFLGFBQWE7QUFDN0U7QUFDQTs7QUFFQTtBQUNBLDREQUE0RCxhQUFhLGtCQUFrQixNQUFNO0FBQ2pHO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JlYWxfZXN0YXRlLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvYXV0aF9wbHVnaW5zL2NhY2hpbmdfc2hhMl9wYXNzd29yZC5qcz9iNmFiIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLy8gaHR0cHM6Ly9teXNxbHNlcnZlcnRlYW0uY29tL215c3FsLTgtMC00LW5ldy1kZWZhdWx0LWF1dGhlbnRpY2F0aW9uLXBsdWdpbi1jYWNoaW5nX3NoYTJfcGFzc3dvcmQvXG5cbmNvbnN0IFBMVUdJTl9OQU1FID0gJ2NhY2hpbmdfc2hhMl9wYXNzd29yZCc7XG5jb25zdCBjcnlwdG8gPSByZXF1aXJlKCdjcnlwdG8nKTtcbmNvbnN0IHsgeG9yLCB4b3JSb3RhdGluZyB9ID0gcmVxdWlyZSgnLi4vYXV0aF80MScpO1xuXG5jb25zdCBSRVFVRVNUX1NFUlZFUl9LRVlfUEFDS0VUID0gQnVmZmVyLmZyb20oWzJdKTtcbmNvbnN0IEZBU1RfQVVUSF9TVUNDRVNTX1BBQ0tFVCA9IEJ1ZmZlci5mcm9tKFszXSk7XG5jb25zdCBQRVJGT1JNX0ZVTExfQVVUSEVOVElDQVRJT05fUEFDS0VUID0gQnVmZmVyLmZyb20oWzRdKTtcblxuY29uc3QgU1RBVEVfSU5JVElBTCA9IDA7XG5jb25zdCBTVEFURV9UT0tFTl9TRU5UID0gMTtcbmNvbnN0IFNUQVRFX1dBSVRfU0VSVkVSX0tFWSA9IDI7XG5jb25zdCBTVEFURV9GSU5BTCA9IC0xO1xuXG5mdW5jdGlvbiBzaGEyNTYobXNnKSB7XG4gIGNvbnN0IGhhc2ggPSBjcnlwdG8uY3JlYXRlSGFzaCgnc2hhMjU2Jyk7XG4gIGhhc2gudXBkYXRlKG1zZyk7XG4gIHJldHVybiBoYXNoLmRpZ2VzdCgpO1xufVxuXG5mdW5jdGlvbiBjYWxjdWxhdGVUb2tlbihwYXNzd29yZCwgc2NyYW1ibGUpIHtcbiAgaWYgKCFwYXNzd29yZCkge1xuICAgIHJldHVybiBCdWZmZXIuYWxsb2MoMCk7XG4gIH1cbiAgY29uc3Qgc3RhZ2UxID0gc2hhMjU2KEJ1ZmZlci5mcm9tKHBhc3N3b3JkKSk7XG4gIGNvbnN0IHN0YWdlMiA9IHNoYTI1NihzdGFnZTEpO1xuICBjb25zdCBzdGFnZTMgPSBzaGEyNTYoQnVmZmVyLmNvbmNhdChbc3RhZ2UyLCBzY3JhbWJsZV0pKTtcbiAgcmV0dXJuIHhvcihzdGFnZTEsIHN0YWdlMyk7XG59XG5cbmZ1bmN0aW9uIGVuY3J5cHQocGFzc3dvcmQsIHNjcmFtYmxlLCBrZXkpIHtcbiAgY29uc3Qgc3RhZ2UxID0geG9yUm90YXRpbmcoXG4gICAgQnVmZmVyLmZyb20oYCR7cGFzc3dvcmR9XFwwYCwgJ3V0ZjgnKSxcbiAgICBzY3JhbWJsZVxuICApO1xuICByZXR1cm4gY3J5cHRvLnB1YmxpY0VuY3J5cHQoe1xuICAgIGtleSxcbiAgICBwYWRkaW5nOiBjcnlwdG8uY29uc3RhbnRzLlJTQV9QS0NTMV9PQUVQX1BBRERJTkdcbiAgfSwgc3RhZ2UxKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSAocGx1Z2luT3B0aW9ucyA9IHt9KSA9PiAoeyBjb25uZWN0aW9uIH0pID0+IHtcbiAgbGV0IHN0YXRlID0gMDtcbiAgbGV0IHNjcmFtYmxlID0gbnVsbDtcblxuICBjb25zdCBwYXNzd29yZCA9IGNvbm5lY3Rpb24uY29uZmlnLnBhc3N3b3JkO1xuXG4gIGNvbnN0IGF1dGhXaXRoS2V5ID0gc2VydmVyS2V5ID0+IHtcbiAgICBjb25zdCBfcGFzc3dvcmQgPSBlbmNyeXB0KHBhc3N3b3JkLCBzY3JhbWJsZSwgc2VydmVyS2V5KTtcbiAgICBzdGF0ZSA9IFNUQVRFX0ZJTkFMO1xuICAgIHJldHVybiBfcGFzc3dvcmQ7XG4gIH07XG5cbiAgcmV0dXJuIGRhdGEgPT4ge1xuICAgIHN3aXRjaCAoc3RhdGUpIHtcbiAgICAgIGNhc2UgU1RBVEVfSU5JVElBTDpcbiAgICAgICAgc2NyYW1ibGUgPSBkYXRhLnNsaWNlKDAsIDIwKTtcbiAgICAgICAgc3RhdGUgPSBTVEFURV9UT0tFTl9TRU5UO1xuICAgICAgICByZXR1cm4gY2FsY3VsYXRlVG9rZW4ocGFzc3dvcmQsIHNjcmFtYmxlKTtcblxuICAgICAgY2FzZSBTVEFURV9UT0tFTl9TRU5UOlxuICAgICAgICBpZiAoRkFTVF9BVVRIX1NVQ0NFU1NfUEFDS0VULmVxdWFscyhkYXRhKSkge1xuICAgICAgICAgIHN0YXRlID0gU1RBVEVfRklOQUw7XG4gICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoUEVSRk9STV9GVUxMX0FVVEhFTlRJQ0FUSU9OX1BBQ0tFVC5lcXVhbHMoZGF0YSkpIHtcbiAgICAgICAgICBjb25zdCBpc1NlY3VyZUNvbm5lY3Rpb24gPVxuICAgICAgICAgICAgdHlwZW9mIHBsdWdpbk9wdGlvbnMub3ZlcnJpZGVJc1NlY3VyZSA9PT0gJ3VuZGVmaW5lZCdcbiAgICAgICAgICAgICAgPyBjb25uZWN0aW9uLmNvbmZpZy5zc2wgfHwgY29ubmVjdGlvbi5jb25maWcuc29ja2V0UGF0aFxuICAgICAgICAgICAgICA6IHBsdWdpbk9wdGlvbnMub3ZlcnJpZGVJc1NlY3VyZTtcbiAgICAgICAgICBpZiAoaXNTZWN1cmVDb25uZWN0aW9uKSB7XG4gICAgICAgICAgICBzdGF0ZSA9IFNUQVRFX0ZJTkFMO1xuICAgICAgICAgICAgcmV0dXJuIEJ1ZmZlci5mcm9tKGAke3Bhc3N3b3JkfVxcMGAsICd1dGY4Jyk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgLy8gaWYgY2xpZW50IHByb3ZpZGVzIGtleSB3ZSBjYW4gc2F2ZSBvbmUgZXh0cmEgcm91bmRyaXAgb24gZmlyc3QgY29ubmVjdGlvblxuICAgICAgICAgIGlmIChwbHVnaW5PcHRpb25zLnNlcnZlclB1YmxpY0tleSkge1xuICAgICAgICAgICAgcmV0dXJuIGF1dGhXaXRoS2V5KHBsdWdpbk9wdGlvbnMuc2VydmVyUHVibGljS2V5KTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBzdGF0ZSA9IFNUQVRFX1dBSVRfU0VSVkVSX0tFWTtcbiAgICAgICAgICByZXR1cm4gUkVRVUVTVF9TRVJWRVJfS0VZX1BBQ0tFVDtcbiAgICAgICAgfVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICAgYEludmFsaWQgQXV0aE1vcmVEYXRhIHBhY2tldCByZWNlaXZlZCBieSAke1BMVUdJTl9OQU1FfSBwbHVnaW4gaW4gU1RBVEVfVE9LRU5fU0VOVCBzdGF0ZS5gXG4gICAgICAgICk7XG4gICAgICBjYXNlIFNUQVRFX1dBSVRfU0VSVkVSX0tFWTpcbiAgICAgICAgaWYgKHBsdWdpbk9wdGlvbnMub25TZXJ2ZXJQdWJsaWNLZXkpIHtcbiAgICAgICAgICBwbHVnaW5PcHRpb25zLm9uU2VydmVyUHVibGljS2V5KGRhdGEpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBhdXRoV2l0aEtleShkYXRhKTtcbiAgICAgIGNhc2UgU1RBVEVfRklOQUw6XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgICBgVW5leHBlY3RlZCBkYXRhIGluIEF1dGhNb3JlRGF0YSBwYWNrZXQgcmVjZWl2ZWQgYnkgJHtQTFVHSU5fTkFNRX0gcGx1Z2luIGluIFNUQVRFX0ZJTkFMIHN0YXRlLmBcbiAgICAgICAgKTtcbiAgICB9XG5cbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICBgVW5leHBlY3RlZCBkYXRhIGluIEF1dGhNb3JlRGF0YSBwYWNrZXQgcmVjZWl2ZWQgYnkgJHtQTFVHSU5fTkFNRX0gcGx1Z2luIGluIHN0YXRlICR7c3RhdGV9YFxuICAgICk7XG4gIH07XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/auth_plugins/caching_sha2_password.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/auth_plugins/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/mysql2/lib/auth_plugins/index.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nmodule.exports = {\n  caching_sha2_password: __webpack_require__(/*! ./caching_sha2_password */ \"(rsc)/./node_modules/mysql2/lib/auth_plugins/caching_sha2_password.js\"),\n  mysql_clear_password: __webpack_require__(/*! ./mysql_clear_password */ \"(rsc)/./node_modules/mysql2/lib/auth_plugins/mysql_clear_password.js\"),\n  mysql_native_password: __webpack_require__(/*! ./mysql_native_password */ \"(rsc)/./node_modules/mysql2/lib/auth_plugins/mysql_native_password.js\"),\n  sha256_password: __webpack_require__(/*! ./sha256_password */ \"(rsc)/./node_modules/mysql2/lib/auth_plugins/sha256_password.js\"),\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9hdXRoX3BsdWdpbnMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQSx5QkFBeUIsbUJBQU8sQ0FBQyxzR0FBeUI7QUFDMUQsd0JBQXdCLG1CQUFPLENBQUMsb0dBQXdCO0FBQ3hELHlCQUF5QixtQkFBTyxDQUFDLHNHQUF5QjtBQUMxRCxtQkFBbUIsbUJBQU8sQ0FBQywwRkFBbUI7QUFDOUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZWFsX2VzdGF0ZS8uL25vZGVfbW9kdWxlcy9teXNxbDIvbGliL2F1dGhfcGx1Z2lucy9pbmRleC5qcz8xYzM3Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGNhY2hpbmdfc2hhMl9wYXNzd29yZDogcmVxdWlyZSgnLi9jYWNoaW5nX3NoYTJfcGFzc3dvcmQnKSxcbiAgbXlzcWxfY2xlYXJfcGFzc3dvcmQ6IHJlcXVpcmUoJy4vbXlzcWxfY2xlYXJfcGFzc3dvcmQnKSxcbiAgbXlzcWxfbmF0aXZlX3Bhc3N3b3JkOiByZXF1aXJlKCcuL215c3FsX25hdGl2ZV9wYXNzd29yZCcpLFxuICBzaGEyNTZfcGFzc3dvcmQ6IHJlcXVpcmUoJy4vc2hhMjU2X3Bhc3N3b3JkJyksXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/auth_plugins/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/auth_plugins/mysql_clear_password.js":
/*!**********************************************************************!*\
  !*** ./node_modules/mysql2/lib/auth_plugins/mysql_clear_password.js ***!
  \**********************************************************************/
/***/ ((module) => {

eval("\n\nfunction bufferFromStr(str) {\n  return Buffer.from(`${str}\\0`);\n}\n\nconst create_mysql_clear_password_plugin = pluginOptions =>\n  function mysql_clear_password_plugin({ connection, command }) {\n    const password =\n      command.password || pluginOptions.password || connection.config.password;\n\n    return function (/* pluginData */) {\n      return bufferFromStr(password);\n    };\n  };\n\nmodule.exports = create_mysql_clear_password_plugin;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9hdXRoX3BsdWdpbnMvbXlzcWxfY2xlYXJfcGFzc3dvcmQuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQSx3QkFBd0IsSUFBSTtBQUM1Qjs7QUFFQTtBQUNBLHlDQUF5QyxxQkFBcUI7QUFDOUQ7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JlYWxfZXN0YXRlLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvYXV0aF9wbHVnaW5zL215c3FsX2NsZWFyX3Bhc3N3b3JkLmpzP2Q0MGEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBidWZmZXJGcm9tU3RyKHN0cikge1xuICByZXR1cm4gQnVmZmVyLmZyb20oYCR7c3RyfVxcMGApO1xufVxuXG5jb25zdCBjcmVhdGVfbXlzcWxfY2xlYXJfcGFzc3dvcmRfcGx1Z2luID0gcGx1Z2luT3B0aW9ucyA9PlxuICBmdW5jdGlvbiBteXNxbF9jbGVhcl9wYXNzd29yZF9wbHVnaW4oeyBjb25uZWN0aW9uLCBjb21tYW5kIH0pIHtcbiAgICBjb25zdCBwYXNzd29yZCA9XG4gICAgICBjb21tYW5kLnBhc3N3b3JkIHx8IHBsdWdpbk9wdGlvbnMucGFzc3dvcmQgfHwgY29ubmVjdGlvbi5jb25maWcucGFzc3dvcmQ7XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKC8qIHBsdWdpbkRhdGEgKi8pIHtcbiAgICAgIHJldHVybiBidWZmZXJGcm9tU3RyKHBhc3N3b3JkKTtcbiAgICB9O1xuICB9O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGNyZWF0ZV9teXNxbF9jbGVhcl9wYXNzd29yZF9wbHVnaW47XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/auth_plugins/mysql_clear_password.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/auth_plugins/mysql_native_password.js":
/*!***********************************************************************!*\
  !*** ./node_modules/mysql2/lib/auth_plugins/mysql_native_password.js ***!
  \***********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\n//const PLUGIN_NAME = 'mysql_native_password';\nconst auth41 = __webpack_require__(/*! ../auth_41.js */ \"(rsc)/./node_modules/mysql2/lib/auth_41.js\");\n\nmodule.exports = pluginOptions => ({ connection, command }) => {\n  const password =\n    command.password || pluginOptions.password || connection.config.password;\n  const passwordSha1 =\n    command.passwordSha1 ||\n    pluginOptions.passwordSha1 ||\n    connection.config.passwordSha1;\n  return data => {\n    const authPluginData1 = data.slice(0, 8);\n    const authPluginData2 = data.slice(8, 20);\n    let authToken;\n    if (passwordSha1) {\n      authToken = auth41.calculateTokenFromPasswordSha(\n        passwordSha1,\n        authPluginData1,\n        authPluginData2\n      );\n    } else {\n      authToken = auth41.calculateToken(\n        password,\n        authPluginData1,\n        authPluginData2\n      );\n    }\n    return authToken;\n  };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9hdXRoX3BsdWdpbnMvbXlzcWxfbmF0aXZlX3Bhc3N3b3JkLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0EsZUFBZSxtQkFBTyxDQUFDLGlFQUFlOztBQUV0QyxxQ0FBcUMscUJBQXFCO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JlYWxfZXN0YXRlLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvYXV0aF9wbHVnaW5zL215c3FsX25hdGl2ZV9wYXNzd29yZC5qcz9jNzAzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLy9jb25zdCBQTFVHSU5fTkFNRSA9ICdteXNxbF9uYXRpdmVfcGFzc3dvcmQnO1xuY29uc3QgYXV0aDQxID0gcmVxdWlyZSgnLi4vYXV0aF80MS5qcycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHBsdWdpbk9wdGlvbnMgPT4gKHsgY29ubmVjdGlvbiwgY29tbWFuZCB9KSA9PiB7XG4gIGNvbnN0IHBhc3N3b3JkID1cbiAgICBjb21tYW5kLnBhc3N3b3JkIHx8IHBsdWdpbk9wdGlvbnMucGFzc3dvcmQgfHwgY29ubmVjdGlvbi5jb25maWcucGFzc3dvcmQ7XG4gIGNvbnN0IHBhc3N3b3JkU2hhMSA9XG4gICAgY29tbWFuZC5wYXNzd29yZFNoYTEgfHxcbiAgICBwbHVnaW5PcHRpb25zLnBhc3N3b3JkU2hhMSB8fFxuICAgIGNvbm5lY3Rpb24uY29uZmlnLnBhc3N3b3JkU2hhMTtcbiAgcmV0dXJuIGRhdGEgPT4ge1xuICAgIGNvbnN0IGF1dGhQbHVnaW5EYXRhMSA9IGRhdGEuc2xpY2UoMCwgOCk7XG4gICAgY29uc3QgYXV0aFBsdWdpbkRhdGEyID0gZGF0YS5zbGljZSg4LCAyMCk7XG4gICAgbGV0IGF1dGhUb2tlbjtcbiAgICBpZiAocGFzc3dvcmRTaGExKSB7XG4gICAgICBhdXRoVG9rZW4gPSBhdXRoNDEuY2FsY3VsYXRlVG9rZW5Gcm9tUGFzc3dvcmRTaGEoXG4gICAgICAgIHBhc3N3b3JkU2hhMSxcbiAgICAgICAgYXV0aFBsdWdpbkRhdGExLFxuICAgICAgICBhdXRoUGx1Z2luRGF0YTJcbiAgICAgICk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGF1dGhUb2tlbiA9IGF1dGg0MS5jYWxjdWxhdGVUb2tlbihcbiAgICAgICAgcGFzc3dvcmQsXG4gICAgICAgIGF1dGhQbHVnaW5EYXRhMSxcbiAgICAgICAgYXV0aFBsdWdpbkRhdGEyXG4gICAgICApO1xuICAgIH1cbiAgICByZXR1cm4gYXV0aFRva2VuO1xuICB9O1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/auth_plugins/mysql_native_password.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/auth_plugins/sha256_password.js":
/*!*****************************************************************!*\
  !*** ./node_modules/mysql2/lib/auth_plugins/sha256_password.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst PLUGIN_NAME = 'sha256_password';\nconst crypto = __webpack_require__(/*! crypto */ \"crypto\");\nconst { xorRotating } = __webpack_require__(/*! ../auth_41 */ \"(rsc)/./node_modules/mysql2/lib/auth_41.js\");\n\nconst REQUEST_SERVER_KEY_PACKET = Buffer.from([1]);\n\nconst STATE_INITIAL = 0;\nconst STATE_WAIT_SERVER_KEY = 1;\nconst STATE_FINAL = -1;\n\nfunction encrypt(password, scramble, key) {\n  const stage1 = xorRotating(\n    Buffer.from(`${password}\\0`, 'utf8'),\n    scramble\n  );\n  return crypto.publicEncrypt(key, stage1);\n}\n\nmodule.exports = (pluginOptions = {}) => ({ connection }) => {\n  let state = 0;\n  let scramble = null;\n\n  const password = connection.config.password;\n\n  const authWithKey = serverKey => {\n    const _password = encrypt(password, scramble, serverKey);\n    state = STATE_FINAL;\n    return _password;\n  };\n\n  return data => {\n    switch (state) {\n      case STATE_INITIAL:\n        scramble = data.slice(0, 20);\n        // if client provides key we can save one extra roundrip on first connection\n        if (pluginOptions.serverPublicKey) {\n          return authWithKey(pluginOptions.serverPublicKey);\n        }\n\n        state = STATE_WAIT_SERVER_KEY;\n        return REQUEST_SERVER_KEY_PACKET;\n\n      case STATE_WAIT_SERVER_KEY:\n        if (pluginOptions.onServerPublicKey) {\n          pluginOptions.onServerPublicKey(data);\n        }\n        return authWithKey(data);\n      case STATE_FINAL:\n        throw new Error(\n          `Unexpected data in AuthMoreData packet received by ${PLUGIN_NAME} plugin in STATE_FINAL state.`\n        );\n    }\n\n    throw new Error(\n      `Unexpected data in AuthMoreData packet received by ${PLUGIN_NAME} plugin in state ${state}`\n    );\n  };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9hdXRoX3BsdWdpbnMvc2hhMjU2X3Bhc3N3b3JkLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0EsZUFBZSxtQkFBTyxDQUFDLHNCQUFRO0FBQy9CLFFBQVEsY0FBYyxFQUFFLG1CQUFPLENBQUMsOERBQVk7O0FBRTVDOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsbUJBQW1CLFNBQVM7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsb0NBQW9DLFFBQVEsWUFBWTtBQUN4RDtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0VBQWdFLGFBQWE7QUFDN0U7QUFDQTs7QUFFQTtBQUNBLDREQUE0RCxhQUFhLGtCQUFrQixNQUFNO0FBQ2pHO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JlYWxfZXN0YXRlLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvYXV0aF9wbHVnaW5zL3NoYTI1Nl9wYXNzd29yZC5qcz85M2U0Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgUExVR0lOX05BTUUgPSAnc2hhMjU2X3Bhc3N3b3JkJztcbmNvbnN0IGNyeXB0byA9IHJlcXVpcmUoJ2NyeXB0bycpO1xuY29uc3QgeyB4b3JSb3RhdGluZyB9ID0gcmVxdWlyZSgnLi4vYXV0aF80MScpO1xuXG5jb25zdCBSRVFVRVNUX1NFUlZFUl9LRVlfUEFDS0VUID0gQnVmZmVyLmZyb20oWzFdKTtcblxuY29uc3QgU1RBVEVfSU5JVElBTCA9IDA7XG5jb25zdCBTVEFURV9XQUlUX1NFUlZFUl9LRVkgPSAxO1xuY29uc3QgU1RBVEVfRklOQUwgPSAtMTtcblxuZnVuY3Rpb24gZW5jcnlwdChwYXNzd29yZCwgc2NyYW1ibGUsIGtleSkge1xuICBjb25zdCBzdGFnZTEgPSB4b3JSb3RhdGluZyhcbiAgICBCdWZmZXIuZnJvbShgJHtwYXNzd29yZH1cXDBgLCAndXRmOCcpLFxuICAgIHNjcmFtYmxlXG4gICk7XG4gIHJldHVybiBjcnlwdG8ucHVibGljRW5jcnlwdChrZXksIHN0YWdlMSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gKHBsdWdpbk9wdGlvbnMgPSB7fSkgPT4gKHsgY29ubmVjdGlvbiB9KSA9PiB7XG4gIGxldCBzdGF0ZSA9IDA7XG4gIGxldCBzY3JhbWJsZSA9IG51bGw7XG5cbiAgY29uc3QgcGFzc3dvcmQgPSBjb25uZWN0aW9uLmNvbmZpZy5wYXNzd29yZDtcblxuICBjb25zdCBhdXRoV2l0aEtleSA9IHNlcnZlcktleSA9PiB7XG4gICAgY29uc3QgX3Bhc3N3b3JkID0gZW5jcnlwdChwYXNzd29yZCwgc2NyYW1ibGUsIHNlcnZlcktleSk7XG4gICAgc3RhdGUgPSBTVEFURV9GSU5BTDtcbiAgICByZXR1cm4gX3Bhc3N3b3JkO1xuICB9O1xuXG4gIHJldHVybiBkYXRhID0+IHtcbiAgICBzd2l0Y2ggKHN0YXRlKSB7XG4gICAgICBjYXNlIFNUQVRFX0lOSVRJQUw6XG4gICAgICAgIHNjcmFtYmxlID0gZGF0YS5zbGljZSgwLCAyMCk7XG4gICAgICAgIC8vIGlmIGNsaWVudCBwcm92aWRlcyBrZXkgd2UgY2FuIHNhdmUgb25lIGV4dHJhIHJvdW5kcmlwIG9uIGZpcnN0IGNvbm5lY3Rpb25cbiAgICAgICAgaWYgKHBsdWdpbk9wdGlvbnMuc2VydmVyUHVibGljS2V5KSB7XG4gICAgICAgICAgcmV0dXJuIGF1dGhXaXRoS2V5KHBsdWdpbk9wdGlvbnMuc2VydmVyUHVibGljS2V5KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHN0YXRlID0gU1RBVEVfV0FJVF9TRVJWRVJfS0VZO1xuICAgICAgICByZXR1cm4gUkVRVUVTVF9TRVJWRVJfS0VZX1BBQ0tFVDtcblxuICAgICAgY2FzZSBTVEFURV9XQUlUX1NFUlZFUl9LRVk6XG4gICAgICAgIGlmIChwbHVnaW5PcHRpb25zLm9uU2VydmVyUHVibGljS2V5KSB7XG4gICAgICAgICAgcGx1Z2luT3B0aW9ucy5vblNlcnZlclB1YmxpY0tleShkYXRhKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYXV0aFdpdGhLZXkoZGF0YSk7XG4gICAgICBjYXNlIFNUQVRFX0ZJTkFMOlxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICAgYFVuZXhwZWN0ZWQgZGF0YSBpbiBBdXRoTW9yZURhdGEgcGFja2V0IHJlY2VpdmVkIGJ5ICR7UExVR0lOX05BTUV9IHBsdWdpbiBpbiBTVEFURV9GSU5BTCBzdGF0ZS5gXG4gICAgICAgICk7XG4gICAgfVxuXG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgYFVuZXhwZWN0ZWQgZGF0YSBpbiBBdXRoTW9yZURhdGEgcGFja2V0IHJlY2VpdmVkIGJ5ICR7UExVR0lOX05BTUV9IHBsdWdpbiBpbiBzdGF0ZSAke3N0YXRlfWBcbiAgICApO1xuICB9O1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/auth_plugins/sha256_password.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/commands/auth_switch.js":
/*!*********************************************************!*\
  !*** ./node_modules/mysql2/lib/commands/auth_switch.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// This file was modified by Oracle on July 5, 2021.\n// Errors generated by asynchronous authentication plugins are now being\n// handled and subsequently emitted at the command level.\n// Modifications copyright (c) 2021, Oracle and/or its affiliates.\n\n\n\nconst Packets = __webpack_require__(/*! ../packets/index.js */ \"(rsc)/./node_modules/mysql2/lib/packets/index.js\");\nconst sha256_password = __webpack_require__(/*! ../auth_plugins/sha256_password */ \"(rsc)/./node_modules/mysql2/lib/auth_plugins/sha256_password.js\");\nconst caching_sha2_password = __webpack_require__(/*! ../auth_plugins/caching_sha2_password.js */ \"(rsc)/./node_modules/mysql2/lib/auth_plugins/caching_sha2_password.js\");\nconst mysql_native_password = __webpack_require__(/*! ../auth_plugins/mysql_native_password.js */ \"(rsc)/./node_modules/mysql2/lib/auth_plugins/mysql_native_password.js\");\nconst mysql_clear_password = __webpack_require__(/*! ../auth_plugins/mysql_clear_password.js */ \"(rsc)/./node_modules/mysql2/lib/auth_plugins/mysql_clear_password.js\");\n\nconst standardAuthPlugins = {\n  sha256_password: sha256_password({}),\n  caching_sha2_password: caching_sha2_password({}),\n  mysql_native_password: mysql_native_password({}),\n  mysql_clear_password: mysql_clear_password({})\n};\n\nfunction warnLegacyAuthSwitch() {\n  console.warn(\n    'WARNING! authSwitchHandler api is deprecated, please use new authPlugins api'\n  );\n}\n\nfunction authSwitchPluginError(error, command) {\n  // Authentication errors are fatal\n  error.code = 'AUTH_SWITCH_PLUGIN_ERROR';\n  error.fatal = true;\n\n  command.emit('error', error);\n}\n\nfunction authSwitchRequest(packet, connection, command) {\n  const { pluginName, pluginData } = Packets.AuthSwitchRequest.fromPacket(\n    packet\n  );\n  let authPlugin =\n    connection.config.authPlugins && connection.config.authPlugins[pluginName];\n\n  // legacy plugin api don't allow to override mysql_native_password\n  // if pluginName is mysql_native_password it's using standard auth4.1 auth\n  if (\n    connection.config.authSwitchHandler &&\n    pluginName !== 'mysql_native_password'\n  ) {\n    const legacySwitchHandler = connection.config.authSwitchHandler;\n    warnLegacyAuthSwitch();\n    legacySwitchHandler({ pluginName, pluginData }, (err, data) => {\n      if (err) {\n        return authSwitchPluginError(err, command);\n      }\n      connection.writePacket(new Packets.AuthSwitchResponse(data).toPacket());\n    });\n    return;\n  }\n  if (!authPlugin) {\n    authPlugin = standardAuthPlugins[pluginName];\n  }\n  if (!authPlugin) {\n    throw new Error(\n      `Server requests authentication using unknown plugin ${pluginName}. See ${'TODO: add plugins doco here'} on how to configure or author authentication plugins.`\n    );\n  }\n  connection._authPlugin = authPlugin({ connection, command });\n  Promise.resolve(connection._authPlugin(pluginData)).then(data => {\n    if (data) {\n      connection.writePacket(new Packets.AuthSwitchResponse(data).toPacket());\n    }\n  }).catch(err => {\n    authSwitchPluginError(err, command);\n  });\n}\n\nfunction authSwitchRequestMoreData(packet, connection, command) {\n  const { data } = Packets.AuthSwitchRequestMoreData.fromPacket(packet);\n\n  if (connection.config.authSwitchHandler) {\n    const legacySwitchHandler = connection.config.authSwitchHandler;\n    warnLegacyAuthSwitch();\n    legacySwitchHandler({ pluginData: data }, (err, data) => {\n      if (err) {\n        return authSwitchPluginError(err, command);\n      }\n      connection.writePacket(new Packets.AuthSwitchResponse(data).toPacket());\n    });\n    return;\n  }\n\n  if (!connection._authPlugin) {\n    throw new Error(\n      'AuthPluginMoreData received but no auth plugin instance found'\n    );\n  }\n  Promise.resolve(connection._authPlugin(data)).then(data => {\n    if (data) {\n      connection.writePacket(new Packets.AuthSwitchResponse(data).toPacket());\n    }\n  }).catch(err => {\n    authSwitchPluginError(err, command);\n  });\n}\n\nmodule.exports = {\n  authSwitchRequest,\n  authSwitchRequestMoreData\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb21tYW5kcy9hdXRoX3N3aXRjaC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFFYTs7QUFFYixnQkFBZ0IsbUJBQU8sQ0FBQyw2RUFBcUI7QUFDN0Msd0JBQXdCLG1CQUFPLENBQUMsd0dBQWlDO0FBQ2pFLDhCQUE4QixtQkFBTyxDQUFDLHVIQUEwQztBQUNoRiw4QkFBOEIsbUJBQU8sQ0FBQyx1SEFBMEM7QUFDaEYsNkJBQTZCLG1CQUFPLENBQUMscUhBQXlDOztBQUU5RTtBQUNBLHFDQUFxQztBQUNyQyxpREFBaUQ7QUFDakQsaURBQWlEO0FBQ2pELCtDQUErQztBQUMvQzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSxVQUFVLHlCQUF5QjtBQUNuQztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLHdCQUF3QjtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZEQUE2RCxXQUFXLFFBQVEsK0JBQStCO0FBQy9HO0FBQ0E7QUFDQSx3Q0FBd0MscUJBQXFCO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0EsVUFBVSxPQUFPOztBQUVqQjtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsa0JBQWtCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0EsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVhbF9lc3RhdGUvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb21tYW5kcy9hdXRoX3N3aXRjaC5qcz8yNDAzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFRoaXMgZmlsZSB3YXMgbW9kaWZpZWQgYnkgT3JhY2xlIG9uIEp1bHkgNSwgMjAyMS5cbi8vIEVycm9ycyBnZW5lcmF0ZWQgYnkgYXN5bmNocm9ub3VzIGF1dGhlbnRpY2F0aW9uIHBsdWdpbnMgYXJlIG5vdyBiZWluZ1xuLy8gaGFuZGxlZCBhbmQgc3Vic2VxdWVudGx5IGVtaXR0ZWQgYXQgdGhlIGNvbW1hbmQgbGV2ZWwuXG4vLyBNb2RpZmljYXRpb25zIGNvcHlyaWdodCAoYykgMjAyMSwgT3JhY2xlIGFuZC9vciBpdHMgYWZmaWxpYXRlcy5cblxuJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBQYWNrZXRzID0gcmVxdWlyZSgnLi4vcGFja2V0cy9pbmRleC5qcycpO1xuY29uc3Qgc2hhMjU2X3Bhc3N3b3JkID0gcmVxdWlyZSgnLi4vYXV0aF9wbHVnaW5zL3NoYTI1Nl9wYXNzd29yZCcpO1xuY29uc3QgY2FjaGluZ19zaGEyX3Bhc3N3b3JkID0gcmVxdWlyZSgnLi4vYXV0aF9wbHVnaW5zL2NhY2hpbmdfc2hhMl9wYXNzd29yZC5qcycpO1xuY29uc3QgbXlzcWxfbmF0aXZlX3Bhc3N3b3JkID0gcmVxdWlyZSgnLi4vYXV0aF9wbHVnaW5zL215c3FsX25hdGl2ZV9wYXNzd29yZC5qcycpO1xuY29uc3QgbXlzcWxfY2xlYXJfcGFzc3dvcmQgPSByZXF1aXJlKCcuLi9hdXRoX3BsdWdpbnMvbXlzcWxfY2xlYXJfcGFzc3dvcmQuanMnKTtcblxuY29uc3Qgc3RhbmRhcmRBdXRoUGx1Z2lucyA9IHtcbiAgc2hhMjU2X3Bhc3N3b3JkOiBzaGEyNTZfcGFzc3dvcmQoe30pLFxuICBjYWNoaW5nX3NoYTJfcGFzc3dvcmQ6IGNhY2hpbmdfc2hhMl9wYXNzd29yZCh7fSksXG4gIG15c3FsX25hdGl2ZV9wYXNzd29yZDogbXlzcWxfbmF0aXZlX3Bhc3N3b3JkKHt9KSxcbiAgbXlzcWxfY2xlYXJfcGFzc3dvcmQ6IG15c3FsX2NsZWFyX3Bhc3N3b3JkKHt9KVxufTtcblxuZnVuY3Rpb24gd2FybkxlZ2FjeUF1dGhTd2l0Y2goKSB7XG4gIGNvbnNvbGUud2FybihcbiAgICAnV0FSTklORyEgYXV0aFN3aXRjaEhhbmRsZXIgYXBpIGlzIGRlcHJlY2F0ZWQsIHBsZWFzZSB1c2UgbmV3IGF1dGhQbHVnaW5zIGFwaSdcbiAgKTtcbn1cblxuZnVuY3Rpb24gYXV0aFN3aXRjaFBsdWdpbkVycm9yKGVycm9yLCBjb21tYW5kKSB7XG4gIC8vIEF1dGhlbnRpY2F0aW9uIGVycm9ycyBhcmUgZmF0YWxcbiAgZXJyb3IuY29kZSA9ICdBVVRIX1NXSVRDSF9QTFVHSU5fRVJST1InO1xuICBlcnJvci5mYXRhbCA9IHRydWU7XG5cbiAgY29tbWFuZC5lbWl0KCdlcnJvcicsIGVycm9yKTtcbn1cblxuZnVuY3Rpb24gYXV0aFN3aXRjaFJlcXVlc3QocGFja2V0LCBjb25uZWN0aW9uLCBjb21tYW5kKSB7XG4gIGNvbnN0IHsgcGx1Z2luTmFtZSwgcGx1Z2luRGF0YSB9ID0gUGFja2V0cy5BdXRoU3dpdGNoUmVxdWVzdC5mcm9tUGFja2V0KFxuICAgIHBhY2tldFxuICApO1xuICBsZXQgYXV0aFBsdWdpbiA9XG4gICAgY29ubmVjdGlvbi5jb25maWcuYXV0aFBsdWdpbnMgJiYgY29ubmVjdGlvbi5jb25maWcuYXV0aFBsdWdpbnNbcGx1Z2luTmFtZV07XG5cbiAgLy8gbGVnYWN5IHBsdWdpbiBhcGkgZG9uJ3QgYWxsb3cgdG8gb3ZlcnJpZGUgbXlzcWxfbmF0aXZlX3Bhc3N3b3JkXG4gIC8vIGlmIHBsdWdpbk5hbWUgaXMgbXlzcWxfbmF0aXZlX3Bhc3N3b3JkIGl0J3MgdXNpbmcgc3RhbmRhcmQgYXV0aDQuMSBhdXRoXG4gIGlmIChcbiAgICBjb25uZWN0aW9uLmNvbmZpZy5hdXRoU3dpdGNoSGFuZGxlciAmJlxuICAgIHBsdWdpbk5hbWUgIT09ICdteXNxbF9uYXRpdmVfcGFzc3dvcmQnXG4gICkge1xuICAgIGNvbnN0IGxlZ2FjeVN3aXRjaEhhbmRsZXIgPSBjb25uZWN0aW9uLmNvbmZpZy5hdXRoU3dpdGNoSGFuZGxlcjtcbiAgICB3YXJuTGVnYWN5QXV0aFN3aXRjaCgpO1xuICAgIGxlZ2FjeVN3aXRjaEhhbmRsZXIoeyBwbHVnaW5OYW1lLCBwbHVnaW5EYXRhIH0sIChlcnIsIGRhdGEpID0+IHtcbiAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgcmV0dXJuIGF1dGhTd2l0Y2hQbHVnaW5FcnJvcihlcnIsIGNvbW1hbmQpO1xuICAgICAgfVxuICAgICAgY29ubmVjdGlvbi53cml0ZVBhY2tldChuZXcgUGFja2V0cy5BdXRoU3dpdGNoUmVzcG9uc2UoZGF0YSkudG9QYWNrZXQoKSk7XG4gICAgfSk7XG4gICAgcmV0dXJuO1xuICB9XG4gIGlmICghYXV0aFBsdWdpbikge1xuICAgIGF1dGhQbHVnaW4gPSBzdGFuZGFyZEF1dGhQbHVnaW5zW3BsdWdpbk5hbWVdO1xuICB9XG4gIGlmICghYXV0aFBsdWdpbikge1xuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgIGBTZXJ2ZXIgcmVxdWVzdHMgYXV0aGVudGljYXRpb24gdXNpbmcgdW5rbm93biBwbHVnaW4gJHtwbHVnaW5OYW1lfS4gU2VlICR7J1RPRE86IGFkZCBwbHVnaW5zIGRvY28gaGVyZSd9IG9uIGhvdyB0byBjb25maWd1cmUgb3IgYXV0aG9yIGF1dGhlbnRpY2F0aW9uIHBsdWdpbnMuYFxuICAgICk7XG4gIH1cbiAgY29ubmVjdGlvbi5fYXV0aFBsdWdpbiA9IGF1dGhQbHVnaW4oeyBjb25uZWN0aW9uLCBjb21tYW5kIH0pO1xuICBQcm9taXNlLnJlc29sdmUoY29ubmVjdGlvbi5fYXV0aFBsdWdpbihwbHVnaW5EYXRhKSkudGhlbihkYXRhID0+IHtcbiAgICBpZiAoZGF0YSkge1xuICAgICAgY29ubmVjdGlvbi53cml0ZVBhY2tldChuZXcgUGFja2V0cy5BdXRoU3dpdGNoUmVzcG9uc2UoZGF0YSkudG9QYWNrZXQoKSk7XG4gICAgfVxuICB9KS5jYXRjaChlcnIgPT4ge1xuICAgIGF1dGhTd2l0Y2hQbHVnaW5FcnJvcihlcnIsIGNvbW1hbmQpO1xuICB9KTtcbn1cblxuZnVuY3Rpb24gYXV0aFN3aXRjaFJlcXVlc3RNb3JlRGF0YShwYWNrZXQsIGNvbm5lY3Rpb24sIGNvbW1hbmQpIHtcbiAgY29uc3QgeyBkYXRhIH0gPSBQYWNrZXRzLkF1dGhTd2l0Y2hSZXF1ZXN0TW9yZURhdGEuZnJvbVBhY2tldChwYWNrZXQpO1xuXG4gIGlmIChjb25uZWN0aW9uLmNvbmZpZy5hdXRoU3dpdGNoSGFuZGxlcikge1xuICAgIGNvbnN0IGxlZ2FjeVN3aXRjaEhhbmRsZXIgPSBjb25uZWN0aW9uLmNvbmZpZy5hdXRoU3dpdGNoSGFuZGxlcjtcbiAgICB3YXJuTGVnYWN5QXV0aFN3aXRjaCgpO1xuICAgIGxlZ2FjeVN3aXRjaEhhbmRsZXIoeyBwbHVnaW5EYXRhOiBkYXRhIH0sIChlcnIsIGRhdGEpID0+IHtcbiAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgcmV0dXJuIGF1dGhTd2l0Y2hQbHVnaW5FcnJvcihlcnIsIGNvbW1hbmQpO1xuICAgICAgfVxuICAgICAgY29ubmVjdGlvbi53cml0ZVBhY2tldChuZXcgUGFja2V0cy5BdXRoU3dpdGNoUmVzcG9uc2UoZGF0YSkudG9QYWNrZXQoKSk7XG4gICAgfSk7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgaWYgKCFjb25uZWN0aW9uLl9hdXRoUGx1Z2luKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgJ0F1dGhQbHVnaW5Nb3JlRGF0YSByZWNlaXZlZCBidXQgbm8gYXV0aCBwbHVnaW4gaW5zdGFuY2UgZm91bmQnXG4gICAgKTtcbiAgfVxuICBQcm9taXNlLnJlc29sdmUoY29ubmVjdGlvbi5fYXV0aFBsdWdpbihkYXRhKSkudGhlbihkYXRhID0+IHtcbiAgICBpZiAoZGF0YSkge1xuICAgICAgY29ubmVjdGlvbi53cml0ZVBhY2tldChuZXcgUGFja2V0cy5BdXRoU3dpdGNoUmVzcG9uc2UoZGF0YSkudG9QYWNrZXQoKSk7XG4gICAgfVxuICB9KS5jYXRjaChlcnIgPT4ge1xuICAgIGF1dGhTd2l0Y2hQbHVnaW5FcnJvcihlcnIsIGNvbW1hbmQpO1xuICB9KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGF1dGhTd2l0Y2hSZXF1ZXN0LFxuICBhdXRoU3dpdGNoUmVxdWVzdE1vcmVEYXRhXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/commands/auth_switch.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/commands/binlog_dump.js":
/*!*********************************************************!*\
  !*** ./node_modules/mysql2/lib/commands/binlog_dump.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst Command = __webpack_require__(/*! ./command */ \"(rsc)/./node_modules/mysql2/lib/commands/command.js\");\nconst Packets = __webpack_require__(/*! ../packets */ \"(rsc)/./node_modules/mysql2/lib/packets/index.js\");\n\nconst eventParsers = [];\n\nclass BinlogEventHeader {\n  constructor(packet) {\n    this.timestamp = packet.readInt32();\n    this.eventType = packet.readInt8();\n    this.serverId = packet.readInt32();\n    this.eventSize = packet.readInt32();\n    this.logPos = packet.readInt32();\n    this.flags = packet.readInt16();\n  }\n}\n\nclass BinlogDump extends Command {\n  constructor(opts) {\n    super();\n    // this.onResult = callback;\n    this.opts = opts;\n  }\n\n  start(packet, connection) {\n    const newPacket = new Packets.BinlogDump(this.opts);\n    connection.writePacket(newPacket.toPacket(1));\n    return BinlogDump.prototype.binlogData;\n  }\n\n  binlogData(packet) {\n    // ok - continue consuming events\n    // error - error\n    // eof - end of binlog\n    if (packet.isEOF()) {\n      this.emit('eof');\n      return null;\n    }\n    // binlog event header\n    packet.readInt8();\n    const header = new BinlogEventHeader(packet);\n    const EventParser = eventParsers[header.eventType];\n    let event;\n    if (EventParser) {\n      event = new EventParser(packet);\n    } else {\n      event = {\n        name: 'UNKNOWN'\n      };\n    }\n    event.header = header;\n    this.emit('event', event);\n    return BinlogDump.prototype.binlogData;\n  }\n}\n\nclass RotateEvent {\n  constructor(packet) {\n    this.pposition = packet.readInt32();\n    // TODO: read uint64 here\n    packet.readInt32(); // positionDword2\n    this.nextBinlog = packet.readString();\n    this.name = 'RotateEvent';\n  }\n}\n\nclass FormatDescriptionEvent {\n  constructor(packet) {\n    this.binlogVersion = packet.readInt16();\n    this.serverVersion = packet.readString(50).replace(/\\u0000.*/, ''); // eslint-disable-line no-control-regex\n    this.createTimestamp = packet.readInt32();\n    this.eventHeaderLength = packet.readInt8(); // should be 19\n    this.eventsLength = packet.readBuffer();\n    this.name = 'FormatDescriptionEvent';\n  }\n}\n\nclass QueryEvent {\n  constructor(packet) {\n    const parseStatusVars = __webpack_require__(/*! ../packets/binlog_query_statusvars.js */ \"(rsc)/./node_modules/mysql2/lib/packets/binlog_query_statusvars.js\");\n    this.slaveProxyId = packet.readInt32();\n    this.executionTime = packet.readInt32();\n    const schemaLength = packet.readInt8();\n    this.errorCode = packet.readInt16();\n    const statusVarsLength = packet.readInt16();\n    const statusVars = packet.readBuffer(statusVarsLength);\n    this.schema = packet.readString(schemaLength);\n    packet.readInt8(); // should be zero\n    this.statusVars = parseStatusVars(statusVars);\n    this.query = packet.readString();\n    this.name = 'QueryEvent';\n  }\n}\n\nclass XidEvent {\n  constructor(packet) {\n    this.binlogVersion = packet.readInt16();\n    this.xid = packet.readInt64();\n    this.name = 'XidEvent';\n  }\n}\n\neventParsers[2] = QueryEvent;\neventParsers[4] = RotateEvent;\neventParsers[15] = FormatDescriptionEvent;\neventParsers[16] = XidEvent;\n\nmodule.exports = BinlogDump;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb21tYW5kcy9iaW5sb2dfZHVtcC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixnQkFBZ0IsbUJBQU8sQ0FBQyxzRUFBVztBQUNuQyxnQkFBZ0IsbUJBQU8sQ0FBQyxvRUFBWTs7QUFFcEM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSx3RUFBd0U7QUFDeEU7QUFDQSxnREFBZ0Q7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLDRCQUE0QixtQkFBTyxDQUFDLGlIQUF1QztBQUMzRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVhbF9lc3RhdGUvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb21tYW5kcy9iaW5sb2dfZHVtcC5qcz8wOWQ4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgQ29tbWFuZCA9IHJlcXVpcmUoJy4vY29tbWFuZCcpO1xuY29uc3QgUGFja2V0cyA9IHJlcXVpcmUoJy4uL3BhY2tldHMnKTtcblxuY29uc3QgZXZlbnRQYXJzZXJzID0gW107XG5cbmNsYXNzIEJpbmxvZ0V2ZW50SGVhZGVyIHtcbiAgY29uc3RydWN0b3IocGFja2V0KSB7XG4gICAgdGhpcy50aW1lc3RhbXAgPSBwYWNrZXQucmVhZEludDMyKCk7XG4gICAgdGhpcy5ldmVudFR5cGUgPSBwYWNrZXQucmVhZEludDgoKTtcbiAgICB0aGlzLnNlcnZlcklkID0gcGFja2V0LnJlYWRJbnQzMigpO1xuICAgIHRoaXMuZXZlbnRTaXplID0gcGFja2V0LnJlYWRJbnQzMigpO1xuICAgIHRoaXMubG9nUG9zID0gcGFja2V0LnJlYWRJbnQzMigpO1xuICAgIHRoaXMuZmxhZ3MgPSBwYWNrZXQucmVhZEludDE2KCk7XG4gIH1cbn1cblxuY2xhc3MgQmlubG9nRHVtcCBleHRlbmRzIENvbW1hbmQge1xuICBjb25zdHJ1Y3RvcihvcHRzKSB7XG4gICAgc3VwZXIoKTtcbiAgICAvLyB0aGlzLm9uUmVzdWx0ID0gY2FsbGJhY2s7XG4gICAgdGhpcy5vcHRzID0gb3B0cztcbiAgfVxuXG4gIHN0YXJ0KHBhY2tldCwgY29ubmVjdGlvbikge1xuICAgIGNvbnN0IG5ld1BhY2tldCA9IG5ldyBQYWNrZXRzLkJpbmxvZ0R1bXAodGhpcy5vcHRzKTtcbiAgICBjb25uZWN0aW9uLndyaXRlUGFja2V0KG5ld1BhY2tldC50b1BhY2tldCgxKSk7XG4gICAgcmV0dXJuIEJpbmxvZ0R1bXAucHJvdG90eXBlLmJpbmxvZ0RhdGE7XG4gIH1cblxuICBiaW5sb2dEYXRhKHBhY2tldCkge1xuICAgIC8vIG9rIC0gY29udGludWUgY29uc3VtaW5nIGV2ZW50c1xuICAgIC8vIGVycm9yIC0gZXJyb3JcbiAgICAvLyBlb2YgLSBlbmQgb2YgYmlubG9nXG4gICAgaWYgKHBhY2tldC5pc0VPRigpKSB7XG4gICAgICB0aGlzLmVtaXQoJ2VvZicpO1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIC8vIGJpbmxvZyBldmVudCBoZWFkZXJcbiAgICBwYWNrZXQucmVhZEludDgoKTtcbiAgICBjb25zdCBoZWFkZXIgPSBuZXcgQmlubG9nRXZlbnRIZWFkZXIocGFja2V0KTtcbiAgICBjb25zdCBFdmVudFBhcnNlciA9IGV2ZW50UGFyc2Vyc1toZWFkZXIuZXZlbnRUeXBlXTtcbiAgICBsZXQgZXZlbnQ7XG4gICAgaWYgKEV2ZW50UGFyc2VyKSB7XG4gICAgICBldmVudCA9IG5ldyBFdmVudFBhcnNlcihwYWNrZXQpO1xuICAgIH0gZWxzZSB7XG4gICAgICBldmVudCA9IHtcbiAgICAgICAgbmFtZTogJ1VOS05PV04nXG4gICAgICB9O1xuICAgIH1cbiAgICBldmVudC5oZWFkZXIgPSBoZWFkZXI7XG4gICAgdGhpcy5lbWl0KCdldmVudCcsIGV2ZW50KTtcbiAgICByZXR1cm4gQmlubG9nRHVtcC5wcm90b3R5cGUuYmlubG9nRGF0YTtcbiAgfVxufVxuXG5jbGFzcyBSb3RhdGVFdmVudCB7XG4gIGNvbnN0cnVjdG9yKHBhY2tldCkge1xuICAgIHRoaXMucHBvc2l0aW9uID0gcGFja2V0LnJlYWRJbnQzMigpO1xuICAgIC8vIFRPRE86IHJlYWQgdWludDY0IGhlcmVcbiAgICBwYWNrZXQucmVhZEludDMyKCk7IC8vIHBvc2l0aW9uRHdvcmQyXG4gICAgdGhpcy5uZXh0QmlubG9nID0gcGFja2V0LnJlYWRTdHJpbmcoKTtcbiAgICB0aGlzLm5hbWUgPSAnUm90YXRlRXZlbnQnO1xuICB9XG59XG5cbmNsYXNzIEZvcm1hdERlc2NyaXB0aW9uRXZlbnQge1xuICBjb25zdHJ1Y3RvcihwYWNrZXQpIHtcbiAgICB0aGlzLmJpbmxvZ1ZlcnNpb24gPSBwYWNrZXQucmVhZEludDE2KCk7XG4gICAgdGhpcy5zZXJ2ZXJWZXJzaW9uID0gcGFja2V0LnJlYWRTdHJpbmcoNTApLnJlcGxhY2UoL1xcdTAwMDAuKi8sICcnKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1jb250cm9sLXJlZ2V4XG4gICAgdGhpcy5jcmVhdGVUaW1lc3RhbXAgPSBwYWNrZXQucmVhZEludDMyKCk7XG4gICAgdGhpcy5ldmVudEhlYWRlckxlbmd0aCA9IHBhY2tldC5yZWFkSW50OCgpOyAvLyBzaG91bGQgYmUgMTlcbiAgICB0aGlzLmV2ZW50c0xlbmd0aCA9IHBhY2tldC5yZWFkQnVmZmVyKCk7XG4gICAgdGhpcy5uYW1lID0gJ0Zvcm1hdERlc2NyaXB0aW9uRXZlbnQnO1xuICB9XG59XG5cbmNsYXNzIFF1ZXJ5RXZlbnQge1xuICBjb25zdHJ1Y3RvcihwYWNrZXQpIHtcbiAgICBjb25zdCBwYXJzZVN0YXR1c1ZhcnMgPSByZXF1aXJlKCcuLi9wYWNrZXRzL2JpbmxvZ19xdWVyeV9zdGF0dXN2YXJzLmpzJyk7XG4gICAgdGhpcy5zbGF2ZVByb3h5SWQgPSBwYWNrZXQucmVhZEludDMyKCk7XG4gICAgdGhpcy5leGVjdXRpb25UaW1lID0gcGFja2V0LnJlYWRJbnQzMigpO1xuICAgIGNvbnN0IHNjaGVtYUxlbmd0aCA9IHBhY2tldC5yZWFkSW50OCgpO1xuICAgIHRoaXMuZXJyb3JDb2RlID0gcGFja2V0LnJlYWRJbnQxNigpO1xuICAgIGNvbnN0IHN0YXR1c1ZhcnNMZW5ndGggPSBwYWNrZXQucmVhZEludDE2KCk7XG4gICAgY29uc3Qgc3RhdHVzVmFycyA9IHBhY2tldC5yZWFkQnVmZmVyKHN0YXR1c1ZhcnNMZW5ndGgpO1xuICAgIHRoaXMuc2NoZW1hID0gcGFja2V0LnJlYWRTdHJpbmcoc2NoZW1hTGVuZ3RoKTtcbiAgICBwYWNrZXQucmVhZEludDgoKTsgLy8gc2hvdWxkIGJlIHplcm9cbiAgICB0aGlzLnN0YXR1c1ZhcnMgPSBwYXJzZVN0YXR1c1ZhcnMoc3RhdHVzVmFycyk7XG4gICAgdGhpcy5xdWVyeSA9IHBhY2tldC5yZWFkU3RyaW5nKCk7XG4gICAgdGhpcy5uYW1lID0gJ1F1ZXJ5RXZlbnQnO1xuICB9XG59XG5cbmNsYXNzIFhpZEV2ZW50IHtcbiAgY29uc3RydWN0b3IocGFja2V0KSB7XG4gICAgdGhpcy5iaW5sb2dWZXJzaW9uID0gcGFja2V0LnJlYWRJbnQxNigpO1xuICAgIHRoaXMueGlkID0gcGFja2V0LnJlYWRJbnQ2NCgpO1xuICAgIHRoaXMubmFtZSA9ICdYaWRFdmVudCc7XG4gIH1cbn1cblxuZXZlbnRQYXJzZXJzWzJdID0gUXVlcnlFdmVudDtcbmV2ZW50UGFyc2Vyc1s0XSA9IFJvdGF0ZUV2ZW50O1xuZXZlbnRQYXJzZXJzWzE1XSA9IEZvcm1hdERlc2NyaXB0aW9uRXZlbnQ7XG5ldmVudFBhcnNlcnNbMTZdID0gWGlkRXZlbnQ7XG5cbm1vZHVsZS5leHBvcnRzID0gQmlubG9nRHVtcDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/commands/binlog_dump.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/commands/change_user.js":
/*!*********************************************************!*\
  !*** ./node_modules/mysql2/lib/commands/change_user.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// This file was modified by Oracle on September 21, 2021.\n// The changes involve saving additional authentication factor passwords\n// in the command scope and enabling multi-factor authentication in the\n// client-side when the server supports it.\n// Modifications copyright (c) 2021, Oracle and/or its affiliates.\n\n\n\nconst Command = __webpack_require__(/*! ./command.js */ \"(rsc)/./node_modules/mysql2/lib/commands/command.js\");\nconst Packets = __webpack_require__(/*! ../packets/index.js */ \"(rsc)/./node_modules/mysql2/lib/packets/index.js\");\nconst ClientConstants = __webpack_require__(/*! ../constants/client */ \"(rsc)/./node_modules/mysql2/lib/constants/client.js\");\nconst ClientHandshake = __webpack_require__(/*! ./client_handshake.js */ \"(rsc)/./node_modules/mysql2/lib/commands/client_handshake.js\");\nconst CharsetToEncoding = __webpack_require__(/*! ../constants/charset_encodings.js */ \"(rsc)/./node_modules/mysql2/lib/constants/charset_encodings.js\");\n\nclass ChangeUser extends Command {\n  constructor(options, callback) {\n    super();\n    this.onResult = callback;\n    this.user = options.user;\n    this.password = options.password;\n    // \"password1\" is an alias of \"password\"\n    this.password1 = options.password;\n    this.password2 = options.password2;\n    this.password3 = options.password3;\n    this.database = options.database;\n    this.passwordSha1 = options.passwordSha1;\n    this.charsetNumber = options.charsetNumber;\n    this.currentConfig = options.currentConfig;\n    this.authenticationFactor = 0;\n  }\n  start(packet, connection) {\n    const newPacket = new Packets.ChangeUser({\n      flags: connection.config.clientFlags,\n      user: this.user,\n      database: this.database,\n      charsetNumber: this.charsetNumber,\n      password: this.password,\n      passwordSha1: this.passwordSha1,\n      authPluginData1: connection._handshakePacket.authPluginData1,\n      authPluginData2: connection._handshakePacket.authPluginData2\n    });\n    this.currentConfig.user = this.user;\n    this.currentConfig.password = this.password;\n    this.currentConfig.database = this.database;\n    this.currentConfig.charsetNumber = this.charsetNumber;\n    connection.clientEncoding = CharsetToEncoding[this.charsetNumber];\n    // clear prepared statements cache as all statements become invalid after changeUser\n    connection._statements.clear();\n    connection.writePacket(newPacket.toPacket());\n    // check if the server supports multi-factor authentication\n    const multiFactorAuthentication = connection.serverCapabilityFlags & ClientConstants.MULTI_FACTOR_AUTHENTICATION;\n    if (multiFactorAuthentication) {\n      // if the server supports multi-factor authentication, we enable it in\n      // the client\n      this.authenticationFactor = 1;\n    }\n    return ChangeUser.prototype.handshakeResult;\n  }\n}\n\nChangeUser.prototype.handshakeResult =\n  ClientHandshake.prototype.handshakeResult;\nChangeUser.prototype.calculateNativePasswordAuthToken =\n  ClientHandshake.prototype.calculateNativePasswordAuthToken;\n\nmodule.exports = ChangeUser;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb21tYW5kcy9jaGFuZ2VfdXNlci5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVhOztBQUViLGdCQUFnQixtQkFBTyxDQUFDLHlFQUFjO0FBQ3RDLGdCQUFnQixtQkFBTyxDQUFDLDZFQUFxQjtBQUM3Qyx3QkFBd0IsbUJBQU8sQ0FBQyxnRkFBcUI7QUFDckQsd0JBQXdCLG1CQUFPLENBQUMsMkZBQXVCO0FBQ3ZELDBCQUEwQixtQkFBTyxDQUFDLHlHQUFtQzs7QUFFckU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZWFsX2VzdGF0ZS8uL25vZGVfbW9kdWxlcy9teXNxbDIvbGliL2NvbW1hbmRzL2NoYW5nZV91c2VyLmpzP2MyMDkiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gVGhpcyBmaWxlIHdhcyBtb2RpZmllZCBieSBPcmFjbGUgb24gU2VwdGVtYmVyIDIxLCAyMDIxLlxuLy8gVGhlIGNoYW5nZXMgaW52b2x2ZSBzYXZpbmcgYWRkaXRpb25hbCBhdXRoZW50aWNhdGlvbiBmYWN0b3IgcGFzc3dvcmRzXG4vLyBpbiB0aGUgY29tbWFuZCBzY29wZSBhbmQgZW5hYmxpbmcgbXVsdGktZmFjdG9yIGF1dGhlbnRpY2F0aW9uIGluIHRoZVxuLy8gY2xpZW50LXNpZGUgd2hlbiB0aGUgc2VydmVyIHN1cHBvcnRzIGl0LlxuLy8gTW9kaWZpY2F0aW9ucyBjb3B5cmlnaHQgKGMpIDIwMjEsIE9yYWNsZSBhbmQvb3IgaXRzIGFmZmlsaWF0ZXMuXG5cbid1c2Ugc3RyaWN0JztcblxuY29uc3QgQ29tbWFuZCA9IHJlcXVpcmUoJy4vY29tbWFuZC5qcycpO1xuY29uc3QgUGFja2V0cyA9IHJlcXVpcmUoJy4uL3BhY2tldHMvaW5kZXguanMnKTtcbmNvbnN0IENsaWVudENvbnN0YW50cyA9IHJlcXVpcmUoJy4uL2NvbnN0YW50cy9jbGllbnQnKTtcbmNvbnN0IENsaWVudEhhbmRzaGFrZSA9IHJlcXVpcmUoJy4vY2xpZW50X2hhbmRzaGFrZS5qcycpO1xuY29uc3QgQ2hhcnNldFRvRW5jb2RpbmcgPSByZXF1aXJlKCcuLi9jb25zdGFudHMvY2hhcnNldF9lbmNvZGluZ3MuanMnKTtcblxuY2xhc3MgQ2hhbmdlVXNlciBleHRlbmRzIENvbW1hbmQge1xuICBjb25zdHJ1Y3RvcihvcHRpb25zLCBjYWxsYmFjaykge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5vblJlc3VsdCA9IGNhbGxiYWNrO1xuICAgIHRoaXMudXNlciA9IG9wdGlvbnMudXNlcjtcbiAgICB0aGlzLnBhc3N3b3JkID0gb3B0aW9ucy5wYXNzd29yZDtcbiAgICAvLyBcInBhc3N3b3JkMVwiIGlzIGFuIGFsaWFzIG9mIFwicGFzc3dvcmRcIlxuICAgIHRoaXMucGFzc3dvcmQxID0gb3B0aW9ucy5wYXNzd29yZDtcbiAgICB0aGlzLnBhc3N3b3JkMiA9IG9wdGlvbnMucGFzc3dvcmQyO1xuICAgIHRoaXMucGFzc3dvcmQzID0gb3B0aW9ucy5wYXNzd29yZDM7XG4gICAgdGhpcy5kYXRhYmFzZSA9IG9wdGlvbnMuZGF0YWJhc2U7XG4gICAgdGhpcy5wYXNzd29yZFNoYTEgPSBvcHRpb25zLnBhc3N3b3JkU2hhMTtcbiAgICB0aGlzLmNoYXJzZXROdW1iZXIgPSBvcHRpb25zLmNoYXJzZXROdW1iZXI7XG4gICAgdGhpcy5jdXJyZW50Q29uZmlnID0gb3B0aW9ucy5jdXJyZW50Q29uZmlnO1xuICAgIHRoaXMuYXV0aGVudGljYXRpb25GYWN0b3IgPSAwO1xuICB9XG4gIHN0YXJ0KHBhY2tldCwgY29ubmVjdGlvbikge1xuICAgIGNvbnN0IG5ld1BhY2tldCA9IG5ldyBQYWNrZXRzLkNoYW5nZVVzZXIoe1xuICAgICAgZmxhZ3M6IGNvbm5lY3Rpb24uY29uZmlnLmNsaWVudEZsYWdzLFxuICAgICAgdXNlcjogdGhpcy51c2VyLFxuICAgICAgZGF0YWJhc2U6IHRoaXMuZGF0YWJhc2UsXG4gICAgICBjaGFyc2V0TnVtYmVyOiB0aGlzLmNoYXJzZXROdW1iZXIsXG4gICAgICBwYXNzd29yZDogdGhpcy5wYXNzd29yZCxcbiAgICAgIHBhc3N3b3JkU2hhMTogdGhpcy5wYXNzd29yZFNoYTEsXG4gICAgICBhdXRoUGx1Z2luRGF0YTE6IGNvbm5lY3Rpb24uX2hhbmRzaGFrZVBhY2tldC5hdXRoUGx1Z2luRGF0YTEsXG4gICAgICBhdXRoUGx1Z2luRGF0YTI6IGNvbm5lY3Rpb24uX2hhbmRzaGFrZVBhY2tldC5hdXRoUGx1Z2luRGF0YTJcbiAgICB9KTtcbiAgICB0aGlzLmN1cnJlbnRDb25maWcudXNlciA9IHRoaXMudXNlcjtcbiAgICB0aGlzLmN1cnJlbnRDb25maWcucGFzc3dvcmQgPSB0aGlzLnBhc3N3b3JkO1xuICAgIHRoaXMuY3VycmVudENvbmZpZy5kYXRhYmFzZSA9IHRoaXMuZGF0YWJhc2U7XG4gICAgdGhpcy5jdXJyZW50Q29uZmlnLmNoYXJzZXROdW1iZXIgPSB0aGlzLmNoYXJzZXROdW1iZXI7XG4gICAgY29ubmVjdGlvbi5jbGllbnRFbmNvZGluZyA9IENoYXJzZXRUb0VuY29kaW5nW3RoaXMuY2hhcnNldE51bWJlcl07XG4gICAgLy8gY2xlYXIgcHJlcGFyZWQgc3RhdGVtZW50cyBjYWNoZSBhcyBhbGwgc3RhdGVtZW50cyBiZWNvbWUgaW52YWxpZCBhZnRlciBjaGFuZ2VVc2VyXG4gICAgY29ubmVjdGlvbi5fc3RhdGVtZW50cy5jbGVhcigpO1xuICAgIGNvbm5lY3Rpb24ud3JpdGVQYWNrZXQobmV3UGFja2V0LnRvUGFja2V0KCkpO1xuICAgIC8vIGNoZWNrIGlmIHRoZSBzZXJ2ZXIgc3VwcG9ydHMgbXVsdGktZmFjdG9yIGF1dGhlbnRpY2F0aW9uXG4gICAgY29uc3QgbXVsdGlGYWN0b3JBdXRoZW50aWNhdGlvbiA9IGNvbm5lY3Rpb24uc2VydmVyQ2FwYWJpbGl0eUZsYWdzICYgQ2xpZW50Q29uc3RhbnRzLk1VTFRJX0ZBQ1RPUl9BVVRIRU5USUNBVElPTjtcbiAgICBpZiAobXVsdGlGYWN0b3JBdXRoZW50aWNhdGlvbikge1xuICAgICAgLy8gaWYgdGhlIHNlcnZlciBzdXBwb3J0cyBtdWx0aS1mYWN0b3IgYXV0aGVudGljYXRpb24sIHdlIGVuYWJsZSBpdCBpblxuICAgICAgLy8gdGhlIGNsaWVudFxuICAgICAgdGhpcy5hdXRoZW50aWNhdGlvbkZhY3RvciA9IDE7XG4gICAgfVxuICAgIHJldHVybiBDaGFuZ2VVc2VyLnByb3RvdHlwZS5oYW5kc2hha2VSZXN1bHQ7XG4gIH1cbn1cblxuQ2hhbmdlVXNlci5wcm90b3R5cGUuaGFuZHNoYWtlUmVzdWx0ID1cbiAgQ2xpZW50SGFuZHNoYWtlLnByb3RvdHlwZS5oYW5kc2hha2VSZXN1bHQ7XG5DaGFuZ2VVc2VyLnByb3RvdHlwZS5jYWxjdWxhdGVOYXRpdmVQYXNzd29yZEF1dGhUb2tlbiA9XG4gIENsaWVudEhhbmRzaGFrZS5wcm90b3R5cGUuY2FsY3VsYXRlTmF0aXZlUGFzc3dvcmRBdXRoVG9rZW47XG5cbm1vZHVsZS5leHBvcnRzID0gQ2hhbmdlVXNlcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/commands/change_user.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/commands/client_handshake.js":
/*!**************************************************************!*\
  !*** ./node_modules/mysql2/lib/commands/client_handshake.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// This file was modified by Oracle on June 17, 2021.\n// Handshake errors are now maked as fatal and the corresponding events are\n// emitted in the command instance itself.\n// Modifications copyright (c) 2021, Oracle and/or its affiliates.\n\n// This file was modified by Oracle on September 21, 2021.\n// Handshake workflow now supports additional authentication factors requested\n// by the server.\n// Modifications copyright (c) 2021, Oracle and/or its affiliates.\n\n\n\nconst Command = __webpack_require__(/*! ./command.js */ \"(rsc)/./node_modules/mysql2/lib/commands/command.js\");\nconst Packets = __webpack_require__(/*! ../packets/index.js */ \"(rsc)/./node_modules/mysql2/lib/packets/index.js\");\nconst ClientConstants = __webpack_require__(/*! ../constants/client.js */ \"(rsc)/./node_modules/mysql2/lib/constants/client.js\");\nconst CharsetToEncoding = __webpack_require__(/*! ../constants/charset_encodings.js */ \"(rsc)/./node_modules/mysql2/lib/constants/charset_encodings.js\");\nconst auth41 = __webpack_require__(/*! ../auth_41.js */ \"(rsc)/./node_modules/mysql2/lib/auth_41.js\");\n\nfunction flagNames(flags) {\n  const res = [];\n  for (const c in ClientConstants) {\n    if (flags & ClientConstants[c]) {\n      res.push(c.replace(/_/g, ' ').toLowerCase());\n    }\n  }\n  return res;\n}\n\nclass ClientHandshake extends Command {\n  constructor(clientFlags) {\n    super();\n    this.handshake = null;\n    this.clientFlags = clientFlags;\n    this.authenticationFactor = 0;\n  }\n\n  start() {\n    return ClientHandshake.prototype.handshakeInit;\n  }\n\n  sendSSLRequest(connection) {\n    const sslRequest = new Packets.SSLRequest(\n      this.clientFlags,\n      connection.config.charsetNumber\n    );\n    connection.writePacket(sslRequest.toPacket());\n  }\n\n  sendCredentials(connection) {\n    if (connection.config.debug) {\n      // eslint-disable-next-line\n      console.log(\n        'Sending handshake packet: flags:%d=(%s)',\n        this.clientFlags,\n        flagNames(this.clientFlags).join(', ')\n      );\n    }\n    this.user = connection.config.user;\n    this.password = connection.config.password;\n    // \"password1\" is an alias to the original \"password\" value\n    // to make it easier to integrate multi-factor authentication\n    this.password1 = connection.config.password;\n    // \"password2\" and \"password3\" are the 2nd and 3rd factor authentication\n    // passwords, which can be undefined depending on the authentication\n    // plugin being used\n    this.password2 = connection.config.password2;\n    this.password3 = connection.config.password3;\n    this.passwordSha1 = connection.config.passwordSha1;\n    this.database = connection.config.database;\n    this.autPluginName = this.handshake.autPluginName;\n    const handshakeResponse = new Packets.HandshakeResponse({\n      flags: this.clientFlags,\n      user: this.user,\n      database: this.database,\n      password: this.password,\n      passwordSha1: this.passwordSha1,\n      charsetNumber: connection.config.charsetNumber,\n      authPluginData1: this.handshake.authPluginData1,\n      authPluginData2: this.handshake.authPluginData2,\n      compress: connection.config.compress,\n      connectAttributes: connection.config.connectAttributes\n    });\n    connection.writePacket(handshakeResponse.toPacket());\n  }\n\n  calculateNativePasswordAuthToken(authPluginData) {\n    // TODO: dont split into authPluginData1 and authPluginData2, instead join when 1 & 2 received\n    const authPluginData1 = authPluginData.slice(0, 8);\n    const authPluginData2 = authPluginData.slice(8, 20);\n    let authToken;\n    if (this.passwordSha1) {\n      authToken = auth41.calculateTokenFromPasswordSha(\n        this.passwordSha1,\n        authPluginData1,\n        authPluginData2\n      );\n    } else {\n      authToken = auth41.calculateToken(\n        this.password,\n        authPluginData1,\n        authPluginData2\n      );\n    }\n    return authToken;\n  }\n\n  handshakeInit(helloPacket, connection) {\n    this.on('error', e => {\n      connection._fatalError = e;\n      connection._protocolError = e;\n    });\n    this.handshake = Packets.Handshake.fromPacket(helloPacket);\n    if (connection.config.debug) {\n      // eslint-disable-next-line\n      console.log(\n        'Server hello packet: capability flags:%d=(%s)',\n        this.handshake.capabilityFlags,\n        flagNames(this.handshake.capabilityFlags).join(', ')\n      );\n    }\n    connection.serverCapabilityFlags = this.handshake.capabilityFlags;\n    connection.serverEncoding = CharsetToEncoding[this.handshake.characterSet];\n    connection.connectionId = this.handshake.connectionId;\n    const serverSSLSupport =\n      this.handshake.capabilityFlags & ClientConstants.SSL;\n    // multi factor authentication is enabled with the\n    // \"MULTI_FACTOR_AUTHENTICATION\" capability and should only be used if it\n    // is supported by the server\n    const multiFactorAuthentication =\n      this.handshake.capabilityFlags & ClientConstants.MULTI_FACTOR_AUTHENTICATION;\n    this.clientFlags = this.clientFlags | multiFactorAuthentication;\n    // use compression only if requested by client and supported by server\n    connection.config.compress =\n      connection.config.compress &&\n      this.handshake.capabilityFlags & ClientConstants.COMPRESS;\n    this.clientFlags = this.clientFlags | connection.config.compress;\n    if (connection.config.ssl) {\n      // client requires SSL but server does not support it\n      if (!serverSSLSupport) {\n        const err = new Error('Server does not support secure connection');\n        err.code = 'HANDSHAKE_NO_SSL_SUPPORT';\n        err.fatal = true;\n        this.emit('error', err);\n        return false;\n      }\n      // send ssl upgrade request and immediately upgrade connection to secure\n      this.clientFlags |= ClientConstants.SSL;\n      this.sendSSLRequest(connection);\n      connection.startTLS(err => {\n        // after connection is secure\n        if (err) {\n          // SSL negotiation error are fatal\n          err.code = 'HANDSHAKE_SSL_ERROR';\n          err.fatal = true;\n          this.emit('error', err);\n          return;\n        }\n        // rest of communication is encrypted\n        this.sendCredentials(connection);\n      });\n    } else {\n      this.sendCredentials(connection);\n    }\n    if (multiFactorAuthentication) {\n      // if the server supports multi-factor authentication, we enable it in\n      // the client\n      this.authenticationFactor = 1;\n    }\n    return ClientHandshake.prototype.handshakeResult;\n  }\n\n  handshakeResult(packet, connection) {\n    const marker = packet.peekByte();\n    // packet can be OK_Packet, ERR_Packet, AuthSwitchRequest, AuthNextFactor\n    // or AuthMoreData\n    if (marker === 0xfe || marker === 1 || marker === 0x02) {\n      const authSwitch = __webpack_require__(/*! ./auth_switch */ \"(rsc)/./node_modules/mysql2/lib/commands/auth_switch.js\");\n      try {\n        if (marker === 1) {\n          authSwitch.authSwitchRequestMoreData(packet, connection, this);\n        } else {\n          // if authenticationFactor === 0, it means the server does not support\n          // the multi-factor authentication capability\n          if (this.authenticationFactor !== 0) {\n            // if we are past the first authentication factor, we should use the\n            // corresponding password (if there is one)\n            connection.config.password = this[`password${this.authenticationFactor}`];\n            // update the current authentication factor\n            this.authenticationFactor += 1;\n          }\n          // if marker === 0x02, it means it is an AuthNextFactor packet,\n          // which is similar in structure to an AuthSwitchRequest packet,\n          // so, we can use it directly\n          authSwitch.authSwitchRequest(packet, connection, this);\n        }\n        return ClientHandshake.prototype.handshakeResult;\n      } catch (err) {\n        // Authentication errors are fatal\n        err.code = 'AUTH_SWITCH_PLUGIN_ERROR';\n        err.fatal = true;\n\n        if (this.onResult) {\n          this.onResult(err);\n        } else {\n          this.emit('error', err);\n        }\n        return null;\n      }\n    }\n    if (marker !== 0) {\n      const err = new Error('Unexpected packet during handshake phase');\n      // Unknown handshake errors are fatal\n      err.code = 'HANDSHAKE_UNKNOWN_ERROR';\n      err.fatal = true;\n\n      if (this.onResult) {\n        this.onResult(err);\n      } else {\n        this.emit('error', err);\n      }\n      return null;\n    }\n    // this should be called from ClientHandshake command only\n    // and skipped when called from ChangeUser command\n    if (!connection.authorized) {\n      connection.authorized = true;\n      if (connection.config.compress) {\n        const enableCompression = (__webpack_require__(/*! ../compressed_protocol.js */ \"(rsc)/./node_modules/mysql2/lib/compressed_protocol.js\").enableCompression);\n        enableCompression(connection);\n      }\n    }\n    if (this.onResult) {\n      this.onResult(null);\n    }\n    return null;\n  }\n}\nmodule.exports = ClientHandshake;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/commands/client_handshake.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/commands/close_statement.js":
/*!*************************************************************!*\
  !*** ./node_modules/mysql2/lib/commands/close_statement.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst Command = __webpack_require__(/*! ./command */ \"(rsc)/./node_modules/mysql2/lib/commands/command.js\");\nconst Packets = __webpack_require__(/*! ../packets/index.js */ \"(rsc)/./node_modules/mysql2/lib/packets/index.js\");\n\nclass CloseStatement extends Command {\n  constructor(id) {\n    super();\n    this.id = id;\n  }\n\n  start(packet, connection) {\n    connection.writePacket(new Packets.CloseStatement(this.id).toPacket(1));\n    return null;\n  }\n}\n\nmodule.exports = CloseStatement;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb21tYW5kcy9jbG9zZV9zdGF0ZW1lbnQuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsZ0JBQWdCLG1CQUFPLENBQUMsc0VBQVc7QUFDbkMsZ0JBQWdCLG1CQUFPLENBQUMsNkVBQXFCOztBQUU3QztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZWFsX2VzdGF0ZS8uL25vZGVfbW9kdWxlcy9teXNxbDIvbGliL2NvbW1hbmRzL2Nsb3NlX3N0YXRlbWVudC5qcz84NmFhIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgQ29tbWFuZCA9IHJlcXVpcmUoJy4vY29tbWFuZCcpO1xuY29uc3QgUGFja2V0cyA9IHJlcXVpcmUoJy4uL3BhY2tldHMvaW5kZXguanMnKTtcblxuY2xhc3MgQ2xvc2VTdGF0ZW1lbnQgZXh0ZW5kcyBDb21tYW5kIHtcbiAgY29uc3RydWN0b3IoaWQpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuaWQgPSBpZDtcbiAgfVxuXG4gIHN0YXJ0KHBhY2tldCwgY29ubmVjdGlvbikge1xuICAgIGNvbm5lY3Rpb24ud3JpdGVQYWNrZXQobmV3IFBhY2tldHMuQ2xvc2VTdGF0ZW1lbnQodGhpcy5pZCkudG9QYWNrZXQoMSkpO1xuICAgIHJldHVybiBudWxsO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gQ2xvc2VTdGF0ZW1lbnQ7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/commands/close_statement.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/commands/command.js":
/*!*****************************************************!*\
  !*** ./node_modules/mysql2/lib/commands/command.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst EventEmitter = (__webpack_require__(/*! events */ \"events\").EventEmitter);\nconst Timers = __webpack_require__(/*! timers */ \"timers\");\n\nclass Command extends EventEmitter {\n  constructor() {\n    super();\n    this.next = null;\n  }\n\n  // slow. debug only\n  stateName() {\n    const state = this.next;\n    for (const i in this) {\n      if (this[i] === state && i !== 'next') {\n        return i;\n      }\n    }\n    return 'unknown name';\n  }\n\n  execute(packet, connection) {\n    if (!this.next) {\n      this.next = this.start;\n      connection._resetSequenceId();\n    }\n    if (packet && packet.isError()) {\n      const err = packet.asError(connection.clientEncoding);\n      err.sql = this.sql || this.query;\n      if (this.queryTimeout) {\n        Timers.clearTimeout(this.queryTimeout);\n        this.queryTimeout = null;\n      }\n      if (this.onResult) {\n        this.onResult(err);\n        this.emit('end');\n      } else {\n        this.emit('error', err);\n        this.emit('end');\n      }\n      return true;\n    }\n    // TODO: don't return anything from execute, it's ugly and error-prone. Listen for 'end' event in connection\n    this.next = this.next(packet, connection);\n    if (this.next) {\n      return false;\n    } \n    this.emit('end');\n    return true;\n    \n  }\n}\n\nmodule.exports = Command;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb21tYW5kcy9jb21tYW5kLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLHFCQUFxQiwwREFBOEI7QUFDbkQsZUFBZSxtQkFBTyxDQUFDLHNCQUFROztBQUUvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZWFsX2VzdGF0ZS8uL25vZGVfbW9kdWxlcy9teXNxbDIvbGliL2NvbW1hbmRzL2NvbW1hbmQuanM/ZWNhYiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IEV2ZW50RW1pdHRlciA9IHJlcXVpcmUoJ2V2ZW50cycpLkV2ZW50RW1pdHRlcjtcbmNvbnN0IFRpbWVycyA9IHJlcXVpcmUoJ3RpbWVycycpO1xuXG5jbGFzcyBDb21tYW5kIGV4dGVuZHMgRXZlbnRFbWl0dGVyIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLm5leHQgPSBudWxsO1xuICB9XG5cbiAgLy8gc2xvdy4gZGVidWcgb25seVxuICBzdGF0ZU5hbWUoKSB7XG4gICAgY29uc3Qgc3RhdGUgPSB0aGlzLm5leHQ7XG4gICAgZm9yIChjb25zdCBpIGluIHRoaXMpIHtcbiAgICAgIGlmICh0aGlzW2ldID09PSBzdGF0ZSAmJiBpICE9PSAnbmV4dCcpIHtcbiAgICAgICAgcmV0dXJuIGk7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiAndW5rbm93biBuYW1lJztcbiAgfVxuXG4gIGV4ZWN1dGUocGFja2V0LCBjb25uZWN0aW9uKSB7XG4gICAgaWYgKCF0aGlzLm5leHQpIHtcbiAgICAgIHRoaXMubmV4dCA9IHRoaXMuc3RhcnQ7XG4gICAgICBjb25uZWN0aW9uLl9yZXNldFNlcXVlbmNlSWQoKTtcbiAgICB9XG4gICAgaWYgKHBhY2tldCAmJiBwYWNrZXQuaXNFcnJvcigpKSB7XG4gICAgICBjb25zdCBlcnIgPSBwYWNrZXQuYXNFcnJvcihjb25uZWN0aW9uLmNsaWVudEVuY29kaW5nKTtcbiAgICAgIGVyci5zcWwgPSB0aGlzLnNxbCB8fCB0aGlzLnF1ZXJ5O1xuICAgICAgaWYgKHRoaXMucXVlcnlUaW1lb3V0KSB7XG4gICAgICAgIFRpbWVycy5jbGVhclRpbWVvdXQodGhpcy5xdWVyeVRpbWVvdXQpO1xuICAgICAgICB0aGlzLnF1ZXJ5VGltZW91dCA9IG51bGw7XG4gICAgICB9XG4gICAgICBpZiAodGhpcy5vblJlc3VsdCkge1xuICAgICAgICB0aGlzLm9uUmVzdWx0KGVycik7XG4gICAgICAgIHRoaXMuZW1pdCgnZW5kJyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLmVtaXQoJ2Vycm9yJywgZXJyKTtcbiAgICAgICAgdGhpcy5lbWl0KCdlbmQnKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICAvLyBUT0RPOiBkb24ndCByZXR1cm4gYW55dGhpbmcgZnJvbSBleGVjdXRlLCBpdCdzIHVnbHkgYW5kIGVycm9yLXByb25lLiBMaXN0ZW4gZm9yICdlbmQnIGV2ZW50IGluIGNvbm5lY3Rpb25cbiAgICB0aGlzLm5leHQgPSB0aGlzLm5leHQocGFja2V0LCBjb25uZWN0aW9uKTtcbiAgICBpZiAodGhpcy5uZXh0KSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfSBcbiAgICB0aGlzLmVtaXQoJ2VuZCcpO1xuICAgIHJldHVybiB0cnVlO1xuICAgIFxuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gQ29tbWFuZDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/commands/command.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/commands/execute.js":
/*!*****************************************************!*\
  !*** ./node_modules/mysql2/lib/commands/execute.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst Command = __webpack_require__(/*! ./command.js */ \"(rsc)/./node_modules/mysql2/lib/commands/command.js\");\nconst Query = __webpack_require__(/*! ./query.js */ \"(rsc)/./node_modules/mysql2/lib/commands/query.js\");\nconst Packets = __webpack_require__(/*! ../packets/index.js */ \"(rsc)/./node_modules/mysql2/lib/packets/index.js\");\n\nconst getBinaryParser = __webpack_require__(/*! ../parsers/binary_parser.js */ \"(rsc)/./node_modules/mysql2/lib/parsers/binary_parser.js\");\n\nclass Execute extends Command {\n  constructor(options, callback) {\n    super();\n    this.statement = options.statement;\n    this.sql = options.sql;\n    this.values = options.values;\n    this.onResult = callback;\n    this.parameters = options.values;\n    this.insertId = 0;\n    this.timeout = options.timeout;\n    this.queryTimeout = null;\n    this._rows = [];\n    this._fields = [];\n    this._result = [];\n    this._fieldCount = 0;\n    this._rowParser = null;\n    this._executeOptions = options;\n    this._resultIndex = 0;\n    this._localStream = null;\n    this._unpipeStream = function() {};\n    this._streamFactory = options.infileStreamFactory;\n    this._connection = null;\n  }\n\n  buildParserFromFields(fields, connection) {\n    return getBinaryParser(fields, this.options, connection.config);\n  }\n\n  start(packet, connection) {\n    this._connection = connection;\n    this.options = Object.assign({}, connection.config, this._executeOptions);\n    this._setTimeout();\n    const executePacket = new Packets.Execute(\n      this.statement.id,\n      this.parameters,\n      connection.config.charsetNumber,\n      connection.config.timezone\n    );\n    //For reasons why this try-catch is here, please see\n    // https://github.com/sidorares/node-mysql2/pull/689\n    //For additional discussion, see\n    // 1. https://github.com/sidorares/node-mysql2/issues/493\n    // 2. https://github.com/sidorares/node-mysql2/issues/187\n    // 3. https://github.com/sidorares/node-mysql2/issues/480\n    try {\n      connection.writePacket(executePacket.toPacket(1));\n    } catch (error) {\n      this.onResult(error);\n    }\n    return Execute.prototype.resultsetHeader;\n  }\n\n  readField(packet, connection) {\n    let fields;\n    // disabling for now, but would be great to find reliable way to parse fields only once\n    // fields reported by prepare can be empty at all or just incorrect - see #169\n    //\n    // perfomance optimisation: if we already have this field parsed in statement header, use one from header\n    // const field = this.statement.columns.length == this._fieldCount ?\n    //  this.statement.columns[this._receivedFieldsCount] : new Packets.ColumnDefinition(packet);\n    const field = new Packets.ColumnDefinition(\n      packet,\n      connection.clientEncoding\n    );\n    this._receivedFieldsCount++;\n    this._fields[this._resultIndex].push(field);\n    if (this._receivedFieldsCount === this._fieldCount) {\n      fields = this._fields[this._resultIndex];\n      this.emit('fields', fields, this._resultIndex);\n      return Execute.prototype.fieldsEOF;\n    }\n    return Execute.prototype.readField;\n  }\n\n  fieldsEOF(packet, connection) {\n    // check EOF\n    if (!packet.isEOF()) {\n      return connection.protocolError('Expected EOF packet');\n    }\n    this._rowParser = new (this.buildParserFromFields(\n      this._fields[this._resultIndex],\n      connection\n    ))();\n    return Execute.prototype.row;\n  }\n}\n\nExecute.prototype.done = Query.prototype.done;\nExecute.prototype.doneInsert = Query.prototype.doneInsert;\nExecute.prototype.resultsetHeader = Query.prototype.resultsetHeader;\nExecute.prototype._findOrCreateReadStream =\n  Query.prototype._findOrCreateReadStream;\nExecute.prototype._streamLocalInfile = Query.prototype._streamLocalInfile;\nExecute.prototype._setTimeout = Query.prototype._setTimeout;\nExecute.prototype._handleTimeoutError = Query.prototype._handleTimeoutError;\nExecute.prototype.row = Query.prototype.row;\nExecute.prototype.stream = Query.prototype.stream;\n\nmodule.exports = Execute;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb21tYW5kcy9leGVjdXRlLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLGdCQUFnQixtQkFBTyxDQUFDLHlFQUFjO0FBQ3RDLGNBQWMsbUJBQU8sQ0FBQyxxRUFBWTtBQUNsQyxnQkFBZ0IsbUJBQU8sQ0FBQyw2RUFBcUI7O0FBRTdDLHdCQUF3QixtQkFBTyxDQUFDLDZGQUE2Qjs7QUFFN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLG1DQUFtQztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JlYWxfZXN0YXRlLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvY29tbWFuZHMvZXhlY3V0ZS5qcz8wODE1Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgQ29tbWFuZCA9IHJlcXVpcmUoJy4vY29tbWFuZC5qcycpO1xuY29uc3QgUXVlcnkgPSByZXF1aXJlKCcuL3F1ZXJ5LmpzJyk7XG5jb25zdCBQYWNrZXRzID0gcmVxdWlyZSgnLi4vcGFja2V0cy9pbmRleC5qcycpO1xuXG5jb25zdCBnZXRCaW5hcnlQYXJzZXIgPSByZXF1aXJlKCcuLi9wYXJzZXJzL2JpbmFyeV9wYXJzZXIuanMnKTtcblxuY2xhc3MgRXhlY3V0ZSBleHRlbmRzIENvbW1hbmQge1xuICBjb25zdHJ1Y3RvcihvcHRpb25zLCBjYWxsYmFjaykge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5zdGF0ZW1lbnQgPSBvcHRpb25zLnN0YXRlbWVudDtcbiAgICB0aGlzLnNxbCA9IG9wdGlvbnMuc3FsO1xuICAgIHRoaXMudmFsdWVzID0gb3B0aW9ucy52YWx1ZXM7XG4gICAgdGhpcy5vblJlc3VsdCA9IGNhbGxiYWNrO1xuICAgIHRoaXMucGFyYW1ldGVycyA9IG9wdGlvbnMudmFsdWVzO1xuICAgIHRoaXMuaW5zZXJ0SWQgPSAwO1xuICAgIHRoaXMudGltZW91dCA9IG9wdGlvbnMudGltZW91dDtcbiAgICB0aGlzLnF1ZXJ5VGltZW91dCA9IG51bGw7XG4gICAgdGhpcy5fcm93cyA9IFtdO1xuICAgIHRoaXMuX2ZpZWxkcyA9IFtdO1xuICAgIHRoaXMuX3Jlc3VsdCA9IFtdO1xuICAgIHRoaXMuX2ZpZWxkQ291bnQgPSAwO1xuICAgIHRoaXMuX3Jvd1BhcnNlciA9IG51bGw7XG4gICAgdGhpcy5fZXhlY3V0ZU9wdGlvbnMgPSBvcHRpb25zO1xuICAgIHRoaXMuX3Jlc3VsdEluZGV4ID0gMDtcbiAgICB0aGlzLl9sb2NhbFN0cmVhbSA9IG51bGw7XG4gICAgdGhpcy5fdW5waXBlU3RyZWFtID0gZnVuY3Rpb24oKSB7fTtcbiAgICB0aGlzLl9zdHJlYW1GYWN0b3J5ID0gb3B0aW9ucy5pbmZpbGVTdHJlYW1GYWN0b3J5O1xuICAgIHRoaXMuX2Nvbm5lY3Rpb24gPSBudWxsO1xuICB9XG5cbiAgYnVpbGRQYXJzZXJGcm9tRmllbGRzKGZpZWxkcywgY29ubmVjdGlvbikge1xuICAgIHJldHVybiBnZXRCaW5hcnlQYXJzZXIoZmllbGRzLCB0aGlzLm9wdGlvbnMsIGNvbm5lY3Rpb24uY29uZmlnKTtcbiAgfVxuXG4gIHN0YXJ0KHBhY2tldCwgY29ubmVjdGlvbikge1xuICAgIHRoaXMuX2Nvbm5lY3Rpb24gPSBjb25uZWN0aW9uO1xuICAgIHRoaXMub3B0aW9ucyA9IE9iamVjdC5hc3NpZ24oe30sIGNvbm5lY3Rpb24uY29uZmlnLCB0aGlzLl9leGVjdXRlT3B0aW9ucyk7XG4gICAgdGhpcy5fc2V0VGltZW91dCgpO1xuICAgIGNvbnN0IGV4ZWN1dGVQYWNrZXQgPSBuZXcgUGFja2V0cy5FeGVjdXRlKFxuICAgICAgdGhpcy5zdGF0ZW1lbnQuaWQsXG4gICAgICB0aGlzLnBhcmFtZXRlcnMsXG4gICAgICBjb25uZWN0aW9uLmNvbmZpZy5jaGFyc2V0TnVtYmVyLFxuICAgICAgY29ubmVjdGlvbi5jb25maWcudGltZXpvbmVcbiAgICApO1xuICAgIC8vRm9yIHJlYXNvbnMgd2h5IHRoaXMgdHJ5LWNhdGNoIGlzIGhlcmUsIHBsZWFzZSBzZWVcbiAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vc2lkb3JhcmVzL25vZGUtbXlzcWwyL3B1bGwvNjg5XG4gICAgLy9Gb3IgYWRkaXRpb25hbCBkaXNjdXNzaW9uLCBzZWVcbiAgICAvLyAxLiBodHRwczovL2dpdGh1Yi5jb20vc2lkb3JhcmVzL25vZGUtbXlzcWwyL2lzc3Vlcy80OTNcbiAgICAvLyAyLiBodHRwczovL2dpdGh1Yi5jb20vc2lkb3JhcmVzL25vZGUtbXlzcWwyL2lzc3Vlcy8xODdcbiAgICAvLyAzLiBodHRwczovL2dpdGh1Yi5jb20vc2lkb3JhcmVzL25vZGUtbXlzcWwyL2lzc3Vlcy80ODBcbiAgICB0cnkge1xuICAgICAgY29ubmVjdGlvbi53cml0ZVBhY2tldChleGVjdXRlUGFja2V0LnRvUGFja2V0KDEpKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgdGhpcy5vblJlc3VsdChlcnJvcik7XG4gICAgfVxuICAgIHJldHVybiBFeGVjdXRlLnByb3RvdHlwZS5yZXN1bHRzZXRIZWFkZXI7XG4gIH1cblxuICByZWFkRmllbGQocGFja2V0LCBjb25uZWN0aW9uKSB7XG4gICAgbGV0IGZpZWxkcztcbiAgICAvLyBkaXNhYmxpbmcgZm9yIG5vdywgYnV0IHdvdWxkIGJlIGdyZWF0IHRvIGZpbmQgcmVsaWFibGUgd2F5IHRvIHBhcnNlIGZpZWxkcyBvbmx5IG9uY2VcbiAgICAvLyBmaWVsZHMgcmVwb3J0ZWQgYnkgcHJlcGFyZSBjYW4gYmUgZW1wdHkgYXQgYWxsIG9yIGp1c3QgaW5jb3JyZWN0IC0gc2VlICMxNjlcbiAgICAvL1xuICAgIC8vIHBlcmZvbWFuY2Ugb3B0aW1pc2F0aW9uOiBpZiB3ZSBhbHJlYWR5IGhhdmUgdGhpcyBmaWVsZCBwYXJzZWQgaW4gc3RhdGVtZW50IGhlYWRlciwgdXNlIG9uZSBmcm9tIGhlYWRlclxuICAgIC8vIGNvbnN0IGZpZWxkID0gdGhpcy5zdGF0ZW1lbnQuY29sdW1ucy5sZW5ndGggPT0gdGhpcy5fZmllbGRDb3VudCA/XG4gICAgLy8gIHRoaXMuc3RhdGVtZW50LmNvbHVtbnNbdGhpcy5fcmVjZWl2ZWRGaWVsZHNDb3VudF0gOiBuZXcgUGFja2V0cy5Db2x1bW5EZWZpbml0aW9uKHBhY2tldCk7XG4gICAgY29uc3QgZmllbGQgPSBuZXcgUGFja2V0cy5Db2x1bW5EZWZpbml0aW9uKFxuICAgICAgcGFja2V0LFxuICAgICAgY29ubmVjdGlvbi5jbGllbnRFbmNvZGluZ1xuICAgICk7XG4gICAgdGhpcy5fcmVjZWl2ZWRGaWVsZHNDb3VudCsrO1xuICAgIHRoaXMuX2ZpZWxkc1t0aGlzLl9yZXN1bHRJbmRleF0ucHVzaChmaWVsZCk7XG4gICAgaWYgKHRoaXMuX3JlY2VpdmVkRmllbGRzQ291bnQgPT09IHRoaXMuX2ZpZWxkQ291bnQpIHtcbiAgICAgIGZpZWxkcyA9IHRoaXMuX2ZpZWxkc1t0aGlzLl9yZXN1bHRJbmRleF07XG4gICAgICB0aGlzLmVtaXQoJ2ZpZWxkcycsIGZpZWxkcywgdGhpcy5fcmVzdWx0SW5kZXgpO1xuICAgICAgcmV0dXJuIEV4ZWN1dGUucHJvdG90eXBlLmZpZWxkc0VPRjtcbiAgICB9XG4gICAgcmV0dXJuIEV4ZWN1dGUucHJvdG90eXBlLnJlYWRGaWVsZDtcbiAgfVxuXG4gIGZpZWxkc0VPRihwYWNrZXQsIGNvbm5lY3Rpb24pIHtcbiAgICAvLyBjaGVjayBFT0ZcbiAgICBpZiAoIXBhY2tldC5pc0VPRigpKSB7XG4gICAgICByZXR1cm4gY29ubmVjdGlvbi5wcm90b2NvbEVycm9yKCdFeHBlY3RlZCBFT0YgcGFja2V0Jyk7XG4gICAgfVxuICAgIHRoaXMuX3Jvd1BhcnNlciA9IG5ldyAodGhpcy5idWlsZFBhcnNlckZyb21GaWVsZHMoXG4gICAgICB0aGlzLl9maWVsZHNbdGhpcy5fcmVzdWx0SW5kZXhdLFxuICAgICAgY29ubmVjdGlvblxuICAgICkpKCk7XG4gICAgcmV0dXJuIEV4ZWN1dGUucHJvdG90eXBlLnJvdztcbiAgfVxufVxuXG5FeGVjdXRlLnByb3RvdHlwZS5kb25lID0gUXVlcnkucHJvdG90eXBlLmRvbmU7XG5FeGVjdXRlLnByb3RvdHlwZS5kb25lSW5zZXJ0ID0gUXVlcnkucHJvdG90eXBlLmRvbmVJbnNlcnQ7XG5FeGVjdXRlLnByb3RvdHlwZS5yZXN1bHRzZXRIZWFkZXIgPSBRdWVyeS5wcm90b3R5cGUucmVzdWx0c2V0SGVhZGVyO1xuRXhlY3V0ZS5wcm90b3R5cGUuX2ZpbmRPckNyZWF0ZVJlYWRTdHJlYW0gPVxuICBRdWVyeS5wcm90b3R5cGUuX2ZpbmRPckNyZWF0ZVJlYWRTdHJlYW07XG5FeGVjdXRlLnByb3RvdHlwZS5fc3RyZWFtTG9jYWxJbmZpbGUgPSBRdWVyeS5wcm90b3R5cGUuX3N0cmVhbUxvY2FsSW5maWxlO1xuRXhlY3V0ZS5wcm90b3R5cGUuX3NldFRpbWVvdXQgPSBRdWVyeS5wcm90b3R5cGUuX3NldFRpbWVvdXQ7XG5FeGVjdXRlLnByb3RvdHlwZS5faGFuZGxlVGltZW91dEVycm9yID0gUXVlcnkucHJvdG90eXBlLl9oYW5kbGVUaW1lb3V0RXJyb3I7XG5FeGVjdXRlLnByb3RvdHlwZS5yb3cgPSBRdWVyeS5wcm90b3R5cGUucm93O1xuRXhlY3V0ZS5wcm90b3R5cGUuc3RyZWFtID0gUXVlcnkucHJvdG90eXBlLnN0cmVhbTtcblxubW9kdWxlLmV4cG9ydHMgPSBFeGVjdXRlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/commands/execute.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/commands/index.js":
/*!***************************************************!*\
  !*** ./node_modules/mysql2/lib/commands/index.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst ClientHandshake = __webpack_require__(/*! ./client_handshake.js */ \"(rsc)/./node_modules/mysql2/lib/commands/client_handshake.js\");\nconst ServerHandshake = __webpack_require__(/*! ./server_handshake.js */ \"(rsc)/./node_modules/mysql2/lib/commands/server_handshake.js\");\nconst Query = __webpack_require__(/*! ./query.js */ \"(rsc)/./node_modules/mysql2/lib/commands/query.js\");\nconst Prepare = __webpack_require__(/*! ./prepare.js */ \"(rsc)/./node_modules/mysql2/lib/commands/prepare.js\");\nconst CloseStatement = __webpack_require__(/*! ./close_statement.js */ \"(rsc)/./node_modules/mysql2/lib/commands/close_statement.js\");\nconst Execute = __webpack_require__(/*! ./execute.js */ \"(rsc)/./node_modules/mysql2/lib/commands/execute.js\");\nconst Ping = __webpack_require__(/*! ./ping.js */ \"(rsc)/./node_modules/mysql2/lib/commands/ping.js\");\nconst RegisterSlave = __webpack_require__(/*! ./register_slave.js */ \"(rsc)/./node_modules/mysql2/lib/commands/register_slave.js\");\nconst BinlogDump = __webpack_require__(/*! ./binlog_dump.js */ \"(rsc)/./node_modules/mysql2/lib/commands/binlog_dump.js\");\nconst ChangeUser = __webpack_require__(/*! ./change_user.js */ \"(rsc)/./node_modules/mysql2/lib/commands/change_user.js\");\nconst Quit = __webpack_require__(/*! ./quit.js */ \"(rsc)/./node_modules/mysql2/lib/commands/quit.js\");\n\nmodule.exports = {\n  ClientHandshake,\n  ServerHandshake,\n  Query,\n  Prepare,\n  CloseStatement,\n  Execute,\n  Ping,\n  RegisterSlave,\n  BinlogDump,\n  ChangeUser,\n  Quit\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb21tYW5kcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYix3QkFBd0IsbUJBQU8sQ0FBQywyRkFBdUI7QUFDdkQsd0JBQXdCLG1CQUFPLENBQUMsMkZBQXVCO0FBQ3ZELGNBQWMsbUJBQU8sQ0FBQyxxRUFBWTtBQUNsQyxnQkFBZ0IsbUJBQU8sQ0FBQyx5RUFBYztBQUN0Qyx1QkFBdUIsbUJBQU8sQ0FBQyx5RkFBc0I7QUFDckQsZ0JBQWdCLG1CQUFPLENBQUMseUVBQWM7QUFDdEMsYUFBYSxtQkFBTyxDQUFDLG1FQUFXO0FBQ2hDLHNCQUFzQixtQkFBTyxDQUFDLHVGQUFxQjtBQUNuRCxtQkFBbUIsbUJBQU8sQ0FBQyxpRkFBa0I7QUFDN0MsbUJBQW1CLG1CQUFPLENBQUMsaUZBQWtCO0FBQzdDLGFBQWEsbUJBQU8sQ0FBQyxtRUFBVzs7QUFFaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZWFsX2VzdGF0ZS8uL25vZGVfbW9kdWxlcy9teXNxbDIvbGliL2NvbW1hbmRzL2luZGV4LmpzP2UyYjIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBDbGllbnRIYW5kc2hha2UgPSByZXF1aXJlKCcuL2NsaWVudF9oYW5kc2hha2UuanMnKTtcbmNvbnN0IFNlcnZlckhhbmRzaGFrZSA9IHJlcXVpcmUoJy4vc2VydmVyX2hhbmRzaGFrZS5qcycpO1xuY29uc3QgUXVlcnkgPSByZXF1aXJlKCcuL3F1ZXJ5LmpzJyk7XG5jb25zdCBQcmVwYXJlID0gcmVxdWlyZSgnLi9wcmVwYXJlLmpzJyk7XG5jb25zdCBDbG9zZVN0YXRlbWVudCA9IHJlcXVpcmUoJy4vY2xvc2Vfc3RhdGVtZW50LmpzJyk7XG5jb25zdCBFeGVjdXRlID0gcmVxdWlyZSgnLi9leGVjdXRlLmpzJyk7XG5jb25zdCBQaW5nID0gcmVxdWlyZSgnLi9waW5nLmpzJyk7XG5jb25zdCBSZWdpc3RlclNsYXZlID0gcmVxdWlyZSgnLi9yZWdpc3Rlcl9zbGF2ZS5qcycpO1xuY29uc3QgQmlubG9nRHVtcCA9IHJlcXVpcmUoJy4vYmlubG9nX2R1bXAuanMnKTtcbmNvbnN0IENoYW5nZVVzZXIgPSByZXF1aXJlKCcuL2NoYW5nZV91c2VyLmpzJyk7XG5jb25zdCBRdWl0ID0gcmVxdWlyZSgnLi9xdWl0LmpzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBDbGllbnRIYW5kc2hha2UsXG4gIFNlcnZlckhhbmRzaGFrZSxcbiAgUXVlcnksXG4gIFByZXBhcmUsXG4gIENsb3NlU3RhdGVtZW50LFxuICBFeGVjdXRlLFxuICBQaW5nLFxuICBSZWdpc3RlclNsYXZlLFxuICBCaW5sb2dEdW1wLFxuICBDaGFuZ2VVc2VyLFxuICBRdWl0XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/commands/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/commands/ping.js":
/*!**************************************************!*\
  !*** ./node_modules/mysql2/lib/commands/ping.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst Command = __webpack_require__(/*! ./command */ \"(rsc)/./node_modules/mysql2/lib/commands/command.js\");\nconst CommandCode = __webpack_require__(/*! ../constants/commands */ \"(rsc)/./node_modules/mysql2/lib/constants/commands.js\");\nconst Packet = __webpack_require__(/*! ../packets/packet */ \"(rsc)/./node_modules/mysql2/lib/packets/packet.js\");\n\n// TODO: time statistics?\n// usefull for queue size and network latency monitoring\n// store created,sent,reply timestamps\nclass Ping extends Command {\n  constructor(callback) {\n    super();\n    this.onResult = callback;\n  }\n\n  start(packet, connection) {\n    const ping = new Packet(\n      0,\n      Buffer.from([1, 0, 0, 0, CommandCode.PING]),\n      0,\n      5\n    );\n    connection.writePacket(ping);\n    return Ping.prototype.pingResponse;\n  }\n\n  pingResponse() {\n    // TODO: check it's OK packet. error check already done in caller\n    if (this.onResult) {\n      process.nextTick(this.onResult.bind(this));\n    }\n    return null;\n  }\n}\n\nmodule.exports = Ping;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb21tYW5kcy9waW5nLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLGdCQUFnQixtQkFBTyxDQUFDLHNFQUFXO0FBQ25DLG9CQUFvQixtQkFBTyxDQUFDLG9GQUF1QjtBQUNuRCxlQUFlLG1CQUFPLENBQUMsNEVBQW1COztBQUUxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZWFsX2VzdGF0ZS8uL25vZGVfbW9kdWxlcy9teXNxbDIvbGliL2NvbW1hbmRzL3BpbmcuanM/NDU3NiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IENvbW1hbmQgPSByZXF1aXJlKCcuL2NvbW1hbmQnKTtcbmNvbnN0IENvbW1hbmRDb2RlID0gcmVxdWlyZSgnLi4vY29uc3RhbnRzL2NvbW1hbmRzJyk7XG5jb25zdCBQYWNrZXQgPSByZXF1aXJlKCcuLi9wYWNrZXRzL3BhY2tldCcpO1xuXG4vLyBUT0RPOiB0aW1lIHN0YXRpc3RpY3M/XG4vLyB1c2VmdWxsIGZvciBxdWV1ZSBzaXplIGFuZCBuZXR3b3JrIGxhdGVuY3kgbW9uaXRvcmluZ1xuLy8gc3RvcmUgY3JlYXRlZCxzZW50LHJlcGx5IHRpbWVzdGFtcHNcbmNsYXNzIFBpbmcgZXh0ZW5kcyBDb21tYW5kIHtcbiAgY29uc3RydWN0b3IoY2FsbGJhY2spIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMub25SZXN1bHQgPSBjYWxsYmFjaztcbiAgfVxuXG4gIHN0YXJ0KHBhY2tldCwgY29ubmVjdGlvbikge1xuICAgIGNvbnN0IHBpbmcgPSBuZXcgUGFja2V0KFxuICAgICAgMCxcbiAgICAgIEJ1ZmZlci5mcm9tKFsxLCAwLCAwLCAwLCBDb21tYW5kQ29kZS5QSU5HXSksXG4gICAgICAwLFxuICAgICAgNVxuICAgICk7XG4gICAgY29ubmVjdGlvbi53cml0ZVBhY2tldChwaW5nKTtcbiAgICByZXR1cm4gUGluZy5wcm90b3R5cGUucGluZ1Jlc3BvbnNlO1xuICB9XG5cbiAgcGluZ1Jlc3BvbnNlKCkge1xuICAgIC8vIFRPRE86IGNoZWNrIGl0J3MgT0sgcGFja2V0LiBlcnJvciBjaGVjayBhbHJlYWR5IGRvbmUgaW4gY2FsbGVyXG4gICAgaWYgKHRoaXMub25SZXN1bHQpIHtcbiAgICAgIHByb2Nlc3MubmV4dFRpY2sodGhpcy5vblJlc3VsdC5iaW5kKHRoaXMpKTtcbiAgICB9XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBQaW5nO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/commands/ping.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/commands/prepare.js":
/*!*****************************************************!*\
  !*** ./node_modules/mysql2/lib/commands/prepare.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst Packets = __webpack_require__(/*! ../packets/index.js */ \"(rsc)/./node_modules/mysql2/lib/packets/index.js\");\nconst Command = __webpack_require__(/*! ./command.js */ \"(rsc)/./node_modules/mysql2/lib/commands/command.js\");\nconst CloseStatement = __webpack_require__(/*! ./close_statement.js */ \"(rsc)/./node_modules/mysql2/lib/commands/close_statement.js\");\nconst Execute = __webpack_require__(/*! ./execute.js */ \"(rsc)/./node_modules/mysql2/lib/commands/execute.js\");\n\nclass PreparedStatementInfo {\n  constructor(query, id, columns, parameters, connection) {\n    this.query = query;\n    this.id = id;\n    this.columns = columns;\n    this.parameters = parameters;\n    this.rowParser = null;\n    this._connection = connection;\n  }\n\n  close() {\n    return this._connection.addCommand(new CloseStatement(this.id));\n  }\n\n  execute(parameters, callback) {\n    if (typeof parameters === 'function') {\n      callback = parameters;\n      parameters = [];\n    }\n    return this._connection.addCommand(\n      new Execute({ statement: this, values: parameters }, callback)\n    );\n  }\n}\n\nclass Prepare extends Command {\n  constructor(options, callback) {\n    super();\n    this.query = options.sql;\n    this.onResult = callback;\n    this.id = 0;\n    this.fieldCount = 0;\n    this.parameterCount = 0;\n    this.fields = [];\n    this.parameterDefinitions = [];\n    this.options = options;\n  }\n\n  start(packet, connection) {\n    const Connection = connection.constructor;\n    this.key = Connection.statementKey(this.options);\n    const statement = connection._statements.get(this.key);\n    if (statement) {\n      if (this.onResult) {\n        this.onResult(null, statement);\n      }\n      return null;\n    }\n    const cmdPacket = new Packets.PrepareStatement(\n      this.query,\n      connection.config.charsetNumber,\n      this.options.values\n    );\n    connection.writePacket(cmdPacket.toPacket(1));\n    return Prepare.prototype.prepareHeader;\n  }\n\n  prepareHeader(packet, connection) {\n    const header = new Packets.PreparedStatementHeader(packet);\n    this.id = header.id;\n    this.fieldCount = header.fieldCount;\n    this.parameterCount = header.parameterCount;\n    if (this.parameterCount > 0) {\n      return Prepare.prototype.readParameter;\n    } if (this.fieldCount > 0) {\n      return Prepare.prototype.readField;\n    } \n    return this.prepareDone(connection);\n  }\n\n  readParameter(packet, connection) {\n    // there might be scenarios when mysql server reports more parameters than\n    // are actually present in the array of parameter definitions.\n    // if EOF packet is received we switch to \"read fields\" state if there are\n    // any fields reported by the server, otherwise we finish the command.\n    if (packet.isEOF()) {\n      if (this.fieldCount > 0) {\n        return Prepare.prototype.readField;\n      }\n      return this.prepareDone(connection);\n    }\n    const def = new Packets.ColumnDefinition(packet, connection.clientEncoding);\n    this.parameterDefinitions.push(def);\n    if (this.parameterDefinitions.length === this.parameterCount) {\n      return Prepare.prototype.parametersEOF;\n    }\n    return this.readParameter;\n  }\n\n  readField(packet, connection) {\n    if (packet.isEOF()) {\n      return this.prepareDone(connection);\n    }\n    const def = new Packets.ColumnDefinition(packet, connection.clientEncoding);\n    this.fields.push(def);\n    if (this.fields.length === this.fieldCount) {\n      return Prepare.prototype.fieldsEOF;\n    }\n    return Prepare.prototype.readField;\n  }\n\n  parametersEOF(packet, connection) {\n    if (!packet.isEOF()) {\n      return connection.protocolError('Expected EOF packet after parameters');\n    }\n    if (this.fieldCount > 0) {\n      return Prepare.prototype.readField;\n    } \n    return this.prepareDone(connection);\n    \n  }\n\n  fieldsEOF(packet, connection) {\n    if (!packet.isEOF()) {\n      return connection.protocolError('Expected EOF packet after fields');\n    }\n    return this.prepareDone(connection);\n  }\n\n  prepareDone(connection) {\n    const statement = new PreparedStatementInfo(\n      this.query,\n      this.id,\n      this.fields,\n      this.parameterDefinitions,\n      connection\n    );\n    connection._statements.set(this.key, statement);\n    if (this.onResult) {\n      this.onResult(null, statement);\n    }\n    return null;\n  }\n}\n\nmodule.exports = Prepare;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb21tYW5kcy9wcmVwYXJlLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLGdCQUFnQixtQkFBTyxDQUFDLDZFQUFxQjtBQUM3QyxnQkFBZ0IsbUJBQU8sQ0FBQyx5RUFBYztBQUN0Qyx1QkFBdUIsbUJBQU8sQ0FBQyx5RkFBc0I7QUFDckQsZ0JBQWdCLG1CQUFPLENBQUMseUVBQWM7O0FBRXRDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHFDQUFxQztBQUN6RDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVhbF9lc3RhdGUvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb21tYW5kcy9wcmVwYXJlLmpzPzk1ZjAiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBQYWNrZXRzID0gcmVxdWlyZSgnLi4vcGFja2V0cy9pbmRleC5qcycpO1xuY29uc3QgQ29tbWFuZCA9IHJlcXVpcmUoJy4vY29tbWFuZC5qcycpO1xuY29uc3QgQ2xvc2VTdGF0ZW1lbnQgPSByZXF1aXJlKCcuL2Nsb3NlX3N0YXRlbWVudC5qcycpO1xuY29uc3QgRXhlY3V0ZSA9IHJlcXVpcmUoJy4vZXhlY3V0ZS5qcycpO1xuXG5jbGFzcyBQcmVwYXJlZFN0YXRlbWVudEluZm8ge1xuICBjb25zdHJ1Y3RvcihxdWVyeSwgaWQsIGNvbHVtbnMsIHBhcmFtZXRlcnMsIGNvbm5lY3Rpb24pIHtcbiAgICB0aGlzLnF1ZXJ5ID0gcXVlcnk7XG4gICAgdGhpcy5pZCA9IGlkO1xuICAgIHRoaXMuY29sdW1ucyA9IGNvbHVtbnM7XG4gICAgdGhpcy5wYXJhbWV0ZXJzID0gcGFyYW1ldGVycztcbiAgICB0aGlzLnJvd1BhcnNlciA9IG51bGw7XG4gICAgdGhpcy5fY29ubmVjdGlvbiA9IGNvbm5lY3Rpb247XG4gIH1cblxuICBjbG9zZSgpIHtcbiAgICByZXR1cm4gdGhpcy5fY29ubmVjdGlvbi5hZGRDb21tYW5kKG5ldyBDbG9zZVN0YXRlbWVudCh0aGlzLmlkKSk7XG4gIH1cblxuICBleGVjdXRlKHBhcmFtZXRlcnMsIGNhbGxiYWNrKSB7XG4gICAgaWYgKHR5cGVvZiBwYXJhbWV0ZXJzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICBjYWxsYmFjayA9IHBhcmFtZXRlcnM7XG4gICAgICBwYXJhbWV0ZXJzID0gW107XG4gICAgfVxuICAgIHJldHVybiB0aGlzLl9jb25uZWN0aW9uLmFkZENvbW1hbmQoXG4gICAgICBuZXcgRXhlY3V0ZSh7IHN0YXRlbWVudDogdGhpcywgdmFsdWVzOiBwYXJhbWV0ZXJzIH0sIGNhbGxiYWNrKVxuICAgICk7XG4gIH1cbn1cblxuY2xhc3MgUHJlcGFyZSBleHRlbmRzIENvbW1hbmQge1xuICBjb25zdHJ1Y3RvcihvcHRpb25zLCBjYWxsYmFjaykge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5xdWVyeSA9IG9wdGlvbnMuc3FsO1xuICAgIHRoaXMub25SZXN1bHQgPSBjYWxsYmFjaztcbiAgICB0aGlzLmlkID0gMDtcbiAgICB0aGlzLmZpZWxkQ291bnQgPSAwO1xuICAgIHRoaXMucGFyYW1ldGVyQ291bnQgPSAwO1xuICAgIHRoaXMuZmllbGRzID0gW107XG4gICAgdGhpcy5wYXJhbWV0ZXJEZWZpbml0aW9ucyA9IFtdO1xuICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG4gIH1cblxuICBzdGFydChwYWNrZXQsIGNvbm5lY3Rpb24pIHtcbiAgICBjb25zdCBDb25uZWN0aW9uID0gY29ubmVjdGlvbi5jb25zdHJ1Y3RvcjtcbiAgICB0aGlzLmtleSA9IENvbm5lY3Rpb24uc3RhdGVtZW50S2V5KHRoaXMub3B0aW9ucyk7XG4gICAgY29uc3Qgc3RhdGVtZW50ID0gY29ubmVjdGlvbi5fc3RhdGVtZW50cy5nZXQodGhpcy5rZXkpO1xuICAgIGlmIChzdGF0ZW1lbnQpIHtcbiAgICAgIGlmICh0aGlzLm9uUmVzdWx0KSB7XG4gICAgICAgIHRoaXMub25SZXN1bHQobnVsbCwgc3RhdGVtZW50KTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICBjb25zdCBjbWRQYWNrZXQgPSBuZXcgUGFja2V0cy5QcmVwYXJlU3RhdGVtZW50KFxuICAgICAgdGhpcy5xdWVyeSxcbiAgICAgIGNvbm5lY3Rpb24uY29uZmlnLmNoYXJzZXROdW1iZXIsXG4gICAgICB0aGlzLm9wdGlvbnMudmFsdWVzXG4gICAgKTtcbiAgICBjb25uZWN0aW9uLndyaXRlUGFja2V0KGNtZFBhY2tldC50b1BhY2tldCgxKSk7XG4gICAgcmV0dXJuIFByZXBhcmUucHJvdG90eXBlLnByZXBhcmVIZWFkZXI7XG4gIH1cblxuICBwcmVwYXJlSGVhZGVyKHBhY2tldCwgY29ubmVjdGlvbikge1xuICAgIGNvbnN0IGhlYWRlciA9IG5ldyBQYWNrZXRzLlByZXBhcmVkU3RhdGVtZW50SGVhZGVyKHBhY2tldCk7XG4gICAgdGhpcy5pZCA9IGhlYWRlci5pZDtcbiAgICB0aGlzLmZpZWxkQ291bnQgPSBoZWFkZXIuZmllbGRDb3VudDtcbiAgICB0aGlzLnBhcmFtZXRlckNvdW50ID0gaGVhZGVyLnBhcmFtZXRlckNvdW50O1xuICAgIGlmICh0aGlzLnBhcmFtZXRlckNvdW50ID4gMCkge1xuICAgICAgcmV0dXJuIFByZXBhcmUucHJvdG90eXBlLnJlYWRQYXJhbWV0ZXI7XG4gICAgfSBpZiAodGhpcy5maWVsZENvdW50ID4gMCkge1xuICAgICAgcmV0dXJuIFByZXBhcmUucHJvdG90eXBlLnJlYWRGaWVsZDtcbiAgICB9IFxuICAgIHJldHVybiB0aGlzLnByZXBhcmVEb25lKGNvbm5lY3Rpb24pO1xuICB9XG5cbiAgcmVhZFBhcmFtZXRlcihwYWNrZXQsIGNvbm5lY3Rpb24pIHtcbiAgICAvLyB0aGVyZSBtaWdodCBiZSBzY2VuYXJpb3Mgd2hlbiBteXNxbCBzZXJ2ZXIgcmVwb3J0cyBtb3JlIHBhcmFtZXRlcnMgdGhhblxuICAgIC8vIGFyZSBhY3R1YWxseSBwcmVzZW50IGluIHRoZSBhcnJheSBvZiBwYXJhbWV0ZXIgZGVmaW5pdGlvbnMuXG4gICAgLy8gaWYgRU9GIHBhY2tldCBpcyByZWNlaXZlZCB3ZSBzd2l0Y2ggdG8gXCJyZWFkIGZpZWxkc1wiIHN0YXRlIGlmIHRoZXJlIGFyZVxuICAgIC8vIGFueSBmaWVsZHMgcmVwb3J0ZWQgYnkgdGhlIHNlcnZlciwgb3RoZXJ3aXNlIHdlIGZpbmlzaCB0aGUgY29tbWFuZC5cbiAgICBpZiAocGFja2V0LmlzRU9GKCkpIHtcbiAgICAgIGlmICh0aGlzLmZpZWxkQ291bnQgPiAwKSB7XG4gICAgICAgIHJldHVybiBQcmVwYXJlLnByb3RvdHlwZS5yZWFkRmllbGQ7XG4gICAgICB9XG4gICAgICByZXR1cm4gdGhpcy5wcmVwYXJlRG9uZShjb25uZWN0aW9uKTtcbiAgICB9XG4gICAgY29uc3QgZGVmID0gbmV3IFBhY2tldHMuQ29sdW1uRGVmaW5pdGlvbihwYWNrZXQsIGNvbm5lY3Rpb24uY2xpZW50RW5jb2RpbmcpO1xuICAgIHRoaXMucGFyYW1ldGVyRGVmaW5pdGlvbnMucHVzaChkZWYpO1xuICAgIGlmICh0aGlzLnBhcmFtZXRlckRlZmluaXRpb25zLmxlbmd0aCA9PT0gdGhpcy5wYXJhbWV0ZXJDb3VudCkge1xuICAgICAgcmV0dXJuIFByZXBhcmUucHJvdG90eXBlLnBhcmFtZXRlcnNFT0Y7XG4gICAgfVxuICAgIHJldHVybiB0aGlzLnJlYWRQYXJhbWV0ZXI7XG4gIH1cblxuICByZWFkRmllbGQocGFja2V0LCBjb25uZWN0aW9uKSB7XG4gICAgaWYgKHBhY2tldC5pc0VPRigpKSB7XG4gICAgICByZXR1cm4gdGhpcy5wcmVwYXJlRG9uZShjb25uZWN0aW9uKTtcbiAgICB9XG4gICAgY29uc3QgZGVmID0gbmV3IFBhY2tldHMuQ29sdW1uRGVmaW5pdGlvbihwYWNrZXQsIGNvbm5lY3Rpb24uY2xpZW50RW5jb2RpbmcpO1xuICAgIHRoaXMuZmllbGRzLnB1c2goZGVmKTtcbiAgICBpZiAodGhpcy5maWVsZHMubGVuZ3RoID09PSB0aGlzLmZpZWxkQ291bnQpIHtcbiAgICAgIHJldHVybiBQcmVwYXJlLnByb3RvdHlwZS5maWVsZHNFT0Y7XG4gICAgfVxuICAgIHJldHVybiBQcmVwYXJlLnByb3RvdHlwZS5yZWFkRmllbGQ7XG4gIH1cblxuICBwYXJhbWV0ZXJzRU9GKHBhY2tldCwgY29ubmVjdGlvbikge1xuICAgIGlmICghcGFja2V0LmlzRU9GKCkpIHtcbiAgICAgIHJldHVybiBjb25uZWN0aW9uLnByb3RvY29sRXJyb3IoJ0V4cGVjdGVkIEVPRiBwYWNrZXQgYWZ0ZXIgcGFyYW1ldGVycycpO1xuICAgIH1cbiAgICBpZiAodGhpcy5maWVsZENvdW50ID4gMCkge1xuICAgICAgcmV0dXJuIFByZXBhcmUucHJvdG90eXBlLnJlYWRGaWVsZDtcbiAgICB9IFxuICAgIHJldHVybiB0aGlzLnByZXBhcmVEb25lKGNvbm5lY3Rpb24pO1xuICAgIFxuICB9XG5cbiAgZmllbGRzRU9GKHBhY2tldCwgY29ubmVjdGlvbikge1xuICAgIGlmICghcGFja2V0LmlzRU9GKCkpIHtcbiAgICAgIHJldHVybiBjb25uZWN0aW9uLnByb3RvY29sRXJyb3IoJ0V4cGVjdGVkIEVPRiBwYWNrZXQgYWZ0ZXIgZmllbGRzJyk7XG4gICAgfVxuICAgIHJldHVybiB0aGlzLnByZXBhcmVEb25lKGNvbm5lY3Rpb24pO1xuICB9XG5cbiAgcHJlcGFyZURvbmUoY29ubmVjdGlvbikge1xuICAgIGNvbnN0IHN0YXRlbWVudCA9IG5ldyBQcmVwYXJlZFN0YXRlbWVudEluZm8oXG4gICAgICB0aGlzLnF1ZXJ5LFxuICAgICAgdGhpcy5pZCxcbiAgICAgIHRoaXMuZmllbGRzLFxuICAgICAgdGhpcy5wYXJhbWV0ZXJEZWZpbml0aW9ucyxcbiAgICAgIGNvbm5lY3Rpb25cbiAgICApO1xuICAgIGNvbm5lY3Rpb24uX3N0YXRlbWVudHMuc2V0KHRoaXMua2V5LCBzdGF0ZW1lbnQpO1xuICAgIGlmICh0aGlzLm9uUmVzdWx0KSB7XG4gICAgICB0aGlzLm9uUmVzdWx0KG51bGwsIHN0YXRlbWVudCk7XG4gICAgfVxuICAgIHJldHVybiBudWxsO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gUHJlcGFyZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/commands/prepare.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/commands/query.js":
/*!***************************************************!*\
  !*** ./node_modules/mysql2/lib/commands/query.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst process = __webpack_require__(/*! process */ \"process\");\nconst Timers = __webpack_require__(/*! timers */ \"timers\");\n\nconst Readable = (__webpack_require__(/*! stream */ \"stream\").Readable);\n\nconst Command = __webpack_require__(/*! ./command.js */ \"(rsc)/./node_modules/mysql2/lib/commands/command.js\");\nconst Packets = __webpack_require__(/*! ../packets/index.js */ \"(rsc)/./node_modules/mysql2/lib/packets/index.js\");\nconst getTextParser = __webpack_require__(/*! ../parsers/text_parser.js */ \"(rsc)/./node_modules/mysql2/lib/parsers/text_parser.js\");\nconst ServerStatus = __webpack_require__(/*! ../constants/server_status.js */ \"(rsc)/./node_modules/mysql2/lib/constants/server_status.js\");\n\nconst EmptyPacket = new Packets.Packet(0, Buffer.allocUnsafe(4), 0, 4);\n\n// http://dev.mysql.com/doc/internals/en/com-query.html\nclass Query extends Command {\n  constructor(options, callback) {\n    super();\n    this.sql = options.sql;\n    this.values = options.values;\n    this._queryOptions = options;\n    this.namedPlaceholders = options.namedPlaceholders || false;\n    this.onResult = callback;\n    this.timeout = options.timeout;\n    this.queryTimeout = null;\n    this._fieldCount = 0;\n    this._rowParser = null;\n    this._fields = [];\n    this._rows = [];\n    this._receivedFieldsCount = 0;\n    this._resultIndex = 0;\n    this._localStream = null;\n    this._unpipeStream = function () { };\n    this._streamFactory = options.infileStreamFactory;\n    this._connection = null;\n  }\n\n  then() {\n    const err =\n      \"You have tried to call .then(), .catch(), or invoked await on the result of query that is not a promise, which is a programming error. Try calling con.promise().query(), or require('mysql2/promise') instead of 'mysql2' for a promise-compatible version of the query interface. To learn how to use async/await or Promises check out documentation at https://sidorares.github.io/node-mysql2/docs#using-promise-wrapper, or the mysql2 documentation at https://sidorares.github.io/node-mysql2/docs/documentation/promise-wrapper\";\n    // eslint-disable-next-line\n    console.log(err);\n    throw new Error(err);\n  }\n\n  /* eslint no-unused-vars: [\"error\", { \"argsIgnorePattern\": \"^_\" }] */\n  start(_packet, connection) {\n    if (connection.config.debug) {\n      // eslint-disable-next-line\n      console.log('        Sending query command: %s', this.sql);\n    }\n    this._connection = connection;\n    this.options = Object.assign({}, connection.config, this._queryOptions);\n    this._setTimeout();\n\n    const cmdPacket = new Packets.Query(\n      this.sql,\n      connection.config.charsetNumber\n    );\n    connection.writePacket(cmdPacket.toPacket(1));\n    return Query.prototype.resultsetHeader;\n  }\n\n  done() {\n    this._unpipeStream();\n    // if all ready timeout, return null directly\n    if (this.timeout && !this.queryTimeout) {\n      return null;\n    }\n    // else clear timer\n    if (this.queryTimeout) {\n      Timers.clearTimeout(this.queryTimeout);\n      this.queryTimeout = null;\n    }\n    if (this.onResult) {\n      let rows, fields;\n      if (this._resultIndex === 0) {\n        rows = this._rows[0];\n        fields = this._fields[0];\n      } else {\n        rows = this._rows;\n        fields = this._fields;\n      }\n      if (fields) {\n        process.nextTick(() => {\n          this.onResult(null, rows, fields);\n        });\n      } else {\n        process.nextTick(() => {\n          this.onResult(null, rows);\n        });\n      }\n    }\n    return null;\n  }\n\n  doneInsert(rs) {\n    if (this._localStreamError) {\n      if (this.onResult) {\n        this.onResult(this._localStreamError, rs);\n      } else {\n        this.emit('error', this._localStreamError);\n      }\n      return null;\n    }\n    this._rows.push(rs);\n    this._fields.push(void 0);\n    this.emit('fields', void 0);\n    this.emit('result', rs);\n    if (rs.serverStatus & ServerStatus.SERVER_MORE_RESULTS_EXISTS) {\n      this._resultIndex++;\n      return this.resultsetHeader;\n    }\n    return this.done();\n  }\n\n  resultsetHeader(packet, connection) {\n    const rs = new Packets.ResultSetHeader(packet, connection);\n    this._fieldCount = rs.fieldCount;\n    if (connection.config.debug) {\n      // eslint-disable-next-line\n      console.log(\n        `        Resultset header received, expecting ${rs.fieldCount} column definition packets`\n      );\n    }\n    if (this._fieldCount === 0) {\n      return this.doneInsert(rs);\n    }\n    if (this._fieldCount === null) {\n      return this._streamLocalInfile(connection, rs.infileName);\n    }\n    this._receivedFieldsCount = 0;\n    this._rows.push([]);\n    this._fields.push([]);\n    return this.readField;\n  }\n\n  _streamLocalInfile(connection, path) {\n    if (this._streamFactory) {\n      this._localStream = this._streamFactory(path);\n    } else {\n      this._localStreamError = new Error(\n        `As a result of LOCAL INFILE command server wants to read ${path} file, but as of v2.0 you must provide streamFactory option returning ReadStream.`\n      );\n      connection.writePacket(EmptyPacket);\n      return this.infileOk;\n    }\n\n    const onConnectionError = () => {\n      this._unpipeStream();\n    };\n    const onDrain = () => {\n      this._localStream.resume();\n    };\n    const onPause = () => {\n      this._localStream.pause();\n    };\n    const onData = function (data) {\n      const dataWithHeader = Buffer.allocUnsafe(data.length + 4);\n      data.copy(dataWithHeader, 4);\n      connection.writePacket(\n        new Packets.Packet(0, dataWithHeader, 0, dataWithHeader.length)\n      );\n    };\n    const onEnd = () => {\n      connection.removeListener('error', onConnectionError);\n      connection.writePacket(EmptyPacket);\n    };\n    const onError = err => {\n      this._localStreamError = err;\n      connection.removeListener('error', onConnectionError);\n      connection.writePacket(EmptyPacket);\n    };\n    this._unpipeStream = () => {\n      connection.stream.removeListener('pause', onPause);\n      connection.stream.removeListener('drain', onDrain);\n      this._localStream.removeListener('data', onData);\n      this._localStream.removeListener('end', onEnd);\n      this._localStream.removeListener('error', onError);\n    };\n    connection.stream.on('pause', onPause);\n    connection.stream.on('drain', onDrain);\n    this._localStream.on('data', onData);\n    this._localStream.on('end', onEnd);\n    this._localStream.on('error', onError);\n    connection.once('error', onConnectionError);\n    return this.infileOk;\n  }\n\n  readField(packet, connection) {\n    this._receivedFieldsCount++;\n    // Often there is much more data in the column definition than in the row itself\n    // If you set manually _fields[0] to array of ColumnDefinition's (from previous call)\n    // you can 'cache' result of parsing. Field packets still received, but ignored in that case\n    // this is the reason _receivedFieldsCount exist (otherwise we could just use current length of fields array)\n    if (this._fields[this._resultIndex].length !== this._fieldCount) {\n      const field = new Packets.ColumnDefinition(\n        packet,\n        connection.clientEncoding\n      );\n      this._fields[this._resultIndex].push(field);\n      if (connection.config.debug) {\n        /* eslint-disable no-console */\n        console.log('        Column definition:');\n        console.log(`          name: ${field.name}`);\n        console.log(`          type: ${field.columnType}`);\n        console.log(`         flags: ${field.flags}`);\n        /* eslint-enable no-console */\n      }\n    }\n    // last field received\n    if (this._receivedFieldsCount === this._fieldCount) {\n      const fields = this._fields[this._resultIndex];\n      this.emit('fields', fields);\n      this._rowParser = new (getTextParser(fields, this.options, connection.config))(fields);\n      return Query.prototype.fieldsEOF;\n    }\n    return Query.prototype.readField;\n  }\n\n  fieldsEOF(packet, connection) {\n    // check EOF\n    if (!packet.isEOF()) {\n      return connection.protocolError('Expected EOF packet');\n    }\n    return this.row;\n  }\n\n  /* eslint no-unused-vars: [\"error\", { \"argsIgnorePattern\": \"^_\" }] */\n  row(packet, _connection) {\n    if (packet.isEOF()) {\n      const status = packet.eofStatusFlags();\n      const moreResults = status & ServerStatus.SERVER_MORE_RESULTS_EXISTS;\n      if (moreResults) {\n        this._resultIndex++;\n        return Query.prototype.resultsetHeader;\n      }\n      return this.done();\n    }\n    let row;\n    try {\n      row = this._rowParser.next(\n        packet,\n        this._fields[this._resultIndex],\n        this.options\n      );\n    } catch (err) {\n      this._localStreamError = err;\n      return this.doneInsert(null);\n    }\n    if (this.onResult) {\n      this._rows[this._resultIndex].push(row);\n    } else {\n      this.emit('result', row, this._resultIndex);\n    }\n    return Query.prototype.row;\n  }\n\n  infileOk(packet, connection) {\n    const rs = new Packets.ResultSetHeader(packet, connection);\n    return this.doneInsert(rs);\n  }\n\n  stream(options) {\n    options = options || {};\n    options.objectMode = true;\n    const stream = new Readable(options);\n    stream._read = () => {\n      this._connection && this._connection.resume();\n    };\n    this.on('result', (row, resultSetIndex) => {\n      if (!stream.push(row)) {\n        this._connection.pause();\n      }\n      stream.emit('result', row, resultSetIndex); // replicate old emitter\n    });\n    this.on('error', err => {\n      stream.emit('error', err); // Pass on any errors\n    });\n    this.on('end', () => {\n      stream.push(null); // pushing null, indicating EOF\n    });\n    this.on('fields', fields => {\n      stream.emit('fields', fields); // replicate old emitter\n    });\n    stream.on('end', () => {\n      stream.emit('close');\n    });\n    return stream;\n  }\n\n  _setTimeout() {\n    if (this.timeout) {\n      const timeoutHandler = this._handleTimeoutError.bind(this);\n      this.queryTimeout = Timers.setTimeout(\n        timeoutHandler,\n        this.timeout\n      );\n    }\n  }\n\n  _handleTimeoutError() {\n    if (this.queryTimeout) {\n      Timers.clearTimeout(this.queryTimeout);\n      this.queryTimeout = null;\n    }\n\n    const err = new Error('Query inactivity timeout');\n    err.errorno = 'PROTOCOL_SEQUENCE_TIMEOUT';\n    err.code = 'PROTOCOL_SEQUENCE_TIMEOUT';\n    err.syscall = 'query';\n\n    if (this.onResult) {\n      this.onResult(err);\n    } else {\n      this.emit('error', err);\n    }\n  }\n}\n\nQuery.prototype.catch = Query.prototype.then;\n\nmodule.exports = Query;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/commands/query.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/commands/quit.js":
/*!**************************************************!*\
  !*** ./node_modules/mysql2/lib/commands/quit.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst Command = __webpack_require__(/*! ./command.js */ \"(rsc)/./node_modules/mysql2/lib/commands/command.js\");\nconst CommandCode = __webpack_require__(/*! ../constants/commands.js */ \"(rsc)/./node_modules/mysql2/lib/constants/commands.js\");\nconst Packet = __webpack_require__(/*! ../packets/packet.js */ \"(rsc)/./node_modules/mysql2/lib/packets/packet.js\");\n\nclass Quit extends Command {\n  constructor(callback) {\n    super();\n    this.onResult = callback;\n  }\n\n  start(packet, connection) {\n    connection._closing = true;\n    const quit = new Packet(\n      0,\n      Buffer.from([1, 0, 0, 0, CommandCode.QUIT]),\n      0,\n      5\n    );\n    if (this.onResult) {\n      this.onResult();\n    }\n    connection.writePacket(quit);\n    return null;\n  }\n}\n\nmodule.exports = Quit;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb21tYW5kcy9xdWl0LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLGdCQUFnQixtQkFBTyxDQUFDLHlFQUFjO0FBQ3RDLG9CQUFvQixtQkFBTyxDQUFDLHVGQUEwQjtBQUN0RCxlQUFlLG1CQUFPLENBQUMsK0VBQXNCOztBQUU3QztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JlYWxfZXN0YXRlLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvY29tbWFuZHMvcXVpdC5qcz8xZWQ2Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgQ29tbWFuZCA9IHJlcXVpcmUoJy4vY29tbWFuZC5qcycpO1xuY29uc3QgQ29tbWFuZENvZGUgPSByZXF1aXJlKCcuLi9jb25zdGFudHMvY29tbWFuZHMuanMnKTtcbmNvbnN0IFBhY2tldCA9IHJlcXVpcmUoJy4uL3BhY2tldHMvcGFja2V0LmpzJyk7XG5cbmNsYXNzIFF1aXQgZXh0ZW5kcyBDb21tYW5kIHtcbiAgY29uc3RydWN0b3IoY2FsbGJhY2spIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMub25SZXN1bHQgPSBjYWxsYmFjaztcbiAgfVxuXG4gIHN0YXJ0KHBhY2tldCwgY29ubmVjdGlvbikge1xuICAgIGNvbm5lY3Rpb24uX2Nsb3NpbmcgPSB0cnVlO1xuICAgIGNvbnN0IHF1aXQgPSBuZXcgUGFja2V0KFxuICAgICAgMCxcbiAgICAgIEJ1ZmZlci5mcm9tKFsxLCAwLCAwLCAwLCBDb21tYW5kQ29kZS5RVUlUXSksXG4gICAgICAwLFxuICAgICAgNVxuICAgICk7XG4gICAgaWYgKHRoaXMub25SZXN1bHQpIHtcbiAgICAgIHRoaXMub25SZXN1bHQoKTtcbiAgICB9XG4gICAgY29ubmVjdGlvbi53cml0ZVBhY2tldChxdWl0KTtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IFF1aXQ7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/commands/quit.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/commands/register_slave.js":
/*!************************************************************!*\
  !*** ./node_modules/mysql2/lib/commands/register_slave.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst Command = __webpack_require__(/*! ./command */ \"(rsc)/./node_modules/mysql2/lib/commands/command.js\");\nconst Packets = __webpack_require__(/*! ../packets */ \"(rsc)/./node_modules/mysql2/lib/packets/index.js\");\n\nclass RegisterSlave extends Command {\n  constructor(opts, callback) {\n    super();\n    this.onResult = callback;\n    this.opts = opts;\n  }\n\n  start(packet, connection) {\n    const newPacket = new Packets.RegisterSlave(this.opts);\n    connection.writePacket(newPacket.toPacket(1));\n    return RegisterSlave.prototype.registerResponse;\n  }\n\n  registerResponse() {\n    if (this.onResult) {\n      process.nextTick(this.onResult.bind(this));\n    }\n    return null;\n  }\n}\n\nmodule.exports = RegisterSlave;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb21tYW5kcy9yZWdpc3Rlcl9zbGF2ZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixnQkFBZ0IsbUJBQU8sQ0FBQyxzRUFBVztBQUNuQyxnQkFBZ0IsbUJBQU8sQ0FBQyxvRUFBWTs7QUFFcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZWFsX2VzdGF0ZS8uL25vZGVfbW9kdWxlcy9teXNxbDIvbGliL2NvbW1hbmRzL3JlZ2lzdGVyX3NsYXZlLmpzPzFhNDkiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBDb21tYW5kID0gcmVxdWlyZSgnLi9jb21tYW5kJyk7XG5jb25zdCBQYWNrZXRzID0gcmVxdWlyZSgnLi4vcGFja2V0cycpO1xuXG5jbGFzcyBSZWdpc3RlclNsYXZlIGV4dGVuZHMgQ29tbWFuZCB7XG4gIGNvbnN0cnVjdG9yKG9wdHMsIGNhbGxiYWNrKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLm9uUmVzdWx0ID0gY2FsbGJhY2s7XG4gICAgdGhpcy5vcHRzID0gb3B0cztcbiAgfVxuXG4gIHN0YXJ0KHBhY2tldCwgY29ubmVjdGlvbikge1xuICAgIGNvbnN0IG5ld1BhY2tldCA9IG5ldyBQYWNrZXRzLlJlZ2lzdGVyU2xhdmUodGhpcy5vcHRzKTtcbiAgICBjb25uZWN0aW9uLndyaXRlUGFja2V0KG5ld1BhY2tldC50b1BhY2tldCgxKSk7XG4gICAgcmV0dXJuIFJlZ2lzdGVyU2xhdmUucHJvdG90eXBlLnJlZ2lzdGVyUmVzcG9uc2U7XG4gIH1cblxuICByZWdpc3RlclJlc3BvbnNlKCkge1xuICAgIGlmICh0aGlzLm9uUmVzdWx0KSB7XG4gICAgICBwcm9jZXNzLm5leHRUaWNrKHRoaXMub25SZXN1bHQuYmluZCh0aGlzKSk7XG4gICAgfVxuICAgIHJldHVybiBudWxsO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gUmVnaXN0ZXJTbGF2ZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/commands/register_slave.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/commands/server_handshake.js":
/*!**************************************************************!*\
  !*** ./node_modules/mysql2/lib/commands/server_handshake.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst CommandCode = __webpack_require__(/*! ../constants/commands.js */ \"(rsc)/./node_modules/mysql2/lib/constants/commands.js\");\nconst Errors = __webpack_require__(/*! ../constants/errors.js */ \"(rsc)/./node_modules/mysql2/lib/constants/errors.js\");\n\nconst Command = __webpack_require__(/*! ./command.js */ \"(rsc)/./node_modules/mysql2/lib/commands/command.js\");\nconst Packets = __webpack_require__(/*! ../packets/index.js */ \"(rsc)/./node_modules/mysql2/lib/packets/index.js\");\n\nclass ServerHandshake extends Command {\n  constructor(args) {\n    super();\n    this.args = args;\n    /*\n    this.protocolVersion = args.protocolVersion || 10;\n    this.serverVersion   = args.serverVersion;\n    this.connectionId    = args.connectionId,\n    this.statusFlags     = args.statusFlags,\n    this.characterSet    = args.characterSet,\n    this.capabilityFlags = args.capabilityFlags || 512;\n    */\n  }\n\n  start(packet, connection) {\n    const serverHelloPacket = new Packets.Handshake(this.args);\n    this.serverHello = serverHelloPacket;\n    serverHelloPacket.setScrambleData(err => {\n      if (err) {\n        connection.emit('error', new Error('Error generating random bytes'));\n        return;\n      }\n      connection.writePacket(serverHelloPacket.toPacket(0));\n    });\n    return ServerHandshake.prototype.readClientReply;\n  }\n\n  readClientReply(packet, connection) {\n    // check auth here\n    const clientHelloReply = Packets.HandshakeResponse.fromPacket(packet);\n    // TODO check we don't have something similar already\n    connection.clientHelloReply = clientHelloReply;\n    if (this.args.authCallback) {\n      this.args.authCallback(\n        {\n          user: clientHelloReply.user,\n          database: clientHelloReply.database,\n          address: connection.stream.remoteAddress,\n          authPluginData1: this.serverHello.authPluginData1,\n          authPluginData2: this.serverHello.authPluginData2,\n          authToken: clientHelloReply.authToken\n        },\n        (err, mysqlError) => {\n          // if (err)\n          if (!mysqlError) {\n            connection.writeOk();\n          } else {\n            // TODO create constants / errorToCode\n            // 1045 = ER_ACCESS_DENIED_ERROR\n            connection.writeError({\n              message: mysqlError.message || '',\n              code: mysqlError.code || 1045\n            });\n            connection.close();\n          }\n        }\n      );\n    } else {\n      connection.writeOk();\n    }\n    return ServerHandshake.prototype.dispatchCommands;\n  }\n\n  _isStatement(query, name) {\n    const firstWord = query.split(' ')[0].toUpperCase();\n    return firstWord === name;\n  }\n\n  dispatchCommands(packet, connection) {\n    // command from client to server\n    let knownCommand = true;\n    const encoding = connection.clientHelloReply.encoding;\n    const commandCode = packet.readInt8();\n    switch (commandCode) {\n      case CommandCode.STMT_PREPARE:\n        if (connection.listeners('stmt_prepare').length) {\n          const query = packet.readString(undefined, encoding);\n          connection.emit('stmt_prepare', query);\n        } else {\n          connection.writeError({\n            code: Errors.HA_ERR_INTERNAL_ERROR,\n            message:\n              'No query handler for prepared statements.'\n          });\n        }\n        break;\n      case CommandCode.STMT_EXECUTE:\n        if (connection.listeners('stmt_execute').length) {\n          const { stmtId, flags, iterationCount, values } = Packets.Execute.fromPacket(packet, encoding);\n          connection.emit('stmt_execute', stmtId, flags, iterationCount, values);\n        } else {\n          connection.writeError({\n            code: Errors.HA_ERR_INTERNAL_ERROR,\n            message:\n              'No query handler for execute statements.'\n          });\n        }\n        break;\n      case CommandCode.QUIT:\n        if (connection.listeners('quit').length) {\n          connection.emit('quit');\n        } else {\n          connection.stream.end();\n        }\n        break;\n      case CommandCode.INIT_DB:\n        if (connection.listeners('init_db').length) {\n          const schemaName = packet.readString(undefined, encoding);\n          connection.emit('init_db', schemaName);\n        } else {\n          connection.writeOk();\n        }\n        break;\n      case CommandCode.QUERY:\n        if (connection.listeners('query').length) {\n          const query = packet.readString(undefined, encoding);\n          if (this._isStatement(query, 'PREPARE') || this._isStatement(query, 'SET')) {\n            connection.emit('stmt_prepare', query);\n          }\n          else if (this._isStatement(query, 'EXECUTE')) {\n            connection.emit('stmt_execute', null, null, null, null, query);\n          }\n          else connection.emit('query', query);\n        } else {\n          connection.writeError({\n            code: Errors.HA_ERR_INTERNAL_ERROR,\n            message: 'No query handler'\n          });\n        }\n        break;\n      case CommandCode.FIELD_LIST:\n        if (connection.listeners('field_list').length) {\n          const table = packet.readNullTerminatedString(encoding);\n          const fields = packet.readString(undefined, encoding);\n          connection.emit('field_list', table, fields);\n        } else {\n          connection.writeError({\n            code: Errors.ER_WARN_DEPRECATED_SYNTAX,\n            message:\n              'As of MySQL 5.7.11, COM_FIELD_LIST is deprecated and will be removed in a future version of MySQL.'\n          });\n        }\n        break;\n      case CommandCode.PING:\n        if (connection.listeners('ping').length) {\n          connection.emit('ping');\n        } else {\n          connection.writeOk();\n        }\n        break;\n      default:\n        knownCommand = false;\n    }\n    if (connection.listeners('packet').length) {\n      connection.emit('packet', packet.clone(), knownCommand, commandCode);\n    } else if (!knownCommand) {\n      // eslint-disable-next-line no-console\n      console.log('Unknown command:', commandCode);\n    }\n    return ServerHandshake.prototype.dispatchCommands;\n  }\n}\n\nmodule.exports = ServerHandshake;\n\n// TODO: implement server-side 4.1 authentication\n/*\n4.1 authentication: (http://bazaar.launchpad.net/~mysql/mysql-server/5.5/view/head:/sql/password.c)\n\n  SERVER:  public_seed=create_random_string()\n           send(public_seed)\n\n  CLIENT:  recv(public_seed)\n           hash_stage1=sha1(\"password\")\n           hash_stage2=sha1(hash_stage1)\n           reply=xor(hash_stage1, sha1(public_seed,hash_stage2)\n\n           // this three steps are done in scramble()\n\n           send(reply)\n\n\n  SERVER:  recv(reply)\n           hash_stage1=xor(reply, sha1(public_seed,hash_stage2))\n           candidate_hash2=sha1(hash_stage1)\n           check(candidate_hash2==hash_stage2)\n\nserver stores sha1(sha1(password)) ( hash_stag2)\n*/\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/commands/server_handshake.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/compressed_protocol.js":
/*!********************************************************!*\
  !*** ./node_modules/mysql2/lib/compressed_protocol.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\n// connection mixins\n// implementation of http://dev.mysql.com/doc/internals/en/compression.html\n\nconst zlib = __webpack_require__(/*! zlib */ \"zlib\");\nconst PacketParser = __webpack_require__(/*! ./packet_parser.js */ \"(rsc)/./node_modules/mysql2/lib/packet_parser.js\");\n\nfunction handleCompressedPacket(packet) {\n  // eslint-disable-next-line consistent-this, no-invalid-this\n  const connection = this;\n  const deflatedLength = packet.readInt24();\n  const body = packet.readBuffer();\n\n  if (deflatedLength !== 0) {\n    connection.inflateQueue.push(task => {\n      zlib.inflate(body, (err, data) => {\n        if (err) {\n          connection._handleNetworkError(err);\n          return;\n        }\n        connection._bumpCompressedSequenceId(packet.numPackets);\n        connection._inflatedPacketsParser.execute(data);\n        task.done();\n      });\n    });\n  } else {\n    connection.inflateQueue.push(task => {\n      connection._bumpCompressedSequenceId(packet.numPackets);\n      connection._inflatedPacketsParser.execute(body);\n      task.done();\n    });\n  }\n}\n\nfunction writeCompressed(buffer) {\n  // http://dev.mysql.com/doc/internals/en/example-several-mysql-packets.html\n  // note: sending a MySQL Packet of the size 2^24−5 to 2^24−1 via compression\n  // leads to at least one extra compressed packet.\n  // (this is because \"length of the packet before compression\" need to fit\n  // into 3 byte unsigned int. \"length of the packet before compression\" includes\n  // 4 byte packet header, hence 2^24−5)\n  const MAX_COMPRESSED_LENGTH = 16777210;\n  let start;\n  if (buffer.length > MAX_COMPRESSED_LENGTH) {\n    for (start = 0; start < buffer.length; start += MAX_COMPRESSED_LENGTH) {\n      writeCompressed.call(\n        // eslint-disable-next-line no-invalid-this\n        this,\n        buffer.slice(start, start + MAX_COMPRESSED_LENGTH)\n      );\n    }\n    return;\n  }\n\n  // eslint-disable-next-line no-invalid-this, consistent-this\n  const connection = this;\n\n  let packetLen = buffer.length;\n  const compressHeader = Buffer.allocUnsafe(7);\n\n  // seqqueue is used here because zlib async execution is routed via thread pool\n  // internally and when we have multiple compressed packets arriving we need\n  // to assemble uncompressed result sequentially\n  (function(seqId) {\n    connection.deflateQueue.push(task => {\n      zlib.deflate(buffer, (err, compressed) => {\n        if (err) {\n          connection._handleFatalError(err);\n          return;\n        }\n        let compressedLength = compressed.length;\n\n        if (compressedLength < packetLen) {\n          compressHeader.writeUInt8(compressedLength & 0xff, 0);\n          compressHeader.writeUInt16LE(compressedLength >> 8, 1);\n          compressHeader.writeUInt8(seqId, 3);\n          compressHeader.writeUInt8(packetLen & 0xff, 4);\n          compressHeader.writeUInt16LE(packetLen >> 8, 5);\n          connection.writeUncompressed(compressHeader);\n          connection.writeUncompressed(compressed);\n        } else {\n          // http://dev.mysql.com/doc/internals/en/uncompressed-payload.html\n          // To send an uncompressed payload:\n          //   - set length of payload before compression to 0\n          //   - the compressed payload contains the uncompressed payload instead.\n          compressedLength = packetLen;\n          packetLen = 0;\n          compressHeader.writeUInt8(compressedLength & 0xff, 0);\n          compressHeader.writeUInt16LE(compressedLength >> 8, 1);\n          compressHeader.writeUInt8(seqId, 3);\n          compressHeader.writeUInt8(packetLen & 0xff, 4);\n          compressHeader.writeUInt16LE(packetLen >> 8, 5);\n          connection.writeUncompressed(compressHeader);\n          connection.writeUncompressed(buffer);\n        }\n        task.done();\n      });\n    });\n  })(connection.compressedSequenceId);\n  connection._bumpCompressedSequenceId(1);\n}\n\nfunction enableCompression(connection) {\n  connection._lastWrittenPacketId = 0;\n  connection._lastReceivedPacketId = 0;\n\n  connection._handleCompressedPacket = handleCompressedPacket;\n  connection._inflatedPacketsParser = new PacketParser(p => {\n    connection.handlePacket(p);\n  }, 4);\n  connection._inflatedPacketsParser._lastPacket = 0;\n  connection.packetParser = new PacketParser(packet => {\n    connection._handleCompressedPacket(packet);\n  }, 7);\n\n  connection.writeUncompressed = connection.write;\n  connection.write = writeCompressed;\n\n  const seqqueue = __webpack_require__(/*! seq-queue */ \"(rsc)/./node_modules/seq-queue/index.js\");\n  connection.inflateQueue = seqqueue.createQueue();\n  connection.deflateQueue = seqqueue.createQueue();\n}\n\nmodule.exports = {\n  enableCompression: enableCompression\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb21wcmVzc2VkX3Byb3RvY29sLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7O0FBRUEsYUFBYSxtQkFBTyxDQUFDLGtCQUFNO0FBQzNCLHFCQUFxQixtQkFBTyxDQUFDLDRFQUFvQjs7QUFFakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0wsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsdUJBQXVCO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBOztBQUVBLG1CQUFtQixtQkFBTyxDQUFDLDBEQUFXO0FBQ3RDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZWFsX2VzdGF0ZS8uL25vZGVfbW9kdWxlcy9teXNxbDIvbGliL2NvbXByZXNzZWRfcHJvdG9jb2wuanM/NmE4ZiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8vIGNvbm5lY3Rpb24gbWl4aW5zXG4vLyBpbXBsZW1lbnRhdGlvbiBvZiBodHRwOi8vZGV2Lm15c3FsLmNvbS9kb2MvaW50ZXJuYWxzL2VuL2NvbXByZXNzaW9uLmh0bWxcblxuY29uc3QgemxpYiA9IHJlcXVpcmUoJ3psaWInKTtcbmNvbnN0IFBhY2tldFBhcnNlciA9IHJlcXVpcmUoJy4vcGFja2V0X3BhcnNlci5qcycpO1xuXG5mdW5jdGlvbiBoYW5kbGVDb21wcmVzc2VkUGFja2V0KHBhY2tldCkge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgY29uc2lzdGVudC10aGlzLCBuby1pbnZhbGlkLXRoaXNcbiAgY29uc3QgY29ubmVjdGlvbiA9IHRoaXM7XG4gIGNvbnN0IGRlZmxhdGVkTGVuZ3RoID0gcGFja2V0LnJlYWRJbnQyNCgpO1xuICBjb25zdCBib2R5ID0gcGFja2V0LnJlYWRCdWZmZXIoKTtcblxuICBpZiAoZGVmbGF0ZWRMZW5ndGggIT09IDApIHtcbiAgICBjb25uZWN0aW9uLmluZmxhdGVRdWV1ZS5wdXNoKHRhc2sgPT4ge1xuICAgICAgemxpYi5pbmZsYXRlKGJvZHksIChlcnIsIGRhdGEpID0+IHtcbiAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgIGNvbm5lY3Rpb24uX2hhbmRsZU5ldHdvcmtFcnJvcihlcnIpO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBjb25uZWN0aW9uLl9idW1wQ29tcHJlc3NlZFNlcXVlbmNlSWQocGFja2V0Lm51bVBhY2tldHMpO1xuICAgICAgICBjb25uZWN0aW9uLl9pbmZsYXRlZFBhY2tldHNQYXJzZXIuZXhlY3V0ZShkYXRhKTtcbiAgICAgICAgdGFzay5kb25lKCk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfSBlbHNlIHtcbiAgICBjb25uZWN0aW9uLmluZmxhdGVRdWV1ZS5wdXNoKHRhc2sgPT4ge1xuICAgICAgY29ubmVjdGlvbi5fYnVtcENvbXByZXNzZWRTZXF1ZW5jZUlkKHBhY2tldC5udW1QYWNrZXRzKTtcbiAgICAgIGNvbm5lY3Rpb24uX2luZmxhdGVkUGFja2V0c1BhcnNlci5leGVjdXRlKGJvZHkpO1xuICAgICAgdGFzay5kb25lKCk7XG4gICAgfSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gd3JpdGVDb21wcmVzc2VkKGJ1ZmZlcikge1xuICAvLyBodHRwOi8vZGV2Lm15c3FsLmNvbS9kb2MvaW50ZXJuYWxzL2VuL2V4YW1wbGUtc2V2ZXJhbC1teXNxbC1wYWNrZXRzLmh0bWxcbiAgLy8gbm90ZTogc2VuZGluZyBhIE15U1FMIFBhY2tldCBvZiB0aGUgc2l6ZSAyXjI04oiSNSB0byAyXjI04oiSMSB2aWEgY29tcHJlc3Npb25cbiAgLy8gbGVhZHMgdG8gYXQgbGVhc3Qgb25lIGV4dHJhIGNvbXByZXNzZWQgcGFja2V0LlxuICAvLyAodGhpcyBpcyBiZWNhdXNlIFwibGVuZ3RoIG9mIHRoZSBwYWNrZXQgYmVmb3JlIGNvbXByZXNzaW9uXCIgbmVlZCB0byBmaXRcbiAgLy8gaW50byAzIGJ5dGUgdW5zaWduZWQgaW50LiBcImxlbmd0aCBvZiB0aGUgcGFja2V0IGJlZm9yZSBjb21wcmVzc2lvblwiIGluY2x1ZGVzXG4gIC8vIDQgYnl0ZSBwYWNrZXQgaGVhZGVyLCBoZW5jZSAyXjI04oiSNSlcbiAgY29uc3QgTUFYX0NPTVBSRVNTRURfTEVOR1RIID0gMTY3NzcyMTA7XG4gIGxldCBzdGFydDtcbiAgaWYgKGJ1ZmZlci5sZW5ndGggPiBNQVhfQ09NUFJFU1NFRF9MRU5HVEgpIHtcbiAgICBmb3IgKHN0YXJ0ID0gMDsgc3RhcnQgPCBidWZmZXIubGVuZ3RoOyBzdGFydCArPSBNQVhfQ09NUFJFU1NFRF9MRU5HVEgpIHtcbiAgICAgIHdyaXRlQ29tcHJlc3NlZC5jYWxsKFxuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8taW52YWxpZC10aGlzXG4gICAgICAgIHRoaXMsXG4gICAgICAgIGJ1ZmZlci5zbGljZShzdGFydCwgc3RhcnQgKyBNQVhfQ09NUFJFU1NFRF9MRU5HVEgpXG4gICAgICApO1xuICAgIH1cbiAgICByZXR1cm47XG4gIH1cblxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8taW52YWxpZC10aGlzLCBjb25zaXN0ZW50LXRoaXNcbiAgY29uc3QgY29ubmVjdGlvbiA9IHRoaXM7XG5cbiAgbGV0IHBhY2tldExlbiA9IGJ1ZmZlci5sZW5ndGg7XG4gIGNvbnN0IGNvbXByZXNzSGVhZGVyID0gQnVmZmVyLmFsbG9jVW5zYWZlKDcpO1xuXG4gIC8vIHNlcXF1ZXVlIGlzIHVzZWQgaGVyZSBiZWNhdXNlIHpsaWIgYXN5bmMgZXhlY3V0aW9uIGlzIHJvdXRlZCB2aWEgdGhyZWFkIHBvb2xcbiAgLy8gaW50ZXJuYWxseSBhbmQgd2hlbiB3ZSBoYXZlIG11bHRpcGxlIGNvbXByZXNzZWQgcGFja2V0cyBhcnJpdmluZyB3ZSBuZWVkXG4gIC8vIHRvIGFzc2VtYmxlIHVuY29tcHJlc3NlZCByZXN1bHQgc2VxdWVudGlhbGx5XG4gIChmdW5jdGlvbihzZXFJZCkge1xuICAgIGNvbm5lY3Rpb24uZGVmbGF0ZVF1ZXVlLnB1c2godGFzayA9PiB7XG4gICAgICB6bGliLmRlZmxhdGUoYnVmZmVyLCAoZXJyLCBjb21wcmVzc2VkKSA9PiB7XG4gICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICBjb25uZWN0aW9uLl9oYW5kbGVGYXRhbEVycm9yKGVycik7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGxldCBjb21wcmVzc2VkTGVuZ3RoID0gY29tcHJlc3NlZC5sZW5ndGg7XG5cbiAgICAgICAgaWYgKGNvbXByZXNzZWRMZW5ndGggPCBwYWNrZXRMZW4pIHtcbiAgICAgICAgICBjb21wcmVzc0hlYWRlci53cml0ZVVJbnQ4KGNvbXByZXNzZWRMZW5ndGggJiAweGZmLCAwKTtcbiAgICAgICAgICBjb21wcmVzc0hlYWRlci53cml0ZVVJbnQxNkxFKGNvbXByZXNzZWRMZW5ndGggPj4gOCwgMSk7XG4gICAgICAgICAgY29tcHJlc3NIZWFkZXIud3JpdGVVSW50OChzZXFJZCwgMyk7XG4gICAgICAgICAgY29tcHJlc3NIZWFkZXIud3JpdGVVSW50OChwYWNrZXRMZW4gJiAweGZmLCA0KTtcbiAgICAgICAgICBjb21wcmVzc0hlYWRlci53cml0ZVVJbnQxNkxFKHBhY2tldExlbiA+PiA4LCA1KTtcbiAgICAgICAgICBjb25uZWN0aW9uLndyaXRlVW5jb21wcmVzc2VkKGNvbXByZXNzSGVhZGVyKTtcbiAgICAgICAgICBjb25uZWN0aW9uLndyaXRlVW5jb21wcmVzc2VkKGNvbXByZXNzZWQpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIC8vIGh0dHA6Ly9kZXYubXlzcWwuY29tL2RvYy9pbnRlcm5hbHMvZW4vdW5jb21wcmVzc2VkLXBheWxvYWQuaHRtbFxuICAgICAgICAgIC8vIFRvIHNlbmQgYW4gdW5jb21wcmVzc2VkIHBheWxvYWQ6XG4gICAgICAgICAgLy8gICAtIHNldCBsZW5ndGggb2YgcGF5bG9hZCBiZWZvcmUgY29tcHJlc3Npb24gdG8gMFxuICAgICAgICAgIC8vICAgLSB0aGUgY29tcHJlc3NlZCBwYXlsb2FkIGNvbnRhaW5zIHRoZSB1bmNvbXByZXNzZWQgcGF5bG9hZCBpbnN0ZWFkLlxuICAgICAgICAgIGNvbXByZXNzZWRMZW5ndGggPSBwYWNrZXRMZW47XG4gICAgICAgICAgcGFja2V0TGVuID0gMDtcbiAgICAgICAgICBjb21wcmVzc0hlYWRlci53cml0ZVVJbnQ4KGNvbXByZXNzZWRMZW5ndGggJiAweGZmLCAwKTtcbiAgICAgICAgICBjb21wcmVzc0hlYWRlci53cml0ZVVJbnQxNkxFKGNvbXByZXNzZWRMZW5ndGggPj4gOCwgMSk7XG4gICAgICAgICAgY29tcHJlc3NIZWFkZXIud3JpdGVVSW50OChzZXFJZCwgMyk7XG4gICAgICAgICAgY29tcHJlc3NIZWFkZXIud3JpdGVVSW50OChwYWNrZXRMZW4gJiAweGZmLCA0KTtcbiAgICAgICAgICBjb21wcmVzc0hlYWRlci53cml0ZVVJbnQxNkxFKHBhY2tldExlbiA+PiA4LCA1KTtcbiAgICAgICAgICBjb25uZWN0aW9uLndyaXRlVW5jb21wcmVzc2VkKGNvbXByZXNzSGVhZGVyKTtcbiAgICAgICAgICBjb25uZWN0aW9uLndyaXRlVW5jb21wcmVzc2VkKGJ1ZmZlcik7XG4gICAgICAgIH1cbiAgICAgICAgdGFzay5kb25lKCk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfSkoY29ubmVjdGlvbi5jb21wcmVzc2VkU2VxdWVuY2VJZCk7XG4gIGNvbm5lY3Rpb24uX2J1bXBDb21wcmVzc2VkU2VxdWVuY2VJZCgxKTtcbn1cblxuZnVuY3Rpb24gZW5hYmxlQ29tcHJlc3Npb24oY29ubmVjdGlvbikge1xuICBjb25uZWN0aW9uLl9sYXN0V3JpdHRlblBhY2tldElkID0gMDtcbiAgY29ubmVjdGlvbi5fbGFzdFJlY2VpdmVkUGFja2V0SWQgPSAwO1xuXG4gIGNvbm5lY3Rpb24uX2hhbmRsZUNvbXByZXNzZWRQYWNrZXQgPSBoYW5kbGVDb21wcmVzc2VkUGFja2V0O1xuICBjb25uZWN0aW9uLl9pbmZsYXRlZFBhY2tldHNQYXJzZXIgPSBuZXcgUGFja2V0UGFyc2VyKHAgPT4ge1xuICAgIGNvbm5lY3Rpb24uaGFuZGxlUGFja2V0KHApO1xuICB9LCA0KTtcbiAgY29ubmVjdGlvbi5faW5mbGF0ZWRQYWNrZXRzUGFyc2VyLl9sYXN0UGFja2V0ID0gMDtcbiAgY29ubmVjdGlvbi5wYWNrZXRQYXJzZXIgPSBuZXcgUGFja2V0UGFyc2VyKHBhY2tldCA9PiB7XG4gICAgY29ubmVjdGlvbi5faGFuZGxlQ29tcHJlc3NlZFBhY2tldChwYWNrZXQpO1xuICB9LCA3KTtcblxuICBjb25uZWN0aW9uLndyaXRlVW5jb21wcmVzc2VkID0gY29ubmVjdGlvbi53cml0ZTtcbiAgY29ubmVjdGlvbi53cml0ZSA9IHdyaXRlQ29tcHJlc3NlZDtcblxuICBjb25zdCBzZXFxdWV1ZSA9IHJlcXVpcmUoJ3NlcS1xdWV1ZScpO1xuICBjb25uZWN0aW9uLmluZmxhdGVRdWV1ZSA9IHNlcXF1ZXVlLmNyZWF0ZVF1ZXVlKCk7XG4gIGNvbm5lY3Rpb24uZGVmbGF0ZVF1ZXVlID0gc2VxcXVldWUuY3JlYXRlUXVldWUoKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGVuYWJsZUNvbXByZXNzaW9uOiBlbmFibGVDb21wcmVzc2lvblxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/compressed_protocol.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/connection.js":
/*!***********************************************!*\
  !*** ./node_modules/mysql2/lib/connection.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// This file was modified by Oracle on June 1, 2021.\n// The changes involve new logic to handle an additional ERR Packet sent by\n// the MySQL server when the connection is closed unexpectedly.\n// Modifications copyright (c) 2021, Oracle and/or its affiliates.\n\n// This file was modified by Oracle on June 17, 2021.\n// The changes involve logic to ensure the socket connection is closed when\n// there is a fatal error.\n// Modifications copyright (c) 2021, Oracle and/or its affiliates.\n\n// This file was modified by Oracle on September 21, 2021.\n// The changes involve passing additional authentication factor passwords\n// to the ChangeUser Command instance.\n// Modifications copyright (c) 2021, Oracle and/or its affiliates.\n\n\n\nconst Net = __webpack_require__(/*! net */ \"net\");\nconst Tls = __webpack_require__(/*! tls */ \"tls\");\nconst Timers = __webpack_require__(/*! timers */ \"timers\");\nconst EventEmitter = (__webpack_require__(/*! events */ \"events\").EventEmitter);\nconst Readable = (__webpack_require__(/*! stream */ \"stream\").Readable);\nconst Queue = __webpack_require__(/*! denque */ \"(rsc)/./node_modules/denque/index.js\");\nconst SqlString = __webpack_require__(/*! sqlstring */ \"(rsc)/./node_modules/sqlstring/index.js\");\nconst LRU = (__webpack_require__(/*! lru-cache */ \"(rsc)/./node_modules/mysql2/node_modules/lru-cache/dist/cjs/index-cjs.js\")[\"default\"]);\n\nconst PacketParser = __webpack_require__(/*! ./packet_parser.js */ \"(rsc)/./node_modules/mysql2/lib/packet_parser.js\");\nconst Packets = __webpack_require__(/*! ./packets/index.js */ \"(rsc)/./node_modules/mysql2/lib/packets/index.js\");\nconst Commands = __webpack_require__(/*! ./commands/index.js */ \"(rsc)/./node_modules/mysql2/lib/commands/index.js\");\nconst ConnectionConfig = __webpack_require__(/*! ./connection_config.js */ \"(rsc)/./node_modules/mysql2/lib/connection_config.js\");\nconst CharsetToEncoding = __webpack_require__(/*! ./constants/charset_encodings.js */ \"(rsc)/./node_modules/mysql2/lib/constants/charset_encodings.js\");\n\nlet _connectionId = 0;\n\nlet convertNamedPlaceholders = null;\n\nclass Connection extends EventEmitter {\n  constructor(opts) {\n    super();\n    this.config = opts.config;\n    // TODO: fill defaults\n    // if no params, connect to /var/lib/mysql/mysql.sock ( /tmp/mysql.sock on OSX )\n    // if host is given, connect to host:3306\n    // TODO: use `/usr/local/mysql/bin/mysql_config --socket` output? as default socketPath\n    // if there is no host/port and no socketPath parameters?\n    if (!opts.config.stream) {\n      if (opts.config.socketPath) {\n        this.stream = Net.connect(opts.config.socketPath);\n      } else {\n        this.stream = Net.connect(\n          opts.config.port,\n          opts.config.host\n        );\n\n        // Optionally enable keep-alive on the socket.\n        if (this.config.enableKeepAlive) {\n          this.stream.on('connect', () => {\n            this.stream.setKeepAlive(true, this.config.keepAliveInitialDelay);\n          });\n        }\n\n        // Enable TCP_NODELAY flag. This is needed so that the network packets\n        // are sent immediately to the server\n        this.stream.setNoDelay(true);\n      }\n      // if stream is a function, treat it as \"stream agent / factory\"\n    } else if (typeof opts.config.stream === 'function')  {\n      this.stream = opts.config.stream(opts);\n    } else {\n      this.stream = opts.config.stream;\n    }\n\n    this._internalId = _connectionId++;\n    this._commands = new Queue();\n    this._command = null;\n    this._paused = false;\n    this._paused_packets = new Queue();\n    this._statements = new LRU({\n      max: this.config.maxPreparedStatements,\n      dispose: function(statement) {\n        statement.close();\n      }\n    });\n    this.serverCapabilityFlags = 0;\n    this.authorized = false;\n    this.sequenceId = 0;\n    this.compressedSequenceId = 0;\n    this.threadId = null;\n    this._handshakePacket = null;\n    this._fatalError = null;\n    this._protocolError = null;\n    this._outOfOrderPackets = [];\n    this.clientEncoding = CharsetToEncoding[this.config.charsetNumber];\n    this.stream.on('error', this._handleNetworkError.bind(this));\n    // see https://gist.github.com/khoomeister/4985691#use-that-instead-of-bind\n    this.packetParser = new PacketParser(p => {\n      this.handlePacket(p);\n    });\n    this.stream.on('data', data => {\n      if (this.connectTimeout) {\n        Timers.clearTimeout(this.connectTimeout);\n        this.connectTimeout = null;\n      }\n      this.packetParser.execute(data);\n    });\n    this.stream.on('end', () => {\n      // emit the end event so that the pooled connection can close the connection\n      this.emit('end');\n    });\n    this.stream.on('close', () => {\n      // we need to set this flag everywhere where we want connection to close\n      if (this._closing) {\n        return;\n      }\n      if (!this._protocolError) {\n        // no particular error message before disconnect\n        this._protocolError = new Error(\n          'Connection lost: The server closed the connection.'\n        );\n        this._protocolError.fatal = true;\n        this._protocolError.code = 'PROTOCOL_CONNECTION_LOST';\n      }\n      this._notifyError(this._protocolError);\n    });\n    let handshakeCommand;\n    if (!this.config.isServer) {\n      handshakeCommand = new Commands.ClientHandshake(this.config.clientFlags);\n      handshakeCommand.on('end', () => {\n        // this happens when handshake finishes early either because there was\n        // some fatal error or the server sent an error packet instead of\n        // an hello packet (for example, 'Too many connections' error)\n        if (!handshakeCommand.handshake || this._fatalError || this._protocolError) {\n          return;\n        }\n        this._handshakePacket = handshakeCommand.handshake;\n        this.threadId = handshakeCommand.handshake.connectionId;\n        this.emit('connect', handshakeCommand.handshake);\n      });\n      handshakeCommand.on('error', err => {\n        this._closing = true;\n        this._notifyError(err);\n      });\n      this.addCommand(handshakeCommand);\n    }\n    // in case there was no initial handshake but we need to read sting, assume it utf-8\n    // most common example: \"Too many connections\" error ( packet is sent immediately on connection attempt, we don't know server encoding yet)\n    // will be overwritten with actual encoding value as soon as server handshake packet is received\n    this.serverEncoding = 'utf8';\n    if (this.config.connectTimeout) {\n      const timeoutHandler = this._handleTimeoutError.bind(this);\n      this.connectTimeout = Timers.setTimeout(\n        timeoutHandler,\n        this.config.connectTimeout\n      );\n    }\n  }\n\n  promise(promiseImpl) {\n    const PromiseConnection = (__webpack_require__(/*! ../promise */ \"(rsc)/./node_modules/mysql2/promise.js\").PromiseConnection);\n    return new PromiseConnection(this, promiseImpl);\n  }\n\n  _addCommandClosedState(cmd) {\n    const err = new Error(\n      \"Can't add new command when connection is in closed state\"\n    );\n    err.fatal = true;\n    if (cmd.onResult) {\n      cmd.onResult(err);\n    } else {\n      this.emit('error', err);\n    }\n  }\n\n  _handleFatalError(err) {\n    err.fatal = true;\n    // stop receiving packets\n    this.stream.removeAllListeners('data');\n    this.addCommand = this._addCommandClosedState;\n    this.write = () => {\n      this.emit('error', new Error(\"Can't write in closed state\"));\n    };\n    this._notifyError(err);\n    this._fatalError = err;\n  }\n\n  _handleNetworkError(err) {\n    if (this.connectTimeout) {\n      Timers.clearTimeout(this.connectTimeout);\n      this.connectTimeout = null;\n    }\n    // Do not throw an error when a connection ends with a RST,ACK packet\n    if (err.code === 'ECONNRESET' && this._closing) {\n      return;\n    }\n    this._handleFatalError(err);\n  }\n\n  _handleTimeoutError() {\n    if (this.connectTimeout) {\n      Timers.clearTimeout(this.connectTimeout);\n      this.connectTimeout = null;\n    }\n    this.stream.destroy && this.stream.destroy();\n    const err = new Error('connect ETIMEDOUT');\n    err.errorno = 'ETIMEDOUT';\n    err.code = 'ETIMEDOUT';\n    err.syscall = 'connect';\n    this._handleNetworkError(err);\n  }\n\n  // notify all commands in the queue and bubble error as connection \"error\"\n  // called on stream error or unexpected termination\n  _notifyError(err) {\n    if (this.connectTimeout) {\n      Timers.clearTimeout(this.connectTimeout);\n      this.connectTimeout = null;\n    }\n    // prevent from emitting 'PROTOCOL_CONNECTION_LOST' after EPIPE or ECONNRESET\n    if (this._fatalError) {\n      return;\n    }\n    let command;\n    // if there is no active command, notify connection\n    // if there are commands and all of them have callbacks, pass error via callback\n    let bubbleErrorToConnection = !this._command;\n    if (this._command && this._command.onResult) {\n      this._command.onResult(err);\n      this._command = null;\n      // connection handshake is special because we allow it to be implicit\n      // if error happened during handshake, but there are others commands in queue\n      // then bubble error to other commands and not to connection\n    } else if (\n      !(\n        this._command &&\n        this._command.constructor === Commands.ClientHandshake &&\n        this._commands.length > 0\n      )\n    ) {\n      bubbleErrorToConnection = true;\n    }\n    while ((command = this._commands.shift())) {\n      if (command.onResult) {\n        command.onResult(err);\n      } else {\n        bubbleErrorToConnection = true;\n      }\n    }\n    // notify connection if some comands in the queue did not have callbacks\n    // or if this is pool connection ( so it can be removed from pool )\n    if (bubbleErrorToConnection || this._pool) {\n      this.emit('error', err);\n    }\n    // close connection after emitting the event in case of a fatal error\n    if (err.fatal) {\n      this.close();\n    }\n  }\n\n  write(buffer) {\n    const result = this.stream.write(buffer, err => {\n      if (err) {\n        this._handleNetworkError(err);\n      }\n    });\n\n    if (!result) {\n      this.stream.emit('pause');\n    }\n  }\n\n  // http://dev.mysql.com/doc/internals/en/sequence-id.html\n  //\n  // The sequence-id is incremented with each packet and may wrap around.\n  // It starts at 0 and is reset to 0 when a new command\n  // begins in the Command Phase.\n  // http://dev.mysql.com/doc/internals/en/example-several-mysql-packets.html\n  _resetSequenceId() {\n    this.sequenceId = 0;\n    this.compressedSequenceId = 0;\n  }\n\n  _bumpCompressedSequenceId(numPackets) {\n    this.compressedSequenceId += numPackets;\n    this.compressedSequenceId %= 256;\n  }\n\n  _bumpSequenceId(numPackets) {\n    this.sequenceId += numPackets;\n    this.sequenceId %= 256;\n  }\n\n  writePacket(packet) {\n    const MAX_PACKET_LENGTH = 16777215;\n    const length = packet.length();\n    let chunk, offset, header;\n    if (length < MAX_PACKET_LENGTH) {\n      packet.writeHeader(this.sequenceId);\n      if (this.config.debug) {\n        // eslint-disable-next-line no-console\n        console.log(\n          `${this._internalId} ${this.connectionId} <== ${this._command._commandName}#${this._command.stateName()}(${[this.sequenceId, packet._name, packet.length()].join(',')})`\n        );\n        // eslint-disable-next-line no-console\n        console.log(\n          `${this._internalId} ${this.connectionId} <== ${packet.buffer.toString('hex')}`\n        );\n      }\n      this._bumpSequenceId(1);\n      this.write(packet.buffer);\n    } else {\n      if (this.config.debug) {\n        // eslint-disable-next-line no-console\n        console.log(\n          `${this._internalId} ${this.connectionId} <== Writing large packet, raw content not written:`\n        );\n        // eslint-disable-next-line no-console\n        console.log(\n          `${this._internalId} ${this.connectionId} <== ${this._command._commandName}#${this._command.stateName()}(${[this.sequenceId, packet._name, packet.length()].join(',')})`\n        );\n      }\n      for (offset = 4; offset < 4 + length; offset += MAX_PACKET_LENGTH) {\n        chunk = packet.buffer.slice(offset, offset + MAX_PACKET_LENGTH);\n        if (chunk.length === MAX_PACKET_LENGTH) {\n          header = Buffer.from([0xff, 0xff, 0xff, this.sequenceId]);\n        } else {\n          header = Buffer.from([\n            chunk.length & 0xff,\n            (chunk.length >> 8) & 0xff,\n            (chunk.length >> 16) & 0xff,\n            this.sequenceId\n          ]);\n        }\n        this._bumpSequenceId(1);\n        this.write(header);\n        this.write(chunk);\n      }\n    }\n  }\n\n  // 0.11+ environment\n  startTLS(onSecure) {\n    if (this.config.debug) {\n      // eslint-disable-next-line no-console\n      console.log('Upgrading connection to TLS');\n    }\n    const secureContext = Tls.createSecureContext({\n      ca: this.config.ssl.ca,\n      cert: this.config.ssl.cert,\n      ciphers: this.config.ssl.ciphers,\n      key: this.config.ssl.key,\n      passphrase: this.config.ssl.passphrase,\n      minVersion: this.config.ssl.minVersion,\n      maxVersion: this.config.ssl.maxVersion\n    });\n    const rejectUnauthorized = this.config.ssl.rejectUnauthorized;\n    const verifyIdentity = this.config.ssl.verifyIdentity;\n    const servername = this.config.host;\n\n    let secureEstablished = false;\n    this.stream.removeAllListeners('data');\n    const secureSocket = Tls.connect({\n      rejectUnauthorized,\n      requestCert: rejectUnauthorized,\n      checkServerIdentity: verifyIdentity\n        ? Tls.checkServerIdentity\n        : function() { return undefined; },\n      secureContext,\n      isServer: false,\n      socket: this.stream,\n      servername\n    }, () => {\n      secureEstablished = true;\n      if (rejectUnauthorized) {\n        if (typeof servername === 'string' && verifyIdentity) {\n          const cert = secureSocket.getPeerCertificate(true);\n          const serverIdentityCheckError = Tls.checkServerIdentity(servername, cert);\n          if (serverIdentityCheckError) {\n            onSecure(serverIdentityCheckError);\n            return;\n          }\n        }\n      }\n      onSecure();\n    });\n    // error handler for secure socket\n    secureSocket.on('error', err => {\n      if (secureEstablished) {\n        this._handleNetworkError(err);\n      } else {\n        onSecure(err);\n      }\n    });\n    secureSocket.on('data', data => {\n      this.packetParser.execute(data);\n    });\n    this.write = buffer => secureSocket.write(buffer);\n  }\n\n  protocolError(message, code) {\n    // Starting with MySQL 8.0.24, if the client closes the connection\n    // unexpectedly, the server will send a last ERR Packet, which we can\n    // safely ignore.\n    // https://dev.mysql.com/worklog/task/?id=12999\n    if (this._closing) {\n      return;\n    }\n\n    const err = new Error(message);\n    err.fatal = true;\n    err.code = code || 'PROTOCOL_ERROR';\n    this.emit('error', err);\n  }\n  \n  get fatalError() {\n    return this._fatalError;\n  }\n\n  handlePacket(packet) {\n    if (this._paused) {\n      this._paused_packets.push(packet);\n      return;\n    }\n    if (this.config.debug) {\n      if (packet) {\n        // eslint-disable-next-line no-console\n        console.log(\n          ` raw: ${packet.buffer\n            .slice(packet.offset, packet.offset + packet.length())\n            .toString('hex')}`\n        );\n        // eslint-disable-next-line no-console\n        console.trace();\n        const commandName = this._command\n          ? this._command._commandName\n          : '(no command)';\n        const stateName = this._command\n          ? this._command.stateName()\n          : '(no command)';\n        // eslint-disable-next-line no-console\n        console.log(\n          `${this._internalId} ${this.connectionId} ==> ${commandName}#${stateName}(${[packet.sequenceId, packet.type(), packet.length()].join(',')})`\n        );\n      }\n    }\n    if (!this._command) {\n      const marker = packet.peekByte();\n      // If it's an Err Packet, we should use it.\n      if (marker === 0xff) {\n        const error = Packets.Error.fromPacket(packet);\n        this.protocolError(error.message, error.code);\n      } else {\n        // Otherwise, it means it's some other unexpected packet.\n        this.protocolError(\n          'Unexpected packet while no commands in the queue',\n          'PROTOCOL_UNEXPECTED_PACKET'\n        );\n      }\n      this.close();\n      return;\n    }\n    if (packet) {\n      // Note: when server closes connection due to inactivity, Err packet ER_CLIENT_INTERACTION_TIMEOUT from MySQL 8.0.24, sequenceId will be 0\n      if (this.sequenceId !== packet.sequenceId) {\n        const err = new Error(\n          `Warning: got packets out of order. Expected ${this.sequenceId} but received ${packet.sequenceId}`\n        );\n        err.expected = this.sequenceId;\n        err.received = packet.sequenceId;\n        this.emit('warn', err); // REVIEW\n        // eslint-disable-next-line no-console\n        console.error(err.message);\n      }\n      this._bumpSequenceId(packet.numPackets);\n    }\n    try {\n      if (this._fatalError) {\n        // skip remaining packets after client is in the error state\n        return;\n      }\n      const done = this._command.execute(packet, this);\n      if (done) {\n        this._command = this._commands.shift();\n        if (this._command) {\n          this.sequenceId = 0;\n          this.compressedSequenceId = 0;\n          this.handlePacket();\n        }\n      }\n    } catch (err) {\n      this._handleFatalError(err);\n      this.stream.destroy();\n    }\n  }\n\n  addCommand(cmd) {\n    // this.compressedSequenceId = 0;\n    // this.sequenceId = 0;\n    if (this.config.debug) {\n      const commandName = cmd.constructor.name;\n      // eslint-disable-next-line no-console\n      console.log(`Add command: ${commandName}`);\n      cmd._commandName = commandName;\n    }\n    if (!this._command) {\n      this._command = cmd;\n      this.handlePacket();\n    } else {\n      this._commands.push(cmd);\n    }\n    return cmd;\n  }\n\n  format(sql, values) {\n    if (typeof this.config.queryFormat === 'function') {\n      return this.config.queryFormat.call(\n        this,\n        sql,\n        values,\n        this.config.timezone\n      );\n    }\n    const opts = {\n      sql: sql,\n      values: values\n    };\n    this._resolveNamedPlaceholders(opts);\n    return SqlString.format(\n      opts.sql,\n      opts.values,\n      this.config.stringifyObjects,\n      this.config.timezone\n    );\n  }\n\n  escape(value) {\n    return SqlString.escape(value, false, this.config.timezone);\n  }\n\n  escapeId(value) {\n    return SqlString.escapeId(value, false);\n  }\n\n  raw(sql) {\n    return SqlString.raw(sql);\n  }\n\n  _resolveNamedPlaceholders(options) {\n    let unnamed;\n    if (this.config.namedPlaceholders || options.namedPlaceholders) {\n      if (Array.isArray(options.values)) {\n        // if an array is provided as the values, assume the conversion is not necessary.\n        // this allows the usage of unnamed placeholders even if the namedPlaceholders flag is enabled.\n        return\n      }\n      if (convertNamedPlaceholders === null) {\n        convertNamedPlaceholders = __webpack_require__(/*! named-placeholders */ \"(rsc)/./node_modules/named-placeholders/index.js\")();\n      }\n      unnamed = convertNamedPlaceholders(options.sql, options.values);\n      options.sql = unnamed[0];\n      options.values = unnamed[1];\n    }\n  }\n\n  query(sql, values, cb) {\n    let cmdQuery;\n    if (sql.constructor === Commands.Query) {\n      cmdQuery = sql;\n    } else {\n      cmdQuery = Connection.createQuery(sql, values, cb, this.config);\n    }\n    this._resolveNamedPlaceholders(cmdQuery);\n    const rawSql = this.format(cmdQuery.sql, cmdQuery.values !== undefined ? cmdQuery.values : []);\n    cmdQuery.sql = rawSql;\n    return this.addCommand(cmdQuery);\n  }\n\n  pause() {\n    this._paused = true;\n    this.stream.pause();\n  }\n\n  resume() {\n    let packet;\n    this._paused = false;\n    while ((packet = this._paused_packets.shift())) {\n      this.handlePacket(packet);\n      // don't resume if packet handler paused connection\n      if (this._paused) {\n        return;\n      }\n    }\n    this.stream.resume();\n  }\n\n  // TODO: named placeholders support\n  prepare(options, cb) {\n    if (typeof options === 'string') {\n      options = { sql: options };\n    }\n    return this.addCommand(new Commands.Prepare(options, cb));\n  }\n\n  unprepare(sql) {\n    let options = {};\n    if (typeof sql === 'object') {\n      options = sql;\n    } else {\n      options.sql = sql;\n    }\n    const key = Connection.statementKey(options);\n    const stmt = this._statements.get(key);\n    if (stmt) {\n      this._statements.delete(key);\n      stmt.close();\n    }\n    return stmt;\n  }\n\n  execute(sql, values, cb) {\n    let options = {\n      infileStreamFactory: this.config.infileStreamFactory\n    };\n    if (typeof sql === 'object') {\n      // execute(options, cb)\n      options = {\n        ...options,\n        ...sql,\n        sql: sql.sql,\n        values: sql.values\n      };\n      if (typeof values === 'function') {\n        cb = values;\n      } else {\n        options.values = options.values || values;\n      }\n    } else if (typeof values === 'function') {\n      // execute(sql, cb)\n      cb = values;\n      options.sql = sql;\n      options.values = undefined;\n    } else {\n      // execute(sql, values, cb)\n      options.sql = sql;\n      options.values = values;\n    }\n    this._resolveNamedPlaceholders(options);\n    // check for values containing undefined\n    if (options.values) {\n      //If namedPlaceholder is not enabled and object is passed as bind parameters\n      if (!Array.isArray(options.values)) {\n        throw new TypeError(\n          'Bind parameters must be array if namedPlaceholders parameter is not enabled'\n        );\n      }\n      options.values.forEach(val => {\n        //If namedPlaceholder is not enabled and object is passed as bind parameters\n        if (!Array.isArray(options.values)) {\n          throw new TypeError(\n            'Bind parameters must be array if namedPlaceholders parameter is not enabled'\n          );\n        }\n        if (val === undefined) {\n          throw new TypeError(\n            'Bind parameters must not contain undefined. To pass SQL NULL specify JS null'\n          );\n        }\n        if (typeof val === 'function') {\n          throw new TypeError(\n            'Bind parameters must not contain function(s). To pass the body of a function as a string call .toString() first'\n          );\n        }\n      });\n    }\n    const executeCommand = new Commands.Execute(options, cb);\n    const prepareCommand = new Commands.Prepare(options, (err, stmt) => {\n      if (err) {\n        // skip execute command if prepare failed, we have main\n        // combined callback here\n        executeCommand.start = function() {\n          return null;\n        };\n        if (cb) {\n          cb(err);\n        } else {\n          executeCommand.emit('error', err);\n        }\n        executeCommand.emit('end');\n        return;\n      }\n      executeCommand.statement = stmt;\n    });\n    this.addCommand(prepareCommand);\n    this.addCommand(executeCommand);\n    return executeCommand;\n  }\n\n  changeUser(options, callback) {\n    if (!callback && typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    const charsetNumber = options.charset\n      ? ConnectionConfig.getCharsetNumber(options.charset)\n      : this.config.charsetNumber;\n    return this.addCommand(\n      new Commands.ChangeUser(\n        {\n          user: options.user || this.config.user,\n          // for the purpose of multi-factor authentication, or not, the main\n          // password (used for the 1st authentication factor) can also be\n          // provided via the \"password1\" option\n          password: options.password || options.password1 || this.config.password || this.config.password1,\n          password2: options.password2 || this.config.password2,\n          password3: options.password3 || this.config.password3,\n          passwordSha1: options.passwordSha1 || this.config.passwordSha1,\n          database: options.database || this.config.database,\n          timeout: options.timeout,\n          charsetNumber: charsetNumber,\n          currentConfig: this.config\n        },\n        err => {\n          if (err) {\n            err.fatal = true;\n          }\n          if (callback) {\n            callback(err);\n          }\n        }\n      )\n    );\n  }\n\n  // transaction helpers\n  beginTransaction(cb) {\n    return this.query('START TRANSACTION', cb);\n  }\n\n  commit(cb) {\n    return this.query('COMMIT', cb);\n  }\n\n  rollback(cb) {\n    return this.query('ROLLBACK', cb);\n  }\n\n  ping(cb) {\n    return this.addCommand(new Commands.Ping(cb));\n  }\n\n  _registerSlave(opts, cb) {\n    return this.addCommand(new Commands.RegisterSlave(opts, cb));\n  }\n\n  _binlogDump(opts, cb) {\n    return this.addCommand(new Commands.BinlogDump(opts, cb));\n  }\n\n  // currently just alias to close\n  destroy() {\n    this.close();\n  }\n\n  close() {\n    if (this.connectTimeout) {\n      Timers.clearTimeout(this.connectTimeout);\n      this.connectTimeout = null;\n    }\n    this._closing = true;\n    this.stream.end();\n    this.addCommand = this._addCommandClosedState;\n  }\n\n  createBinlogStream(opts) {\n    // TODO: create proper stream class\n    // TODO: use through2\n    let test = 1;\n    const stream = new Readable({ objectMode: true });\n    stream._read = function() {\n      return {\n        data: test++\n      };\n    };\n    this._registerSlave(opts, () => {\n      const dumpCmd = this._binlogDump(opts);\n      dumpCmd.on('event', ev => {\n        stream.push(ev);\n      });\n      dumpCmd.on('eof', () => {\n        stream.push(null);\n        // if non-blocking, then close stream to prevent errors\n        if (opts.flags && opts.flags & 0x01) {\n          this.close();\n        }\n      });\n      // TODO: pipe errors as well\n    });\n    return stream;\n  }\n\n  connect(cb) {\n    if (!cb) {\n      return;\n    }\n    if (this._fatalError || this._protocolError) {\n      return cb(this._fatalError || this._protocolError);\n    }\n    if (this._handshakePacket) {\n      return cb(null, this);\n    }\n    let connectCalled = 0;\n    function callbackOnce(isErrorHandler) {\n      return function(param) {\n        if (!connectCalled) {\n          if (isErrorHandler) {\n            cb(param);\n          } else {\n            cb(null, param);\n          }\n        }\n        connectCalled = 1;\n      };\n    }\n    this.once('error', callbackOnce(true));\n    this.once('connect', callbackOnce(false));\n  }\n\n  // ===================================\n  // outgoing server connection methods\n  // ===================================\n  writeColumns(columns) {\n    this.writePacket(Packets.ResultSetHeader.toPacket(columns.length));\n    columns.forEach(column => {\n      this.writePacket(\n        Packets.ColumnDefinition.toPacket(column, this.serverConfig.encoding)\n      );\n    });\n    this.writeEof();\n  }\n\n  // row is array of columns, not hash\n  writeTextRow(column) {\n    this.writePacket(\n      Packets.TextRow.toPacket(column, this.serverConfig.encoding)\n    );\n  }\n\n  writeBinaryRow(column) {\n    this.writePacket(\n      Packets.BinaryRow.toPacket(column, this.serverConfig.encoding)\n    );\n  }\n\n  writeTextResult(rows, columns, binary=false) {\n    this.writeColumns(columns);\n    rows.forEach(row => {\n      const arrayRow = new Array(columns.length);\n      columns.forEach(column => {\n        arrayRow.push(row[column.name]);\n      });\n      if(binary) {\n        this.writeBinaryRow(arrayRow);\n      }\n      else this.writeTextRow(arrayRow);\n    });\n    this.writeEof();\n  }\n\n  writeEof(warnings, statusFlags) {\n    this.writePacket(Packets.EOF.toPacket(warnings, statusFlags));\n  }\n\n  writeOk(args) {\n    if (!args) {\n      args = { affectedRows: 0 };\n    }\n    this.writePacket(Packets.OK.toPacket(args, this.serverConfig.encoding));\n  }\n\n  writeError(args) {\n    // if we want to send error before initial hello was sent, use default encoding\n    const encoding = this.serverConfig ? this.serverConfig.encoding : 'cesu8';\n    this.writePacket(Packets.Error.toPacket(args, encoding));\n  }\n\n  serverHandshake(args) {\n    this.serverConfig = args;\n    this.serverConfig.encoding =\n      CharsetToEncoding[this.serverConfig.characterSet];\n    return this.addCommand(new Commands.ServerHandshake(args));\n  }\n\n  // ===============================================================\n  end(callback) {\n    if (this.config.isServer) {\n      this._closing = true;\n      const quitCmd = new EventEmitter();\n      setImmediate(() => {\n        this.stream.end();\n        quitCmd.emit('end');\n      });\n      return quitCmd;\n    }\n    // trigger error if more commands enqueued after end command\n    const quitCmd = this.addCommand(new Commands.Quit(callback));\n    this.addCommand = this._addCommandClosedState;\n    return quitCmd;\n  }\n\n  static createQuery(sql, values, cb, config) {\n    let options = {\n      rowsAsArray: config.rowsAsArray,\n      infileStreamFactory: config.infileStreamFactory\n    };\n    if (typeof sql === 'object') {\n      // query(options, cb)\n      options = {\n        ...options,\n        ...sql,\n        sql: sql.sql,\n        values: sql.values\n      };\n      if (typeof values === 'function') {\n        cb = values;\n      } else if (values !== undefined) {\n        options.values = values;\n      }\n    } else if (typeof values === 'function') {\n      // query(sql, cb)\n      cb = values;\n      options.sql = sql;\n      options.values = undefined;\n    } else {\n      // query(sql, values, cb)\n      options.sql = sql;\n      options.values = values;\n    }\n    return new Commands.Query(options, cb);\n  }\n\n  static statementKey(options) {\n    return (\n      `${typeof options.nestTables}/${options.nestTables}/${options.rowsAsArray}${options.sql}`\n    );\n  }\n}\n\nmodule.exports = Connection;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/connection.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/connection_config.js":
/*!******************************************************!*\
  !*** ./node_modules/mysql2/lib/connection_config.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// This file was modified by Oracle on September 21, 2021.\n// New connection options for additional authentication factors were\n// introduced.\n// Multi-factor authentication capability is now enabled if one of these\n// options is used.\n// Modifications copyright (c) 2021, Oracle and/or its affiliates.\n\n\n\nconst { URL } = __webpack_require__(/*! url */ \"url\");\nconst ClientConstants = __webpack_require__(/*! ./constants/client */ \"(rsc)/./node_modules/mysql2/lib/constants/client.js\");\nconst Charsets = __webpack_require__(/*! ./constants/charsets */ \"(rsc)/./node_modules/mysql2/lib/constants/charsets.js\");\nconst { version } = __webpack_require__(/*! ../package.json */ \"(rsc)/./node_modules/mysql2/package.json\")\nlet SSLProfiles = null;\n\nconst validOptions = {\n  authPlugins: 1,\n  authSwitchHandler: 1,\n  bigNumberStrings: 1,\n  charset: 1,\n  charsetNumber: 1,\n  compress: 1,\n  connectAttributes: 1,\n  connectTimeout: 1,\n  database: 1,\n  dateStrings: 1,\n  debug: 1,\n  decimalNumbers: 1,\n  enableKeepAlive: 1,\n  flags: 1,\n  host: 1,\n  insecureAuth: 1,\n  infileStreamFactory: 1,\n  isServer: 1,\n  keepAliveInitialDelay: 1,\n  localAddress: 1,\n  maxPreparedStatements: 1,\n  multipleStatements: 1,\n  namedPlaceholders: 1,\n  nestTables: 1,\n  password: 1,\n  // with multi-factor authentication, the main password (used for the first\n  // authentication factor) can be provided via password1\n  password1: 1,\n  password2: 1,\n  password3: 1,\n  passwordSha1: 1,\n  pool: 1,\n  port: 1,\n  queryFormat: 1,\n  rowsAsArray: 1,\n  socketPath: 1,\n  ssl: 1,\n  stream: 1,\n  stringifyObjects: 1,\n  supportBigNumbers: 1,\n  timezone: 1,\n  trace: 1,\n  typeCast: 1,\n  uri: 1,\n  user: 1,\n  // These options are used for Pool\n  connectionLimit: 1,\n  maxIdle: 1,\n  idleTimeout: 1,\n  Promise: 1,\n  queueLimit: 1,\n  waitForConnections: 1,\n  jsonStrings: 1\n};\n\nclass ConnectionConfig {\n  constructor(options) {\n    if (typeof options === 'string') {\n      options = ConnectionConfig.parseUrl(options);\n    } else if (options && options.uri) {\n      const uriOptions = ConnectionConfig.parseUrl(options.uri);\n      for (const key in uriOptions) {\n        if (!Object.prototype.hasOwnProperty.call(uriOptions, key)) continue;\n        if (options[key]) continue;\n        options[key] = uriOptions[key];\n      }\n    }\n    for (const key in options) {\n      if (!Object.prototype.hasOwnProperty.call(options, key)) continue;\n      if (validOptions[key] !== 1) {\n        // REVIEW: Should this be emitted somehow?\n        // eslint-disable-next-line no-console\n        console.error(\n          `Ignoring invalid configuration option passed to Connection: ${key}. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection`\n        );\n      }\n    }\n    this.isServer = options.isServer;\n    this.stream = options.stream;\n    this.host = options.host || 'localhost';\n    this.port = (typeof options.port === 'string' ? parseInt(options.port, 10) : options.port)|| 3306;\n    this.localAddress = options.localAddress;\n    this.socketPath = options.socketPath;\n    this.user = options.user || undefined;\n    // for the purpose of multi-factor authentication, or not, the main\n    // password (used for the 1st authentication factor) can also be\n    // provided via the \"password1\" option\n    this.password = options.password || options.password1 || undefined;\n    this.password2 = options.password2 || undefined;\n    this.password3 = options.password3 || undefined;\n    this.passwordSha1 = options.passwordSha1 || undefined;\n    this.database = options.database;\n    this.connectTimeout = isNaN(options.connectTimeout)\n      ? 10 * 1000\n      : options.connectTimeout;\n    this.insecureAuth = options.insecureAuth || false;\n    this.infileStreamFactory = options.infileStreamFactory || undefined;\n    this.supportBigNumbers = options.supportBigNumbers || false;\n    this.bigNumberStrings = options.bigNumberStrings || false;\n    this.decimalNumbers = options.decimalNumbers || false;\n    this.dateStrings = options.dateStrings || false;\n    this.debug = options.debug;\n    this.trace = options.trace !== false;\n    this.stringifyObjects = options.stringifyObjects || false;\n    this.enableKeepAlive = options.enableKeepAlive !== false;\n    this.keepAliveInitialDelay = options.keepAliveInitialDelay;\n    if (\n      options.timezone &&\n      !/^(?:local|Z|[ +-]\\d\\d:\\d\\d)$/.test(options.timezone)\n    ) {\n      // strictly supports timezones specified by mysqljs/mysql:\n      // https://github.com/mysqljs/mysql#user-content-connection-options\n      // eslint-disable-next-line no-console\n      console.error(\n        `Ignoring invalid timezone passed to Connection: ${options.timezone}. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection`\n      );\n      // SqlStrings falls back to UTC on invalid timezone\n      this.timezone = 'Z';\n    } else {\n      this.timezone = options.timezone || 'local';\n    }\n    this.queryFormat = options.queryFormat;\n    this.pool = options.pool || undefined;\n    this.ssl =\n      typeof options.ssl === 'string'\n        ? ConnectionConfig.getSSLProfile(options.ssl)\n        : options.ssl || false;\n    this.multipleStatements = options.multipleStatements || false;\n    this.rowsAsArray = options.rowsAsArray || false;\n    this.namedPlaceholders = options.namedPlaceholders || false;\n    this.nestTables =\n      options.nestTables === undefined ? undefined : options.nestTables;\n    this.typeCast = options.typeCast === undefined ? true : options.typeCast;\n    if (this.timezone[0] === ' ') {\n      // \"+\" is a url encoded char for space so it\n      // gets translated to space when giving a\n      // connection string..\n      this.timezone = `+${this.timezone.slice(1)}`;\n    }\n    if (this.ssl) {\n      if (typeof this.ssl !== 'object') {\n        throw new TypeError(\n          `SSL profile must be an object, instead it's a ${typeof this.ssl}`\n        );\n      }\n      // Default rejectUnauthorized to true\n      this.ssl.rejectUnauthorized = this.ssl.rejectUnauthorized !== false;\n    }\n    this.maxPacketSize = 0;\n    this.charsetNumber = options.charset\n      ? ConnectionConfig.getCharsetNumber(options.charset)\n      : options.charsetNumber || Charsets.UTF8MB4_UNICODE_CI;\n    this.compress = options.compress || false;\n    this.authPlugins = options.authPlugins;\n    this.authSwitchHandler = options.authSwitchHandler;\n    this.clientFlags = ConnectionConfig.mergeFlags(\n      ConnectionConfig.getDefaultFlags(options),\n      options.flags || ''\n    );\n    // Default connection attributes\n    // https://dev.mysql.com/doc/refman/8.0/en/performance-schema-connection-attribute-tables.html\n    const defaultConnectAttributes =  {\n      _client_name: 'Node-MySQL-2',\n      _client_version: version\n    };\n    this.connectAttributes = { ...defaultConnectAttributes, ...(options.connectAttributes || {})};\n    this.maxPreparedStatements = options.maxPreparedStatements || 16000;\n    this.jsonStrings = options.jsonStrings || false;\n  }\n\n  static mergeFlags(default_flags, user_flags) {\n    let flags = 0x0,\n      i;\n    if (!Array.isArray(user_flags)) {\n      user_flags = String(user_flags || '')\n        .toUpperCase()\n        .split(/\\s*,+\\s*/);\n    }\n    // add default flags unless \"blacklisted\"\n    for (i in default_flags) {\n      if (user_flags.indexOf(`-${default_flags[i]}`) >= 0) {\n        continue;\n      }\n      flags |= ClientConstants[default_flags[i]] || 0x0;\n    }\n    // add user flags unless already already added\n    for (i in user_flags) {\n      if (user_flags[i][0] === '-') {\n        continue;\n      }\n      if (default_flags.indexOf(user_flags[i]) >= 0) {\n        continue;\n      }\n      flags |= ClientConstants[user_flags[i]] || 0x0;\n    }\n    return flags;\n  }\n\n  static getDefaultFlags(options) {\n    const defaultFlags = [\n      'LONG_PASSWORD',\n      'FOUND_ROWS',\n      'LONG_FLAG',\n      'CONNECT_WITH_DB',\n      'ODBC',\n      'LOCAL_FILES',\n      'IGNORE_SPACE',\n      'PROTOCOL_41',\n      'IGNORE_SIGPIPE',\n      'TRANSACTIONS',\n      'RESERVED',\n      'SECURE_CONNECTION',\n      'MULTI_RESULTS',\n      'TRANSACTIONS',\n      'SESSION_TRACK',\n      'CONNECT_ATTRS'\n    ];\n    if (options && options.multipleStatements) {\n      defaultFlags.push('MULTI_STATEMENTS');\n    }\n    defaultFlags.push('PLUGIN_AUTH');\n    defaultFlags.push('PLUGIN_AUTH_LENENC_CLIENT_DATA');\n\n    return defaultFlags;\n  }\n\n  static getCharsetNumber(charset) {\n    const num = Charsets[charset.toUpperCase()];\n    if (num === undefined) {\n      throw new TypeError(`Unknown charset '${charset}'`);\n    }\n    return num;\n  }\n\n  static getSSLProfile(name) {\n    if (!SSLProfiles) {\n      SSLProfiles = __webpack_require__(/*! ./constants/ssl_profiles.js */ \"(rsc)/./node_modules/mysql2/lib/constants/ssl_profiles.js\");\n    }\n    const ssl = SSLProfiles[name];\n    if (ssl === undefined) {\n      throw new TypeError(`Unknown SSL profile '${name}'`);\n    }\n    return ssl;\n  }\n\n  static parseUrl(url) {\n    const parsedUrl = new URL(url);\n    const options = {\n      host: decodeURIComponent(parsedUrl.hostname),\n      port: parseInt(parsedUrl.port, 10),\n      database: decodeURIComponent(parsedUrl.pathname.slice(1)),\n      user: decodeURIComponent(parsedUrl.username),\n      password: decodeURIComponent(parsedUrl.password),\n    };\n    parsedUrl.searchParams.forEach((value, key) => {\n      try {\n        // Try to parse this as a JSON expression first\n        options[key] = JSON.parse(value);\n      } catch (err) {\n        // Otherwise assume it is a plain string\n        options[key] = value;\n      }\n    });\n    return options;\n  }\n}\n\nmodule.exports = ConnectionConfig;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/connection_config.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/constants/charset_encodings.js":
/*!****************************************************************!*\
  !*** ./node_modules/mysql2/lib/constants/charset_encodings.js ***!
  \****************************************************************/
/***/ ((module) => {

eval("\n\n// see tools/generate-charset-mapping.js\n// basicalliy result of \"SHOW COLLATION\" query\n\nmodule.exports = [\n  'utf8',\n  'big5',\n  'latin2',\n  'dec8',\n  'cp850',\n  'latin1',\n  'hp8',\n  'koi8r',\n  'latin1',\n  'latin2',\n  'swe7',\n  'ascii',\n  'eucjp',\n  'sjis',\n  'cp1251',\n  'latin1',\n  'hebrew',\n  'utf8',\n  'tis620',\n  'euckr',\n  'latin7',\n  'latin2',\n  'koi8u',\n  'cp1251',\n  'gb2312',\n  'greek',\n  'cp1250',\n  'latin2',\n  'gbk',\n  'cp1257',\n  'latin5',\n  'latin1',\n  'armscii8',\n  'cesu8',\n  'cp1250',\n  'ucs2',\n  'cp866',\n  'keybcs2',\n  'macintosh',\n  'macroman',\n  'cp852',\n  'latin7',\n  'latin7',\n  'macintosh',\n  'cp1250',\n  'utf8',\n  'utf8',\n  'latin1',\n  'latin1',\n  'latin1',\n  'cp1251',\n  'cp1251',\n  'cp1251',\n  'macroman',\n  'utf16',\n  'utf16',\n  'utf16-le',\n  'cp1256',\n  'cp1257',\n  'cp1257',\n  'utf32',\n  'utf32',\n  'utf16-le',\n  'binary',\n  'armscii8',\n  'ascii',\n  'cp1250',\n  'cp1256',\n  'cp866',\n  'dec8',\n  'greek',\n  'hebrew',\n  'hp8',\n  'keybcs2',\n  'koi8r',\n  'koi8u',\n  'cesu8',\n  'latin2',\n  'latin5',\n  'latin7',\n  'cp850',\n  'cp852',\n  'swe7',\n  'cesu8',\n  'big5',\n  'euckr',\n  'gb2312',\n  'gbk',\n  'sjis',\n  'tis620',\n  'ucs2',\n  'eucjp',\n  'geostd8',\n  'geostd8',\n  'latin1',\n  'cp932',\n  'cp932',\n  'eucjpms',\n  'eucjpms',\n  'cp1250',\n  'utf16',\n  'utf16',\n  'utf16',\n  'utf16',\n  'utf16',\n  'utf16',\n  'utf16',\n  'utf16',\n  'utf16',\n  'utf16',\n  'utf16',\n  'utf16',\n  'utf16',\n  'utf16',\n  'utf16',\n  'utf16',\n  'utf16',\n  'utf16',\n  'utf16',\n  'utf16',\n  'utf16',\n  'utf16',\n  'utf16',\n  'utf16',\n  'utf16',\n  'utf8',\n  'utf8',\n  'utf8',\n  'ucs2',\n  'ucs2',\n  'ucs2',\n  'ucs2',\n  'ucs2',\n  'ucs2',\n  'ucs2',\n  'ucs2',\n  'ucs2',\n  'ucs2',\n  'ucs2',\n  'ucs2',\n  'ucs2',\n  'ucs2',\n  'ucs2',\n  'ucs2',\n  'ucs2',\n  'ucs2',\n  'ucs2',\n  'ucs2',\n  'ucs2',\n  'ucs2',\n  'ucs2',\n  'ucs2',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'ucs2',\n  'utf32',\n  'utf32',\n  'utf32',\n  'utf32',\n  'utf32',\n  'utf32',\n  'utf32',\n  'utf32',\n  'utf32',\n  'utf32',\n  'utf32',\n  'utf32',\n  'utf32',\n  'utf32',\n  'utf32',\n  'utf32',\n  'utf32',\n  'utf32',\n  'utf32',\n  'utf32',\n  'utf32',\n  'utf32',\n  'utf32',\n  'utf32',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'cesu8',\n  'cesu8',\n  'cesu8',\n  'cesu8',\n  'cesu8',\n  'cesu8',\n  'cesu8',\n  'cesu8',\n  'cesu8',\n  'cesu8',\n  'cesu8',\n  'cesu8',\n  'cesu8',\n  'cesu8',\n  'cesu8',\n  'cesu8',\n  'cesu8',\n  'cesu8',\n  'cesu8',\n  'cesu8',\n  'cesu8',\n  'cesu8',\n  'cesu8',\n  'cesu8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'cesu8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'gb18030',\n  'gb18030',\n  'gb18030',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8',\n  'utf8'\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb25zdGFudHMvY2hhcnNldF9lbmNvZGluZ3MuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVhbF9lc3RhdGUvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb25zdGFudHMvY2hhcnNldF9lbmNvZGluZ3MuanM/NTZkNCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8vIHNlZSB0b29scy9nZW5lcmF0ZS1jaGFyc2V0LW1hcHBpbmcuanNcbi8vIGJhc2ljYWxsaXkgcmVzdWx0IG9mIFwiU0hPVyBDT0xMQVRJT05cIiBxdWVyeVxuXG5tb2R1bGUuZXhwb3J0cyA9IFtcbiAgJ3V0ZjgnLFxuICAnYmlnNScsXG4gICdsYXRpbjInLFxuICAnZGVjOCcsXG4gICdjcDg1MCcsXG4gICdsYXRpbjEnLFxuICAnaHA4JyxcbiAgJ2tvaThyJyxcbiAgJ2xhdGluMScsXG4gICdsYXRpbjInLFxuICAnc3dlNycsXG4gICdhc2NpaScsXG4gICdldWNqcCcsXG4gICdzamlzJyxcbiAgJ2NwMTI1MScsXG4gICdsYXRpbjEnLFxuICAnaGVicmV3JyxcbiAgJ3V0ZjgnLFxuICAndGlzNjIwJyxcbiAgJ2V1Y2tyJyxcbiAgJ2xhdGluNycsXG4gICdsYXRpbjInLFxuICAna29pOHUnLFxuICAnY3AxMjUxJyxcbiAgJ2diMjMxMicsXG4gICdncmVlaycsXG4gICdjcDEyNTAnLFxuICAnbGF0aW4yJyxcbiAgJ2diaycsXG4gICdjcDEyNTcnLFxuICAnbGF0aW41JyxcbiAgJ2xhdGluMScsXG4gICdhcm1zY2lpOCcsXG4gICdjZXN1OCcsXG4gICdjcDEyNTAnLFxuICAndWNzMicsXG4gICdjcDg2NicsXG4gICdrZXliY3MyJyxcbiAgJ21hY2ludG9zaCcsXG4gICdtYWNyb21hbicsXG4gICdjcDg1MicsXG4gICdsYXRpbjcnLFxuICAnbGF0aW43JyxcbiAgJ21hY2ludG9zaCcsXG4gICdjcDEyNTAnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ2xhdGluMScsXG4gICdsYXRpbjEnLFxuICAnbGF0aW4xJyxcbiAgJ2NwMTI1MScsXG4gICdjcDEyNTEnLFxuICAnY3AxMjUxJyxcbiAgJ21hY3JvbWFuJyxcbiAgJ3V0ZjE2JyxcbiAgJ3V0ZjE2JyxcbiAgJ3V0ZjE2LWxlJyxcbiAgJ2NwMTI1NicsXG4gICdjcDEyNTcnLFxuICAnY3AxMjU3JyxcbiAgJ3V0ZjMyJyxcbiAgJ3V0ZjMyJyxcbiAgJ3V0ZjE2LWxlJyxcbiAgJ2JpbmFyeScsXG4gICdhcm1zY2lpOCcsXG4gICdhc2NpaScsXG4gICdjcDEyNTAnLFxuICAnY3AxMjU2JyxcbiAgJ2NwODY2JyxcbiAgJ2RlYzgnLFxuICAnZ3JlZWsnLFxuICAnaGVicmV3JyxcbiAgJ2hwOCcsXG4gICdrZXliY3MyJyxcbiAgJ2tvaThyJyxcbiAgJ2tvaTh1JyxcbiAgJ2Nlc3U4JyxcbiAgJ2xhdGluMicsXG4gICdsYXRpbjUnLFxuICAnbGF0aW43JyxcbiAgJ2NwODUwJyxcbiAgJ2NwODUyJyxcbiAgJ3N3ZTcnLFxuICAnY2VzdTgnLFxuICAnYmlnNScsXG4gICdldWNrcicsXG4gICdnYjIzMTInLFxuICAnZ2JrJyxcbiAgJ3NqaXMnLFxuICAndGlzNjIwJyxcbiAgJ3VjczInLFxuICAnZXVjanAnLFxuICAnZ2Vvc3RkOCcsXG4gICdnZW9zdGQ4JyxcbiAgJ2xhdGluMScsXG4gICdjcDkzMicsXG4gICdjcDkzMicsXG4gICdldWNqcG1zJyxcbiAgJ2V1Y2pwbXMnLFxuICAnY3AxMjUwJyxcbiAgJ3V0ZjE2JyxcbiAgJ3V0ZjE2JyxcbiAgJ3V0ZjE2JyxcbiAgJ3V0ZjE2JyxcbiAgJ3V0ZjE2JyxcbiAgJ3V0ZjE2JyxcbiAgJ3V0ZjE2JyxcbiAgJ3V0ZjE2JyxcbiAgJ3V0ZjE2JyxcbiAgJ3V0ZjE2JyxcbiAgJ3V0ZjE2JyxcbiAgJ3V0ZjE2JyxcbiAgJ3V0ZjE2JyxcbiAgJ3V0ZjE2JyxcbiAgJ3V0ZjE2JyxcbiAgJ3V0ZjE2JyxcbiAgJ3V0ZjE2JyxcbiAgJ3V0ZjE2JyxcbiAgJ3V0ZjE2JyxcbiAgJ3V0ZjE2JyxcbiAgJ3V0ZjE2JyxcbiAgJ3V0ZjE2JyxcbiAgJ3V0ZjE2JyxcbiAgJ3V0ZjE2JyxcbiAgJ3V0ZjE2JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3VjczInLFxuICAndWNzMicsXG4gICd1Y3MyJyxcbiAgJ3VjczInLFxuICAndWNzMicsXG4gICd1Y3MyJyxcbiAgJ3VjczInLFxuICAndWNzMicsXG4gICd1Y3MyJyxcbiAgJ3VjczInLFxuICAndWNzMicsXG4gICd1Y3MyJyxcbiAgJ3VjczInLFxuICAndWNzMicsXG4gICd1Y3MyJyxcbiAgJ3VjczInLFxuICAndWNzMicsXG4gICd1Y3MyJyxcbiAgJ3VjczInLFxuICAndWNzMicsXG4gICd1Y3MyJyxcbiAgJ3VjczInLFxuICAndWNzMicsXG4gICd1Y3MyJyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndWNzMicsXG4gICd1dGYzMicsXG4gICd1dGYzMicsXG4gICd1dGYzMicsXG4gICd1dGYzMicsXG4gICd1dGYzMicsXG4gICd1dGYzMicsXG4gICd1dGYzMicsXG4gICd1dGYzMicsXG4gICd1dGYzMicsXG4gICd1dGYzMicsXG4gICd1dGYzMicsXG4gICd1dGYzMicsXG4gICd1dGYzMicsXG4gICd1dGYzMicsXG4gICd1dGYzMicsXG4gICd1dGYzMicsXG4gICd1dGYzMicsXG4gICd1dGYzMicsXG4gICd1dGYzMicsXG4gICd1dGYzMicsXG4gICd1dGYzMicsXG4gICd1dGYzMicsXG4gICd1dGYzMicsXG4gICd1dGYzMicsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAnY2VzdTgnLFxuICAnY2VzdTgnLFxuICAnY2VzdTgnLFxuICAnY2VzdTgnLFxuICAnY2VzdTgnLFxuICAnY2VzdTgnLFxuICAnY2VzdTgnLFxuICAnY2VzdTgnLFxuICAnY2VzdTgnLFxuICAnY2VzdTgnLFxuICAnY2VzdTgnLFxuICAnY2VzdTgnLFxuICAnY2VzdTgnLFxuICAnY2VzdTgnLFxuICAnY2VzdTgnLFxuICAnY2VzdTgnLFxuICAnY2VzdTgnLFxuICAnY2VzdTgnLFxuICAnY2VzdTgnLFxuICAnY2VzdTgnLFxuICAnY2VzdTgnLFxuICAnY2VzdTgnLFxuICAnY2VzdTgnLFxuICAnY2VzdTgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICdjZXN1OCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICdnYjE4MDMwJyxcbiAgJ2diMTgwMzAnLFxuICAnZ2IxODAzMCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4JyxcbiAgJ3V0ZjgnLFxuICAndXRmOCcsXG4gICd1dGY4J1xuXTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/constants/charset_encodings.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/constants/charsets.js":
/*!*******************************************************!*\
  !*** ./node_modules/mysql2/lib/constants/charsets.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nexports.BIG5_CHINESE_CI = 1;\nexports.LATIN2_CZECH_CS = 2;\nexports.DEC8_SWEDISH_CI = 3;\nexports.CP850_GENERAL_CI = 4;\nexports.LATIN1_GERMAN1_CI = 5;\nexports.HP8_ENGLISH_CI = 6;\nexports.KOI8R_GENERAL_CI = 7;\nexports.LATIN1_SWEDISH_CI = 8;\nexports.LATIN2_GENERAL_CI = 9;\nexports.SWE7_SWEDISH_CI = 10;\nexports.ASCII_GENERAL_CI = 11;\nexports.UJIS_JAPANESE_CI = 12;\nexports.SJIS_JAPANESE_CI = 13;\nexports.CP1251_BULGARIAN_CI = 14;\nexports.LATIN1_DANISH_CI = 15;\nexports.HEBREW_GENERAL_CI = 16;\nexports.TIS620_THAI_CI = 18;\nexports.EUCKR_KOREAN_CI = 19;\nexports.LATIN7_ESTONIAN_CS = 20;\nexports.LATIN2_HUNGARIAN_CI = 21;\nexports.KOI8U_GENERAL_CI = 22;\nexports.CP1251_UKRAINIAN_CI = 23;\nexports.GB2312_CHINESE_CI = 24;\nexports.GREEK_GENERAL_CI = 25;\nexports.CP1250_GENERAL_CI = 26;\nexports.LATIN2_CROATIAN_CI = 27;\nexports.GBK_CHINESE_CI = 28;\nexports.CP1257_LITHUANIAN_CI = 29;\nexports.LATIN5_TURKISH_CI = 30;\nexports.LATIN1_GERMAN2_CI = 31;\nexports.ARMSCII8_GENERAL_CI = 32;\nexports.UTF8_GENERAL_CI = 33;\nexports.CP1250_CZECH_CS = 34;\nexports.UCS2_GENERAL_CI = 35;\nexports.CP866_GENERAL_CI = 36;\nexports.KEYBCS2_GENERAL_CI = 37;\nexports.MACCE_GENERAL_CI = 38;\nexports.MACROMAN_GENERAL_CI = 39;\nexports.CP852_GENERAL_CI = 40;\nexports.LATIN7_GENERAL_CI = 41;\nexports.LATIN7_GENERAL_CS = 42;\nexports.MACCE_BIN = 43;\nexports.CP1250_CROATIAN_CI = 44;\nexports.UTF8MB4_GENERAL_CI = 45;\nexports.UTF8MB4_BIN = 46;\nexports.LATIN1_BIN = 47;\nexports.LATIN1_GENERAL_CI = 48;\nexports.LATIN1_GENERAL_CS = 49;\nexports.CP1251_BIN = 50;\nexports.CP1251_GENERAL_CI = 51;\nexports.CP1251_GENERAL_CS = 52;\nexports.MACROMAN_BIN = 53;\nexports.UTF16_GENERAL_CI = 54;\nexports.UTF16_BIN = 55;\nexports.UTF16LE_GENERAL_CI = 56;\nexports.CP1256_GENERAL_CI = 57;\nexports.CP1257_BIN = 58;\nexports.CP1257_GENERAL_CI = 59;\nexports.UTF32_GENERAL_CI = 60;\nexports.UTF32_BIN = 61;\nexports.UTF16LE_BIN = 62;\nexports.BINARY = 63;\nexports.ARMSCII8_BIN = 64;\nexports.ASCII_BIN = 65;\nexports.CP1250_BIN = 66;\nexports.CP1256_BIN = 67;\nexports.CP866_BIN = 68;\nexports.DEC8_BIN = 69;\nexports.GREEK_BIN = 70;\nexports.HEBREW_BIN = 71;\nexports.HP8_BIN = 72;\nexports.KEYBCS2_BIN = 73;\nexports.KOI8R_BIN = 74;\nexports.KOI8U_BIN = 75;\nexports.UTF8_TOLOWER_CI = 76;\nexports.LATIN2_BIN = 77;\nexports.LATIN5_BIN = 78;\nexports.LATIN7_BIN = 79;\nexports.CP850_BIN = 80;\nexports.CP852_BIN = 81;\nexports.SWE7_BIN = 82;\nexports.UTF8_BIN = 83;\nexports.BIG5_BIN = 84;\nexports.EUCKR_BIN = 85;\nexports.GB2312_BIN = 86;\nexports.GBK_BIN = 87;\nexports.SJIS_BIN = 88;\nexports.TIS620_BIN = 89;\nexports.UCS2_BIN = 90;\nexports.UJIS_BIN = 91;\nexports.GEOSTD8_GENERAL_CI = 92;\nexports.GEOSTD8_BIN = 93;\nexports.LATIN1_SPANISH_CI = 94;\nexports.CP932_JAPANESE_CI = 95;\nexports.CP932_BIN = 96;\nexports.EUCJPMS_JAPANESE_CI = 97;\nexports.EUCJPMS_BIN = 98;\nexports.CP1250_POLISH_CI = 99;\nexports.UTF16_UNICODE_CI = 101;\nexports.UTF16_ICELANDIC_CI = 102;\nexports.UTF16_LATVIAN_CI = 103;\nexports.UTF16_ROMANIAN_CI = 104;\nexports.UTF16_SLOVENIAN_CI = 105;\nexports.UTF16_POLISH_CI = 106;\nexports.UTF16_ESTONIAN_CI = 107;\nexports.UTF16_SPANISH_CI = 108;\nexports.UTF16_SWEDISH_CI = 109;\nexports.UTF16_TURKISH_CI = 110;\nexports.UTF16_CZECH_CI = 111;\nexports.UTF16_DANISH_CI = 112;\nexports.UTF16_LITHUANIAN_CI = 113;\nexports.UTF16_SLOVAK_CI = 114;\nexports.UTF16_SPANISH2_CI = 115;\nexports.UTF16_ROMAN_CI = 116;\nexports.UTF16_PERSIAN_CI = 117;\nexports.UTF16_ESPERANTO_CI = 118;\nexports.UTF16_HUNGARIAN_CI = 119;\nexports.UTF16_SINHALA_CI = 120;\nexports.UTF16_GERMAN2_CI = 121;\nexports.UTF16_CROATIAN_CI = 122;\nexports.UTF16_UNICODE_520_CI = 123;\nexports.UTF16_VIETNAMESE_CI = 124;\nexports.UCS2_UNICODE_CI = 128;\nexports.UCS2_ICELANDIC_CI = 129;\nexports.UCS2_LATVIAN_CI = 130;\nexports.UCS2_ROMANIAN_CI = 131;\nexports.UCS2_SLOVENIAN_CI = 132;\nexports.UCS2_POLISH_CI = 133;\nexports.UCS2_ESTONIAN_CI = 134;\nexports.UCS2_SPANISH_CI = 135;\nexports.UCS2_SWEDISH_CI = 136;\nexports.UCS2_TURKISH_CI = 137;\nexports.UCS2_CZECH_CI = 138;\nexports.UCS2_DANISH_CI = 139;\nexports.UCS2_LITHUANIAN_CI = 140;\nexports.UCS2_SLOVAK_CI = 141;\nexports.UCS2_SPANISH2_CI = 142;\nexports.UCS2_ROMAN_CI = 143;\nexports.UCS2_PERSIAN_CI = 144;\nexports.UCS2_ESPERANTO_CI = 145;\nexports.UCS2_HUNGARIAN_CI = 146;\nexports.UCS2_SINHALA_CI = 147;\nexports.UCS2_GERMAN2_CI = 148;\nexports.UCS2_CROATIAN_CI = 149;\nexports.UCS2_UNICODE_520_CI = 150;\nexports.UCS2_VIETNAMESE_CI = 151;\nexports.UCS2_GENERAL_MYSQL500_CI = 159;\nexports.UTF32_UNICODE_CI = 160;\nexports.UTF32_ICELANDIC_CI = 161;\nexports.UTF32_LATVIAN_CI = 162;\nexports.UTF32_ROMANIAN_CI = 163;\nexports.UTF32_SLOVENIAN_CI = 164;\nexports.UTF32_POLISH_CI = 165;\nexports.UTF32_ESTONIAN_CI = 166;\nexports.UTF32_SPANISH_CI = 167;\nexports.UTF32_SWEDISH_CI = 168;\nexports.UTF32_TURKISH_CI = 169;\nexports.UTF32_CZECH_CI = 170;\nexports.UTF32_DANISH_CI = 171;\nexports.UTF32_LITHUANIAN_CI = 172;\nexports.UTF32_SLOVAK_CI = 173;\nexports.UTF32_SPANISH2_CI = 174;\nexports.UTF32_ROMAN_CI = 175;\nexports.UTF32_PERSIAN_CI = 176;\nexports.UTF32_ESPERANTO_CI = 177;\nexports.UTF32_HUNGARIAN_CI = 178;\nexports.UTF32_SINHALA_CI = 179;\nexports.UTF32_GERMAN2_CI = 180;\nexports.UTF32_CROATIAN_CI = 181;\nexports.UTF32_UNICODE_520_CI = 182;\nexports.UTF32_VIETNAMESE_CI = 183;\nexports.UTF8_UNICODE_CI = 192;\nexports.UTF8_ICELANDIC_CI = 193;\nexports.UTF8_LATVIAN_CI = 194;\nexports.UTF8_ROMANIAN_CI = 195;\nexports.UTF8_SLOVENIAN_CI = 196;\nexports.UTF8_POLISH_CI = 197;\nexports.UTF8_ESTONIAN_CI = 198;\nexports.UTF8_SPANISH_CI = 199;\nexports.UTF8_SWEDISH_CI = 200;\nexports.UTF8_TURKISH_CI = 201;\nexports.UTF8_CZECH_CI = 202;\nexports.UTF8_DANISH_CI = 203;\nexports.UTF8_LITHUANIAN_CI = 204;\nexports.UTF8_SLOVAK_CI = 205;\nexports.UTF8_SPANISH2_CI = 206;\nexports.UTF8_ROMAN_CI = 207;\nexports.UTF8_PERSIAN_CI = 208;\nexports.UTF8_ESPERANTO_CI = 209;\nexports.UTF8_HUNGARIAN_CI = 210;\nexports.UTF8_SINHALA_CI = 211;\nexports.UTF8_GERMAN2_CI = 212;\nexports.UTF8_CROATIAN_CI = 213;\nexports.UTF8_UNICODE_520_CI = 214;\nexports.UTF8_VIETNAMESE_CI = 215;\nexports.UTF8_GENERAL_MYSQL500_CI = 223;\nexports.UTF8MB4_UNICODE_CI = 224;\nexports.UTF8MB4_ICELANDIC_CI = 225;\nexports.UTF8MB4_LATVIAN_CI = 226;\nexports.UTF8MB4_ROMANIAN_CI = 227;\nexports.UTF8MB4_SLOVENIAN_CI = 228;\nexports.UTF8MB4_POLISH_CI = 229;\nexports.UTF8MB4_ESTONIAN_CI = 230;\nexports.UTF8MB4_SPANISH_CI = 231;\nexports.UTF8MB4_SWEDISH_CI = 232;\nexports.UTF8MB4_TURKISH_CI = 233;\nexports.UTF8MB4_CZECH_CI = 234;\nexports.UTF8MB4_DANISH_CI = 235;\nexports.UTF8MB4_LITHUANIAN_CI = 236;\nexports.UTF8MB4_SLOVAK_CI = 237;\nexports.UTF8MB4_SPANISH2_CI = 238;\nexports.UTF8MB4_ROMAN_CI = 239;\nexports.UTF8MB4_PERSIAN_CI = 240;\nexports.UTF8MB4_ESPERANTO_CI = 241;\nexports.UTF8MB4_HUNGARIAN_CI = 242;\nexports.UTF8MB4_SINHALA_CI = 243;\nexports.UTF8MB4_GERMAN2_CI = 244;\nexports.UTF8MB4_CROATIAN_CI = 245;\nexports.UTF8MB4_UNICODE_520_CI = 246;\nexports.UTF8MB4_VIETNAMESE_CI = 247;\nexports.GB18030_CHINESE_CI = 248;\nexports.GB18030_BIN = 249;\nexports.GB18030_UNICODE_520_CI = 250;\nexports.UTF8_GENERAL50_CI = 253; // deprecated\nexports.UTF8MB4_0900_AI_CI = 255;\nexports.UTF8MB4_DE_PB_0900_AI_CI = 256;\nexports.UTF8MB4_IS_0900_AI_CI = 257;\nexports.UTF8MB4_LV_0900_AI_CI = 258;\nexports.UTF8MB4_RO_0900_AI_CI = 259;\nexports.UTF8MB4_SL_0900_AI_CI = 260;\nexports.UTF8MB4_PL_0900_AI_CI = 261;\nexports.UTF8MB4_ET_0900_AI_CI = 262;\nexports.UTF8MB4_ES_0900_AI_CI = 263;\nexports.UTF8MB4_SV_0900_AI_CI = 264;\nexports.UTF8MB4_TR_0900_AI_CI = 265;\nexports.UTF8MB4_CS_0900_AI_CI = 266;\nexports.UTF8MB4_DA_0900_AI_CI = 267;\nexports.UTF8MB4_LT_0900_AI_CI = 268;\nexports.UTF8MB4_SK_0900_AI_CI = 269;\nexports.UTF8MB4_ES_TRAD_0900_AI_CI = 270;\nexports.UTF8MB4_LA_0900_AI_CI = 271;\nexports.UTF8MB4_EO_0900_AI_CI = 273;\nexports.UTF8MB4_HU_0900_AI_CI = 274;\nexports.UTF8MB4_HR_0900_AI_CI = 275;\nexports.UTF8MB4_VI_0900_AI_CI = 277;\nexports.UTF8MB4_0900_AS_CS = 278;\nexports.UTF8MB4_DE_PB_0900_AS_CS = 279;\nexports.UTF8MB4_IS_0900_AS_CS = 280;\nexports.UTF8MB4_LV_0900_AS_CS = 281;\nexports.UTF8MB4_RO_0900_AS_CS = 282;\nexports.UTF8MB4_SL_0900_AS_CS = 283;\nexports.UTF8MB4_PL_0900_AS_CS = 284;\nexports.UTF8MB4_ET_0900_AS_CS = 285;\nexports.UTF8MB4_ES_0900_AS_CS = 286;\nexports.UTF8MB4_SV_0900_AS_CS = 287;\nexports.UTF8MB4_TR_0900_AS_CS = 288;\nexports.UTF8MB4_CS_0900_AS_CS = 289;\nexports.UTF8MB4_DA_0900_AS_CS = 290;\nexports.UTF8MB4_LT_0900_AS_CS = 291;\nexports.UTF8MB4_SK_0900_AS_CS = 292;\nexports.UTF8MB4_ES_TRAD_0900_AS_CS = 293;\nexports.UTF8MB4_LA_0900_AS_CS = 294;\nexports.UTF8MB4_EO_0900_AS_CS = 296;\nexports.UTF8MB4_HU_0900_AS_CS = 297;\nexports.UTF8MB4_HR_0900_AS_CS = 298;\nexports.UTF8MB4_VI_0900_AS_CS = 300;\nexports.UTF8MB4_JA_0900_AS_CS = 303;\nexports.UTF8MB4_JA_0900_AS_CS_KS = 304;\nexports.UTF8MB4_0900_AS_CI = 305;\nexports.UTF8MB4_RU_0900_AI_CI = 306;\nexports.UTF8MB4_RU_0900_AS_CS = 307;\nexports.UTF8MB4_ZH_0900_AS_CS = 308;\nexports.UTF8MB4_0900_BIN = 309;\n\n// short aliases\nexports.BIG5 = exports.BIG5_CHINESE_CI;\nexports.DEC8 = exports.DEC8_SWEDISH_CI;\nexports.CP850 = exports.CP850_GENERAL_CI;\nexports.HP8 = exports.HP8_ENGLISH_CI;\nexports.KOI8R = exports.KOI8R_GENERAL_CI;\nexports.LATIN1 = exports.LATIN1_SWEDISH_CI;\nexports.LATIN2 = exports.LATIN2_GENERAL_CI;\nexports.SWE7 = exports.SWE7_SWEDISH_CI;\nexports.ASCII = exports.ASCII_GENERAL_CI;\nexports.UJIS = exports.UJIS_JAPANESE_CI;\nexports.SJIS = exports.SJIS_JAPANESE_CI;\nexports.HEBREW = exports.HEBREW_GENERAL_CI;\nexports.TIS620 = exports.TIS620_THAI_CI;\nexports.EUCKR = exports.EUCKR_KOREAN_CI;\nexports.KOI8U = exports.KOI8U_GENERAL_CI;\nexports.GB2312 = exports.GB2312_CHINESE_CI;\nexports.GREEK = exports.GREEK_GENERAL_CI;\nexports.CP1250 = exports.CP1250_GENERAL_CI;\nexports.GBK = exports.GBK_CHINESE_CI;\nexports.LATIN5 = exports.LATIN5_TURKISH_CI;\nexports.ARMSCII8 = exports.ARMSCII8_GENERAL_CI;\nexports.UTF8 = exports.UTF8_GENERAL_CI;\nexports.UCS2 = exports.UCS2_GENERAL_CI;\nexports.CP866 = exports.CP866_GENERAL_CI;\nexports.KEYBCS2 = exports.KEYBCS2_GENERAL_CI;\nexports.MACCE = exports.MACCE_GENERAL_CI;\nexports.MACROMAN = exports.MACROMAN_GENERAL_CI;\nexports.CP852 = exports.CP852_GENERAL_CI;\nexports.LATIN7 = exports.LATIN7_GENERAL_CI;\nexports.UTF8MB4 = exports.UTF8MB4_GENERAL_CI;\nexports.CP1251 = exports.CP1251_GENERAL_CI;\nexports.UTF16 = exports.UTF16_GENERAL_CI;\nexports.UTF16LE = exports.UTF16LE_GENERAL_CI;\nexports.CP1256 = exports.CP1256_GENERAL_CI;\nexports.CP1257 = exports.CP1257_GENERAL_CI;\nexports.UTF32 = exports.UTF32_GENERAL_CI;\nexports.CP932 = exports.CP932_JAPANESE_CI;\nexports.EUCJPMS = exports.EUCJPMS_JAPANESE_CI;\nexports.GB18030 = exports.GB18030_CHINESE_CI;\nexports.GEOSTD8 = exports.GEOSTD8_GENERAL_CI;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb25zdGFudHMvY2hhcnNldHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsdUJBQXVCO0FBQ3ZCLHVCQUF1QjtBQUN2Qix1QkFBdUI7QUFDdkIsd0JBQXdCO0FBQ3hCLHlCQUF5QjtBQUN6QixzQkFBc0I7QUFDdEIsd0JBQXdCO0FBQ3hCLHlCQUF5QjtBQUN6Qix5QkFBeUI7QUFDekIsdUJBQXVCO0FBQ3ZCLHdCQUF3QjtBQUN4Qix3QkFBd0I7QUFDeEIsd0JBQXdCO0FBQ3hCLDJCQUEyQjtBQUMzQix3QkFBd0I7QUFDeEIseUJBQXlCO0FBQ3pCLHNCQUFzQjtBQUN0Qix1QkFBdUI7QUFDdkIsMEJBQTBCO0FBQzFCLDJCQUEyQjtBQUMzQix3QkFBd0I7QUFDeEIsMkJBQTJCO0FBQzNCLHlCQUF5QjtBQUN6Qix3QkFBd0I7QUFDeEIseUJBQXlCO0FBQ3pCLDBCQUEwQjtBQUMxQixzQkFBc0I7QUFDdEIsNEJBQTRCO0FBQzVCLHlCQUF5QjtBQUN6Qix5QkFBeUI7QUFDekIsMkJBQTJCO0FBQzNCLHVCQUF1QjtBQUN2Qix1QkFBdUI7QUFDdkIsdUJBQXVCO0FBQ3ZCLHdCQUF3QjtBQUN4QiwwQkFBMEI7QUFDMUIsd0JBQXdCO0FBQ3hCLDJCQUEyQjtBQUMzQix3QkFBd0I7QUFDeEIseUJBQXlCO0FBQ3pCLHlCQUF5QjtBQUN6QixpQkFBaUI7QUFDakIsMEJBQTBCO0FBQzFCLDBCQUEwQjtBQUMxQixtQkFBbUI7QUFDbkIsa0JBQWtCO0FBQ2xCLHlCQUF5QjtBQUN6Qix5QkFBeUI7QUFDekIsa0JBQWtCO0FBQ2xCLHlCQUF5QjtBQUN6Qix5QkFBeUI7QUFDekIsb0JBQW9CO0FBQ3BCLHdCQUF3QjtBQUN4QixpQkFBaUI7QUFDakIsMEJBQTBCO0FBQzFCLHlCQUF5QjtBQUN6QixrQkFBa0I7QUFDbEIseUJBQXlCO0FBQ3pCLHdCQUF3QjtBQUN4QixpQkFBaUI7QUFDakIsbUJBQW1CO0FBQ25CLGNBQWM7QUFD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QUM3Qiw2QkFBNkI7QUFDN0IsNkJBQTZCO0FBQzdCLHdCQUF3Qjs7QUFFeEI7QUFDQSxZQUFZO0FBQ1osWUFBWTtBQUNaLGFBQWE7QUFDYixXQUFXO0FBQ1gsYUFBYTtBQUNiLGNBQWM7QUFDZCxjQUFjO0FBQ2QsWUFBWTtBQUNaLGFBQWE7QUFDYixZQUFZO0FBQ1osWUFBWTtBQUNaLGNBQWM7QUFDZCxjQUFjO0FBQ2QsYUFBYTtBQUNiLGFBQWE7QUFDYixjQUFjO0FBQ2QsYUFBYTtBQUNiLGNBQWM7QUFDZCxXQUFXO0FBQ1gsY0FBYztBQUNkLGdCQUFnQjtBQUNoQixZQUFZO0FBQ1osWUFBWTtBQUNaLGFBQWE7QUFDYixlQUFlO0FBQ2YsYUFBYTtBQUNiLGdCQUFnQjtBQUNoQixhQUFhO0FBQ2IsY0FBYztBQUNkLGVBQWU7QUFDZixjQUFjO0FBQ2QsYUFBYTtBQUNiLGVBQWU7QUFDZixjQUFjO0FBQ2QsY0FBYztBQUNkLGFBQWE7QUFDYixhQUFhO0FBQ2IsZUFBZTtBQUNmLGVBQWU7QUFDZixlQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVhbF9lc3RhdGUvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb25zdGFudHMvY2hhcnNldHMuanM/NzYyNCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmV4cG9ydHMuQklHNV9DSElORVNFX0NJID0gMTtcbmV4cG9ydHMuTEFUSU4yX0NaRUNIX0NTID0gMjtcbmV4cG9ydHMuREVDOF9TV0VESVNIX0NJID0gMztcbmV4cG9ydHMuQ1A4NTBfR0VORVJBTF9DSSA9IDQ7XG5leHBvcnRzLkxBVElOMV9HRVJNQU4xX0NJID0gNTtcbmV4cG9ydHMuSFA4X0VOR0xJU0hfQ0kgPSA2O1xuZXhwb3J0cy5LT0k4Ul9HRU5FUkFMX0NJID0gNztcbmV4cG9ydHMuTEFUSU4xX1NXRURJU0hfQ0kgPSA4O1xuZXhwb3J0cy5MQVRJTjJfR0VORVJBTF9DSSA9IDk7XG5leHBvcnRzLlNXRTdfU1dFRElTSF9DSSA9IDEwO1xuZXhwb3J0cy5BU0NJSV9HRU5FUkFMX0NJID0gMTE7XG5leHBvcnRzLlVKSVNfSkFQQU5FU0VfQ0kgPSAxMjtcbmV4cG9ydHMuU0pJU19KQVBBTkVTRV9DSSA9IDEzO1xuZXhwb3J0cy5DUDEyNTFfQlVMR0FSSUFOX0NJID0gMTQ7XG5leHBvcnRzLkxBVElOMV9EQU5JU0hfQ0kgPSAxNTtcbmV4cG9ydHMuSEVCUkVXX0dFTkVSQUxfQ0kgPSAxNjtcbmV4cG9ydHMuVElTNjIwX1RIQUlfQ0kgPSAxODtcbmV4cG9ydHMuRVVDS1JfS09SRUFOX0NJID0gMTk7XG5leHBvcnRzLkxBVElON19FU1RPTklBTl9DUyA9IDIwO1xuZXhwb3J0cy5MQVRJTjJfSFVOR0FSSUFOX0NJID0gMjE7XG5leHBvcnRzLktPSThVX0dFTkVSQUxfQ0kgPSAyMjtcbmV4cG9ydHMuQ1AxMjUxX1VLUkFJTklBTl9DSSA9IDIzO1xuZXhwb3J0cy5HQjIzMTJfQ0hJTkVTRV9DSSA9IDI0O1xuZXhwb3J0cy5HUkVFS19HRU5FUkFMX0NJID0gMjU7XG5leHBvcnRzLkNQMTI1MF9HRU5FUkFMX0NJID0gMjY7XG5leHBvcnRzLkxBVElOMl9DUk9BVElBTl9DSSA9IDI3O1xuZXhwb3J0cy5HQktfQ0hJTkVTRV9DSSA9IDI4O1xuZXhwb3J0cy5DUDEyNTdfTElUSFVBTklBTl9DSSA9IDI5O1xuZXhwb3J0cy5MQVRJTjVfVFVSS0lTSF9DSSA9IDMwO1xuZXhwb3J0cy5MQVRJTjFfR0VSTUFOMl9DSSA9IDMxO1xuZXhwb3J0cy5BUk1TQ0lJOF9HRU5FUkFMX0NJID0gMzI7XG5leHBvcnRzLlVURjhfR0VORVJBTF9DSSA9IDMzO1xuZXhwb3J0cy5DUDEyNTBfQ1pFQ0hfQ1MgPSAzNDtcbmV4cG9ydHMuVUNTMl9HRU5FUkFMX0NJID0gMzU7XG5leHBvcnRzLkNQODY2X0dFTkVSQUxfQ0kgPSAzNjtcbmV4cG9ydHMuS0VZQkNTMl9HRU5FUkFMX0NJID0gMzc7XG5leHBvcnRzLk1BQ0NFX0dFTkVSQUxfQ0kgPSAzODtcbmV4cG9ydHMuTUFDUk9NQU5fR0VORVJBTF9DSSA9IDM5O1xuZXhwb3J0cy5DUDg1Ml9HRU5FUkFMX0NJID0gNDA7XG5leHBvcnRzLkxBVElON19HRU5FUkFMX0NJID0gNDE7XG5leHBvcnRzLkxBVElON19HRU5FUkFMX0NTID0gNDI7XG5leHBvcnRzLk1BQ0NFX0JJTiA9IDQzO1xuZXhwb3J0cy5DUDEyNTBfQ1JPQVRJQU5fQ0kgPSA0NDtcbmV4cG9ydHMuVVRGOE1CNF9HRU5FUkFMX0NJID0gNDU7XG5leHBvcnRzLlVURjhNQjRfQklOID0gNDY7XG5leHBvcnRzLkxBVElOMV9CSU4gPSA0NztcbmV4cG9ydHMuTEFUSU4xX0dFTkVSQUxfQ0kgPSA0ODtcbmV4cG9ydHMuTEFUSU4xX0dFTkVSQUxfQ1MgPSA0OTtcbmV4cG9ydHMuQ1AxMjUxX0JJTiA9IDUwO1xuZXhwb3J0cy5DUDEyNTFfR0VORVJBTF9DSSA9IDUxO1xuZXhwb3J0cy5DUDEyNTFfR0VORVJBTF9DUyA9IDUyO1xuZXhwb3J0cy5NQUNST01BTl9CSU4gPSA1MztcbmV4cG9ydHMuVVRGMTZfR0VORVJBTF9DSSA9IDU0O1xuZXhwb3J0cy5VVEYxNl9CSU4gPSA1NTtcbmV4cG9ydHMuVVRGMTZMRV9HRU5FUkFMX0NJID0gNTY7XG5leHBvcnRzLkNQMTI1Nl9HRU5FUkFMX0NJID0gNTc7XG5leHBvcnRzLkNQMTI1N19CSU4gPSA1ODtcbmV4cG9ydHMuQ1AxMjU3X0dFTkVSQUxfQ0kgPSA1OTtcbmV4cG9ydHMuVVRGMzJfR0VORVJBTF9DSSA9IDYwO1xuZXhwb3J0cy5VVEYzMl9CSU4gPSA2MTtcbmV4cG9ydHMuVVRGMTZMRV9CSU4gPSA2MjtcbmV4cG9ydHMuQklOQVJZID0gNjM7XG5leHBvcnRzLkFSTVNDSUk4X0JJTiA9IDY0O1xuZXhwb3J0cy5BU0NJSV9CSU4gPSA2NTtcbmV4cG9ydHMuQ1AxMjUwX0JJTiA9IDY2O1xuZXhwb3J0cy5DUDEyNTZfQklOID0gNjc7XG5leHBvcnRzLkNQODY2X0JJTiA9IDY4O1xuZXhwb3J0cy5ERUM4X0JJTiA9IDY5O1xuZXhwb3J0cy5HUkVFS19CSU4gPSA3MDtcbmV4cG9ydHMuSEVCUkVXX0JJTiA9IDcxO1xuZXhwb3J0cy5IUDhfQklOID0gNzI7XG5leHBvcnRzLktFWUJDUzJfQklOID0gNzM7XG5leHBvcnRzLktPSThSX0JJTiA9IDc0O1xuZXhwb3J0cy5LT0k4VV9CSU4gPSA3NTtcbmV4cG9ydHMuVVRGOF9UT0xPV0VSX0NJID0gNzY7XG5leHBvcnRzLkxBVElOMl9CSU4gPSA3NztcbmV4cG9ydHMuTEFUSU41X0JJTiA9IDc4O1xuZXhwb3J0cy5MQVRJTjdfQklOID0gNzk7XG5leHBvcnRzLkNQODUwX0JJTiA9IDgwO1xuZXhwb3J0cy5DUDg1Ml9CSU4gPSA4MTtcbmV4cG9ydHMuU1dFN19CSU4gPSA4MjtcbmV4cG9ydHMuVVRGOF9CSU4gPSA4MztcbmV4cG9ydHMuQklHNV9CSU4gPSA4NDtcbmV4cG9ydHMuRVVDS1JfQklOID0gODU7XG5leHBvcnRzLkdCMjMxMl9CSU4gPSA4NjtcbmV4cG9ydHMuR0JLX0JJTiA9IDg3O1xuZXhwb3J0cy5TSklTX0JJTiA9IDg4O1xuZXhwb3J0cy5USVM2MjBfQklOID0gODk7XG5leHBvcnRzLlVDUzJfQklOID0gOTA7XG5leHBvcnRzLlVKSVNfQklOID0gOTE7XG5leHBvcnRzLkdFT1NURDhfR0VORVJBTF9DSSA9IDkyO1xuZXhwb3J0cy5HRU9TVEQ4X0JJTiA9IDkzO1xuZXhwb3J0cy5MQVRJTjFfU1BBTklTSF9DSSA9IDk0O1xuZXhwb3J0cy5DUDkzMl9KQVBBTkVTRV9DSSA9IDk1O1xuZXhwb3J0cy5DUDkzMl9CSU4gPSA5NjtcbmV4cG9ydHMuRVVDSlBNU19KQVBBTkVTRV9DSSA9IDk3O1xuZXhwb3J0cy5FVUNKUE1TX0JJTiA9IDk4O1xuZXhwb3J0cy5DUDEyNTBfUE9MSVNIX0NJID0gOTk7XG5leHBvcnRzLlVURjE2X1VOSUNPREVfQ0kgPSAxMDE7XG5leHBvcnRzLlVURjE2X0lDRUxBTkRJQ19DSSA9IDEwMjtcbmV4cG9ydHMuVVRGMTZfTEFUVklBTl9DSSA9IDEwMztcbmV4cG9ydHMuVVRGMTZfUk9NQU5JQU5fQ0kgPSAxMDQ7XG5leHBvcnRzLlVURjE2X1NMT1ZFTklBTl9DSSA9IDEwNTtcbmV4cG9ydHMuVVRGMTZfUE9MSVNIX0NJID0gMTA2O1xuZXhwb3J0cy5VVEYxNl9FU1RPTklBTl9DSSA9IDEwNztcbmV4cG9ydHMuVVRGMTZfU1BBTklTSF9DSSA9IDEwODtcbmV4cG9ydHMuVVRGMTZfU1dFRElTSF9DSSA9IDEwOTtcbmV4cG9ydHMuVVRGMTZfVFVSS0lTSF9DSSA9IDExMDtcbmV4cG9ydHMuVVRGMTZfQ1pFQ0hfQ0kgPSAxMTE7XG5leHBvcnRzLlVURjE2X0RBTklTSF9DSSA9IDExMjtcbmV4cG9ydHMuVVRGMTZfTElUSFVBTklBTl9DSSA9IDExMztcbmV4cG9ydHMuVVRGMTZfU0xPVkFLX0NJID0gMTE0O1xuZXhwb3J0cy5VVEYxNl9TUEFOSVNIMl9DSSA9IDExNTtcbmV4cG9ydHMuVVRGMTZfUk9NQU5fQ0kgPSAxMTY7XG5leHBvcnRzLlVURjE2X1BFUlNJQU5fQ0kgPSAxMTc7XG5leHBvcnRzLlVURjE2X0VTUEVSQU5UT19DSSA9IDExODtcbmV4cG9ydHMuVVRGMTZfSFVOR0FSSUFOX0NJID0gMTE5O1xuZXhwb3J0cy5VVEYxNl9TSU5IQUxBX0NJID0gMTIwO1xuZXhwb3J0cy5VVEYxNl9HRVJNQU4yX0NJID0gMTIxO1xuZXhwb3J0cy5VVEYxNl9DUk9BVElBTl9DSSA9IDEyMjtcbmV4cG9ydHMuVVRGMTZfVU5JQ09ERV81MjBfQ0kgPSAxMjM7XG5leHBvcnRzLlVURjE2X1ZJRVROQU1FU0VfQ0kgPSAxMjQ7XG5leHBvcnRzLlVDUzJfVU5JQ09ERV9DSSA9IDEyODtcbmV4cG9ydHMuVUNTMl9JQ0VMQU5ESUNfQ0kgPSAxMjk7XG5leHBvcnRzLlVDUzJfTEFUVklBTl9DSSA9IDEzMDtcbmV4cG9ydHMuVUNTMl9ST01BTklBTl9DSSA9IDEzMTtcbmV4cG9ydHMuVUNTMl9TTE9WRU5JQU5fQ0kgPSAxMzI7XG5leHBvcnRzLlVDUzJfUE9MSVNIX0NJID0gMTMzO1xuZXhwb3J0cy5VQ1MyX0VTVE9OSUFOX0NJID0gMTM0O1xuZXhwb3J0cy5VQ1MyX1NQQU5JU0hfQ0kgPSAxMzU7XG5leHBvcnRzLlVDUzJfU1dFRElTSF9DSSA9IDEzNjtcbmV4cG9ydHMuVUNTMl9UVVJLSVNIX0NJID0gMTM3O1xuZXhwb3J0cy5VQ1MyX0NaRUNIX0NJID0gMTM4O1xuZXhwb3J0cy5VQ1MyX0RBTklTSF9DSSA9IDEzOTtcbmV4cG9ydHMuVUNTMl9MSVRIVUFOSUFOX0NJID0gMTQwO1xuZXhwb3J0cy5VQ1MyX1NMT1ZBS19DSSA9IDE0MTtcbmV4cG9ydHMuVUNTMl9TUEFOSVNIMl9DSSA9IDE0MjtcbmV4cG9ydHMuVUNTMl9ST01BTl9DSSA9IDE0MztcbmV4cG9ydHMuVUNTMl9QRVJTSUFOX0NJID0gMTQ0O1xuZXhwb3J0cy5VQ1MyX0VTUEVSQU5UT19DSSA9IDE0NTtcbmV4cG9ydHMuVUNTMl9IVU5HQVJJQU5fQ0kgPSAxNDY7XG5leHBvcnRzLlVDUzJfU0lOSEFMQV9DSSA9IDE0NztcbmV4cG9ydHMuVUNTMl9HRVJNQU4yX0NJID0gMTQ4O1xuZXhwb3J0cy5VQ1MyX0NST0FUSUFOX0NJID0gMTQ5O1xuZXhwb3J0cy5VQ1MyX1VOSUNPREVfNTIwX0NJID0gMTUwO1xuZXhwb3J0cy5VQ1MyX1ZJRVROQU1FU0VfQ0kgPSAxNTE7XG5leHBvcnRzLlVDUzJfR0VORVJBTF9NWVNRTDUwMF9DSSA9IDE1OTtcbmV4cG9ydHMuVVRGMzJfVU5JQ09ERV9DSSA9IDE2MDtcbmV4cG9ydHMuVVRGMzJfSUNFTEFORElDX0NJID0gMTYxO1xuZXhwb3J0cy5VVEYzMl9MQVRWSUFOX0NJID0gMTYyO1xuZXhwb3J0cy5VVEYzMl9ST01BTklBTl9DSSA9IDE2MztcbmV4cG9ydHMuVVRGMzJfU0xPVkVOSUFOX0NJID0gMTY0O1xuZXhwb3J0cy5VVEYzMl9QT0xJU0hfQ0kgPSAxNjU7XG5leHBvcnRzLlVURjMyX0VTVE9OSUFOX0NJID0gMTY2O1xuZXhwb3J0cy5VVEYzMl9TUEFOSVNIX0NJID0gMTY3O1xuZXhwb3J0cy5VVEYzMl9TV0VESVNIX0NJID0gMTY4O1xuZXhwb3J0cy5VVEYzMl9UVVJLSVNIX0NJID0gMTY5O1xuZXhwb3J0cy5VVEYzMl9DWkVDSF9DSSA9IDE3MDtcbmV4cG9ydHMuVVRGMzJfREFOSVNIX0NJID0gMTcxO1xuZXhwb3J0cy5VVEYzMl9MSVRIVUFOSUFOX0NJID0gMTcyO1xuZXhwb3J0cy5VVEYzMl9TTE9WQUtfQ0kgPSAxNzM7XG5leHBvcnRzLlVURjMyX1NQQU5JU0gyX0NJID0gMTc0O1xuZXhwb3J0cy5VVEYzMl9ST01BTl9DSSA9IDE3NTtcbmV4cG9ydHMuVVRGMzJfUEVSU0lBTl9DSSA9IDE3NjtcbmV4cG9ydHMuVVRGMzJfRVNQRVJBTlRPX0NJID0gMTc3O1xuZXhwb3J0cy5VVEYzMl9IVU5HQVJJQU5fQ0kgPSAxNzg7XG5leHBvcnRzLlVURjMyX1NJTkhBTEFfQ0kgPSAxNzk7XG5leHBvcnRzLlVURjMyX0dFUk1BTjJfQ0kgPSAxODA7XG5leHBvcnRzLlVURjMyX0NST0FUSUFOX0NJID0gMTgxO1xuZXhwb3J0cy5VVEYzMl9VTklDT0RFXzUyMF9DSSA9IDE4MjtcbmV4cG9ydHMuVVRGMzJfVklFVE5BTUVTRV9DSSA9IDE4MztcbmV4cG9ydHMuVVRGOF9VTklDT0RFX0NJID0gMTkyO1xuZXhwb3J0cy5VVEY4X0lDRUxBTkRJQ19DSSA9IDE5MztcbmV4cG9ydHMuVVRGOF9MQVRWSUFOX0NJID0gMTk0O1xuZXhwb3J0cy5VVEY4X1JPTUFOSUFOX0NJID0gMTk1O1xuZXhwb3J0cy5VVEY4X1NMT1ZFTklBTl9DSSA9IDE5NjtcbmV4cG9ydHMuVVRGOF9QT0xJU0hfQ0kgPSAxOTc7XG5leHBvcnRzLlVURjhfRVNUT05JQU5fQ0kgPSAxOTg7XG5leHBvcnRzLlVURjhfU1BBTklTSF9DSSA9IDE5OTtcbmV4cG9ydHMuVVRGOF9TV0VESVNIX0NJID0gMjAwO1xuZXhwb3J0cy5VVEY4X1RVUktJU0hfQ0kgPSAyMDE7XG5leHBvcnRzLlVURjhfQ1pFQ0hfQ0kgPSAyMDI7XG5leHBvcnRzLlVURjhfREFOSVNIX0NJID0gMjAzO1xuZXhwb3J0cy5VVEY4X0xJVEhVQU5JQU5fQ0kgPSAyMDQ7XG5leHBvcnRzLlVURjhfU0xPVkFLX0NJID0gMjA1O1xuZXhwb3J0cy5VVEY4X1NQQU5JU0gyX0NJID0gMjA2O1xuZXhwb3J0cy5VVEY4X1JPTUFOX0NJID0gMjA3O1xuZXhwb3J0cy5VVEY4X1BFUlNJQU5fQ0kgPSAyMDg7XG5leHBvcnRzLlVURjhfRVNQRVJBTlRPX0NJID0gMjA5O1xuZXhwb3J0cy5VVEY4X0hVTkdBUklBTl9DSSA9IDIxMDtcbmV4cG9ydHMuVVRGOF9TSU5IQUxBX0NJID0gMjExO1xuZXhwb3J0cy5VVEY4X0dFUk1BTjJfQ0kgPSAyMTI7XG5leHBvcnRzLlVURjhfQ1JPQVRJQU5fQ0kgPSAyMTM7XG5leHBvcnRzLlVURjhfVU5JQ09ERV81MjBfQ0kgPSAyMTQ7XG5leHBvcnRzLlVURjhfVklFVE5BTUVTRV9DSSA9IDIxNTtcbmV4cG9ydHMuVVRGOF9HRU5FUkFMX01ZU1FMNTAwX0NJID0gMjIzO1xuZXhwb3J0cy5VVEY4TUI0X1VOSUNPREVfQ0kgPSAyMjQ7XG5leHBvcnRzLlVURjhNQjRfSUNFTEFORElDX0NJID0gMjI1O1xuZXhwb3J0cy5VVEY4TUI0X0xBVFZJQU5fQ0kgPSAyMjY7XG5leHBvcnRzLlVURjhNQjRfUk9NQU5JQU5fQ0kgPSAyMjc7XG5leHBvcnRzLlVURjhNQjRfU0xPVkVOSUFOX0NJID0gMjI4O1xuZXhwb3J0cy5VVEY4TUI0X1BPTElTSF9DSSA9IDIyOTtcbmV4cG9ydHMuVVRGOE1CNF9FU1RPTklBTl9DSSA9IDIzMDtcbmV4cG9ydHMuVVRGOE1CNF9TUEFOSVNIX0NJID0gMjMxO1xuZXhwb3J0cy5VVEY4TUI0X1NXRURJU0hfQ0kgPSAyMzI7XG5leHBvcnRzLlVURjhNQjRfVFVSS0lTSF9DSSA9IDIzMztcbmV4cG9ydHMuVVRGOE1CNF9DWkVDSF9DSSA9IDIzNDtcbmV4cG9ydHMuVVRGOE1CNF9EQU5JU0hfQ0kgPSAyMzU7XG5leHBvcnRzLlVURjhNQjRfTElUSFVBTklBTl9DSSA9IDIzNjtcbmV4cG9ydHMuVVRGOE1CNF9TTE9WQUtfQ0kgPSAyMzc7XG5leHBvcnRzLlVURjhNQjRfU1BBTklTSDJfQ0kgPSAyMzg7XG5leHBvcnRzLlVURjhNQjRfUk9NQU5fQ0kgPSAyMzk7XG5leHBvcnRzLlVURjhNQjRfUEVSU0lBTl9DSSA9IDI0MDtcbmV4cG9ydHMuVVRGOE1CNF9FU1BFUkFOVE9fQ0kgPSAyNDE7XG5leHBvcnRzLlVURjhNQjRfSFVOR0FSSUFOX0NJID0gMjQyO1xuZXhwb3J0cy5VVEY4TUI0X1NJTkhBTEFfQ0kgPSAyNDM7XG5leHBvcnRzLlVURjhNQjRfR0VSTUFOMl9DSSA9IDI0NDtcbmV4cG9ydHMuVVRGOE1CNF9DUk9BVElBTl9DSSA9IDI0NTtcbmV4cG9ydHMuVVRGOE1CNF9VTklDT0RFXzUyMF9DSSA9IDI0NjtcbmV4cG9ydHMuVVRGOE1CNF9WSUVUTkFNRVNFX0NJID0gMjQ3O1xuZXhwb3J0cy5HQjE4MDMwX0NISU5FU0VfQ0kgPSAyNDg7XG5leHBvcnRzLkdCMTgwMzBfQklOID0gMjQ5O1xuZXhwb3J0cy5HQjE4MDMwX1VOSUNPREVfNTIwX0NJID0gMjUwO1xuZXhwb3J0cy5VVEY4X0dFTkVSQUw1MF9DSSA9IDI1MzsgLy8gZGVwcmVjYXRlZFxuZXhwb3J0cy5VVEY4TUI0XzA5MDBfQUlfQ0kgPSAyNTU7XG5leHBvcnRzLlVURjhNQjRfREVfUEJfMDkwMF9BSV9DSSA9IDI1NjtcbmV4cG9ydHMuVVRGOE1CNF9JU18wOTAwX0FJX0NJID0gMjU3O1xuZXhwb3J0cy5VVEY4TUI0X0xWXzA5MDBfQUlfQ0kgPSAyNTg7XG5leHBvcnRzLlVURjhNQjRfUk9fMDkwMF9BSV9DSSA9IDI1OTtcbmV4cG9ydHMuVVRGOE1CNF9TTF8wOTAwX0FJX0NJID0gMjYwO1xuZXhwb3J0cy5VVEY4TUI0X1BMXzA5MDBfQUlfQ0kgPSAyNjE7XG5leHBvcnRzLlVURjhNQjRfRVRfMDkwMF9BSV9DSSA9IDI2MjtcbmV4cG9ydHMuVVRGOE1CNF9FU18wOTAwX0FJX0NJID0gMjYzO1xuZXhwb3J0cy5VVEY4TUI0X1NWXzA5MDBfQUlfQ0kgPSAyNjQ7XG5leHBvcnRzLlVURjhNQjRfVFJfMDkwMF9BSV9DSSA9IDI2NTtcbmV4cG9ydHMuVVRGOE1CNF9DU18wOTAwX0FJX0NJID0gMjY2O1xuZXhwb3J0cy5VVEY4TUI0X0RBXzA5MDBfQUlfQ0kgPSAyNjc7XG5leHBvcnRzLlVURjhNQjRfTFRfMDkwMF9BSV9DSSA9IDI2ODtcbmV4cG9ydHMuVVRGOE1CNF9TS18wOTAwX0FJX0NJID0gMjY5O1xuZXhwb3J0cy5VVEY4TUI0X0VTX1RSQURfMDkwMF9BSV9DSSA9IDI3MDtcbmV4cG9ydHMuVVRGOE1CNF9MQV8wOTAwX0FJX0NJID0gMjcxO1xuZXhwb3J0cy5VVEY4TUI0X0VPXzA5MDBfQUlfQ0kgPSAyNzM7XG5leHBvcnRzLlVURjhNQjRfSFVfMDkwMF9BSV9DSSA9IDI3NDtcbmV4cG9ydHMuVVRGOE1CNF9IUl8wOTAwX0FJX0NJID0gMjc1O1xuZXhwb3J0cy5VVEY4TUI0X1ZJXzA5MDBfQUlfQ0kgPSAyNzc7XG5leHBvcnRzLlVURjhNQjRfMDkwMF9BU19DUyA9IDI3ODtcbmV4cG9ydHMuVVRGOE1CNF9ERV9QQl8wOTAwX0FTX0NTID0gMjc5O1xuZXhwb3J0cy5VVEY4TUI0X0lTXzA5MDBfQVNfQ1MgPSAyODA7XG5leHBvcnRzLlVURjhNQjRfTFZfMDkwMF9BU19DUyA9IDI4MTtcbmV4cG9ydHMuVVRGOE1CNF9ST18wOTAwX0FTX0NTID0gMjgyO1xuZXhwb3J0cy5VVEY4TUI0X1NMXzA5MDBfQVNfQ1MgPSAyODM7XG5leHBvcnRzLlVURjhNQjRfUExfMDkwMF9BU19DUyA9IDI4NDtcbmV4cG9ydHMuVVRGOE1CNF9FVF8wOTAwX0FTX0NTID0gMjg1O1xuZXhwb3J0cy5VVEY4TUI0X0VTXzA5MDBfQVNfQ1MgPSAyODY7XG5leHBvcnRzLlVURjhNQjRfU1ZfMDkwMF9BU19DUyA9IDI4NztcbmV4cG9ydHMuVVRGOE1CNF9UUl8wOTAwX0FTX0NTID0gMjg4O1xuZXhwb3J0cy5VVEY4TUI0X0NTXzA5MDBfQVNfQ1MgPSAyODk7XG5leHBvcnRzLlVURjhNQjRfREFfMDkwMF9BU19DUyA9IDI5MDtcbmV4cG9ydHMuVVRGOE1CNF9MVF8wOTAwX0FTX0NTID0gMjkxO1xuZXhwb3J0cy5VVEY4TUI0X1NLXzA5MDBfQVNfQ1MgPSAyOTI7XG5leHBvcnRzLlVURjhNQjRfRVNfVFJBRF8wOTAwX0FTX0NTID0gMjkzO1xuZXhwb3J0cy5VVEY4TUI0X0xBXzA5MDBfQVNfQ1MgPSAyOTQ7XG5leHBvcnRzLlVURjhNQjRfRU9fMDkwMF9BU19DUyA9IDI5NjtcbmV4cG9ydHMuVVRGOE1CNF9IVV8wOTAwX0FTX0NTID0gMjk3O1xuZXhwb3J0cy5VVEY4TUI0X0hSXzA5MDBfQVNfQ1MgPSAyOTg7XG5leHBvcnRzLlVURjhNQjRfVklfMDkwMF9BU19DUyA9IDMwMDtcbmV4cG9ydHMuVVRGOE1CNF9KQV8wOTAwX0FTX0NTID0gMzAzO1xuZXhwb3J0cy5VVEY4TUI0X0pBXzA5MDBfQVNfQ1NfS1MgPSAzMDQ7XG5leHBvcnRzLlVURjhNQjRfMDkwMF9BU19DSSA9IDMwNTtcbmV4cG9ydHMuVVRGOE1CNF9SVV8wOTAwX0FJX0NJID0gMzA2O1xuZXhwb3J0cy5VVEY4TUI0X1JVXzA5MDBfQVNfQ1MgPSAzMDc7XG5leHBvcnRzLlVURjhNQjRfWkhfMDkwMF9BU19DUyA9IDMwODtcbmV4cG9ydHMuVVRGOE1CNF8wOTAwX0JJTiA9IDMwOTtcblxuLy8gc2hvcnQgYWxpYXNlc1xuZXhwb3J0cy5CSUc1ID0gZXhwb3J0cy5CSUc1X0NISU5FU0VfQ0k7XG5leHBvcnRzLkRFQzggPSBleHBvcnRzLkRFQzhfU1dFRElTSF9DSTtcbmV4cG9ydHMuQ1A4NTAgPSBleHBvcnRzLkNQODUwX0dFTkVSQUxfQ0k7XG5leHBvcnRzLkhQOCA9IGV4cG9ydHMuSFA4X0VOR0xJU0hfQ0k7XG5leHBvcnRzLktPSThSID0gZXhwb3J0cy5LT0k4Ul9HRU5FUkFMX0NJO1xuZXhwb3J0cy5MQVRJTjEgPSBleHBvcnRzLkxBVElOMV9TV0VESVNIX0NJO1xuZXhwb3J0cy5MQVRJTjIgPSBleHBvcnRzLkxBVElOMl9HRU5FUkFMX0NJO1xuZXhwb3J0cy5TV0U3ID0gZXhwb3J0cy5TV0U3X1NXRURJU0hfQ0k7XG5leHBvcnRzLkFTQ0lJID0gZXhwb3J0cy5BU0NJSV9HRU5FUkFMX0NJO1xuZXhwb3J0cy5VSklTID0gZXhwb3J0cy5VSklTX0pBUEFORVNFX0NJO1xuZXhwb3J0cy5TSklTID0gZXhwb3J0cy5TSklTX0pBUEFORVNFX0NJO1xuZXhwb3J0cy5IRUJSRVcgPSBleHBvcnRzLkhFQlJFV19HRU5FUkFMX0NJO1xuZXhwb3J0cy5USVM2MjAgPSBleHBvcnRzLlRJUzYyMF9USEFJX0NJO1xuZXhwb3J0cy5FVUNLUiA9IGV4cG9ydHMuRVVDS1JfS09SRUFOX0NJO1xuZXhwb3J0cy5LT0k4VSA9IGV4cG9ydHMuS09JOFVfR0VORVJBTF9DSTtcbmV4cG9ydHMuR0IyMzEyID0gZXhwb3J0cy5HQjIzMTJfQ0hJTkVTRV9DSTtcbmV4cG9ydHMuR1JFRUsgPSBleHBvcnRzLkdSRUVLX0dFTkVSQUxfQ0k7XG5leHBvcnRzLkNQMTI1MCA9IGV4cG9ydHMuQ1AxMjUwX0dFTkVSQUxfQ0k7XG5leHBvcnRzLkdCSyA9IGV4cG9ydHMuR0JLX0NISU5FU0VfQ0k7XG5leHBvcnRzLkxBVElONSA9IGV4cG9ydHMuTEFUSU41X1RVUktJU0hfQ0k7XG5leHBvcnRzLkFSTVNDSUk4ID0gZXhwb3J0cy5BUk1TQ0lJOF9HRU5FUkFMX0NJO1xuZXhwb3J0cy5VVEY4ID0gZXhwb3J0cy5VVEY4X0dFTkVSQUxfQ0k7XG5leHBvcnRzLlVDUzIgPSBleHBvcnRzLlVDUzJfR0VORVJBTF9DSTtcbmV4cG9ydHMuQ1A4NjYgPSBleHBvcnRzLkNQODY2X0dFTkVSQUxfQ0k7XG5leHBvcnRzLktFWUJDUzIgPSBleHBvcnRzLktFWUJDUzJfR0VORVJBTF9DSTtcbmV4cG9ydHMuTUFDQ0UgPSBleHBvcnRzLk1BQ0NFX0dFTkVSQUxfQ0k7XG5leHBvcnRzLk1BQ1JPTUFOID0gZXhwb3J0cy5NQUNST01BTl9HRU5FUkFMX0NJO1xuZXhwb3J0cy5DUDg1MiA9IGV4cG9ydHMuQ1A4NTJfR0VORVJBTF9DSTtcbmV4cG9ydHMuTEFUSU43ID0gZXhwb3J0cy5MQVRJTjdfR0VORVJBTF9DSTtcbmV4cG9ydHMuVVRGOE1CNCA9IGV4cG9ydHMuVVRGOE1CNF9HRU5FUkFMX0NJO1xuZXhwb3J0cy5DUDEyNTEgPSBleHBvcnRzLkNQMTI1MV9HRU5FUkFMX0NJO1xuZXhwb3J0cy5VVEYxNiA9IGV4cG9ydHMuVVRGMTZfR0VORVJBTF9DSTtcbmV4cG9ydHMuVVRGMTZMRSA9IGV4cG9ydHMuVVRGMTZMRV9HRU5FUkFMX0NJO1xuZXhwb3J0cy5DUDEyNTYgPSBleHBvcnRzLkNQMTI1Nl9HRU5FUkFMX0NJO1xuZXhwb3J0cy5DUDEyNTcgPSBleHBvcnRzLkNQMTI1N19HRU5FUkFMX0NJO1xuZXhwb3J0cy5VVEYzMiA9IGV4cG9ydHMuVVRGMzJfR0VORVJBTF9DSTtcbmV4cG9ydHMuQ1A5MzIgPSBleHBvcnRzLkNQOTMyX0pBUEFORVNFX0NJO1xuZXhwb3J0cy5FVUNKUE1TID0gZXhwb3J0cy5FVUNKUE1TX0pBUEFORVNFX0NJO1xuZXhwb3J0cy5HQjE4MDMwID0gZXhwb3J0cy5HQjE4MDMwX0NISU5FU0VfQ0k7XG5leHBvcnRzLkdFT1NURDggPSBleHBvcnRzLkdFT1NURDhfR0VORVJBTF9DSTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/constants/charsets.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/constants/client.js":
/*!*****************************************************!*\
  !*** ./node_modules/mysql2/lib/constants/client.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("// This file was modified by Oracle on September 21, 2021.\n// New capability for multi-factor authentication based on mandatory session\n// trackers, that are signaled with an extra single-byte prefix on new\n// versions of the MySQL server.\n// Modifications copyright (c) 2021, Oracle and/or its affiliates.\n\n\n\n// Manually extracted from mysql-5.5.23/include/mysql_com.h\nexports.LONG_PASSWORD = 0x00000001; /* new more secure passwords */\nexports.FOUND_ROWS = 0x00000002; /* found instead of affected rows */\nexports.LONG_FLAG = 0x00000004; /* get all column flags */\nexports.CONNECT_WITH_DB = 0x00000008; /* one can specify db on connect */\nexports.NO_SCHEMA = 0x00000010; /* don't allow database.table.column */\nexports.COMPRESS = 0x00000020; /* can use compression protocol */\nexports.ODBC = 0x00000040; /* odbc client */\nexports.LOCAL_FILES = 0x00000080; /* can use LOAD DATA LOCAL */\nexports.IGNORE_SPACE = 0x00000100; /* ignore spaces before '' */\nexports.PROTOCOL_41 = 0x00000200; /* new 4.1 protocol */\nexports.INTERACTIVE = 0x00000400; /* this is an interactive client */\nexports.SSL = 0x00000800; /* switch to ssl after handshake */\nexports.IGNORE_SIGPIPE = 0x00001000; /* IGNORE sigpipes */\nexports.TRANSACTIONS = 0x00002000; /* client knows about transactions */\nexports.RESERVED = 0x00004000; /* old flag for 4.1 protocol  */\nexports.SECURE_CONNECTION = 0x00008000; /* new 4.1 authentication */\nexports.MULTI_STATEMENTS = 0x00010000; /* enable/disable multi-stmt support */\nexports.MULTI_RESULTS = 0x00020000; /* enable/disable multi-results */\nexports.PS_MULTI_RESULTS = 0x00040000; /* multi-results in ps-protocol */\nexports.PLUGIN_AUTH = 0x00080000; /* client supports plugin authentication */\nexports.CONNECT_ATTRS = 0x00100000; /* permits connection attributes */\nexports.PLUGIN_AUTH_LENENC_CLIENT_DATA = 0x00200000; /* Understands length-encoded integer for auth response data in Protocol::HandshakeResponse41. */\nexports.CAN_HANDLE_EXPIRED_PASSWORDS = 0x00400000; /* Announces support for expired password extension. */\nexports.SESSION_TRACK = 0x00800000; /* Can set SERVER_SESSION_STATE_CHANGED in the Status Flags and send session-state change data after a OK packet. */\nexports.DEPRECATE_EOF = 0x01000000; /* Can send OK after a Text Resultset. */\n\nexports.SSL_VERIFY_SERVER_CERT = 0x40000000;\nexports.REMEMBER_OPTIONS = 0x80000000;\n\nexports.MULTI_FACTOR_AUTHENTICATION = 0x10000000; /* multi-factor authentication */\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb25zdGFudHMvY2xpZW50LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRWE7O0FBRWI7QUFDQSxxQkFBcUIsZUFBZTtBQUNwQyxrQkFBa0IsZUFBZTtBQUNqQyxpQkFBaUIsZUFBZTtBQUNoQyx1QkFBdUIsZUFBZTtBQUN0QyxpQkFBaUIsZUFBZTtBQUNoQyxnQkFBZ0IsZUFBZTtBQUMvQixZQUFZLGVBQWU7QUFDM0IsbUJBQW1CLGVBQWU7QUFDbEMsb0JBQW9CLGVBQWU7QUFDbkMsbUJBQW1CLGVBQWU7QUFDbEMsbUJBQW1CLGVBQWU7QUFDbEMsV0FBVyxlQUFlO0FBQzFCLHNCQUFzQixlQUFlO0FBQ3JDLG9CQUFvQixlQUFlO0FBQ25DLGdCQUFnQixlQUFlO0FBQy9CLHlCQUF5QixlQUFlO0FBQ3hDLHdCQUF3QixlQUFlO0FBQ3ZDLHFCQUFxQixlQUFlO0FBQ3BDLHdCQUF3QixlQUFlO0FBQ3ZDLG1CQUFtQixlQUFlO0FBQ2xDLHFCQUFxQixlQUFlO0FBQ3BDLHNDQUFzQyxlQUFlO0FBQ3JELG9DQUFvQyxlQUFlO0FBQ25ELHFCQUFxQixlQUFlO0FBQ3BDLHFCQUFxQixlQUFlOztBQUVwQyw4QkFBOEI7QUFDOUIsd0JBQXdCOztBQUV4QixtQ0FBbUMsZUFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL3JlYWxfZXN0YXRlLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvY29uc3RhbnRzL2NsaWVudC5qcz81NWRmIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFRoaXMgZmlsZSB3YXMgbW9kaWZpZWQgYnkgT3JhY2xlIG9uIFNlcHRlbWJlciAyMSwgMjAyMS5cbi8vIE5ldyBjYXBhYmlsaXR5IGZvciBtdWx0aS1mYWN0b3IgYXV0aGVudGljYXRpb24gYmFzZWQgb24gbWFuZGF0b3J5IHNlc3Npb25cbi8vIHRyYWNrZXJzLCB0aGF0IGFyZSBzaWduYWxlZCB3aXRoIGFuIGV4dHJhIHNpbmdsZS1ieXRlIHByZWZpeCBvbiBuZXdcbi8vIHZlcnNpb25zIG9mIHRoZSBNeVNRTCBzZXJ2ZXIuXG4vLyBNb2RpZmljYXRpb25zIGNvcHlyaWdodCAoYykgMjAyMSwgT3JhY2xlIGFuZC9vciBpdHMgYWZmaWxpYXRlcy5cblxuJ3VzZSBzdHJpY3QnO1xuXG4vLyBNYW51YWxseSBleHRyYWN0ZWQgZnJvbSBteXNxbC01LjUuMjMvaW5jbHVkZS9teXNxbF9jb20uaFxuZXhwb3J0cy5MT05HX1BBU1NXT1JEID0gMHgwMDAwMDAwMTsgLyogbmV3IG1vcmUgc2VjdXJlIHBhc3N3b3JkcyAqL1xuZXhwb3J0cy5GT1VORF9ST1dTID0gMHgwMDAwMDAwMjsgLyogZm91bmQgaW5zdGVhZCBvZiBhZmZlY3RlZCByb3dzICovXG5leHBvcnRzLkxPTkdfRkxBRyA9IDB4MDAwMDAwMDQ7IC8qIGdldCBhbGwgY29sdW1uIGZsYWdzICovXG5leHBvcnRzLkNPTk5FQ1RfV0lUSF9EQiA9IDB4MDAwMDAwMDg7IC8qIG9uZSBjYW4gc3BlY2lmeSBkYiBvbiBjb25uZWN0ICovXG5leHBvcnRzLk5PX1NDSEVNQSA9IDB4MDAwMDAwMTA7IC8qIGRvbid0IGFsbG93IGRhdGFiYXNlLnRhYmxlLmNvbHVtbiAqL1xuZXhwb3J0cy5DT01QUkVTUyA9IDB4MDAwMDAwMjA7IC8qIGNhbiB1c2UgY29tcHJlc3Npb24gcHJvdG9jb2wgKi9cbmV4cG9ydHMuT0RCQyA9IDB4MDAwMDAwNDA7IC8qIG9kYmMgY2xpZW50ICovXG5leHBvcnRzLkxPQ0FMX0ZJTEVTID0gMHgwMDAwMDA4MDsgLyogY2FuIHVzZSBMT0FEIERBVEEgTE9DQUwgKi9cbmV4cG9ydHMuSUdOT1JFX1NQQUNFID0gMHgwMDAwMDEwMDsgLyogaWdub3JlIHNwYWNlcyBiZWZvcmUgJycgKi9cbmV4cG9ydHMuUFJPVE9DT0xfNDEgPSAweDAwMDAwMjAwOyAvKiBuZXcgNC4xIHByb3RvY29sICovXG5leHBvcnRzLklOVEVSQUNUSVZFID0gMHgwMDAwMDQwMDsgLyogdGhpcyBpcyBhbiBpbnRlcmFjdGl2ZSBjbGllbnQgKi9cbmV4cG9ydHMuU1NMID0gMHgwMDAwMDgwMDsgLyogc3dpdGNoIHRvIHNzbCBhZnRlciBoYW5kc2hha2UgKi9cbmV4cG9ydHMuSUdOT1JFX1NJR1BJUEUgPSAweDAwMDAxMDAwOyAvKiBJR05PUkUgc2lncGlwZXMgKi9cbmV4cG9ydHMuVFJBTlNBQ1RJT05TID0gMHgwMDAwMjAwMDsgLyogY2xpZW50IGtub3dzIGFib3V0IHRyYW5zYWN0aW9ucyAqL1xuZXhwb3J0cy5SRVNFUlZFRCA9IDB4MDAwMDQwMDA7IC8qIG9sZCBmbGFnIGZvciA0LjEgcHJvdG9jb2wgICovXG5leHBvcnRzLlNFQ1VSRV9DT05ORUNUSU9OID0gMHgwMDAwODAwMDsgLyogbmV3IDQuMSBhdXRoZW50aWNhdGlvbiAqL1xuZXhwb3J0cy5NVUxUSV9TVEFURU1FTlRTID0gMHgwMDAxMDAwMDsgLyogZW5hYmxlL2Rpc2FibGUgbXVsdGktc3RtdCBzdXBwb3J0ICovXG5leHBvcnRzLk1VTFRJX1JFU1VMVFMgPSAweDAwMDIwMDAwOyAvKiBlbmFibGUvZGlzYWJsZSBtdWx0aS1yZXN1bHRzICovXG5leHBvcnRzLlBTX01VTFRJX1JFU1VMVFMgPSAweDAwMDQwMDAwOyAvKiBtdWx0aS1yZXN1bHRzIGluIHBzLXByb3RvY29sICovXG5leHBvcnRzLlBMVUdJTl9BVVRIID0gMHgwMDA4MDAwMDsgLyogY2xpZW50IHN1cHBvcnRzIHBsdWdpbiBhdXRoZW50aWNhdGlvbiAqL1xuZXhwb3J0cy5DT05ORUNUX0FUVFJTID0gMHgwMDEwMDAwMDsgLyogcGVybWl0cyBjb25uZWN0aW9uIGF0dHJpYnV0ZXMgKi9cbmV4cG9ydHMuUExVR0lOX0FVVEhfTEVORU5DX0NMSUVOVF9EQVRBID0gMHgwMDIwMDAwMDsgLyogVW5kZXJzdGFuZHMgbGVuZ3RoLWVuY29kZWQgaW50ZWdlciBmb3IgYXV0aCByZXNwb25zZSBkYXRhIGluIFByb3RvY29sOjpIYW5kc2hha2VSZXNwb25zZTQxLiAqL1xuZXhwb3J0cy5DQU5fSEFORExFX0VYUElSRURfUEFTU1dPUkRTID0gMHgwMDQwMDAwMDsgLyogQW5ub3VuY2VzIHN1cHBvcnQgZm9yIGV4cGlyZWQgcGFzc3dvcmQgZXh0ZW5zaW9uLiAqL1xuZXhwb3J0cy5TRVNTSU9OX1RSQUNLID0gMHgwMDgwMDAwMDsgLyogQ2FuIHNldCBTRVJWRVJfU0VTU0lPTl9TVEFURV9DSEFOR0VEIGluIHRoZSBTdGF0dXMgRmxhZ3MgYW5kIHNlbmQgc2Vzc2lvbi1zdGF0ZSBjaGFuZ2UgZGF0YSBhZnRlciBhIE9LIHBhY2tldC4gKi9cbmV4cG9ydHMuREVQUkVDQVRFX0VPRiA9IDB4MDEwMDAwMDA7IC8qIENhbiBzZW5kIE9LIGFmdGVyIGEgVGV4dCBSZXN1bHRzZXQuICovXG5cbmV4cG9ydHMuU1NMX1ZFUklGWV9TRVJWRVJfQ0VSVCA9IDB4NDAwMDAwMDA7XG5leHBvcnRzLlJFTUVNQkVSX09QVElPTlMgPSAweDgwMDAwMDAwO1xuXG5leHBvcnRzLk1VTFRJX0ZBQ1RPUl9BVVRIRU5USUNBVElPTiA9IDB4MTAwMDAwMDA7IC8qIG11bHRpLWZhY3RvciBhdXRoZW50aWNhdGlvbiAqL1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/constants/client.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/constants/commands.js":
/*!*******************************************************!*\
  !*** ./node_modules/mysql2/lib/constants/commands.js ***!
  \*******************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = {\n  SLEEP: 0x00, // deprecated\n  QUIT: 0x01,\n  INIT_DB: 0x02,\n  QUERY: 0x03,\n  FIELD_LIST: 0x04,\n  CREATE_DB: 0x05,\n  DROP_DB: 0x06,\n  REFRESH: 0x07,\n  SHUTDOWN: 0x08,\n  STATISTICS: 0x09,\n  PROCESS_INFO: 0x0a, // deprecated\n  CONNECT: 0x0b, // deprecated\n  PROCESS_KILL: 0x0c,\n  DEBUG: 0x0d,\n  PING: 0x0e,\n  TIME: 0x0f, // deprecated\n  DELAYED_INSERT: 0x10, // deprecated\n  CHANGE_USER: 0x11,\n  BINLOG_DUMP: 0x12,\n  TABLE_DUMP: 0x13,\n  CONNECT_OUT: 0x14,\n  REGISTER_SLAVE: 0x15,\n  STMT_PREPARE: 0x16,\n  STMT_EXECUTE: 0x17,\n  STMT_SEND_LONG_DATA: 0x18,\n  STMT_CLOSE: 0x19,\n  STMT_RESET: 0x1a,\n  SET_OPTION: 0x1b,\n  STMT_FETCH: 0x1c,\n  DAEMON: 0x1d, // deprecated\n  BINLOG_DUMP_GTID: 0x1e,\n  UNKNOWN: 0xff // bad!\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb25zdGFudHMvY29tbWFuZHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZWFsX2VzdGF0ZS8uL25vZGVfbW9kdWxlcy9teXNxbDIvbGliL2NvbnN0YW50cy9jb21tYW5kcy5qcz82MmI1Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIFNMRUVQOiAweDAwLCAvLyBkZXByZWNhdGVkXG4gIFFVSVQ6IDB4MDEsXG4gIElOSVRfREI6IDB4MDIsXG4gIFFVRVJZOiAweDAzLFxuICBGSUVMRF9MSVNUOiAweDA0LFxuICBDUkVBVEVfREI6IDB4MDUsXG4gIERST1BfREI6IDB4MDYsXG4gIFJFRlJFU0g6IDB4MDcsXG4gIFNIVVRET1dOOiAweDA4LFxuICBTVEFUSVNUSUNTOiAweDA5LFxuICBQUk9DRVNTX0lORk86IDB4MGEsIC8vIGRlcHJlY2F0ZWRcbiAgQ09OTkVDVDogMHgwYiwgLy8gZGVwcmVjYXRlZFxuICBQUk9DRVNTX0tJTEw6IDB4MGMsXG4gIERFQlVHOiAweDBkLFxuICBQSU5HOiAweDBlLFxuICBUSU1FOiAweDBmLCAvLyBkZXByZWNhdGVkXG4gIERFTEFZRURfSU5TRVJUOiAweDEwLCAvLyBkZXByZWNhdGVkXG4gIENIQU5HRV9VU0VSOiAweDExLFxuICBCSU5MT0dfRFVNUDogMHgxMixcbiAgVEFCTEVfRFVNUDogMHgxMyxcbiAgQ09OTkVDVF9PVVQ6IDB4MTQsXG4gIFJFR0lTVEVSX1NMQVZFOiAweDE1LFxuICBTVE1UX1BSRVBBUkU6IDB4MTYsXG4gIFNUTVRfRVhFQ1VURTogMHgxNyxcbiAgU1RNVF9TRU5EX0xPTkdfREFUQTogMHgxOCxcbiAgU1RNVF9DTE9TRTogMHgxOSxcbiAgU1RNVF9SRVNFVDogMHgxYSxcbiAgU0VUX09QVElPTjogMHgxYixcbiAgU1RNVF9GRVRDSDogMHgxYyxcbiAgREFFTU9OOiAweDFkLCAvLyBkZXByZWNhdGVkXG4gIEJJTkxPR19EVU1QX0dUSUQ6IDB4MWUsXG4gIFVOS05PV046IDB4ZmYgLy8gYmFkIVxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/constants/commands.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/constants/cursor.js":
/*!*****************************************************!*\
  !*** ./node_modules/mysql2/lib/constants/cursor.js ***!
  \*****************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = {\n  NO_CURSOR: 0,\n  READ_ONLY: 1,\n  FOR_UPDATE: 2,\n  SCROLLABLE: 3\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb25zdGFudHMvY3Vyc29yLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JlYWxfZXN0YXRlLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvY29uc3RhbnRzL2N1cnNvci5qcz8wYTNjIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIE5PX0NVUlNPUjogMCxcbiAgUkVBRF9PTkxZOiAxLFxuICBGT1JfVVBEQVRFOiAyLFxuICBTQ1JPTExBQkxFOiAzXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/constants/cursor.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/constants/encoding_charset.js":
/*!***************************************************************!*\
  !*** ./node_modules/mysql2/lib/constants/encoding_charset.js ***!
  \***************************************************************/
/***/ ((module) => {

eval("\n\n// inverse of charset_encodings\n// given encoding, get matching mysql charset number\n\nmodule.exports = {\n  big5: 1,\n  latin2: 2,\n  dec8: 3,\n  cp850: 4,\n  latin1: 5,\n  hp8: 6,\n  koi8r: 7,\n  swe7: 10,\n  ascii: 11,\n  eucjp: 12,\n  sjis: 13,\n  cp1251: 14,\n  hebrew: 16,\n  tis620: 18,\n  euckr: 19,\n  latin7: 20,\n  koi8u: 22,\n  gb2312: 24,\n  greek: 25,\n  cp1250: 26,\n  gbk: 28,\n  cp1257: 29,\n  latin5: 30,\n  armscii8: 32,\n  cesu8: 33,\n  ucs2: 35,\n  cp866: 36,\n  keybcs2: 37,\n  macintosh: 38,\n  macroman: 39,\n  cp852: 40,\n  utf8: 45,\n  utf8mb4: 45,\n  utf16: 54,\n  utf16le: 56,\n  cp1256: 57,\n  utf32: 60,\n  binary: 63,\n  geostd8: 92,\n  cp932: 95,\n  eucjpms: 97,\n  gb18030: 248\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb25zdGFudHMvZW5jb2RpbmdfY2hhcnNldC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZWFsX2VzdGF0ZS8uL25vZGVfbW9kdWxlcy9teXNxbDIvbGliL2NvbnN0YW50cy9lbmNvZGluZ19jaGFyc2V0LmpzPzE2NmIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vLyBpbnZlcnNlIG9mIGNoYXJzZXRfZW5jb2RpbmdzXG4vLyBnaXZlbiBlbmNvZGluZywgZ2V0IG1hdGNoaW5nIG15c3FsIGNoYXJzZXQgbnVtYmVyXG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBiaWc1OiAxLFxuICBsYXRpbjI6IDIsXG4gIGRlYzg6IDMsXG4gIGNwODUwOiA0LFxuICBsYXRpbjE6IDUsXG4gIGhwODogNixcbiAga29pOHI6IDcsXG4gIHN3ZTc6IDEwLFxuICBhc2NpaTogMTEsXG4gIGV1Y2pwOiAxMixcbiAgc2ppczogMTMsXG4gIGNwMTI1MTogMTQsXG4gIGhlYnJldzogMTYsXG4gIHRpczYyMDogMTgsXG4gIGV1Y2tyOiAxOSxcbiAgbGF0aW43OiAyMCxcbiAga29pOHU6IDIyLFxuICBnYjIzMTI6IDI0LFxuICBncmVlazogMjUsXG4gIGNwMTI1MDogMjYsXG4gIGdiazogMjgsXG4gIGNwMTI1NzogMjksXG4gIGxhdGluNTogMzAsXG4gIGFybXNjaWk4OiAzMixcbiAgY2VzdTg6IDMzLFxuICB1Y3MyOiAzNSxcbiAgY3A4NjY6IDM2LFxuICBrZXliY3MyOiAzNyxcbiAgbWFjaW50b3NoOiAzOCxcbiAgbWFjcm9tYW46IDM5LFxuICBjcDg1MjogNDAsXG4gIHV0Zjg6IDQ1LFxuICB1dGY4bWI0OiA0NSxcbiAgdXRmMTY6IDU0LFxuICB1dGYxNmxlOiA1NixcbiAgY3AxMjU2OiA1NyxcbiAgdXRmMzI6IDYwLFxuICBiaW5hcnk6IDYzLFxuICBnZW9zdGQ4OiA5MixcbiAgY3A5MzI6IDk1LFxuICBldWNqcG1zOiA5NyxcbiAgZ2IxODAzMDogMjQ4XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/constants/encoding_charset.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/constants/errors.js":
/*!*****************************************************!*\
  !*** ./node_modules/mysql2/lib/constants/errors.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("// This file was modified by Oracle on June 1, 2021.\n// An entry was created for a new error reported by the MySQL server due to\n// client inactivity.\n// Modifications copyright (c) 2021, Oracle and/or its affiliates.\n\n\n\n// originally copied from https://raw.githubusercontent.com/mysqljs/mysql/7770ee5bb13260c56a160b91fe480d9165dbeeba/lib/protocol/constants/errors.js\n// (c) node-mysql authors\n\n// updated to contain error codes as is contained in MySQL 8.0\n// by adapting node-mysql: /.../generate-error-constants.js\n\n/**\n * MySQL error constants\n * \n * Extracted from version 8.0.33\n * \n * !! Generated by generate-error-constants.js, do not modify by hand !!\n */\n\n\nexports.EE_CANTCREATEFILE = 1\nexports.EE_READ = 2\nexports.EE_WRITE = 3\nexports.EE_BADCLOSE = 4\nexports.EE_OUTOFMEMORY = 5\nexports.EE_DELETE = 6\nexports.EE_LINK = 7\nexports.EE_EOFERR = 9\nexports.EE_CANTLOCK = 10\nexports.EE_CANTUNLOCK = 11\nexports.EE_DIR = 12\nexports.EE_STAT = 13\nexports.EE_CANT_CHSIZE = 14\nexports.EE_CANT_OPEN_STREAM = 15\nexports.EE_GETWD = 16\nexports.EE_SETWD = 17\nexports.EE_LINK_WARNING = 18\nexports.EE_OPEN_WARNING = 19\nexports.EE_DISK_FULL = 20\nexports.EE_CANT_MKDIR = 21\nexports.EE_UNKNOWN_CHARSET = 22\nexports.EE_OUT_OF_FILERESOURCES = 23\nexports.EE_CANT_READLINK = 24\nexports.EE_CANT_SYMLINK = 25\nexports.EE_REALPATH = 26\nexports.EE_SYNC = 27\nexports.EE_UNKNOWN_COLLATION = 28\nexports.EE_FILENOTFOUND = 29\nexports.EE_FILE_NOT_CLOSED = 30\nexports.EE_CHANGE_OWNERSHIP = 31\nexports.EE_CHANGE_PERMISSIONS = 32\nexports.EE_CANT_SEEK = 33\nexports.EE_CAPACITY_EXCEEDED = 34\nexports.EE_DISK_FULL_WITH_RETRY_MSG = 35\nexports.EE_FAILED_TO_CREATE_TIMER = 36\nexports.EE_FAILED_TO_DELETE_TIMER = 37\nexports.EE_FAILED_TO_CREATE_TIMER_QUEUE = 38\nexports.EE_FAILED_TO_START_TIMER_NOTIFY_THREAD = 39\nexports.EE_FAILED_TO_CREATE_TIMER_NOTIFY_THREAD_INTERRUPT_EVENT = 40\nexports.EE_EXITING_TIMER_NOTIFY_THREAD = 41\nexports.EE_WIN_LIBRARY_LOAD_FAILED = 42\nexports.EE_WIN_RUN_TIME_ERROR_CHECK = 43\nexports.EE_FAILED_TO_DETERMINE_LARGE_PAGE_SIZE = 44\nexports.EE_FAILED_TO_KILL_ALL_THREADS = 45\nexports.EE_FAILED_TO_CREATE_IO_COMPLETION_PORT = 46\nexports.EE_FAILED_TO_OPEN_DEFAULTS_FILE = 47\nexports.EE_FAILED_TO_HANDLE_DEFAULTS_FILE = 48\nexports.EE_WRONG_DIRECTIVE_IN_CONFIG_FILE = 49\nexports.EE_SKIPPING_DIRECTIVE_DUE_TO_MAX_INCLUDE_RECURSION = 50\nexports.EE_INCORRECT_GRP_DEFINITION_IN_CONFIG_FILE = 51\nexports.EE_OPTION_WITHOUT_GRP_IN_CONFIG_FILE = 52\nexports.EE_CONFIG_FILE_PERMISSION_ERROR = 53\nexports.EE_IGNORE_WORLD_WRITABLE_CONFIG_FILE = 54\nexports.EE_USING_DISABLED_OPTION = 55\nexports.EE_USING_DISABLED_SHORT_OPTION = 56\nexports.EE_USING_PASSWORD_ON_CLI_IS_INSECURE = 57\nexports.EE_UNKNOWN_SUFFIX_FOR_VARIABLE = 58\nexports.EE_SSL_ERROR_FROM_FILE = 59\nexports.EE_SSL_ERROR = 60\nexports.EE_NET_SEND_ERROR_IN_BOOTSTRAP = 61\nexports.EE_PACKETS_OUT_OF_ORDER = 62\nexports.EE_UNKNOWN_PROTOCOL_OPTION = 63\nexports.EE_FAILED_TO_LOCATE_SERVER_PUBLIC_KEY = 64\nexports.EE_PUBLIC_KEY_NOT_IN_PEM_FORMAT = 65\nexports.EE_DEBUG_INFO = 66\nexports.EE_UNKNOWN_VARIABLE = 67\nexports.EE_UNKNOWN_OPTION = 68\nexports.EE_UNKNOWN_SHORT_OPTION = 69\nexports.EE_OPTION_WITHOUT_ARGUMENT = 70\nexports.EE_OPTION_REQUIRES_ARGUMENT = 71\nexports.EE_SHORT_OPTION_REQUIRES_ARGUMENT = 72\nexports.EE_OPTION_IGNORED_DUE_TO_INVALID_VALUE = 73\nexports.EE_OPTION_WITH_EMPTY_VALUE = 74\nexports.EE_FAILED_TO_ASSIGN_MAX_VALUE_TO_OPTION = 75\nexports.EE_INCORRECT_BOOLEAN_VALUE_FOR_OPTION = 76\nexports.EE_FAILED_TO_SET_OPTION_VALUE = 77\nexports.EE_INCORRECT_INT_VALUE_FOR_OPTION = 78\nexports.EE_INCORRECT_UINT_VALUE_FOR_OPTION = 79\nexports.EE_ADJUSTED_SIGNED_VALUE_FOR_OPTION = 80\nexports.EE_ADJUSTED_UNSIGNED_VALUE_FOR_OPTION = 81\nexports.EE_ADJUSTED_ULONGLONG_VALUE_FOR_OPTION = 82\nexports.EE_ADJUSTED_DOUBLE_VALUE_FOR_OPTION = 83\nexports.EE_INVALID_DECIMAL_VALUE_FOR_OPTION = 84\nexports.EE_COLLATION_PARSER_ERROR = 85\nexports.EE_FAILED_TO_RESET_BEFORE_PRIMARY_IGNORABLE_CHAR = 86\nexports.EE_FAILED_TO_RESET_BEFORE_TERTIARY_IGNORABLE_CHAR = 87\nexports.EE_SHIFT_CHAR_OUT_OF_RANGE = 88\nexports.EE_RESET_CHAR_OUT_OF_RANGE = 89\nexports.EE_UNKNOWN_LDML_TAG = 90\nexports.EE_FAILED_TO_RESET_BEFORE_SECONDARY_IGNORABLE_CHAR = 91\nexports.EE_FAILED_PROCESSING_DIRECTIVE = 92\nexports.EE_PTHREAD_KILL_FAILED = 93\nexports.HA_ERR_KEY_NOT_FOUND = 120\nexports.HA_ERR_FOUND_DUPP_KEY = 121\nexports.HA_ERR_INTERNAL_ERROR = 122\nexports.HA_ERR_RECORD_CHANGED = 123\nexports.HA_ERR_WRONG_INDEX = 124\nexports.HA_ERR_ROLLED_BACK = 125\nexports.HA_ERR_CRASHED = 126\nexports.HA_ERR_WRONG_IN_RECORD = 127\nexports.HA_ERR_OUT_OF_MEM = 128\nexports.HA_ERR_NOT_A_TABLE = 130\nexports.HA_ERR_WRONG_COMMAND = 131\nexports.HA_ERR_OLD_FILE = 132\nexports.HA_ERR_NO_ACTIVE_RECORD = 133\nexports.HA_ERR_RECORD_DELETED = 134\nexports.HA_ERR_RECORD_FILE_FULL = 135\nexports.HA_ERR_INDEX_FILE_FULL = 136\nexports.HA_ERR_END_OF_FILE = 137\nexports.HA_ERR_UNSUPPORTED = 138\nexports.HA_ERR_TOO_BIG_ROW = 139\nexports.HA_WRONG_CREATE_OPTION = 140\nexports.HA_ERR_FOUND_DUPP_UNIQUE = 141\nexports.HA_ERR_UNKNOWN_CHARSET = 142\nexports.HA_ERR_WRONG_MRG_TABLE_DEF = 143\nexports.HA_ERR_CRASHED_ON_REPAIR = 144\nexports.HA_ERR_CRASHED_ON_USAGE = 145\nexports.HA_ERR_LOCK_WAIT_TIMEOUT = 146\nexports.HA_ERR_LOCK_TABLE_FULL = 147\nexports.HA_ERR_READ_ONLY_TRANSACTION = 148\nexports.HA_ERR_LOCK_DEADLOCK = 149\nexports.HA_ERR_CANNOT_ADD_FOREIGN = 150\nexports.HA_ERR_NO_REFERENCED_ROW = 151\nexports.HA_ERR_ROW_IS_REFERENCED = 152\nexports.HA_ERR_NO_SAVEPOINT = 153\nexports.HA_ERR_NON_UNIQUE_BLOCK_SIZE = 154\nexports.HA_ERR_NO_SUCH_TABLE = 155\nexports.HA_ERR_TABLE_EXIST = 156\nexports.HA_ERR_NO_CONNECTION = 157\nexports.HA_ERR_NULL_IN_SPATIAL = 158\nexports.HA_ERR_TABLE_DEF_CHANGED = 159\nexports.HA_ERR_NO_PARTITION_FOUND = 160\nexports.HA_ERR_RBR_LOGGING_FAILED = 161\nexports.HA_ERR_DROP_INDEX_FK = 162\nexports.HA_ERR_FOREIGN_DUPLICATE_KEY = 163\nexports.HA_ERR_TABLE_NEEDS_UPGRADE = 164\nexports.HA_ERR_TABLE_READONLY = 165\nexports.HA_ERR_AUTOINC_READ_FAILED = 166\nexports.HA_ERR_AUTOINC_ERANGE = 167\nexports.HA_ERR_GENERIC = 168\nexports.HA_ERR_RECORD_IS_THE_SAME = 169\nexports.HA_ERR_LOGGING_IMPOSSIBLE = 170\nexports.HA_ERR_CORRUPT_EVENT = 171\nexports.HA_ERR_NEW_FILE = 172\nexports.HA_ERR_ROWS_EVENT_APPLY = 173\nexports.HA_ERR_INITIALIZATION = 174\nexports.HA_ERR_FILE_TOO_SHORT = 175\nexports.HA_ERR_WRONG_CRC = 176\nexports.HA_ERR_TOO_MANY_CONCURRENT_TRXS = 177\nexports.HA_ERR_NOT_IN_LOCK_PARTITIONS = 178\nexports.HA_ERR_INDEX_COL_TOO_LONG = 179\nexports.HA_ERR_INDEX_CORRUPT = 180\nexports.HA_ERR_UNDO_REC_TOO_BIG = 181\nexports.HA_FTS_INVALID_DOCID = 182\nexports.HA_ERR_TABLE_IN_FK_CHECK = 183\nexports.HA_ERR_TABLESPACE_EXISTS = 184\nexports.HA_ERR_TOO_MANY_FIELDS = 185\nexports.HA_ERR_ROW_IN_WRONG_PARTITION = 186\nexports.HA_ERR_INNODB_READ_ONLY = 187\nexports.HA_ERR_FTS_EXCEED_RESULT_CACHE_LIMIT = 188\nexports.HA_ERR_TEMP_FILE_WRITE_FAILURE = 189\nexports.HA_ERR_INNODB_FORCED_RECOVERY = 190\nexports.HA_ERR_FTS_TOO_MANY_WORDS_IN_PHRASE = 191\nexports.HA_ERR_FK_DEPTH_EXCEEDED = 192\nexports.HA_MISSING_CREATE_OPTION = 193\nexports.HA_ERR_SE_OUT_OF_MEMORY = 194\nexports.HA_ERR_TABLE_CORRUPT = 195\nexports.HA_ERR_QUERY_INTERRUPTED = 196\nexports.HA_ERR_TABLESPACE_MISSING = 197\nexports.HA_ERR_TABLESPACE_IS_NOT_EMPTY = 198\nexports.HA_ERR_WRONG_FILE_NAME = 199\nexports.HA_ERR_NOT_ALLOWED_COMMAND = 200\nexports.HA_ERR_COMPUTE_FAILED = 201\nexports.HA_ERR_ROW_FORMAT_CHANGED = 202\nexports.HA_ERR_NO_WAIT_LOCK = 203\nexports.HA_ERR_DISK_FULL_NOWAIT = 204\nexports.HA_ERR_NO_SESSION_TEMP = 205\nexports.HA_ERR_WRONG_TABLE_NAME = 206\nexports.HA_ERR_TOO_LONG_PATH = 207\nexports.HA_ERR_SAMPLING_INIT_FAILED = 208\nexports.HA_ERR_FTS_TOO_MANY_NESTED_EXP = 209\nexports.ER_HASHCHK = 1000\nexports.ER_NISAMCHK = 1001\nexports.ER_NO = 1002\nexports.ER_YES = 1003\nexports.ER_CANT_CREATE_FILE = 1004\nexports.ER_CANT_CREATE_TABLE = 1005\nexports.ER_CANT_CREATE_DB = 1006\nexports.ER_DB_CREATE_EXISTS = 1007\nexports.ER_DB_DROP_EXISTS = 1008\nexports.ER_DB_DROP_DELETE = 1009\nexports.ER_DB_DROP_RMDIR = 1010\nexports.ER_CANT_DELETE_FILE = 1011\nexports.ER_CANT_FIND_SYSTEM_REC = 1012\nexports.ER_CANT_GET_STAT = 1013\nexports.ER_CANT_GET_WD = 1014\nexports.ER_CANT_LOCK = 1015\nexports.ER_CANT_OPEN_FILE = 1016\nexports.ER_FILE_NOT_FOUND = 1017\nexports.ER_CANT_READ_DIR = 1018\nexports.ER_CANT_SET_WD = 1019\nexports.ER_CHECKREAD = 1020\nexports.ER_DISK_FULL = 1021\nexports.ER_DUP_KEY = 1022\nexports.ER_ERROR_ON_CLOSE = 1023\nexports.ER_ERROR_ON_READ = 1024\nexports.ER_ERROR_ON_RENAME = 1025\nexports.ER_ERROR_ON_WRITE = 1026\nexports.ER_FILE_USED = 1027\nexports.ER_FILSORT_ABORT = 1028\nexports.ER_FORM_NOT_FOUND = 1029\nexports.ER_GET_ERRNO = 1030\nexports.ER_ILLEGAL_HA = 1031\nexports.ER_KEY_NOT_FOUND = 1032\nexports.ER_NOT_FORM_FILE = 1033\nexports.ER_NOT_KEYFILE = 1034\nexports.ER_OLD_KEYFILE = 1035\nexports.ER_OPEN_AS_READONLY = 1036\nexports.ER_OUTOFMEMORY = 1037\nexports.ER_OUT_OF_SORTMEMORY = 1038\nexports.ER_UNEXPECTED_EOF = 1039\nexports.ER_CON_COUNT_ERROR = 1040\nexports.ER_OUT_OF_RESOURCES = 1041\nexports.ER_BAD_HOST_ERROR = 1042\nexports.ER_HANDSHAKE_ERROR = 1043\nexports.ER_DBACCESS_DENIED_ERROR = 1044\nexports.ER_ACCESS_DENIED_ERROR = 1045\nexports.ER_NO_DB_ERROR = 1046\nexports.ER_UNKNOWN_COM_ERROR = 1047\nexports.ER_BAD_NULL_ERROR = 1048\nexports.ER_BAD_DB_ERROR = 1049\nexports.ER_TABLE_EXISTS_ERROR = 1050\nexports.ER_BAD_TABLE_ERROR = 1051\nexports.ER_NON_UNIQ_ERROR = 1052\nexports.ER_SERVER_SHUTDOWN = 1053\nexports.ER_BAD_FIELD_ERROR = 1054\nexports.ER_WRONG_FIELD_WITH_GROUP = 1055\nexports.ER_WRONG_GROUP_FIELD = 1056\nexports.ER_WRONG_SUM_SELECT = 1057\nexports.ER_WRONG_VALUE_COUNT = 1058\nexports.ER_TOO_LONG_IDENT = 1059\nexports.ER_DUP_FIELDNAME = 1060\nexports.ER_DUP_KEYNAME = 1061\nexports.ER_DUP_ENTRY = 1062\nexports.ER_WRONG_FIELD_SPEC = 1063\nexports.ER_PARSE_ERROR = 1064\nexports.ER_EMPTY_QUERY = 1065\nexports.ER_NONUNIQ_TABLE = 1066\nexports.ER_INVALID_DEFAULT = 1067\nexports.ER_MULTIPLE_PRI_KEY = 1068\nexports.ER_TOO_MANY_KEYS = 1069\nexports.ER_TOO_MANY_KEY_PARTS = 1070\nexports.ER_TOO_LONG_KEY = 1071\nexports.ER_KEY_COLUMN_DOES_NOT_EXITS = 1072\nexports.ER_BLOB_USED_AS_KEY = 1073\nexports.ER_TOO_BIG_FIELDLENGTH = 1074\nexports.ER_WRONG_AUTO_KEY = 1075\nexports.ER_READY = 1076\nexports.ER_NORMAL_SHUTDOWN = 1077\nexports.ER_GOT_SIGNAL = 1078\nexports.ER_SHUTDOWN_COMPLETE = 1079\nexports.ER_FORCING_CLOSE = 1080\nexports.ER_IPSOCK_ERROR = 1081\nexports.ER_NO_SUCH_INDEX = 1082\nexports.ER_WRONG_FIELD_TERMINATORS = 1083\nexports.ER_BLOBS_AND_NO_TERMINATED = 1084\nexports.ER_TEXTFILE_NOT_READABLE = 1085\nexports.ER_FILE_EXISTS_ERROR = 1086\nexports.ER_LOAD_INFO = 1087\nexports.ER_ALTER_INFO = 1088\nexports.ER_WRONG_SUB_KEY = 1089\nexports.ER_CANT_REMOVE_ALL_FIELDS = 1090\nexports.ER_CANT_DROP_FIELD_OR_KEY = 1091\nexports.ER_INSERT_INFO = 1092\nexports.ER_UPDATE_TABLE_USED = 1093\nexports.ER_NO_SUCH_THREAD = 1094\nexports.ER_KILL_DENIED_ERROR = 1095\nexports.ER_NO_TABLES_USED = 1096\nexports.ER_TOO_BIG_SET = 1097\nexports.ER_NO_UNIQUE_LOGFILE = 1098\nexports.ER_TABLE_NOT_LOCKED_FOR_WRITE = 1099\nexports.ER_TABLE_NOT_LOCKED = 1100\nexports.ER_BLOB_CANT_HAVE_DEFAULT = 1101\nexports.ER_WRONG_DB_NAME = 1102\nexports.ER_WRONG_TABLE_NAME = 1103\nexports.ER_TOO_BIG_SELECT = 1104\nexports.ER_UNKNOWN_ERROR = 1105\nexports.ER_UNKNOWN_PROCEDURE = 1106\nexports.ER_WRONG_PARAMCOUNT_TO_PROCEDURE = 1107\nexports.ER_WRONG_PARAMETERS_TO_PROCEDURE = 1108\nexports.ER_UNKNOWN_TABLE = 1109\nexports.ER_FIELD_SPECIFIED_TWICE = 1110\nexports.ER_INVALID_GROUP_FUNC_USE = 1111\nexports.ER_UNSUPPORTED_EXTENSION = 1112\nexports.ER_TABLE_MUST_HAVE_COLUMNS = 1113\nexports.ER_RECORD_FILE_FULL = 1114\nexports.ER_UNKNOWN_CHARACTER_SET = 1115\nexports.ER_TOO_MANY_TABLES = 1116\nexports.ER_TOO_MANY_FIELDS = 1117\nexports.ER_TOO_BIG_ROWSIZE = 1118\nexports.ER_STACK_OVERRUN = 1119\nexports.ER_WRONG_OUTER_JOIN = 1120\nexports.ER_NULL_COLUMN_IN_INDEX = 1121\nexports.ER_CANT_FIND_UDF = 1122\nexports.ER_CANT_INITIALIZE_UDF = 1123\nexports.ER_UDF_NO_PATHS = 1124\nexports.ER_UDF_EXISTS = 1125\nexports.ER_CANT_OPEN_LIBRARY = 1126\nexports.ER_CANT_FIND_DL_ENTRY = 1127\nexports.ER_FUNCTION_NOT_DEFINED = 1128\nexports.ER_HOST_IS_BLOCKED = 1129\nexports.ER_HOST_NOT_PRIVILEGED = 1130\nexports.ER_PASSWORD_ANONYMOUS_USER = 1131\nexports.ER_PASSWORD_NOT_ALLOWED = 1132\nexports.ER_PASSWORD_NO_MATCH = 1133\nexports.ER_UPDATE_INFO = 1134\nexports.ER_CANT_CREATE_THREAD = 1135\nexports.ER_WRONG_VALUE_COUNT_ON_ROW = 1136\nexports.ER_CANT_REOPEN_TABLE = 1137\nexports.ER_INVALID_USE_OF_NULL = 1138\nexports.ER_REGEXP_ERROR = 1139\nexports.ER_MIX_OF_GROUP_FUNC_AND_FIELDS = 1140\nexports.ER_NONEXISTING_GRANT = 1141\nexports.ER_TABLEACCESS_DENIED_ERROR = 1142\nexports.ER_COLUMNACCESS_DENIED_ERROR = 1143\nexports.ER_ILLEGAL_GRANT_FOR_TABLE = 1144\nexports.ER_GRANT_WRONG_HOST_OR_USER = 1145\nexports.ER_NO_SUCH_TABLE = 1146\nexports.ER_NONEXISTING_TABLE_GRANT = 1147\nexports.ER_NOT_ALLOWED_COMMAND = 1148\nexports.ER_SYNTAX_ERROR = 1149\nexports.ER_UNUSED1 = 1150\nexports.ER_UNUSED2 = 1151\nexports.ER_ABORTING_CONNECTION = 1152\nexports.ER_NET_PACKET_TOO_LARGE = 1153\nexports.ER_NET_READ_ERROR_FROM_PIPE = 1154\nexports.ER_NET_FCNTL_ERROR = 1155\nexports.ER_NET_PACKETS_OUT_OF_ORDER = 1156\nexports.ER_NET_UNCOMPRESS_ERROR = 1157\nexports.ER_NET_READ_ERROR = 1158\nexports.ER_NET_READ_INTERRUPTED = 1159\nexports.ER_NET_ERROR_ON_WRITE = 1160\nexports.ER_NET_WRITE_INTERRUPTED = 1161\nexports.ER_TOO_LONG_STRING = 1162\nexports.ER_TABLE_CANT_HANDLE_BLOB = 1163\nexports.ER_TABLE_CANT_HANDLE_AUTO_INCREMENT = 1164\nexports.ER_UNUSED3 = 1165\nexports.ER_WRONG_COLUMN_NAME = 1166\nexports.ER_WRONG_KEY_COLUMN = 1167\nexports.ER_WRONG_MRG_TABLE = 1168\nexports.ER_DUP_UNIQUE = 1169\nexports.ER_BLOB_KEY_WITHOUT_LENGTH = 1170\nexports.ER_PRIMARY_CANT_HAVE_NULL = 1171\nexports.ER_TOO_MANY_ROWS = 1172\nexports.ER_REQUIRES_PRIMARY_KEY = 1173\nexports.ER_NO_RAID_COMPILED = 1174\nexports.ER_UPDATE_WITHOUT_KEY_IN_SAFE_MODE = 1175\nexports.ER_KEY_DOES_NOT_EXITS = 1176\nexports.ER_CHECK_NO_SUCH_TABLE = 1177\nexports.ER_CHECK_NOT_IMPLEMENTED = 1178\nexports.ER_CANT_DO_THIS_DURING_AN_TRANSACTION = 1179\nexports.ER_ERROR_DURING_COMMIT = 1180\nexports.ER_ERROR_DURING_ROLLBACK = 1181\nexports.ER_ERROR_DURING_FLUSH_LOGS = 1182\nexports.ER_ERROR_DURING_CHECKPOINT = 1183\nexports.ER_NEW_ABORTING_CONNECTION = 1184\nexports.ER_DUMP_NOT_IMPLEMENTED = 1185\nexports.ER_FLUSH_MASTER_BINLOG_CLOSED = 1186\nexports.ER_INDEX_REBUILD = 1187\nexports.ER_SOURCE = 1188\nexports.ER_SOURCE_NET_READ = 1189\nexports.ER_SOURCE_NET_WRITE = 1190\nexports.ER_FT_MATCHING_KEY_NOT_FOUND = 1191\nexports.ER_LOCK_OR_ACTIVE_TRANSACTION = 1192\nexports.ER_UNKNOWN_SYSTEM_VARIABLE = 1193\nexports.ER_CRASHED_ON_USAGE = 1194\nexports.ER_CRASHED_ON_REPAIR = 1195\nexports.ER_WARNING_NOT_COMPLETE_ROLLBACK = 1196\nexports.ER_TRANS_CACHE_FULL = 1197\nexports.ER_SLAVE_MUST_STOP = 1198\nexports.ER_REPLICA_NOT_RUNNING = 1199\nexports.ER_BAD_REPLICA = 1200\nexports.ER_CONNECTION_METADATA = 1201\nexports.ER_REPLICA_THREAD = 1202\nexports.ER_TOO_MANY_USER_CONNECTIONS = 1203\nexports.ER_SET_CONSTANTS_ONLY = 1204\nexports.ER_LOCK_WAIT_TIMEOUT = 1205\nexports.ER_LOCK_TABLE_FULL = 1206\nexports.ER_READ_ONLY_TRANSACTION = 1207\nexports.ER_DROP_DB_WITH_READ_LOCK = 1208\nexports.ER_CREATE_DB_WITH_READ_LOCK = 1209\nexports.ER_WRONG_ARGUMENTS = 1210\nexports.ER_NO_PERMISSION_TO_CREATE_USER = 1211\nexports.ER_UNION_TABLES_IN_DIFFERENT_DIR = 1212\nexports.ER_LOCK_DEADLOCK = 1213\nexports.ER_TABLE_CANT_HANDLE_FT = 1214\nexports.ER_CANNOT_ADD_FOREIGN = 1215\nexports.ER_NO_REFERENCED_ROW = 1216\nexports.ER_ROW_IS_REFERENCED = 1217\nexports.ER_CONNECT_TO_SOURCE = 1218\nexports.ER_QUERY_ON_MASTER = 1219\nexports.ER_ERROR_WHEN_EXECUTING_COMMAND = 1220\nexports.ER_WRONG_USAGE = 1221\nexports.ER_WRONG_NUMBER_OF_COLUMNS_IN_SELECT = 1222\nexports.ER_CANT_UPDATE_WITH_READLOCK = 1223\nexports.ER_MIXING_NOT_ALLOWED = 1224\nexports.ER_DUP_ARGUMENT = 1225\nexports.ER_USER_LIMIT_REACHED = 1226\nexports.ER_SPECIFIC_ACCESS_DENIED_ERROR = 1227\nexports.ER_LOCAL_VARIABLE = 1228\nexports.ER_GLOBAL_VARIABLE = 1229\nexports.ER_NO_DEFAULT = 1230\nexports.ER_WRONG_VALUE_FOR_VAR = 1231\nexports.ER_WRONG_TYPE_FOR_VAR = 1232\nexports.ER_VAR_CANT_BE_READ = 1233\nexports.ER_CANT_USE_OPTION_HERE = 1234\nexports.ER_NOT_SUPPORTED_YET = 1235\nexports.ER_SOURCE_FATAL_ERROR_READING_BINLOG = 1236\nexports.ER_REPLICA_IGNORED_TABLE = 1237\nexports.ER_INCORRECT_GLOBAL_LOCAL_VAR = 1238\nexports.ER_WRONG_FK_DEF = 1239\nexports.ER_KEY_REF_DO_NOT_MATCH_TABLE_REF = 1240\nexports.ER_OPERAND_COLUMNS = 1241\nexports.ER_SUBQUERY_NO_1_ROW = 1242\nexports.ER_UNKNOWN_STMT_HANDLER = 1243\nexports.ER_CORRUPT_HELP_DB = 1244\nexports.ER_CYCLIC_REFERENCE = 1245\nexports.ER_AUTO_CONVERT = 1246\nexports.ER_ILLEGAL_REFERENCE = 1247\nexports.ER_DERIVED_MUST_HAVE_ALIAS = 1248\nexports.ER_SELECT_REDUCED = 1249\nexports.ER_TABLENAME_NOT_ALLOWED_HERE = 1250\nexports.ER_NOT_SUPPORTED_AUTH_MODE = 1251\nexports.ER_SPATIAL_CANT_HAVE_NULL = 1252\nexports.ER_COLLATION_CHARSET_MISMATCH = 1253\nexports.ER_SLAVE_WAS_RUNNING = 1254\nexports.ER_SLAVE_WAS_NOT_RUNNING = 1255\nexports.ER_TOO_BIG_FOR_UNCOMPRESS = 1256\nexports.ER_ZLIB_Z_MEM_ERROR = 1257\nexports.ER_ZLIB_Z_BUF_ERROR = 1258\nexports.ER_ZLIB_Z_DATA_ERROR = 1259\nexports.ER_CUT_VALUE_GROUP_CONCAT = 1260\nexports.ER_WARN_TOO_FEW_RECORDS = 1261\nexports.ER_WARN_TOO_MANY_RECORDS = 1262\nexports.ER_WARN_NULL_TO_NOTNULL = 1263\nexports.ER_WARN_DATA_OUT_OF_RANGE = 1264\nexports.WARN_DATA_TRUNCATED = 1265\nexports.ER_WARN_USING_OTHER_HANDLER = 1266\nexports.ER_CANT_AGGREGATE_2COLLATIONS = 1267\nexports.ER_DROP_USER = 1268\nexports.ER_REVOKE_GRANTS = 1269\nexports.ER_CANT_AGGREGATE_3COLLATIONS = 1270\nexports.ER_CANT_AGGREGATE_NCOLLATIONS = 1271\nexports.ER_VARIABLE_IS_NOT_STRUCT = 1272\nexports.ER_UNKNOWN_COLLATION = 1273\nexports.ER_REPLICA_IGNORED_SSL_PARAMS = 1274\nexports.ER_SERVER_IS_IN_SECURE_AUTH_MODE = 1275\nexports.ER_WARN_FIELD_RESOLVED = 1276\nexports.ER_BAD_REPLICA_UNTIL_COND = 1277\nexports.ER_MISSING_SKIP_REPLICA = 1278\nexports.ER_UNTIL_COND_IGNORED = 1279\nexports.ER_WRONG_NAME_FOR_INDEX = 1280\nexports.ER_WRONG_NAME_FOR_CATALOG = 1281\nexports.ER_WARN_QC_RESIZE = 1282\nexports.ER_BAD_FT_COLUMN = 1283\nexports.ER_UNKNOWN_KEY_CACHE = 1284\nexports.ER_WARN_HOSTNAME_WONT_WORK = 1285\nexports.ER_UNKNOWN_STORAGE_ENGINE = 1286\nexports.ER_WARN_DEPRECATED_SYNTAX = 1287\nexports.ER_NON_UPDATABLE_TABLE = 1288\nexports.ER_FEATURE_DISABLED = 1289\nexports.ER_OPTION_PREVENTS_STATEMENT = 1290\nexports.ER_DUPLICATED_VALUE_IN_TYPE = 1291\nexports.ER_TRUNCATED_WRONG_VALUE = 1292\nexports.ER_TOO_MUCH_AUTO_TIMESTAMP_COLS = 1293\nexports.ER_INVALID_ON_UPDATE = 1294\nexports.ER_UNSUPPORTED_PS = 1295\nexports.ER_GET_ERRMSG = 1296\nexports.ER_GET_TEMPORARY_ERRMSG = 1297\nexports.ER_UNKNOWN_TIME_ZONE = 1298\nexports.ER_WARN_INVALID_TIMESTAMP = 1299\nexports.ER_INVALID_CHARACTER_STRING = 1300\nexports.ER_WARN_ALLOWED_PACKET_OVERFLOWED = 1301\nexports.ER_CONFLICTING_DECLARATIONS = 1302\nexports.ER_SP_NO_RECURSIVE_CREATE = 1303\nexports.ER_SP_ALREADY_EXISTS = 1304\nexports.ER_SP_DOES_NOT_EXIST = 1305\nexports.ER_SP_DROP_FAILED = 1306\nexports.ER_SP_STORE_FAILED = 1307\nexports.ER_SP_LILABEL_MISMATCH = 1308\nexports.ER_SP_LABEL_REDEFINE = 1309\nexports.ER_SP_LABEL_MISMATCH = 1310\nexports.ER_SP_UNINIT_VAR = 1311\nexports.ER_SP_BADSELECT = 1312\nexports.ER_SP_BADRETURN = 1313\nexports.ER_SP_BADSTATEMENT = 1314\nexports.ER_UPDATE_LOG_DEPRECATED_IGNORED = 1315\nexports.ER_UPDATE_LOG_DEPRECATED_TRANSLATED = 1316\nexports.ER_QUERY_INTERRUPTED = 1317\nexports.ER_SP_WRONG_NO_OF_ARGS = 1318\nexports.ER_SP_COND_MISMATCH = 1319\nexports.ER_SP_NORETURN = 1320\nexports.ER_SP_NORETURNEND = 1321\nexports.ER_SP_BAD_CURSOR_QUERY = 1322\nexports.ER_SP_BAD_CURSOR_SELECT = 1323\nexports.ER_SP_CURSOR_MISMATCH = 1324\nexports.ER_SP_CURSOR_ALREADY_OPEN = 1325\nexports.ER_SP_CURSOR_NOT_OPEN = 1326\nexports.ER_SP_UNDECLARED_VAR = 1327\nexports.ER_SP_WRONG_NO_OF_FETCH_ARGS = 1328\nexports.ER_SP_FETCH_NO_DATA = 1329\nexports.ER_SP_DUP_PARAM = 1330\nexports.ER_SP_DUP_VAR = 1331\nexports.ER_SP_DUP_COND = 1332\nexports.ER_SP_DUP_CURS = 1333\nexports.ER_SP_CANT_ALTER = 1334\nexports.ER_SP_SUBSELECT_NYI = 1335\nexports.ER_STMT_NOT_ALLOWED_IN_SF_OR_TRG = 1336\nexports.ER_SP_VARCOND_AFTER_CURSHNDLR = 1337\nexports.ER_SP_CURSOR_AFTER_HANDLER = 1338\nexports.ER_SP_CASE_NOT_FOUND = 1339\nexports.ER_FPARSER_TOO_BIG_FILE = 1340\nexports.ER_FPARSER_BAD_HEADER = 1341\nexports.ER_FPARSER_EOF_IN_COMMENT = 1342\nexports.ER_FPARSER_ERROR_IN_PARAMETER = 1343\nexports.ER_FPARSER_EOF_IN_UNKNOWN_PARAMETER = 1344\nexports.ER_VIEW_NO_EXPLAIN = 1345\nexports.ER_FRM_UNKNOWN_TYPE = 1346\nexports.ER_WRONG_OBJECT = 1347\nexports.ER_NONUPDATEABLE_COLUMN = 1348\nexports.ER_VIEW_SELECT_DERIVED = 1349\nexports.ER_VIEW_SELECT_CLAUSE = 1350\nexports.ER_VIEW_SELECT_VARIABLE = 1351\nexports.ER_VIEW_SELECT_TMPTABLE = 1352\nexports.ER_VIEW_WRONG_LIST = 1353\nexports.ER_WARN_VIEW_MERGE = 1354\nexports.ER_WARN_VIEW_WITHOUT_KEY = 1355\nexports.ER_VIEW_INVALID = 1356\nexports.ER_SP_NO_DROP_SP = 1357\nexports.ER_SP_GOTO_IN_HNDLR = 1358\nexports.ER_TRG_ALREADY_EXISTS = 1359\nexports.ER_TRG_DOES_NOT_EXIST = 1360\nexports.ER_TRG_ON_VIEW_OR_TEMP_TABLE = 1361\nexports.ER_TRG_CANT_CHANGE_ROW = 1362\nexports.ER_TRG_NO_SUCH_ROW_IN_TRG = 1363\nexports.ER_NO_DEFAULT_FOR_FIELD = 1364\nexports.ER_DIVISION_BY_ZERO = 1365\nexports.ER_TRUNCATED_WRONG_VALUE_FOR_FIELD = 1366\nexports.ER_ILLEGAL_VALUE_FOR_TYPE = 1367\nexports.ER_VIEW_NONUPD_CHECK = 1368\nexports.ER_VIEW_CHECK_FAILED = 1369\nexports.ER_PROCACCESS_DENIED_ERROR = 1370\nexports.ER_RELAY_LOG_FAIL = 1371\nexports.ER_PASSWD_LENGTH = 1372\nexports.ER_UNKNOWN_TARGET_BINLOG = 1373\nexports.ER_IO_ERR_LOG_INDEX_READ = 1374\nexports.ER_BINLOG_PURGE_PROHIBITED = 1375\nexports.ER_FSEEK_FAIL = 1376\nexports.ER_BINLOG_PURGE_FATAL_ERR = 1377\nexports.ER_LOG_IN_USE = 1378\nexports.ER_LOG_PURGE_UNKNOWN_ERR = 1379\nexports.ER_RELAY_LOG_INIT = 1380\nexports.ER_NO_BINARY_LOGGING = 1381\nexports.ER_RESERVED_SYNTAX = 1382\nexports.ER_WSAS_FAILED = 1383\nexports.ER_DIFF_GROUPS_PROC = 1384\nexports.ER_NO_GROUP_FOR_PROC = 1385\nexports.ER_ORDER_WITH_PROC = 1386\nexports.ER_LOGGING_PROHIBIT_CHANGING_OF = 1387\nexports.ER_NO_FILE_MAPPING = 1388\nexports.ER_WRONG_MAGIC = 1389\nexports.ER_PS_MANY_PARAM = 1390\nexports.ER_KEY_PART_0 = 1391\nexports.ER_VIEW_CHECKSUM = 1392\nexports.ER_VIEW_MULTIUPDATE = 1393\nexports.ER_VIEW_NO_INSERT_FIELD_LIST = 1394\nexports.ER_VIEW_DELETE_MERGE_VIEW = 1395\nexports.ER_CANNOT_USER = 1396\nexports.ER_XAER_NOTA = 1397\nexports.ER_XAER_INVAL = 1398\nexports.ER_XAER_RMFAIL = 1399\nexports.ER_XAER_OUTSIDE = 1400\nexports.ER_XAER_RMERR = 1401\nexports.ER_XA_RBROLLBACK = 1402\nexports.ER_NONEXISTING_PROC_GRANT = 1403\nexports.ER_PROC_AUTO_GRANT_FAIL = 1404\nexports.ER_PROC_AUTO_REVOKE_FAIL = 1405\nexports.ER_DATA_TOO_LONG = 1406\nexports.ER_SP_BAD_SQLSTATE = 1407\nexports.ER_STARTUP = 1408\nexports.ER_LOAD_FROM_FIXED_SIZE_ROWS_TO_VAR = 1409\nexports.ER_CANT_CREATE_USER_WITH_GRANT = 1410\nexports.ER_WRONG_VALUE_FOR_TYPE = 1411\nexports.ER_TABLE_DEF_CHANGED = 1412\nexports.ER_SP_DUP_HANDLER = 1413\nexports.ER_SP_NOT_VAR_ARG = 1414\nexports.ER_SP_NO_RETSET = 1415\nexports.ER_CANT_CREATE_GEOMETRY_OBJECT = 1416\nexports.ER_FAILED_ROUTINE_BREAK_BINLOG = 1417\nexports.ER_BINLOG_UNSAFE_ROUTINE = 1418\nexports.ER_BINLOG_CREATE_ROUTINE_NEED_SUPER = 1419\nexports.ER_EXEC_STMT_WITH_OPEN_CURSOR = 1420\nexports.ER_STMT_HAS_NO_OPEN_CURSOR = 1421\nexports.ER_COMMIT_NOT_ALLOWED_IN_SF_OR_TRG = 1422\nexports.ER_NO_DEFAULT_FOR_VIEW_FIELD = 1423\nexports.ER_SP_NO_RECURSION = 1424\nexports.ER_TOO_BIG_SCALE = 1425\nexports.ER_TOO_BIG_PRECISION = 1426\nexports.ER_M_BIGGER_THAN_D = 1427\nexports.ER_WRONG_LOCK_OF_SYSTEM_TABLE = 1428\nexports.ER_CONNECT_TO_FOREIGN_DATA_SOURCE = 1429\nexports.ER_QUERY_ON_FOREIGN_DATA_SOURCE = 1430\nexports.ER_FOREIGN_DATA_SOURCE_DOESNT_EXIST = 1431\nexports.ER_FOREIGN_DATA_STRING_INVALID_CANT_CREATE = 1432\nexports.ER_FOREIGN_DATA_STRING_INVALID = 1433\nexports.ER_CANT_CREATE_FEDERATED_TABLE = 1434\nexports.ER_TRG_IN_WRONG_SCHEMA = 1435\nexports.ER_STACK_OVERRUN_NEED_MORE = 1436\nexports.ER_TOO_LONG_BODY = 1437\nexports.ER_WARN_CANT_DROP_DEFAULT_KEYCACHE = 1438\nexports.ER_TOO_BIG_DISPLAYWIDTH = 1439\nexports.ER_XAER_DUPID = 1440\nexports.ER_DATETIME_FUNCTION_OVERFLOW = 1441\nexports.ER_CANT_UPDATE_USED_TABLE_IN_SF_OR_TRG = 1442\nexports.ER_VIEW_PREVENT_UPDATE = 1443\nexports.ER_PS_NO_RECURSION = 1444\nexports.ER_SP_CANT_SET_AUTOCOMMIT = 1445\nexports.ER_MALFORMED_DEFINER = 1446\nexports.ER_VIEW_FRM_NO_USER = 1447\nexports.ER_VIEW_OTHER_USER = 1448\nexports.ER_NO_SUCH_USER = 1449\nexports.ER_FORBID_SCHEMA_CHANGE = 1450\nexports.ER_ROW_IS_REFERENCED_2 = 1451\nexports.ER_NO_REFERENCED_ROW_2 = 1452\nexports.ER_SP_BAD_VAR_SHADOW = 1453\nexports.ER_TRG_NO_DEFINER = 1454\nexports.ER_OLD_FILE_FORMAT = 1455\nexports.ER_SP_RECURSION_LIMIT = 1456\nexports.ER_SP_PROC_TABLE_CORRUPT = 1457\nexports.ER_SP_WRONG_NAME = 1458\nexports.ER_TABLE_NEEDS_UPGRADE = 1459\nexports.ER_SP_NO_AGGREGATE = 1460\nexports.ER_MAX_PREPARED_STMT_COUNT_REACHED = 1461\nexports.ER_VIEW_RECURSIVE = 1462\nexports.ER_NON_GROUPING_FIELD_USED = 1463\nexports.ER_TABLE_CANT_HANDLE_SPKEYS = 1464\nexports.ER_NO_TRIGGERS_ON_SYSTEM_SCHEMA = 1465\nexports.ER_REMOVED_SPACES = 1466\nexports.ER_AUTOINC_READ_FAILED = 1467\nexports.ER_USERNAME = 1468\nexports.ER_HOSTNAME = 1469\nexports.ER_WRONG_STRING_LENGTH = 1470\nexports.ER_NON_INSERTABLE_TABLE = 1471\nexports.ER_ADMIN_WRONG_MRG_TABLE = 1472\nexports.ER_TOO_HIGH_LEVEL_OF_NESTING_FOR_SELECT = 1473\nexports.ER_NAME_BECOMES_EMPTY = 1474\nexports.ER_AMBIGUOUS_FIELD_TERM = 1475\nexports.ER_FOREIGN_SERVER_EXISTS = 1476\nexports.ER_FOREIGN_SERVER_DOESNT_EXIST = 1477\nexports.ER_ILLEGAL_HA_CREATE_OPTION = 1478\nexports.ER_PARTITION_REQUIRES_VALUES_ERROR = 1479\nexports.ER_PARTITION_WRONG_VALUES_ERROR = 1480\nexports.ER_PARTITION_MAXVALUE_ERROR = 1481\nexports.ER_PARTITION_SUBPARTITION_ERROR = 1482\nexports.ER_PARTITION_SUBPART_MIX_ERROR = 1483\nexports.ER_PARTITION_WRONG_NO_PART_ERROR = 1484\nexports.ER_PARTITION_WRONG_NO_SUBPART_ERROR = 1485\nexports.ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR = 1486\nexports.ER_NO_CONST_EXPR_IN_RANGE_OR_LIST_ERROR = 1487\nexports.ER_FIELD_NOT_FOUND_PART_ERROR = 1488\nexports.ER_LIST_OF_FIELDS_ONLY_IN_HASH_ERROR = 1489\nexports.ER_INCONSISTENT_PARTITION_INFO_ERROR = 1490\nexports.ER_PARTITION_FUNC_NOT_ALLOWED_ERROR = 1491\nexports.ER_PARTITIONS_MUST_BE_DEFINED_ERROR = 1492\nexports.ER_RANGE_NOT_INCREASING_ERROR = 1493\nexports.ER_INCONSISTENT_TYPE_OF_FUNCTIONS_ERROR = 1494\nexports.ER_MULTIPLE_DEF_CONST_IN_LIST_PART_ERROR = 1495\nexports.ER_PARTITION_ENTRY_ERROR = 1496\nexports.ER_MIX_HANDLER_ERROR = 1497\nexports.ER_PARTITION_NOT_DEFINED_ERROR = 1498\nexports.ER_TOO_MANY_PARTITIONS_ERROR = 1499\nexports.ER_SUBPARTITION_ERROR = 1500\nexports.ER_CANT_CREATE_HANDLER_FILE = 1501\nexports.ER_BLOB_FIELD_IN_PART_FUNC_ERROR = 1502\nexports.ER_UNIQUE_KEY_NEED_ALL_FIELDS_IN_PF = 1503\nexports.ER_NO_PARTS_ERROR = 1504\nexports.ER_PARTITION_MGMT_ON_NONPARTITIONED = 1505\nexports.ER_FOREIGN_KEY_ON_PARTITIONED = 1506\nexports.ER_DROP_PARTITION_NON_EXISTENT = 1507\nexports.ER_DROP_LAST_PARTITION = 1508\nexports.ER_COALESCE_ONLY_ON_HASH_PARTITION = 1509\nexports.ER_REORG_HASH_ONLY_ON_SAME_NO = 1510\nexports.ER_REORG_NO_PARAM_ERROR = 1511\nexports.ER_ONLY_ON_RANGE_LIST_PARTITION = 1512\nexports.ER_ADD_PARTITION_SUBPART_ERROR = 1513\nexports.ER_ADD_PARTITION_NO_NEW_PARTITION = 1514\nexports.ER_COALESCE_PARTITION_NO_PARTITION = 1515\nexports.ER_REORG_PARTITION_NOT_EXIST = 1516\nexports.ER_SAME_NAME_PARTITION = 1517\nexports.ER_NO_BINLOG_ERROR = 1518\nexports.ER_CONSECUTIVE_REORG_PARTITIONS = 1519\nexports.ER_REORG_OUTSIDE_RANGE = 1520\nexports.ER_PARTITION_FUNCTION_FAILURE = 1521\nexports.ER_PART_STATE_ERROR = 1522\nexports.ER_LIMITED_PART_RANGE = 1523\nexports.ER_PLUGIN_IS_NOT_LOADED = 1524\nexports.ER_WRONG_VALUE = 1525\nexports.ER_NO_PARTITION_FOR_GIVEN_VALUE = 1526\nexports.ER_FILEGROUP_OPTION_ONLY_ONCE = 1527\nexports.ER_CREATE_FILEGROUP_FAILED = 1528\nexports.ER_DROP_FILEGROUP_FAILED = 1529\nexports.ER_TABLESPACE_AUTO_EXTEND_ERROR = 1530\nexports.ER_WRONG_SIZE_NUMBER = 1531\nexports.ER_SIZE_OVERFLOW_ERROR = 1532\nexports.ER_ALTER_FILEGROUP_FAILED = 1533\nexports.ER_BINLOG_ROW_LOGGING_FAILED = 1534\nexports.ER_BINLOG_ROW_WRONG_TABLE_DEF = 1535\nexports.ER_BINLOG_ROW_RBR_TO_SBR = 1536\nexports.ER_EVENT_ALREADY_EXISTS = 1537\nexports.ER_EVENT_STORE_FAILED = 1538\nexports.ER_EVENT_DOES_NOT_EXIST = 1539\nexports.ER_EVENT_CANT_ALTER = 1540\nexports.ER_EVENT_DROP_FAILED = 1541\nexports.ER_EVENT_INTERVAL_NOT_POSITIVE_OR_TOO_BIG = 1542\nexports.ER_EVENT_ENDS_BEFORE_STARTS = 1543\nexports.ER_EVENT_EXEC_TIME_IN_THE_PAST = 1544\nexports.ER_EVENT_OPEN_TABLE_FAILED = 1545\nexports.ER_EVENT_NEITHER_M_EXPR_NOR_M_AT = 1546\nexports.ER_COL_COUNT_DOESNT_MATCH_CORRUPTED = 1547\nexports.ER_CANNOT_LOAD_FROM_TABLE = 1548\nexports.ER_EVENT_CANNOT_DELETE = 1549\nexports.ER_EVENT_COMPILE_ERROR = 1550\nexports.ER_EVENT_SAME_NAME = 1551\nexports.ER_EVENT_DATA_TOO_LONG = 1552\nexports.ER_DROP_INDEX_FK = 1553\nexports.ER_WARN_DEPRECATED_SYNTAX_WITH_VER = 1554\nexports.ER_CANT_WRITE_LOCK_LOG_TABLE = 1555\nexports.ER_CANT_LOCK_LOG_TABLE = 1556\nexports.ER_FOREIGN_DUPLICATE_KEY = 1557\nexports.ER_COL_COUNT_DOESNT_MATCH_PLEASE_UPDATE = 1558\nexports.ER_TEMP_TABLE_PREVENTS_SWITCH_OUT_OF_RBR = 1559\nexports.ER_STORED_FUNCTION_PREVENTS_SWITCH_BINLOG_FORMAT = 1560\nexports.ER_NDB_CANT_SWITCH_BINLOG_FORMAT = 1561\nexports.ER_PARTITION_NO_TEMPORARY = 1562\nexports.ER_PARTITION_CONST_DOMAIN_ERROR = 1563\nexports.ER_PARTITION_FUNCTION_IS_NOT_ALLOWED = 1564\nexports.ER_DDL_LOG_ERROR = 1565\nexports.ER_NULL_IN_VALUES_LESS_THAN = 1566\nexports.ER_WRONG_PARTITION_NAME = 1567\nexports.ER_CANT_CHANGE_TX_CHARACTERISTICS = 1568\nexports.ER_DUP_ENTRY_AUTOINCREMENT_CASE = 1569\nexports.ER_EVENT_MODIFY_QUEUE_ERROR = 1570\nexports.ER_EVENT_SET_VAR_ERROR = 1571\nexports.ER_PARTITION_MERGE_ERROR = 1572\nexports.ER_CANT_ACTIVATE_LOG = 1573\nexports.ER_RBR_NOT_AVAILABLE = 1574\nexports.ER_BASE64_DECODE_ERROR = 1575\nexports.ER_EVENT_RECURSION_FORBIDDEN = 1576\nexports.ER_EVENTS_DB_ERROR = 1577\nexports.ER_ONLY_INTEGERS_ALLOWED = 1578\nexports.ER_UNSUPORTED_LOG_ENGINE = 1579\nexports.ER_BAD_LOG_STATEMENT = 1580\nexports.ER_CANT_RENAME_LOG_TABLE = 1581\nexports.ER_WRONG_PARAMCOUNT_TO_NATIVE_FCT = 1582\nexports.ER_WRONG_PARAMETERS_TO_NATIVE_FCT = 1583\nexports.ER_WRONG_PARAMETERS_TO_STORED_FCT = 1584\nexports.ER_NATIVE_FCT_NAME_COLLISION = 1585\nexports.ER_DUP_ENTRY_WITH_KEY_NAME = 1586\nexports.ER_BINLOG_PURGE_EMFILE = 1587\nexports.ER_EVENT_CANNOT_CREATE_IN_THE_PAST = 1588\nexports.ER_EVENT_CANNOT_ALTER_IN_THE_PAST = 1589\nexports.ER_SLAVE_INCIDENT = 1590\nexports.ER_NO_PARTITION_FOR_GIVEN_VALUE_SILENT = 1591\nexports.ER_BINLOG_UNSAFE_STATEMENT = 1592\nexports.ER_BINLOG_FATAL_ERROR = 1593\nexports.ER_SLAVE_RELAY_LOG_READ_FAILURE = 1594\nexports.ER_SLAVE_RELAY_LOG_WRITE_FAILURE = 1595\nexports.ER_SLAVE_CREATE_EVENT_FAILURE = 1596\nexports.ER_SLAVE_MASTER_COM_FAILURE = 1597\nexports.ER_BINLOG_LOGGING_IMPOSSIBLE = 1598\nexports.ER_VIEW_NO_CREATION_CTX = 1599\nexports.ER_VIEW_INVALID_CREATION_CTX = 1600\nexports.ER_SR_INVALID_CREATION_CTX = 1601\nexports.ER_TRG_CORRUPTED_FILE = 1602\nexports.ER_TRG_NO_CREATION_CTX = 1603\nexports.ER_TRG_INVALID_CREATION_CTX = 1604\nexports.ER_EVENT_INVALID_CREATION_CTX = 1605\nexports.ER_TRG_CANT_OPEN_TABLE = 1606\nexports.ER_CANT_CREATE_SROUTINE = 1607\nexports.ER_NEVER_USED = 1608\nexports.ER_NO_FORMAT_DESCRIPTION_EVENT_BEFORE_BINLOG_STATEMENT = 1609\nexports.ER_REPLICA_CORRUPT_EVENT = 1610\nexports.ER_LOAD_DATA_INVALID_COLUMN = 1611\nexports.ER_LOG_PURGE_NO_FILE = 1612\nexports.ER_XA_RBTIMEOUT = 1613\nexports.ER_XA_RBDEADLOCK = 1614\nexports.ER_NEED_REPREPARE = 1615\nexports.ER_DELAYED_NOT_SUPPORTED = 1616\nexports.WARN_NO_CONNECTION_METADATA = 1617\nexports.WARN_OPTION_IGNORED = 1618\nexports.ER_PLUGIN_DELETE_BUILTIN = 1619\nexports.WARN_PLUGIN_BUSY = 1620\nexports.ER_VARIABLE_IS_READONLY = 1621\nexports.ER_WARN_ENGINE_TRANSACTION_ROLLBACK = 1622\nexports.ER_SLAVE_HEARTBEAT_FAILURE = 1623\nexports.ER_REPLICA_HEARTBEAT_VALUE_OUT_OF_RANGE = 1624\nexports.ER_NDB_REPLICATION_SCHEMA_ERROR = 1625\nexports.ER_CONFLICT_FN_PARSE_ERROR = 1626\nexports.ER_EXCEPTIONS_WRITE_ERROR = 1627\nexports.ER_TOO_LONG_TABLE_COMMENT = 1628\nexports.ER_TOO_LONG_FIELD_COMMENT = 1629\nexports.ER_FUNC_INEXISTENT_NAME_COLLISION = 1630\nexports.ER_DATABASE_NAME = 1631\nexports.ER_TABLE_NAME = 1632\nexports.ER_PARTITION_NAME = 1633\nexports.ER_SUBPARTITION_NAME = 1634\nexports.ER_TEMPORARY_NAME = 1635\nexports.ER_RENAMED_NAME = 1636\nexports.ER_TOO_MANY_CONCURRENT_TRXS = 1637\nexports.WARN_NON_ASCII_SEPARATOR_NOT_IMPLEMENTED = 1638\nexports.ER_DEBUG_SYNC_TIMEOUT = 1639\nexports.ER_DEBUG_SYNC_HIT_LIMIT = 1640\nexports.ER_DUP_SIGNAL_SET = 1641\nexports.ER_SIGNAL_WARN = 1642\nexports.ER_SIGNAL_NOT_FOUND = 1643\nexports.ER_SIGNAL_EXCEPTION = 1644\nexports.ER_RESIGNAL_WITHOUT_ACTIVE_HANDLER = 1645\nexports.ER_SIGNAL_BAD_CONDITION_TYPE = 1646\nexports.WARN_COND_ITEM_TRUNCATED = 1647\nexports.ER_COND_ITEM_TOO_LONG = 1648\nexports.ER_UNKNOWN_LOCALE = 1649\nexports.ER_REPLICA_IGNORE_SERVER_IDS = 1650\nexports.ER_QUERY_CACHE_DISABLED = 1651\nexports.ER_SAME_NAME_PARTITION_FIELD = 1652\nexports.ER_PARTITION_COLUMN_LIST_ERROR = 1653\nexports.ER_WRONG_TYPE_COLUMN_VALUE_ERROR = 1654\nexports.ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR = 1655\nexports.ER_MAXVALUE_IN_VALUES_IN = 1656\nexports.ER_TOO_MANY_VALUES_ERROR = 1657\nexports.ER_ROW_SINGLE_PARTITION_FIELD_ERROR = 1658\nexports.ER_FIELD_TYPE_NOT_ALLOWED_AS_PARTITION_FIELD = 1659\nexports.ER_PARTITION_FIELDS_TOO_LONG = 1660\nexports.ER_BINLOG_ROW_ENGINE_AND_STMT_ENGINE = 1661\nexports.ER_BINLOG_ROW_MODE_AND_STMT_ENGINE = 1662\nexports.ER_BINLOG_UNSAFE_AND_STMT_ENGINE = 1663\nexports.ER_BINLOG_ROW_INJECTION_AND_STMT_ENGINE = 1664\nexports.ER_BINLOG_STMT_MODE_AND_ROW_ENGINE = 1665\nexports.ER_BINLOG_ROW_INJECTION_AND_STMT_MODE = 1666\nexports.ER_BINLOG_MULTIPLE_ENGINES_AND_SELF_LOGGING_ENGINE = 1667\nexports.ER_BINLOG_UNSAFE_LIMIT = 1668\nexports.ER_UNUSED4 = 1669\nexports.ER_BINLOG_UNSAFE_SYSTEM_TABLE = 1670\nexports.ER_BINLOG_UNSAFE_AUTOINC_COLUMNS = 1671\nexports.ER_BINLOG_UNSAFE_UDF = 1672\nexports.ER_BINLOG_UNSAFE_SYSTEM_VARIABLE = 1673\nexports.ER_BINLOG_UNSAFE_SYSTEM_FUNCTION = 1674\nexports.ER_BINLOG_UNSAFE_NONTRANS_AFTER_TRANS = 1675\nexports.ER_MESSAGE_AND_STATEMENT = 1676\nexports.ER_SLAVE_CONVERSION_FAILED = 1677\nexports.ER_REPLICA_CANT_CREATE_CONVERSION = 1678\nexports.ER_INSIDE_TRANSACTION_PREVENTS_SWITCH_BINLOG_FORMAT = 1679\nexports.ER_PATH_LENGTH = 1680\nexports.ER_WARN_DEPRECATED_SYNTAX_NO_REPLACEMENT = 1681\nexports.ER_WRONG_NATIVE_TABLE_STRUCTURE = 1682\nexports.ER_WRONG_PERFSCHEMA_USAGE = 1683\nexports.ER_WARN_I_S_SKIPPED_TABLE = 1684\nexports.ER_INSIDE_TRANSACTION_PREVENTS_SWITCH_BINLOG_DIRECT = 1685\nexports.ER_STORED_FUNCTION_PREVENTS_SWITCH_BINLOG_DIRECT = 1686\nexports.ER_SPATIAL_MUST_HAVE_GEOM_COL = 1687\nexports.ER_TOO_LONG_INDEX_COMMENT = 1688\nexports.ER_LOCK_ABORTED = 1689\nexports.ER_DATA_OUT_OF_RANGE = 1690\nexports.ER_WRONG_SPVAR_TYPE_IN_LIMIT = 1691\nexports.ER_BINLOG_UNSAFE_MULTIPLE_ENGINES_AND_SELF_LOGGING_ENGINE = 1692\nexports.ER_BINLOG_UNSAFE_MIXED_STATEMENT = 1693\nexports.ER_INSIDE_TRANSACTION_PREVENTS_SWITCH_SQL_LOG_BIN = 1694\nexports.ER_STORED_FUNCTION_PREVENTS_SWITCH_SQL_LOG_BIN = 1695\nexports.ER_FAILED_READ_FROM_PAR_FILE = 1696\nexports.ER_VALUES_IS_NOT_INT_TYPE_ERROR = 1697\nexports.ER_ACCESS_DENIED_NO_PASSWORD_ERROR = 1698\nexports.ER_SET_PASSWORD_AUTH_PLUGIN = 1699\nexports.ER_GRANT_PLUGIN_USER_EXISTS = 1700\nexports.ER_TRUNCATE_ILLEGAL_FK = 1701\nexports.ER_PLUGIN_IS_PERMANENT = 1702\nexports.ER_REPLICA_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN = 1703\nexports.ER_REPLICA_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX = 1704\nexports.ER_STMT_CACHE_FULL = 1705\nexports.ER_MULTI_UPDATE_KEY_CONFLICT = 1706\nexports.ER_TABLE_NEEDS_REBUILD = 1707\nexports.WARN_OPTION_BELOW_LIMIT = 1708\nexports.ER_INDEX_COLUMN_TOO_LONG = 1709\nexports.ER_ERROR_IN_TRIGGER_BODY = 1710\nexports.ER_ERROR_IN_UNKNOWN_TRIGGER_BODY = 1711\nexports.ER_INDEX_CORRUPT = 1712\nexports.ER_UNDO_RECORD_TOO_BIG = 1713\nexports.ER_BINLOG_UNSAFE_INSERT_IGNORE_SELECT = 1714\nexports.ER_BINLOG_UNSAFE_INSERT_SELECT_UPDATE = 1715\nexports.ER_BINLOG_UNSAFE_REPLACE_SELECT = 1716\nexports.ER_BINLOG_UNSAFE_CREATE_IGNORE_SELECT = 1717\nexports.ER_BINLOG_UNSAFE_CREATE_REPLACE_SELECT = 1718\nexports.ER_BINLOG_UNSAFE_UPDATE_IGNORE = 1719\nexports.ER_PLUGIN_NO_UNINSTALL = 1720\nexports.ER_PLUGIN_NO_INSTALL = 1721\nexports.ER_BINLOG_UNSAFE_WRITE_AUTOINC_SELECT = 1722\nexports.ER_BINLOG_UNSAFE_CREATE_SELECT_AUTOINC = 1723\nexports.ER_BINLOG_UNSAFE_INSERT_TWO_KEYS = 1724\nexports.ER_TABLE_IN_FK_CHECK = 1725\nexports.ER_UNSUPPORTED_ENGINE = 1726\nexports.ER_BINLOG_UNSAFE_AUTOINC_NOT_FIRST = 1727\nexports.ER_CANNOT_LOAD_FROM_TABLE_V2 = 1728\nexports.ER_SOURCE_DELAY_VALUE_OUT_OF_RANGE = 1729\nexports.ER_ONLY_FD_AND_RBR_EVENTS_ALLOWED_IN_BINLOG_STATEMENT = 1730\nexports.ER_PARTITION_EXCHANGE_DIFFERENT_OPTION = 1731\nexports.ER_PARTITION_EXCHANGE_PART_TABLE = 1732\nexports.ER_PARTITION_EXCHANGE_TEMP_TABLE = 1733\nexports.ER_PARTITION_INSTEAD_OF_SUBPARTITION = 1734\nexports.ER_UNKNOWN_PARTITION = 1735\nexports.ER_TABLES_DIFFERENT_METADATA = 1736\nexports.ER_ROW_DOES_NOT_MATCH_PARTITION = 1737\nexports.ER_BINLOG_CACHE_SIZE_GREATER_THAN_MAX = 1738\nexports.ER_WARN_INDEX_NOT_APPLICABLE = 1739\nexports.ER_PARTITION_EXCHANGE_FOREIGN_KEY = 1740\nexports.ER_NO_SUCH_KEY_VALUE = 1741\nexports.ER_RPL_INFO_DATA_TOO_LONG = 1742\nexports.ER_NETWORK_READ_EVENT_CHECKSUM_FAILURE = 1743\nexports.ER_BINLOG_READ_EVENT_CHECKSUM_FAILURE = 1744\nexports.ER_BINLOG_STMT_CACHE_SIZE_GREATER_THAN_MAX = 1745\nexports.ER_CANT_UPDATE_TABLE_IN_CREATE_TABLE_SELECT = 1746\nexports.ER_PARTITION_CLAUSE_ON_NONPARTITIONED = 1747\nexports.ER_ROW_DOES_NOT_MATCH_GIVEN_PARTITION_SET = 1748\nexports.ER_NO_SUCH_PARTITION = 1749\nexports.ER_CHANGE_RPL_INFO_REPOSITORY_FAILURE = 1750\nexports.ER_WARNING_NOT_COMPLETE_ROLLBACK_WITH_CREATED_TEMP_TABLE = 1751\nexports.ER_WARNING_NOT_COMPLETE_ROLLBACK_WITH_DROPPED_TEMP_TABLE = 1752\nexports.ER_MTA_FEATURE_IS_NOT_SUPPORTED = 1753\nexports.ER_MTA_UPDATED_DBS_GREATER_MAX = 1754\nexports.ER_MTA_CANT_PARALLEL = 1755\nexports.ER_MTA_INCONSISTENT_DATA = 1756\nexports.ER_FULLTEXT_NOT_SUPPORTED_WITH_PARTITIONING = 1757\nexports.ER_DA_INVALID_CONDITION_NUMBER = 1758\nexports.ER_INSECURE_PLAIN_TEXT = 1759\nexports.ER_INSECURE_CHANGE_SOURCE = 1760\nexports.ER_FOREIGN_DUPLICATE_KEY_WITH_CHILD_INFO = 1761\nexports.ER_FOREIGN_DUPLICATE_KEY_WITHOUT_CHILD_INFO = 1762\nexports.ER_SQLTHREAD_WITH_SECURE_REPLICA = 1763\nexports.ER_TABLE_HAS_NO_FT = 1764\nexports.ER_VARIABLE_NOT_SETTABLE_IN_SF_OR_TRIGGER = 1765\nexports.ER_VARIABLE_NOT_SETTABLE_IN_TRANSACTION = 1766\nexports.ER_GTID_NEXT_IS_NOT_IN_GTID_NEXT_LIST = 1767\nexports.ER_CANT_CHANGE_GTID_NEXT_IN_TRANSACTION = 1768\nexports.ER_SET_STATEMENT_CANNOT_INVOKE_FUNCTION = 1769\nexports.ER_GTID_NEXT_CANT_BE_AUTOMATIC_IF_GTID_NEXT_LIST_IS_NON_NULL = 1770\nexports.ER_SKIPPING_LOGGED_TRANSACTION = 1771\nexports.ER_MALFORMED_GTID_SET_SPECIFICATION = 1772\nexports.ER_MALFORMED_GTID_SET_ENCODING = 1773\nexports.ER_MALFORMED_GTID_SPECIFICATION = 1774\nexports.ER_GNO_EXHAUSTED = 1775\nexports.ER_BAD_REPLICA_AUTO_POSITION = 1776\nexports.ER_AUTO_POSITION_REQUIRES_GTID_MODE_NOT_OFF = 1777\nexports.ER_CANT_DO_IMPLICIT_COMMIT_IN_TRX_WHEN_GTID_NEXT_IS_SET = 1778\nexports.ER_GTID_MODE_ON_REQUIRES_ENFORCE_GTID_CONSISTENCY_ON = 1779\nexports.ER_GTID_MODE_REQUIRES_BINLOG = 1780\nexports.ER_CANT_SET_GTID_NEXT_TO_GTID_WHEN_GTID_MODE_IS_OFF = 1781\nexports.ER_CANT_SET_GTID_NEXT_TO_ANONYMOUS_WHEN_GTID_MODE_IS_ON = 1782\nexports.ER_CANT_SET_GTID_NEXT_LIST_TO_NON_NULL_WHEN_GTID_MODE_IS_OFF = 1783\nexports.ER_FOUND_GTID_EVENT_WHEN_GTID_MODE_IS_OFF = 1784\nexports.ER_GTID_UNSAFE_NON_TRANSACTIONAL_TABLE = 1785\nexports.ER_GTID_UNSAFE_CREATE_SELECT = 1786\nexports.ER_GTID_UNSAFE_CREATE_DROP_TEMP_TABLE_IN_TRANSACTION = 1787\nexports.ER_GTID_MODE_CAN_ONLY_CHANGE_ONE_STEP_AT_A_TIME = 1788\nexports.ER_SOURCE_HAS_PURGED_REQUIRED_GTIDS = 1789\nexports.ER_CANT_SET_GTID_NEXT_WHEN_OWNING_GTID = 1790\nexports.ER_UNKNOWN_EXPLAIN_FORMAT = 1791\nexports.ER_CANT_EXECUTE_IN_READ_ONLY_TRANSACTION = 1792\nexports.ER_TOO_LONG_TABLE_PARTITION_COMMENT = 1793\nexports.ER_REPLICA_CONFIGURATION = 1794\nexports.ER_INNODB_FT_LIMIT = 1795\nexports.ER_INNODB_NO_FT_TEMP_TABLE = 1796\nexports.ER_INNODB_FT_WRONG_DOCID_COLUMN = 1797\nexports.ER_INNODB_FT_WRONG_DOCID_INDEX = 1798\nexports.ER_INNODB_ONLINE_LOG_TOO_BIG = 1799\nexports.ER_UNKNOWN_ALTER_ALGORITHM = 1800\nexports.ER_UNKNOWN_ALTER_LOCK = 1801\nexports.ER_MTA_CHANGE_SOURCE_CANT_RUN_WITH_GAPS = 1802\nexports.ER_MTA_RECOVERY_FAILURE = 1803\nexports.ER_MTA_RESET_WORKERS = 1804\nexports.ER_COL_COUNT_DOESNT_MATCH_CORRUPTED_V2 = 1805\nexports.ER_REPLICA_SILENT_RETRY_TRANSACTION = 1806\nexports.ER_DISCARD_FK_CHECKS_RUNNING = 1807\nexports.ER_TABLE_SCHEMA_MISMATCH = 1808\nexports.ER_TABLE_IN_SYSTEM_TABLESPACE = 1809\nexports.ER_IO_READ_ERROR = 1810\nexports.ER_IO_WRITE_ERROR = 1811\nexports.ER_TABLESPACE_MISSING = 1812\nexports.ER_TABLESPACE_EXISTS = 1813\nexports.ER_TABLESPACE_DISCARDED = 1814\nexports.ER_INTERNAL_ERROR = 1815\nexports.ER_INNODB_IMPORT_ERROR = 1816\nexports.ER_INNODB_INDEX_CORRUPT = 1817\nexports.ER_INVALID_YEAR_COLUMN_LENGTH = 1818\nexports.ER_NOT_VALID_PASSWORD = 1819\nexports.ER_MUST_CHANGE_PASSWORD = 1820\nexports.ER_FK_NO_INDEX_CHILD = 1821\nexports.ER_FK_NO_INDEX_PARENT = 1822\nexports.ER_FK_FAIL_ADD_SYSTEM = 1823\nexports.ER_FK_CANNOT_OPEN_PARENT = 1824\nexports.ER_FK_INCORRECT_OPTION = 1825\nexports.ER_FK_DUP_NAME = 1826\nexports.ER_PASSWORD_FORMAT = 1827\nexports.ER_FK_COLUMN_CANNOT_DROP = 1828\nexports.ER_FK_COLUMN_CANNOT_DROP_CHILD = 1829\nexports.ER_FK_COLUMN_NOT_NULL = 1830\nexports.ER_DUP_INDEX = 1831\nexports.ER_FK_COLUMN_CANNOT_CHANGE = 1832\nexports.ER_FK_COLUMN_CANNOT_CHANGE_CHILD = 1833\nexports.ER_UNUSED5 = 1834\nexports.ER_MALFORMED_PACKET = 1835\nexports.ER_READ_ONLY_MODE = 1836\nexports.ER_GTID_NEXT_TYPE_UNDEFINED_GTID = 1837\nexports.ER_VARIABLE_NOT_SETTABLE_IN_SP = 1838\nexports.ER_CANT_SET_GTID_PURGED_WHEN_GTID_MODE_IS_OFF = 1839\nexports.ER_CANT_SET_GTID_PURGED_WHEN_GTID_EXECUTED_IS_NOT_EMPTY = 1840\nexports.ER_CANT_SET_GTID_PURGED_WHEN_OWNED_GTIDS_IS_NOT_EMPTY = 1841\nexports.ER_GTID_PURGED_WAS_CHANGED = 1842\nexports.ER_GTID_EXECUTED_WAS_CHANGED = 1843\nexports.ER_BINLOG_STMT_MODE_AND_NO_REPL_TABLES = 1844\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED = 1845\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON = 1846\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_COPY = 1847\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_PARTITION = 1848\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_FK_RENAME = 1849\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_COLUMN_TYPE = 1850\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_FK_CHECK = 1851\nexports.ER_UNUSED6 = 1852\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_NOPK = 1853\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_AUTOINC = 1854\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_HIDDEN_FTS = 1855\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_CHANGE_FTS = 1856\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_FTS = 1857\nexports.ER_SQL_REPLICA_SKIP_COUNTER_NOT_SETTABLE_IN_GTID_MODE = 1858\nexports.ER_DUP_UNKNOWN_IN_INDEX = 1859\nexports.ER_IDENT_CAUSES_TOO_LONG_PATH = 1860\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_NOT_NULL = 1861\nexports.ER_MUST_CHANGE_PASSWORD_LOGIN = 1862\nexports.ER_ROW_IN_WRONG_PARTITION = 1863\nexports.ER_MTA_EVENT_BIGGER_PENDING_JOBS_SIZE_MAX = 1864\nexports.ER_INNODB_NO_FT_USES_PARSER = 1865\nexports.ER_BINLOG_LOGICAL_CORRUPTION = 1866\nexports.ER_WARN_PURGE_LOG_IN_USE = 1867\nexports.ER_WARN_PURGE_LOG_IS_ACTIVE = 1868\nexports.ER_AUTO_INCREMENT_CONFLICT = 1869\nexports.WARN_ON_BLOCKHOLE_IN_RBR = 1870\nexports.ER_REPLICA_CM_INIT_REPOSITORY = 1871\nexports.ER_REPLICA_AM_INIT_REPOSITORY = 1872\nexports.ER_ACCESS_DENIED_CHANGE_USER_ERROR = 1873\nexports.ER_INNODB_READ_ONLY = 1874\nexports.ER_STOP_REPLICA_SQL_THREAD_TIMEOUT = 1875\nexports.ER_STOP_REPLICA_IO_THREAD_TIMEOUT = 1876\nexports.ER_TABLE_CORRUPT = 1877\nexports.ER_TEMP_FILE_WRITE_FAILURE = 1878\nexports.ER_INNODB_FT_AUX_NOT_HEX_ID = 1879\nexports.ER_OLD_TEMPORALS_UPGRADED = 1880\nexports.ER_INNODB_FORCED_RECOVERY = 1881\nexports.ER_AES_INVALID_IV = 1882\nexports.ER_PLUGIN_CANNOT_BE_UNINSTALLED = 1883\nexports.ER_GTID_UNSAFE_BINLOG_SPLITTABLE_STATEMENT_AND_ASSIGNED_GTID = 1884\nexports.ER_REPLICA_HAS_MORE_GTIDS_THAN_SOURCE = 1885\nexports.ER_MISSING_KEY = 1886\nexports.WARN_NAMED_PIPE_ACCESS_EVERYONE = 1887\nexports.ER_FILE_CORRUPT = 3000\nexports.ER_ERROR_ON_SOURCE = 3001\nexports.ER_INCONSISTENT_ERROR = 3002\nexports.ER_STORAGE_ENGINE_NOT_LOADED = 3003\nexports.ER_GET_STACKED_DA_WITHOUT_ACTIVE_HANDLER = 3004\nexports.ER_WARN_LEGACY_SYNTAX_CONVERTED = 3005\nexports.ER_BINLOG_UNSAFE_FULLTEXT_PLUGIN = 3006\nexports.ER_CANNOT_DISCARD_TEMPORARY_TABLE = 3007\nexports.ER_FK_DEPTH_EXCEEDED = 3008\nexports.ER_COL_COUNT_DOESNT_MATCH_PLEASE_UPDATE_V2 = 3009\nexports.ER_WARN_TRIGGER_DOESNT_HAVE_CREATED = 3010\nexports.ER_REFERENCED_TRG_DOES_NOT_EXIST = 3011\nexports.ER_EXPLAIN_NOT_SUPPORTED = 3012\nexports.ER_INVALID_FIELD_SIZE = 3013\nexports.ER_MISSING_HA_CREATE_OPTION = 3014\nexports.ER_ENGINE_OUT_OF_MEMORY = 3015\nexports.ER_PASSWORD_EXPIRE_ANONYMOUS_USER = 3016\nexports.ER_REPLICA_SQL_THREAD_MUST_STOP = 3017\nexports.ER_NO_FT_MATERIALIZED_SUBQUERY = 3018\nexports.ER_INNODB_UNDO_LOG_FULL = 3019\nexports.ER_INVALID_ARGUMENT_FOR_LOGARITHM = 3020\nexports.ER_REPLICA_CHANNEL_IO_THREAD_MUST_STOP = 3021\nexports.ER_WARN_OPEN_TEMP_TABLES_MUST_BE_ZERO = 3022\nexports.ER_WARN_ONLY_SOURCE_LOG_FILE_NO_POS = 3023\nexports.ER_QUERY_TIMEOUT = 3024\nexports.ER_NON_RO_SELECT_DISABLE_TIMER = 3025\nexports.ER_DUP_LIST_ENTRY = 3026\nexports.ER_SQL_MODE_NO_EFFECT = 3027\nexports.ER_AGGREGATE_ORDER_FOR_UNION = 3028\nexports.ER_AGGREGATE_ORDER_NON_AGG_QUERY = 3029\nexports.ER_REPLICA_WORKER_STOPPED_PREVIOUS_THD_ERROR = 3030\nexports.ER_DONT_SUPPORT_REPLICA_PRESERVE_COMMIT_ORDER = 3031\nexports.ER_SERVER_OFFLINE_MODE = 3032\nexports.ER_GIS_DIFFERENT_SRIDS = 3033\nexports.ER_GIS_UNSUPPORTED_ARGUMENT = 3034\nexports.ER_GIS_UNKNOWN_ERROR = 3035\nexports.ER_GIS_UNKNOWN_EXCEPTION = 3036\nexports.ER_GIS_INVALID_DATA = 3037\nexports.ER_BOOST_GEOMETRY_EMPTY_INPUT_EXCEPTION = 3038\nexports.ER_BOOST_GEOMETRY_CENTROID_EXCEPTION = 3039\nexports.ER_BOOST_GEOMETRY_OVERLAY_INVALID_INPUT_EXCEPTION = 3040\nexports.ER_BOOST_GEOMETRY_TURN_INFO_EXCEPTION = 3041\nexports.ER_BOOST_GEOMETRY_SELF_INTERSECTION_POINT_EXCEPTION = 3042\nexports.ER_BOOST_GEOMETRY_UNKNOWN_EXCEPTION = 3043\nexports.ER_STD_BAD_ALLOC_ERROR = 3044\nexports.ER_STD_DOMAIN_ERROR = 3045\nexports.ER_STD_LENGTH_ERROR = 3046\nexports.ER_STD_INVALID_ARGUMENT = 3047\nexports.ER_STD_OUT_OF_RANGE_ERROR = 3048\nexports.ER_STD_OVERFLOW_ERROR = 3049\nexports.ER_STD_RANGE_ERROR = 3050\nexports.ER_STD_UNDERFLOW_ERROR = 3051\nexports.ER_STD_LOGIC_ERROR = 3052\nexports.ER_STD_RUNTIME_ERROR = 3053\nexports.ER_STD_UNKNOWN_EXCEPTION = 3054\nexports.ER_GIS_DATA_WRONG_ENDIANESS = 3055\nexports.ER_CHANGE_SOURCE_PASSWORD_LENGTH = 3056\nexports.ER_USER_LOCK_WRONG_NAME = 3057\nexports.ER_USER_LOCK_DEADLOCK = 3058\nexports.ER_REPLACE_INACCESSIBLE_ROWS = 3059\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_GIS = 3060\nexports.ER_ILLEGAL_USER_VAR = 3061\nexports.ER_GTID_MODE_OFF = 3062\nexports.ER_UNSUPPORTED_BY_REPLICATION_THREAD = 3063\nexports.ER_INCORRECT_TYPE = 3064\nexports.ER_FIELD_IN_ORDER_NOT_SELECT = 3065\nexports.ER_AGGREGATE_IN_ORDER_NOT_SELECT = 3066\nexports.ER_INVALID_RPL_WILD_TABLE_FILTER_PATTERN = 3067\nexports.ER_NET_OK_PACKET_TOO_LARGE = 3068\nexports.ER_INVALID_JSON_DATA = 3069\nexports.ER_INVALID_GEOJSON_MISSING_MEMBER = 3070\nexports.ER_INVALID_GEOJSON_WRONG_TYPE = 3071\nexports.ER_INVALID_GEOJSON_UNSPECIFIED = 3072\nexports.ER_DIMENSION_UNSUPPORTED = 3073\nexports.ER_REPLICA_CHANNEL_DOES_NOT_EXIST = 3074\nexports.ER_SLAVE_MULTIPLE_CHANNELS_HOST_PORT = 3075\nexports.ER_REPLICA_CHANNEL_NAME_INVALID_OR_TOO_LONG = 3076\nexports.ER_REPLICA_NEW_CHANNEL_WRONG_REPOSITORY = 3077\nexports.ER_SLAVE_CHANNEL_DELETE = 3078\nexports.ER_REPLICA_MULTIPLE_CHANNELS_CMD = 3079\nexports.ER_REPLICA_MAX_CHANNELS_EXCEEDED = 3080\nexports.ER_REPLICA_CHANNEL_MUST_STOP = 3081\nexports.ER_REPLICA_CHANNEL_NOT_RUNNING = 3082\nexports.ER_REPLICA_CHANNEL_WAS_RUNNING = 3083\nexports.ER_REPLICA_CHANNEL_WAS_NOT_RUNNING = 3084\nexports.ER_REPLICA_CHANNEL_SQL_THREAD_MUST_STOP = 3085\nexports.ER_REPLICA_CHANNEL_SQL_SKIP_COUNTER = 3086\nexports.ER_WRONG_FIELD_WITH_GROUP_V2 = 3087\nexports.ER_MIX_OF_GROUP_FUNC_AND_FIELDS_V2 = 3088\nexports.ER_WARN_DEPRECATED_SYSVAR_UPDATE = 3089\nexports.ER_WARN_DEPRECATED_SQLMODE = 3090\nexports.ER_CANNOT_LOG_PARTIAL_DROP_DATABASE_WITH_GTID = 3091\nexports.ER_GROUP_REPLICATION_CONFIGURATION = 3092\nexports.ER_GROUP_REPLICATION_RUNNING = 3093\nexports.ER_GROUP_REPLICATION_APPLIER_INIT_ERROR = 3094\nexports.ER_GROUP_REPLICATION_STOP_APPLIER_THREAD_TIMEOUT = 3095\nexports.ER_GROUP_REPLICATION_COMMUNICATION_LAYER_SESSION_ERROR = 3096\nexports.ER_GROUP_REPLICATION_COMMUNICATION_LAYER_JOIN_ERROR = 3097\nexports.ER_BEFORE_DML_VALIDATION_ERROR = 3098\nexports.ER_PREVENTS_VARIABLE_WITHOUT_RBR = 3099\nexports.ER_RUN_HOOK_ERROR = 3100\nexports.ER_TRANSACTION_ROLLBACK_DURING_COMMIT = 3101\nexports.ER_GENERATED_COLUMN_FUNCTION_IS_NOT_ALLOWED = 3102\nexports.ER_UNSUPPORTED_ALTER_INPLACE_ON_VIRTUAL_COLUMN = 3103\nexports.ER_WRONG_FK_OPTION_FOR_GENERATED_COLUMN = 3104\nexports.ER_NON_DEFAULT_VALUE_FOR_GENERATED_COLUMN = 3105\nexports.ER_UNSUPPORTED_ACTION_ON_GENERATED_COLUMN = 3106\nexports.ER_GENERATED_COLUMN_NON_PRIOR = 3107\nexports.ER_DEPENDENT_BY_GENERATED_COLUMN = 3108\nexports.ER_GENERATED_COLUMN_REF_AUTO_INC = 3109\nexports.ER_FEATURE_NOT_AVAILABLE = 3110\nexports.ER_CANT_SET_GTID_MODE = 3111\nexports.ER_CANT_USE_AUTO_POSITION_WITH_GTID_MODE_OFF = 3112\nexports.ER_CANT_REPLICATE_ANONYMOUS_WITH_AUTO_POSITION = 3113\nexports.ER_CANT_REPLICATE_ANONYMOUS_WITH_GTID_MODE_ON = 3114\nexports.ER_CANT_REPLICATE_GTID_WITH_GTID_MODE_OFF = 3115\nexports.ER_CANT_ENFORCE_GTID_CONSISTENCY_WITH_ONGOING_GTID_VIOLATING_TX = 3116\nexports.ER_ENFORCE_GTID_CONSISTENCY_WARN_WITH_ONGOING_GTID_VIOLATING_TX = 3117\nexports.ER_ACCOUNT_HAS_BEEN_LOCKED = 3118\nexports.ER_WRONG_TABLESPACE_NAME = 3119\nexports.ER_TABLESPACE_IS_NOT_EMPTY = 3120\nexports.ER_WRONG_FILE_NAME = 3121\nexports.ER_BOOST_GEOMETRY_INCONSISTENT_TURNS_EXCEPTION = 3122\nexports.ER_WARN_OPTIMIZER_HINT_SYNTAX_ERROR = 3123\nexports.ER_WARN_BAD_MAX_EXECUTION_TIME = 3124\nexports.ER_WARN_UNSUPPORTED_MAX_EXECUTION_TIME = 3125\nexports.ER_WARN_CONFLICTING_HINT = 3126\nexports.ER_WARN_UNKNOWN_QB_NAME = 3127\nexports.ER_UNRESOLVED_HINT_NAME = 3128\nexports.ER_WARN_ON_MODIFYING_GTID_EXECUTED_TABLE = 3129\nexports.ER_PLUGGABLE_PROTOCOL_COMMAND_NOT_SUPPORTED = 3130\nexports.ER_LOCKING_SERVICE_WRONG_NAME = 3131\nexports.ER_LOCKING_SERVICE_DEADLOCK = 3132\nexports.ER_LOCKING_SERVICE_TIMEOUT = 3133\nexports.ER_GIS_MAX_POINTS_IN_GEOMETRY_OVERFLOWED = 3134\nexports.ER_SQL_MODE_MERGED = 3135\nexports.ER_VTOKEN_PLUGIN_TOKEN_MISMATCH = 3136\nexports.ER_VTOKEN_PLUGIN_TOKEN_NOT_FOUND = 3137\nexports.ER_CANT_SET_VARIABLE_WHEN_OWNING_GTID = 3138\nexports.ER_REPLICA_CHANNEL_OPERATION_NOT_ALLOWED = 3139\nexports.ER_INVALID_JSON_TEXT = 3140\nexports.ER_INVALID_JSON_TEXT_IN_PARAM = 3141\nexports.ER_INVALID_JSON_BINARY_DATA = 3142\nexports.ER_INVALID_JSON_PATH = 3143\nexports.ER_INVALID_JSON_CHARSET = 3144\nexports.ER_INVALID_JSON_CHARSET_IN_FUNCTION = 3145\nexports.ER_INVALID_TYPE_FOR_JSON = 3146\nexports.ER_INVALID_CAST_TO_JSON = 3147\nexports.ER_INVALID_JSON_PATH_CHARSET = 3148\nexports.ER_INVALID_JSON_PATH_WILDCARD = 3149\nexports.ER_JSON_VALUE_TOO_BIG = 3150\nexports.ER_JSON_KEY_TOO_BIG = 3151\nexports.ER_JSON_USED_AS_KEY = 3152\nexports.ER_JSON_VACUOUS_PATH = 3153\nexports.ER_JSON_BAD_ONE_OR_ALL_ARG = 3154\nexports.ER_NUMERIC_JSON_VALUE_OUT_OF_RANGE = 3155\nexports.ER_INVALID_JSON_VALUE_FOR_CAST = 3156\nexports.ER_JSON_DOCUMENT_TOO_DEEP = 3157\nexports.ER_JSON_DOCUMENT_NULL_KEY = 3158\nexports.ER_SECURE_TRANSPORT_REQUIRED = 3159\nexports.ER_NO_SECURE_TRANSPORTS_CONFIGURED = 3160\nexports.ER_DISABLED_STORAGE_ENGINE = 3161\nexports.ER_USER_DOES_NOT_EXIST = 3162\nexports.ER_USER_ALREADY_EXISTS = 3163\nexports.ER_AUDIT_API_ABORT = 3164\nexports.ER_INVALID_JSON_PATH_ARRAY_CELL = 3165\nexports.ER_BUFPOOL_RESIZE_INPROGRESS = 3166\nexports.ER_FEATURE_DISABLED_SEE_DOC = 3167\nexports.ER_SERVER_ISNT_AVAILABLE = 3168\nexports.ER_SESSION_WAS_KILLED = 3169\nexports.ER_CAPACITY_EXCEEDED = 3170\nexports.ER_CAPACITY_EXCEEDED_IN_RANGE_OPTIMIZER = 3171\nexports.ER_TABLE_NEEDS_UPG_PART = 3172\nexports.ER_CANT_WAIT_FOR_EXECUTED_GTID_SET_WHILE_OWNING_A_GTID = 3173\nexports.ER_CANNOT_ADD_FOREIGN_BASE_COL_VIRTUAL = 3174\nexports.ER_CANNOT_CREATE_VIRTUAL_INDEX_CONSTRAINT = 3175\nexports.ER_ERROR_ON_MODIFYING_GTID_EXECUTED_TABLE = 3176\nexports.ER_LOCK_REFUSED_BY_ENGINE = 3177\nexports.ER_UNSUPPORTED_ALTER_ONLINE_ON_VIRTUAL_COLUMN = 3178\nexports.ER_MASTER_KEY_ROTATION_NOT_SUPPORTED_BY_SE = 3179\nexports.ER_MASTER_KEY_ROTATION_ERROR_BY_SE = 3180\nexports.ER_MASTER_KEY_ROTATION_BINLOG_FAILED = 3181\nexports.ER_MASTER_KEY_ROTATION_SE_UNAVAILABLE = 3182\nexports.ER_TABLESPACE_CANNOT_ENCRYPT = 3183\nexports.ER_INVALID_ENCRYPTION_OPTION = 3184\nexports.ER_CANNOT_FIND_KEY_IN_KEYRING = 3185\nexports.ER_CAPACITY_EXCEEDED_IN_PARSER = 3186\nexports.ER_UNSUPPORTED_ALTER_ENCRYPTION_INPLACE = 3187\nexports.ER_KEYRING_UDF_KEYRING_SERVICE_ERROR = 3188\nexports.ER_USER_COLUMN_OLD_LENGTH = 3189\nexports.ER_CANT_RESET_SOURCE = 3190\nexports.ER_GROUP_REPLICATION_MAX_GROUP_SIZE = 3191\nexports.ER_CANNOT_ADD_FOREIGN_BASE_COL_STORED = 3192\nexports.ER_TABLE_REFERENCED = 3193\nexports.ER_PARTITION_ENGINE_DEPRECATED_FOR_TABLE = 3194\nexports.ER_WARN_USING_GEOMFROMWKB_TO_SET_SRID_ZERO = 3195\nexports.ER_WARN_USING_GEOMFROMWKB_TO_SET_SRID = 3196\nexports.ER_XA_RETRY = 3197\nexports.ER_KEYRING_AWS_UDF_AWS_KMS_ERROR = 3198\nexports.ER_BINLOG_UNSAFE_XA = 3199\nexports.ER_UDF_ERROR = 3200\nexports.ER_KEYRING_MIGRATION_FAILURE = 3201\nexports.ER_KEYRING_ACCESS_DENIED_ERROR = 3202\nexports.ER_KEYRING_MIGRATION_STATUS = 3203\nexports.ER_PLUGIN_FAILED_TO_OPEN_TABLES = 3204\nexports.ER_PLUGIN_FAILED_TO_OPEN_TABLE = 3205\nexports.ER_AUDIT_LOG_NO_KEYRING_PLUGIN_INSTALLED = 3206\nexports.ER_AUDIT_LOG_ENCRYPTION_PASSWORD_HAS_NOT_BEEN_SET = 3207\nexports.ER_AUDIT_LOG_COULD_NOT_CREATE_AES_KEY = 3208\nexports.ER_AUDIT_LOG_ENCRYPTION_PASSWORD_CANNOT_BE_FETCHED = 3209\nexports.ER_AUDIT_LOG_JSON_FILTERING_NOT_ENABLED = 3210\nexports.ER_AUDIT_LOG_UDF_INSUFFICIENT_PRIVILEGE = 3211\nexports.ER_AUDIT_LOG_SUPER_PRIVILEGE_REQUIRED = 3212\nexports.ER_COULD_NOT_REINITIALIZE_AUDIT_LOG_FILTERS = 3213\nexports.ER_AUDIT_LOG_UDF_INVALID_ARGUMENT_TYPE = 3214\nexports.ER_AUDIT_LOG_UDF_INVALID_ARGUMENT_COUNT = 3215\nexports.ER_AUDIT_LOG_HAS_NOT_BEEN_INSTALLED = 3216\nexports.ER_AUDIT_LOG_UDF_READ_INVALID_MAX_ARRAY_LENGTH_ARG_TYPE = 3217\nexports.ER_AUDIT_LOG_UDF_READ_INVALID_MAX_ARRAY_LENGTH_ARG_VALUE = 3218\nexports.ER_AUDIT_LOG_JSON_FILTER_PARSING_ERROR = 3219\nexports.ER_AUDIT_LOG_JSON_FILTER_NAME_CANNOT_BE_EMPTY = 3220\nexports.ER_AUDIT_LOG_JSON_USER_NAME_CANNOT_BE_EMPTY = 3221\nexports.ER_AUDIT_LOG_JSON_FILTER_DOES_NOT_EXISTS = 3222\nexports.ER_AUDIT_LOG_USER_FIRST_CHARACTER_MUST_BE_ALPHANUMERIC = 3223\nexports.ER_AUDIT_LOG_USER_NAME_INVALID_CHARACTER = 3224\nexports.ER_AUDIT_LOG_HOST_NAME_INVALID_CHARACTER = 3225\nexports.WARN_DEPRECATED_MAXDB_SQL_MODE_FOR_TIMESTAMP = 3226\nexports.ER_XA_REPLICATION_FILTERS = 3227\nexports.ER_CANT_OPEN_ERROR_LOG = 3228\nexports.ER_GROUPING_ON_TIMESTAMP_IN_DST = 3229\nexports.ER_CANT_START_SERVER_NAMED_PIPE = 3230\nexports.ER_WRITE_SET_EXCEEDS_LIMIT = 3231\nexports.ER_DEPRECATED_TLS_VERSION_SESSION_57 = 3232\nexports.ER_WARN_DEPRECATED_TLS_VERSION_57 = 3233\nexports.ER_WARN_WRONG_NATIVE_TABLE_STRUCTURE = 3234\nexports.ER_AES_INVALID_KDF_NAME = 3235\nexports.ER_AES_INVALID_KDF_ITERATIONS = 3236\nexports.WARN_AES_KEY_SIZE = 3237\nexports.ER_AES_INVALID_KDF_OPTION_SIZE = 3238\nexports.ER_UNSUPPORT_COMPRESSED_TEMPORARY_TABLE = 3500\nexports.ER_ACL_OPERATION_FAILED = 3501\nexports.ER_UNSUPPORTED_INDEX_ALGORITHM = 3502\nexports.ER_NO_SUCH_DB = 3503\nexports.ER_TOO_BIG_ENUM = 3504\nexports.ER_TOO_LONG_SET_ENUM_VALUE = 3505\nexports.ER_INVALID_DD_OBJECT = 3506\nexports.ER_UPDATING_DD_TABLE = 3507\nexports.ER_INVALID_DD_OBJECT_ID = 3508\nexports.ER_INVALID_DD_OBJECT_NAME = 3509\nexports.ER_TABLESPACE_MISSING_WITH_NAME = 3510\nexports.ER_TOO_LONG_ROUTINE_COMMENT = 3511\nexports.ER_SP_LOAD_FAILED = 3512\nexports.ER_INVALID_BITWISE_OPERANDS_SIZE = 3513\nexports.ER_INVALID_BITWISE_AGGREGATE_OPERANDS_SIZE = 3514\nexports.ER_WARN_UNSUPPORTED_HINT = 3515\nexports.ER_UNEXPECTED_GEOMETRY_TYPE = 3516\nexports.ER_SRS_PARSE_ERROR = 3517\nexports.ER_SRS_PROJ_PARAMETER_MISSING = 3518\nexports.ER_WARN_SRS_NOT_FOUND = 3519\nexports.ER_SRS_NOT_CARTESIAN = 3520\nexports.ER_SRS_NOT_CARTESIAN_UNDEFINED = 3521\nexports.ER_PK_INDEX_CANT_BE_INVISIBLE = 3522\nexports.ER_UNKNOWN_AUTHID = 3523\nexports.ER_FAILED_ROLE_GRANT = 3524\nexports.ER_OPEN_ROLE_TABLES = 3525\nexports.ER_FAILED_DEFAULT_ROLES = 3526\nexports.ER_COMPONENTS_NO_SCHEME = 3527\nexports.ER_COMPONENTS_NO_SCHEME_SERVICE = 3528\nexports.ER_COMPONENTS_CANT_LOAD = 3529\nexports.ER_ROLE_NOT_GRANTED = 3530\nexports.ER_FAILED_REVOKE_ROLE = 3531\nexports.ER_RENAME_ROLE = 3532\nexports.ER_COMPONENTS_CANT_ACQUIRE_SERVICE_IMPLEMENTATION = 3533\nexports.ER_COMPONENTS_CANT_SATISFY_DEPENDENCY = 3534\nexports.ER_COMPONENTS_LOAD_CANT_REGISTER_SERVICE_IMPLEMENTATION = 3535\nexports.ER_COMPONENTS_LOAD_CANT_INITIALIZE = 3536\nexports.ER_COMPONENTS_UNLOAD_NOT_LOADED = 3537\nexports.ER_COMPONENTS_UNLOAD_CANT_DEINITIALIZE = 3538\nexports.ER_COMPONENTS_CANT_RELEASE_SERVICE = 3539\nexports.ER_COMPONENTS_UNLOAD_CANT_UNREGISTER_SERVICE = 3540\nexports.ER_COMPONENTS_CANT_UNLOAD = 3541\nexports.ER_WARN_UNLOAD_THE_NOT_PERSISTED = 3542\nexports.ER_COMPONENT_TABLE_INCORRECT = 3543\nexports.ER_COMPONENT_MANIPULATE_ROW_FAILED = 3544\nexports.ER_COMPONENTS_UNLOAD_DUPLICATE_IN_GROUP = 3545\nexports.ER_CANT_SET_GTID_PURGED_DUE_SETS_CONSTRAINTS = 3546\nexports.ER_CANNOT_LOCK_USER_MANAGEMENT_CACHES = 3547\nexports.ER_SRS_NOT_FOUND = 3548\nexports.ER_VARIABLE_NOT_PERSISTED = 3549\nexports.ER_IS_QUERY_INVALID_CLAUSE = 3550\nexports.ER_UNABLE_TO_STORE_STATISTICS = 3551\nexports.ER_NO_SYSTEM_SCHEMA_ACCESS = 3552\nexports.ER_NO_SYSTEM_TABLESPACE_ACCESS = 3553\nexports.ER_NO_SYSTEM_TABLE_ACCESS = 3554\nexports.ER_NO_SYSTEM_TABLE_ACCESS_FOR_DICTIONARY_TABLE = 3555\nexports.ER_NO_SYSTEM_TABLE_ACCESS_FOR_SYSTEM_TABLE = 3556\nexports.ER_NO_SYSTEM_TABLE_ACCESS_FOR_TABLE = 3557\nexports.ER_INVALID_OPTION_KEY = 3558\nexports.ER_INVALID_OPTION_VALUE = 3559\nexports.ER_INVALID_OPTION_KEY_VALUE_PAIR = 3560\nexports.ER_INVALID_OPTION_START_CHARACTER = 3561\nexports.ER_INVALID_OPTION_END_CHARACTER = 3562\nexports.ER_INVALID_OPTION_CHARACTERS = 3563\nexports.ER_DUPLICATE_OPTION_KEY = 3564\nexports.ER_WARN_SRS_NOT_FOUND_AXIS_ORDER = 3565\nexports.ER_NO_ACCESS_TO_NATIVE_FCT = 3566\nexports.ER_RESET_SOURCE_TO_VALUE_OUT_OF_RANGE = 3567\nexports.ER_UNRESOLVED_TABLE_LOCK = 3568\nexports.ER_DUPLICATE_TABLE_LOCK = 3569\nexports.ER_BINLOG_UNSAFE_SKIP_LOCKED = 3570\nexports.ER_BINLOG_UNSAFE_NOWAIT = 3571\nexports.ER_LOCK_NOWAIT = 3572\nexports.ER_CTE_RECURSIVE_REQUIRES_UNION = 3573\nexports.ER_CTE_RECURSIVE_REQUIRES_NONRECURSIVE_FIRST = 3574\nexports.ER_CTE_RECURSIVE_FORBIDS_AGGREGATION = 3575\nexports.ER_CTE_RECURSIVE_FORBIDDEN_JOIN_ORDER = 3576\nexports.ER_CTE_RECURSIVE_REQUIRES_SINGLE_REFERENCE = 3577\nexports.ER_SWITCH_TMP_ENGINE = 3578\nexports.ER_WINDOW_NO_SUCH_WINDOW = 3579\nexports.ER_WINDOW_CIRCULARITY_IN_WINDOW_GRAPH = 3580\nexports.ER_WINDOW_NO_CHILD_PARTITIONING = 3581\nexports.ER_WINDOW_NO_INHERIT_FRAME = 3582\nexports.ER_WINDOW_NO_REDEFINE_ORDER_BY = 3583\nexports.ER_WINDOW_FRAME_START_ILLEGAL = 3584\nexports.ER_WINDOW_FRAME_END_ILLEGAL = 3585\nexports.ER_WINDOW_FRAME_ILLEGAL = 3586\nexports.ER_WINDOW_RANGE_FRAME_ORDER_TYPE = 3587\nexports.ER_WINDOW_RANGE_FRAME_TEMPORAL_TYPE = 3588\nexports.ER_WINDOW_RANGE_FRAME_NUMERIC_TYPE = 3589\nexports.ER_WINDOW_RANGE_BOUND_NOT_CONSTANT = 3590\nexports.ER_WINDOW_DUPLICATE_NAME = 3591\nexports.ER_WINDOW_ILLEGAL_ORDER_BY = 3592\nexports.ER_WINDOW_INVALID_WINDOW_FUNC_USE = 3593\nexports.ER_WINDOW_INVALID_WINDOW_FUNC_ALIAS_USE = 3594\nexports.ER_WINDOW_NESTED_WINDOW_FUNC_USE_IN_WINDOW_SPEC = 3595\nexports.ER_WINDOW_ROWS_INTERVAL_USE = 3596\nexports.ER_WINDOW_NO_GROUP_ORDER = 3597\nexports.ER_WINDOW_EXPLAIN_JSON = 3598\nexports.ER_WINDOW_FUNCTION_IGNORES_FRAME = 3599\nexports.ER_WL9236_NOW = 3600\nexports.ER_INVALID_NO_OF_ARGS = 3601\nexports.ER_FIELD_IN_GROUPING_NOT_GROUP_BY = 3602\nexports.ER_TOO_LONG_TABLESPACE_COMMENT = 3603\nexports.ER_ENGINE_CANT_DROP_TABLE = 3604\nexports.ER_ENGINE_CANT_DROP_MISSING_TABLE = 3605\nexports.ER_TABLESPACE_DUP_FILENAME = 3606\nexports.ER_DB_DROP_RMDIR2 = 3607\nexports.ER_IMP_NO_FILES_MATCHED = 3608\nexports.ER_IMP_SCHEMA_DOES_NOT_EXIST = 3609\nexports.ER_IMP_TABLE_ALREADY_EXISTS = 3610\nexports.ER_IMP_INCOMPATIBLE_MYSQLD_VERSION = 3611\nexports.ER_IMP_INCOMPATIBLE_DD_VERSION = 3612\nexports.ER_IMP_INCOMPATIBLE_SDI_VERSION = 3613\nexports.ER_WARN_INVALID_HINT = 3614\nexports.ER_VAR_DOES_NOT_EXIST = 3615\nexports.ER_LONGITUDE_OUT_OF_RANGE = 3616\nexports.ER_LATITUDE_OUT_OF_RANGE = 3617\nexports.ER_NOT_IMPLEMENTED_FOR_GEOGRAPHIC_SRS = 3618\nexports.ER_ILLEGAL_PRIVILEGE_LEVEL = 3619\nexports.ER_NO_SYSTEM_VIEW_ACCESS = 3620\nexports.ER_COMPONENT_FILTER_FLABBERGASTED = 3621\nexports.ER_PART_EXPR_TOO_LONG = 3622\nexports.ER_UDF_DROP_DYNAMICALLY_REGISTERED = 3623\nexports.ER_UNABLE_TO_STORE_COLUMN_STATISTICS = 3624\nexports.ER_UNABLE_TO_UPDATE_COLUMN_STATISTICS = 3625\nexports.ER_UNABLE_TO_DROP_COLUMN_STATISTICS = 3626\nexports.ER_UNABLE_TO_BUILD_HISTOGRAM = 3627\nexports.ER_MANDATORY_ROLE = 3628\nexports.ER_MISSING_TABLESPACE_FILE = 3629\nexports.ER_PERSIST_ONLY_ACCESS_DENIED_ERROR = 3630\nexports.ER_CMD_NEED_SUPER = 3631\nexports.ER_PATH_IN_DATADIR = 3632\nexports.ER_CLONE_DDL_IN_PROGRESS = 3633\nexports.ER_CLONE_TOO_MANY_CONCURRENT_CLONES = 3634\nexports.ER_APPLIER_LOG_EVENT_VALIDATION_ERROR = 3635\nexports.ER_CTE_MAX_RECURSION_DEPTH = 3636\nexports.ER_NOT_HINT_UPDATABLE_VARIABLE = 3637\nexports.ER_CREDENTIALS_CONTRADICT_TO_HISTORY = 3638\nexports.ER_WARNING_PASSWORD_HISTORY_CLAUSES_VOID = 3639\nexports.ER_CLIENT_DOES_NOT_SUPPORT = 3640\nexports.ER_I_S_SKIPPED_TABLESPACE = 3641\nexports.ER_TABLESPACE_ENGINE_MISMATCH = 3642\nexports.ER_WRONG_SRID_FOR_COLUMN = 3643\nexports.ER_CANNOT_ALTER_SRID_DUE_TO_INDEX = 3644\nexports.ER_WARN_BINLOG_PARTIAL_UPDATES_DISABLED = 3645\nexports.ER_WARN_BINLOG_V1_ROW_EVENTS_DISABLED = 3646\nexports.ER_WARN_BINLOG_PARTIAL_UPDATES_SUGGESTS_PARTIAL_IMAGES = 3647\nexports.ER_COULD_NOT_APPLY_JSON_DIFF = 3648\nexports.ER_CORRUPTED_JSON_DIFF = 3649\nexports.ER_RESOURCE_GROUP_EXISTS = 3650\nexports.ER_RESOURCE_GROUP_NOT_EXISTS = 3651\nexports.ER_INVALID_VCPU_ID = 3652\nexports.ER_INVALID_VCPU_RANGE = 3653\nexports.ER_INVALID_THREAD_PRIORITY = 3654\nexports.ER_DISALLOWED_OPERATION = 3655\nexports.ER_RESOURCE_GROUP_BUSY = 3656\nexports.ER_RESOURCE_GROUP_DISABLED = 3657\nexports.ER_FEATURE_UNSUPPORTED = 3658\nexports.ER_ATTRIBUTE_IGNORED = 3659\nexports.ER_INVALID_THREAD_ID = 3660\nexports.ER_RESOURCE_GROUP_BIND_FAILED = 3661\nexports.ER_INVALID_USE_OF_FORCE_OPTION = 3662\nexports.ER_GROUP_REPLICATION_COMMAND_FAILURE = 3663\nexports.ER_SDI_OPERATION_FAILED = 3664\nexports.ER_MISSING_JSON_TABLE_VALUE = 3665\nexports.ER_WRONG_JSON_TABLE_VALUE = 3666\nexports.ER_TF_MUST_HAVE_ALIAS = 3667\nexports.ER_TF_FORBIDDEN_JOIN_TYPE = 3668\nexports.ER_JT_VALUE_OUT_OF_RANGE = 3669\nexports.ER_JT_MAX_NESTED_PATH = 3670\nexports.ER_PASSWORD_EXPIRATION_NOT_SUPPORTED_BY_AUTH_METHOD = 3671\nexports.ER_INVALID_GEOJSON_CRS_NOT_TOP_LEVEL = 3672\nexports.ER_BAD_NULL_ERROR_NOT_IGNORED = 3673\nexports.WARN_USELESS_SPATIAL_INDEX = 3674\nexports.ER_DISK_FULL_NOWAIT = 3675\nexports.ER_PARSE_ERROR_IN_DIGEST_FN = 3676\nexports.ER_UNDISCLOSED_PARSE_ERROR_IN_DIGEST_FN = 3677\nexports.ER_SCHEMA_DIR_EXISTS = 3678\nexports.ER_SCHEMA_DIR_MISSING = 3679\nexports.ER_SCHEMA_DIR_CREATE_FAILED = 3680\nexports.ER_SCHEMA_DIR_UNKNOWN = 3681\nexports.ER_ONLY_IMPLEMENTED_FOR_SRID_0_AND_4326 = 3682\nexports.ER_BINLOG_EXPIRE_LOG_DAYS_AND_SECS_USED_TOGETHER = 3683\nexports.ER_REGEXP_BUFFER_OVERFLOW = 3684\nexports.ER_REGEXP_ILLEGAL_ARGUMENT = 3685\nexports.ER_REGEXP_INDEX_OUTOFBOUNDS_ERROR = 3686\nexports.ER_REGEXP_INTERNAL_ERROR = 3687\nexports.ER_REGEXP_RULE_SYNTAX = 3688\nexports.ER_REGEXP_BAD_ESCAPE_SEQUENCE = 3689\nexports.ER_REGEXP_UNIMPLEMENTED = 3690\nexports.ER_REGEXP_MISMATCHED_PAREN = 3691\nexports.ER_REGEXP_BAD_INTERVAL = 3692\nexports.ER_REGEXP_MAX_LT_MIN = 3693\nexports.ER_REGEXP_INVALID_BACK_REF = 3694\nexports.ER_REGEXP_LOOK_BEHIND_LIMIT = 3695\nexports.ER_REGEXP_MISSING_CLOSE_BRACKET = 3696\nexports.ER_REGEXP_INVALID_RANGE = 3697\nexports.ER_REGEXP_STACK_OVERFLOW = 3698\nexports.ER_REGEXP_TIME_OUT = 3699\nexports.ER_REGEXP_PATTERN_TOO_BIG = 3700\nexports.ER_CANT_SET_ERROR_LOG_SERVICE = 3701\nexports.ER_EMPTY_PIPELINE_FOR_ERROR_LOG_SERVICE = 3702\nexports.ER_COMPONENT_FILTER_DIAGNOSTICS = 3703\nexports.ER_NOT_IMPLEMENTED_FOR_CARTESIAN_SRS = 3704\nexports.ER_NOT_IMPLEMENTED_FOR_PROJECTED_SRS = 3705\nexports.ER_NONPOSITIVE_RADIUS = 3706\nexports.ER_RESTART_SERVER_FAILED = 3707\nexports.ER_SRS_MISSING_MANDATORY_ATTRIBUTE = 3708\nexports.ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS = 3709\nexports.ER_SRS_NAME_CANT_BE_EMPTY_OR_WHITESPACE = 3710\nexports.ER_SRS_ORGANIZATION_CANT_BE_EMPTY_OR_WHITESPACE = 3711\nexports.ER_SRS_ID_ALREADY_EXISTS = 3712\nexports.ER_WARN_SRS_ID_ALREADY_EXISTS = 3713\nexports.ER_CANT_MODIFY_SRID_0 = 3714\nexports.ER_WARN_RESERVED_SRID_RANGE = 3715\nexports.ER_CANT_MODIFY_SRS_USED_BY_COLUMN = 3716\nexports.ER_SRS_INVALID_CHARACTER_IN_ATTRIBUTE = 3717\nexports.ER_SRS_ATTRIBUTE_STRING_TOO_LONG = 3718\nexports.ER_DEPRECATED_UTF8_ALIAS = 3719\nexports.ER_DEPRECATED_NATIONAL = 3720\nexports.ER_INVALID_DEFAULT_UTF8MB4_COLLATION = 3721\nexports.ER_UNABLE_TO_COLLECT_LOG_STATUS = 3722\nexports.ER_RESERVED_TABLESPACE_NAME = 3723\nexports.ER_UNABLE_TO_SET_OPTION = 3724\nexports.ER_REPLICA_POSSIBLY_DIVERGED_AFTER_DDL = 3725\nexports.ER_SRS_NOT_GEOGRAPHIC = 3726\nexports.ER_POLYGON_TOO_LARGE = 3727\nexports.ER_SPATIAL_UNIQUE_INDEX = 3728\nexports.ER_INDEX_TYPE_NOT_SUPPORTED_FOR_SPATIAL_INDEX = 3729\nexports.ER_FK_CANNOT_DROP_PARENT = 3730\nexports.ER_GEOMETRY_PARAM_LONGITUDE_OUT_OF_RANGE = 3731\nexports.ER_GEOMETRY_PARAM_LATITUDE_OUT_OF_RANGE = 3732\nexports.ER_FK_CANNOT_USE_VIRTUAL_COLUMN = 3733\nexports.ER_FK_NO_COLUMN_PARENT = 3734\nexports.ER_CANT_SET_ERROR_SUPPRESSION_LIST = 3735\nexports.ER_SRS_GEOGCS_INVALID_AXES = 3736\nexports.ER_SRS_INVALID_SEMI_MAJOR_AXIS = 3737\nexports.ER_SRS_INVALID_INVERSE_FLATTENING = 3738\nexports.ER_SRS_INVALID_ANGULAR_UNIT = 3739\nexports.ER_SRS_INVALID_PRIME_MERIDIAN = 3740\nexports.ER_TRANSFORM_SOURCE_SRS_NOT_SUPPORTED = 3741\nexports.ER_TRANSFORM_TARGET_SRS_NOT_SUPPORTED = 3742\nexports.ER_TRANSFORM_SOURCE_SRS_MISSING_TOWGS84 = 3743\nexports.ER_TRANSFORM_TARGET_SRS_MISSING_TOWGS84 = 3744\nexports.ER_TEMP_TABLE_PREVENTS_SWITCH_SESSION_BINLOG_FORMAT = 3745\nexports.ER_TEMP_TABLE_PREVENTS_SWITCH_GLOBAL_BINLOG_FORMAT = 3746\nexports.ER_RUNNING_APPLIER_PREVENTS_SWITCH_GLOBAL_BINLOG_FORMAT = 3747\nexports.ER_CLIENT_GTID_UNSAFE_CREATE_DROP_TEMP_TABLE_IN_TRX_IN_SBR = 3748\nexports.ER_XA_CANT_CREATE_MDL_BACKUP = 3749\nexports.ER_TABLE_WITHOUT_PK = 3750\nexports.ER_WARN_DATA_TRUNCATED_FUNCTIONAL_INDEX = 3751\nexports.ER_WARN_DATA_OUT_OF_RANGE_FUNCTIONAL_INDEX = 3752\nexports.ER_FUNCTIONAL_INDEX_ON_JSON_OR_GEOMETRY_FUNCTION = 3753\nexports.ER_FUNCTIONAL_INDEX_REF_AUTO_INCREMENT = 3754\nexports.ER_CANNOT_DROP_COLUMN_FUNCTIONAL_INDEX = 3755\nexports.ER_FUNCTIONAL_INDEX_PRIMARY_KEY = 3756\nexports.ER_FUNCTIONAL_INDEX_ON_LOB = 3757\nexports.ER_FUNCTIONAL_INDEX_FUNCTION_IS_NOT_ALLOWED = 3758\nexports.ER_FULLTEXT_FUNCTIONAL_INDEX = 3759\nexports.ER_SPATIAL_FUNCTIONAL_INDEX = 3760\nexports.ER_WRONG_KEY_COLUMN_FUNCTIONAL_INDEX = 3761\nexports.ER_FUNCTIONAL_INDEX_ON_FIELD = 3762\nexports.ER_GENERATED_COLUMN_NAMED_FUNCTION_IS_NOT_ALLOWED = 3763\nexports.ER_GENERATED_COLUMN_ROW_VALUE = 3764\nexports.ER_GENERATED_COLUMN_VARIABLES = 3765\nexports.ER_DEPENDENT_BY_DEFAULT_GENERATED_VALUE = 3766\nexports.ER_DEFAULT_VAL_GENERATED_NON_PRIOR = 3767\nexports.ER_DEFAULT_VAL_GENERATED_REF_AUTO_INC = 3768\nexports.ER_DEFAULT_VAL_GENERATED_FUNCTION_IS_NOT_ALLOWED = 3769\nexports.ER_DEFAULT_VAL_GENERATED_NAMED_FUNCTION_IS_NOT_ALLOWED = 3770\nexports.ER_DEFAULT_VAL_GENERATED_ROW_VALUE = 3771\nexports.ER_DEFAULT_VAL_GENERATED_VARIABLES = 3772\nexports.ER_DEFAULT_AS_VAL_GENERATED = 3773\nexports.ER_UNSUPPORTED_ACTION_ON_DEFAULT_VAL_GENERATED = 3774\nexports.ER_GTID_UNSAFE_ALTER_ADD_COL_WITH_DEFAULT_EXPRESSION = 3775\nexports.ER_FK_CANNOT_CHANGE_ENGINE = 3776\nexports.ER_WARN_DEPRECATED_USER_SET_EXPR = 3777\nexports.ER_WARN_DEPRECATED_UTF8MB3_COLLATION = 3778\nexports.ER_WARN_DEPRECATED_NESTED_COMMENT_SYNTAX = 3779\nexports.ER_FK_INCOMPATIBLE_COLUMNS = 3780\nexports.ER_GR_HOLD_WAIT_TIMEOUT = 3781\nexports.ER_GR_HOLD_KILLED = 3782\nexports.ER_GR_HOLD_MEMBER_STATUS_ERROR = 3783\nexports.ER_RPL_ENCRYPTION_FAILED_TO_FETCH_KEY = 3784\nexports.ER_RPL_ENCRYPTION_KEY_NOT_FOUND = 3785\nexports.ER_RPL_ENCRYPTION_KEYRING_INVALID_KEY = 3786\nexports.ER_RPL_ENCRYPTION_HEADER_ERROR = 3787\nexports.ER_RPL_ENCRYPTION_FAILED_TO_ROTATE_LOGS = 3788\nexports.ER_RPL_ENCRYPTION_KEY_EXISTS_UNEXPECTED = 3789\nexports.ER_RPL_ENCRYPTION_FAILED_TO_GENERATE_KEY = 3790\nexports.ER_RPL_ENCRYPTION_FAILED_TO_STORE_KEY = 3791\nexports.ER_RPL_ENCRYPTION_FAILED_TO_REMOVE_KEY = 3792\nexports.ER_RPL_ENCRYPTION_UNABLE_TO_CHANGE_OPTION = 3793\nexports.ER_RPL_ENCRYPTION_MASTER_KEY_RECOVERY_FAILED = 3794\nexports.ER_SLOW_LOG_MODE_IGNORED_WHEN_NOT_LOGGING_TO_FILE = 3795\nexports.ER_GRP_TRX_CONSISTENCY_NOT_ALLOWED = 3796\nexports.ER_GRP_TRX_CONSISTENCY_BEFORE = 3797\nexports.ER_GRP_TRX_CONSISTENCY_AFTER_ON_TRX_BEGIN = 3798\nexports.ER_GRP_TRX_CONSISTENCY_BEGIN_NOT_ALLOWED = 3799\nexports.ER_FUNCTIONAL_INDEX_ROW_VALUE_IS_NOT_ALLOWED = 3800\nexports.ER_RPL_ENCRYPTION_FAILED_TO_ENCRYPT = 3801\nexports.ER_PAGE_TRACKING_NOT_STARTED = 3802\nexports.ER_PAGE_TRACKING_RANGE_NOT_TRACKED = 3803\nexports.ER_PAGE_TRACKING_CANNOT_PURGE = 3804\nexports.ER_RPL_ENCRYPTION_CANNOT_ROTATE_BINLOG_MASTER_KEY = 3805\nexports.ER_BINLOG_MASTER_KEY_RECOVERY_OUT_OF_COMBINATION = 3806\nexports.ER_BINLOG_MASTER_KEY_ROTATION_FAIL_TO_OPERATE_KEY = 3807\nexports.ER_BINLOG_MASTER_KEY_ROTATION_FAIL_TO_ROTATE_LOGS = 3808\nexports.ER_BINLOG_MASTER_KEY_ROTATION_FAIL_TO_REENCRYPT_LOG = 3809\nexports.ER_BINLOG_MASTER_KEY_ROTATION_FAIL_TO_CLEANUP_UNUSED_KEYS = 3810\nexports.ER_BINLOG_MASTER_KEY_ROTATION_FAIL_TO_CLEANUP_AUX_KEY = 3811\nexports.ER_NON_BOOLEAN_EXPR_FOR_CHECK_CONSTRAINT = 3812\nexports.ER_COLUMN_CHECK_CONSTRAINT_REFERENCES_OTHER_COLUMN = 3813\nexports.ER_CHECK_CONSTRAINT_NAMED_FUNCTION_IS_NOT_ALLOWED = 3814\nexports.ER_CHECK_CONSTRAINT_FUNCTION_IS_NOT_ALLOWED = 3815\nexports.ER_CHECK_CONSTRAINT_VARIABLES = 3816\nexports.ER_CHECK_CONSTRAINT_ROW_VALUE = 3817\nexports.ER_CHECK_CONSTRAINT_REFERS_AUTO_INCREMENT_COLUMN = 3818\nexports.ER_CHECK_CONSTRAINT_VIOLATED = 3819\nexports.ER_CHECK_CONSTRAINT_REFERS_UNKNOWN_COLUMN = 3820\nexports.ER_CHECK_CONSTRAINT_NOT_FOUND = 3821\nexports.ER_CHECK_CONSTRAINT_DUP_NAME = 3822\nexports.ER_CHECK_CONSTRAINT_CLAUSE_USING_FK_REFER_ACTION_COLUMN = 3823\nexports.WARN_UNENCRYPTED_TABLE_IN_ENCRYPTED_DB = 3824\nexports.ER_INVALID_ENCRYPTION_REQUEST = 3825\nexports.ER_CANNOT_SET_TABLE_ENCRYPTION = 3826\nexports.ER_CANNOT_SET_DATABASE_ENCRYPTION = 3827\nexports.ER_CANNOT_SET_TABLESPACE_ENCRYPTION = 3828\nexports.ER_TABLESPACE_CANNOT_BE_ENCRYPTED = 3829\nexports.ER_TABLESPACE_CANNOT_BE_DECRYPTED = 3830\nexports.ER_TABLESPACE_TYPE_UNKNOWN = 3831\nexports.ER_TARGET_TABLESPACE_UNENCRYPTED = 3832\nexports.ER_CANNOT_USE_ENCRYPTION_CLAUSE = 3833\nexports.ER_INVALID_MULTIPLE_CLAUSES = 3834\nexports.ER_UNSUPPORTED_USE_OF_GRANT_AS = 3835\nexports.ER_UKNOWN_AUTH_ID_OR_ACCESS_DENIED_FOR_GRANT_AS = 3836\nexports.ER_DEPENDENT_BY_FUNCTIONAL_INDEX = 3837\nexports.ER_PLUGIN_NOT_EARLY = 3838\nexports.ER_INNODB_REDO_LOG_ARCHIVE_START_SUBDIR_PATH = 3839\nexports.ER_INNODB_REDO_LOG_ARCHIVE_START_TIMEOUT = 3840\nexports.ER_INNODB_REDO_LOG_ARCHIVE_DIRS_INVALID = 3841\nexports.ER_INNODB_REDO_LOG_ARCHIVE_LABEL_NOT_FOUND = 3842\nexports.ER_INNODB_REDO_LOG_ARCHIVE_DIR_EMPTY = 3843\nexports.ER_INNODB_REDO_LOG_ARCHIVE_NO_SUCH_DIR = 3844\nexports.ER_INNODB_REDO_LOG_ARCHIVE_DIR_CLASH = 3845\nexports.ER_INNODB_REDO_LOG_ARCHIVE_DIR_PERMISSIONS = 3846\nexports.ER_INNODB_REDO_LOG_ARCHIVE_FILE_CREATE = 3847\nexports.ER_INNODB_REDO_LOG_ARCHIVE_ACTIVE = 3848\nexports.ER_INNODB_REDO_LOG_ARCHIVE_INACTIVE = 3849\nexports.ER_INNODB_REDO_LOG_ARCHIVE_FAILED = 3850\nexports.ER_INNODB_REDO_LOG_ARCHIVE_SESSION = 3851\nexports.ER_STD_REGEX_ERROR = 3852\nexports.ER_INVALID_JSON_TYPE = 3853\nexports.ER_CANNOT_CONVERT_STRING = 3854\nexports.ER_DEPENDENT_BY_PARTITION_FUNC = 3855\nexports.ER_WARN_DEPRECATED_FLOAT_AUTO_INCREMENT = 3856\nexports.ER_RPL_CANT_STOP_REPLICA_WHILE_LOCKED_BACKUP = 3857\nexports.ER_WARN_DEPRECATED_FLOAT_DIGITS = 3858\nexports.ER_WARN_DEPRECATED_FLOAT_UNSIGNED = 3859\nexports.ER_WARN_DEPRECATED_INTEGER_DISPLAY_WIDTH = 3860\nexports.ER_WARN_DEPRECATED_ZEROFILL = 3861\nexports.ER_CLONE_DONOR = 3862\nexports.ER_CLONE_PROTOCOL = 3863\nexports.ER_CLONE_DONOR_VERSION = 3864\nexports.ER_CLONE_OS = 3865\nexports.ER_CLONE_PLATFORM = 3866\nexports.ER_CLONE_CHARSET = 3867\nexports.ER_CLONE_CONFIG = 3868\nexports.ER_CLONE_SYS_CONFIG = 3869\nexports.ER_CLONE_PLUGIN_MATCH = 3870\nexports.ER_CLONE_LOOPBACK = 3871\nexports.ER_CLONE_ENCRYPTION = 3872\nexports.ER_CLONE_DISK_SPACE = 3873\nexports.ER_CLONE_IN_PROGRESS = 3874\nexports.ER_CLONE_DISALLOWED = 3875\nexports.ER_CANNOT_GRANT_ROLES_TO_ANONYMOUS_USER = 3876\nexports.ER_SECONDARY_ENGINE_PLUGIN = 3877\nexports.ER_SECOND_PASSWORD_CANNOT_BE_EMPTY = 3878\nexports.ER_DB_ACCESS_DENIED = 3879\nexports.ER_DA_AUTH_ID_WITH_SYSTEM_USER_PRIV_IN_MANDATORY_ROLES = 3880\nexports.ER_DA_RPL_GTID_TABLE_CANNOT_OPEN = 3881\nexports.ER_GEOMETRY_IN_UNKNOWN_LENGTH_UNIT = 3882\nexports.ER_DA_PLUGIN_INSTALL_ERROR = 3883\nexports.ER_NO_SESSION_TEMP = 3884\nexports.ER_DA_UNKNOWN_ERROR_NUMBER = 3885\nexports.ER_COLUMN_CHANGE_SIZE = 3886\nexports.ER_REGEXP_INVALID_CAPTURE_GROUP_NAME = 3887\nexports.ER_DA_SSL_LIBRARY_ERROR = 3888\nexports.ER_SECONDARY_ENGINE = 3889\nexports.ER_SECONDARY_ENGINE_DDL = 3890\nexports.ER_INCORRECT_CURRENT_PASSWORD = 3891\nexports.ER_MISSING_CURRENT_PASSWORD = 3892\nexports.ER_CURRENT_PASSWORD_NOT_REQUIRED = 3893\nexports.ER_PASSWORD_CANNOT_BE_RETAINED_ON_PLUGIN_CHANGE = 3894\nexports.ER_CURRENT_PASSWORD_CANNOT_BE_RETAINED = 3895\nexports.ER_PARTIAL_REVOKES_EXIST = 3896\nexports.ER_CANNOT_GRANT_SYSTEM_PRIV_TO_MANDATORY_ROLE = 3897\nexports.ER_XA_REPLICATION_FILTERS = 3898\nexports.ER_UNSUPPORTED_SQL_MODE = 3899\nexports.ER_REGEXP_INVALID_FLAG = 3900\nexports.ER_PARTIAL_REVOKE_AND_DB_GRANT_BOTH_EXISTS = 3901\nexports.ER_UNIT_NOT_FOUND = 3902\nexports.ER_INVALID_JSON_VALUE_FOR_FUNC_INDEX = 3903\nexports.ER_JSON_VALUE_OUT_OF_RANGE_FOR_FUNC_INDEX = 3904\nexports.ER_EXCEEDED_MV_KEYS_NUM = 3905\nexports.ER_EXCEEDED_MV_KEYS_SPACE = 3906\nexports.ER_FUNCTIONAL_INDEX_DATA_IS_TOO_LONG = 3907\nexports.ER_WRONG_MVI_VALUE = 3908\nexports.ER_WARN_FUNC_INDEX_NOT_APPLICABLE = 3909\nexports.ER_GRP_RPL_UDF_ERROR = 3910\nexports.ER_UPDATE_GTID_PURGED_WITH_GR = 3911\nexports.ER_GROUPING_ON_TIMESTAMP_IN_DST = 3912\nexports.ER_TABLE_NAME_CAUSES_TOO_LONG_PATH = 3913\nexports.ER_AUDIT_LOG_INSUFFICIENT_PRIVILEGE = 3914\nexports.ER_AUDIT_LOG_PASSWORD_HAS_BEEN_COPIED = 3915\nexports.ER_DA_GRP_RPL_STARTED_AUTO_REJOIN = 3916\nexports.ER_SYSVAR_CHANGE_DURING_QUERY = 3917\nexports.ER_GLOBSTAT_CHANGE_DURING_QUERY = 3918\nexports.ER_GRP_RPL_MESSAGE_SERVICE_INIT_FAILURE = 3919\nexports.ER_CHANGE_SOURCE_WRONG_COMPRESSION_ALGORITHM_CLIENT = 3920\nexports.ER_CHANGE_SOURCE_WRONG_COMPRESSION_LEVEL_CLIENT = 3921\nexports.ER_WRONG_COMPRESSION_ALGORITHM_CLIENT = 3922\nexports.ER_WRONG_COMPRESSION_LEVEL_CLIENT = 3923\nexports.ER_CHANGE_SOURCE_WRONG_COMPRESSION_ALGORITHM_LIST_CLIENT = 3924\nexports.ER_CLIENT_PRIVILEGE_CHECKS_USER_CANNOT_BE_ANONYMOUS = 3925\nexports.ER_CLIENT_PRIVILEGE_CHECKS_USER_DOES_NOT_EXIST = 3926\nexports.ER_CLIENT_PRIVILEGE_CHECKS_USER_CORRUPT = 3927\nexports.ER_CLIENT_PRIVILEGE_CHECKS_USER_NEEDS_RPL_APPLIER_PRIV = 3928\nexports.ER_WARN_DA_PRIVILEGE_NOT_REGISTERED = 3929\nexports.ER_CLIENT_KEYRING_UDF_KEY_INVALID = 3930\nexports.ER_CLIENT_KEYRING_UDF_KEY_TYPE_INVALID = 3931\nexports.ER_CLIENT_KEYRING_UDF_KEY_TOO_LONG = 3932\nexports.ER_CLIENT_KEYRING_UDF_KEY_TYPE_TOO_LONG = 3933\nexports.ER_JSON_SCHEMA_VALIDATION_ERROR_WITH_DETAILED_REPORT = 3934\nexports.ER_DA_UDF_INVALID_CHARSET_SPECIFIED = 3935\nexports.ER_DA_UDF_INVALID_CHARSET = 3936\nexports.ER_DA_UDF_INVALID_COLLATION = 3937\nexports.ER_DA_UDF_INVALID_EXTENSION_ARGUMENT_TYPE = 3938\nexports.ER_MULTIPLE_CONSTRAINTS_WITH_SAME_NAME = 3939\nexports.ER_CONSTRAINT_NOT_FOUND = 3940\nexports.ER_ALTER_CONSTRAINT_ENFORCEMENT_NOT_SUPPORTED = 3941\nexports.ER_TABLE_VALUE_CONSTRUCTOR_MUST_HAVE_COLUMNS = 3942\nexports.ER_TABLE_VALUE_CONSTRUCTOR_CANNOT_HAVE_DEFAULT = 3943\nexports.ER_CLIENT_QUERY_FAILURE_INVALID_NON_ROW_FORMAT = 3944\nexports.ER_REQUIRE_ROW_FORMAT_INVALID_VALUE = 3945\nexports.ER_FAILED_TO_DETERMINE_IF_ROLE_IS_MANDATORY = 3946\nexports.ER_FAILED_TO_FETCH_MANDATORY_ROLE_LIST = 3947\nexports.ER_CLIENT_LOCAL_FILES_DISABLED = 3948\nexports.ER_IMP_INCOMPATIBLE_CFG_VERSION = 3949\nexports.ER_DA_OOM = 3950\nexports.ER_DA_UDF_INVALID_ARGUMENT_TO_SET_CHARSET = 3951\nexports.ER_DA_UDF_INVALID_RETURN_TYPE_TO_SET_CHARSET = 3952\nexports.ER_MULTIPLE_INTO_CLAUSES = 3953\nexports.ER_MISPLACED_INTO = 3954\nexports.ER_USER_ACCESS_DENIED_FOR_USER_ACCOUNT_BLOCKED_BY_PASSWORD_LOCK = 3955\nexports.ER_WARN_DEPRECATED_YEAR_UNSIGNED = 3956\nexports.ER_CLONE_NETWORK_PACKET = 3957\nexports.ER_SDI_OPERATION_FAILED_MISSING_RECORD = 3958\nexports.ER_DEPENDENT_BY_CHECK_CONSTRAINT = 3959\nexports.ER_GRP_OPERATION_NOT_ALLOWED_GR_MUST_STOP = 3960\nexports.ER_WARN_DEPRECATED_JSON_TABLE_ON_ERROR_ON_EMPTY = 3961\nexports.ER_WARN_DEPRECATED_INNER_INTO = 3962\nexports.ER_WARN_DEPRECATED_VALUES_FUNCTION_ALWAYS_NULL = 3963\nexports.ER_WARN_DEPRECATED_SQL_CALC_FOUND_ROWS = 3964\nexports.ER_WARN_DEPRECATED_FOUND_ROWS = 3965\nexports.ER_MISSING_JSON_VALUE = 3966\nexports.ER_MULTIPLE_JSON_VALUES = 3967\nexports.ER_HOSTNAME_TOO_LONG = 3968\nexports.ER_WARN_CLIENT_DEPRECATED_PARTITION_PREFIX_KEY = 3969\nexports.ER_GROUP_REPLICATION_USER_EMPTY_MSG = 3970\nexports.ER_GROUP_REPLICATION_USER_MANDATORY_MSG = 3971\nexports.ER_GROUP_REPLICATION_PASSWORD_LENGTH = 3972\nexports.ER_SUBQUERY_TRANSFORM_REJECTED = 3973\nexports.ER_DA_GRP_RPL_RECOVERY_ENDPOINT_FORMAT = 3974\nexports.ER_DA_GRP_RPL_RECOVERY_ENDPOINT_INVALID = 3975\nexports.ER_WRONG_VALUE_FOR_VAR_PLUS_ACTIONABLE_PART = 3976\nexports.ER_STATEMENT_NOT_ALLOWED_AFTER_START_TRANSACTION = 3977\nexports.ER_FOREIGN_KEY_WITH_ATOMIC_CREATE_SELECT = 3978\nexports.ER_NOT_ALLOWED_WITH_START_TRANSACTION = 3979\nexports.ER_INVALID_JSON_ATTRIBUTE = 3980\nexports.ER_ENGINE_ATTRIBUTE_NOT_SUPPORTED = 3981\nexports.ER_INVALID_USER_ATTRIBUTE_JSON = 3982\nexports.ER_INNODB_REDO_DISABLED = 3983\nexports.ER_INNODB_REDO_ARCHIVING_ENABLED = 3984\nexports.ER_MDL_OUT_OF_RESOURCES = 3985\nexports.ER_IMPLICIT_COMPARISON_FOR_JSON = 3986\nexports.ER_FUNCTION_DOES_NOT_SUPPORT_CHARACTER_SET = 3987\nexports.ER_IMPOSSIBLE_STRING_CONVERSION = 3988\nexports.ER_SCHEMA_READ_ONLY = 3989\nexports.ER_RPL_ASYNC_RECONNECT_GTID_MODE_OFF = 3990\nexports.ER_RPL_ASYNC_RECONNECT_AUTO_POSITION_OFF = 3991\nexports.ER_DISABLE_GTID_MODE_REQUIRES_ASYNC_RECONNECT_OFF = 3992\nexports.ER_DISABLE_AUTO_POSITION_REQUIRES_ASYNC_RECONNECT_OFF = 3993\nexports.ER_INVALID_PARAMETER_USE = 3994\nexports.ER_CHARACTER_SET_MISMATCH = 3995\nexports.ER_WARN_VAR_VALUE_CHANGE_NOT_SUPPORTED = 3996\nexports.ER_INVALID_TIME_ZONE_INTERVAL = 3997\nexports.ER_INVALID_CAST = 3998\nexports.ER_HYPERGRAPH_NOT_SUPPORTED_YET = 3999\nexports.ER_WARN_HYPERGRAPH_EXPERIMENTAL = 4000\nexports.ER_DA_NO_ERROR_LOG_PARSER_CONFIGURED = 4001\nexports.ER_DA_ERROR_LOG_TABLE_DISABLED = 4002\nexports.ER_DA_ERROR_LOG_MULTIPLE_FILTERS = 4003\nexports.ER_DA_CANT_OPEN_ERROR_LOG = 4004\nexports.ER_USER_REFERENCED_AS_DEFINER = 4005\nexports.ER_CANNOT_USER_REFERENCED_AS_DEFINER = 4006\nexports.ER_REGEX_NUMBER_TOO_BIG = 4007\nexports.ER_SPVAR_NONINTEGER_TYPE = 4008\nexports.WARN_UNSUPPORTED_ACL_TABLES_READ = 4009\nexports.ER_BINLOG_UNSAFE_ACL_TABLE_READ_IN_DML_DDL = 4010\nexports.ER_STOP_REPLICA_MONITOR_IO_THREAD_TIMEOUT = 4011\nexports.ER_STARTING_REPLICA_MONITOR_IO_THREAD = 4012\nexports.ER_CANT_USE_ANONYMOUS_TO_GTID_WITH_GTID_MODE_NOT_ON = 4013\nexports.ER_CANT_COMBINE_ANONYMOUS_TO_GTID_AND_AUTOPOSITION = 4014\nexports.ER_ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS_REQUIRES_GTID_MODE_ON = 4015\nexports.ER_SQL_REPLICA_SKIP_COUNTER_USED_WITH_GTID_MODE_ON = 4016\nexports.ER_USING_ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS_AS_LOCAL_OR_UUID = 4017\nexports.ER_CANT_SET_ANONYMOUS_TO_GTID_AND_WAIT_UNTIL_SQL_THD_AFTER_GTIDS = 4018\nexports.ER_CANT_SET_SQL_AFTER_OR_BEFORE_GTIDS_WITH_ANONYMOUS_TO_GTID = 4019\nexports.ER_ANONYMOUS_TO_GTID_UUID_SAME_AS_GROUP_NAME = 4020\nexports.ER_CANT_USE_SAME_UUID_AS_GROUP_NAME = 4021\nexports.ER_GRP_RPL_RECOVERY_CHANNEL_STILL_RUNNING = 4022\nexports.ER_INNODB_INVALID_AUTOEXTEND_SIZE_VALUE = 4023\nexports.ER_INNODB_INCOMPATIBLE_WITH_TABLESPACE = 4024\nexports.ER_INNODB_AUTOEXTEND_SIZE_OUT_OF_RANGE = 4025\nexports.ER_CANNOT_USE_AUTOEXTEND_SIZE_CLAUSE = 4026\nexports.ER_ROLE_GRANTED_TO_ITSELF = 4027\nexports.ER_TABLE_MUST_HAVE_A_VISIBLE_COLUMN = 4028\nexports.ER_INNODB_COMPRESSION_FAILURE = 4029\nexports.ER_WARN_ASYNC_CONN_FAILOVER_NETWORK_NAMESPACE = 4030\nexports.ER_CLIENT_INTERACTION_TIMEOUT = 4031\nexports.ER_INVALID_CAST_TO_GEOMETRY = 4032\nexports.ER_INVALID_CAST_POLYGON_RING_DIRECTION = 4033\nexports.ER_GIS_DIFFERENT_SRIDS_AGGREGATION = 4034\nexports.ER_RELOAD_KEYRING_FAILURE = 4035\nexports.ER_SDI_GET_KEYS_INVALID_TABLESPACE = 4036\nexports.ER_CHANGE_RPL_SRC_WRONG_COMPRESSION_ALGORITHM_SIZE = 4037\nexports.ER_WARN_DEPRECATED_TLS_VERSION_FOR_CHANNEL_CLI = 4038\nexports.ER_CANT_USE_SAME_UUID_AS_VIEW_CHANGE_UUID = 4039\nexports.ER_ANONYMOUS_TO_GTID_UUID_SAME_AS_VIEW_CHANGE_UUID = 4040\nexports.ER_GRP_RPL_VIEW_CHANGE_UUID_FAIL_GET_VARIABLE = 4041\nexports.ER_WARN_ADUIT_LOG_MAX_SIZE_AND_PRUNE_SECONDS = 4042\nexports.ER_WARN_ADUIT_LOG_MAX_SIZE_CLOSE_TO_ROTATE_ON_SIZE = 4043\nexports.ER_KERBEROS_CREATE_USER = 4044\nexports.ER_INSTALL_PLUGIN_CONFLICT_CLIENT = 4045\nexports.ER_DA_ERROR_LOG_COMPONENT_FLUSH_FAILED = 4046\nexports.ER_WARN_SQL_AFTER_MTS_GAPS_GAP_NOT_CALCULATED = 4047\nexports.ER_INVALID_ASSIGNMENT_TARGET = 4048\nexports.ER_OPERATION_NOT_ALLOWED_ON_GR_SECONDARY = 4049\nexports.ER_GRP_RPL_FAILOVER_CHANNEL_STATUS_PROPAGATION = 4050\nexports.ER_WARN_AUDIT_LOG_FORMAT_UNIX_TIMESTAMP_ONLY_WHEN_JSON = 4051\nexports.ER_INVALID_MFA_PLUGIN_SPECIFIED = 4052\nexports.ER_IDENTIFIED_BY_UNSUPPORTED = 4053\nexports.ER_INVALID_PLUGIN_FOR_REGISTRATION = 4054\nexports.ER_PLUGIN_REQUIRES_REGISTRATION = 4055\nexports.ER_MFA_METHOD_EXISTS = 4056\nexports.ER_MFA_METHOD_NOT_EXISTS = 4057\nexports.ER_AUTHENTICATION_POLICY_MISMATCH = 4058\nexports.ER_PLUGIN_REGISTRATION_DONE = 4059\nexports.ER_INVALID_USER_FOR_REGISTRATION = 4060\nexports.ER_USER_REGISTRATION_FAILED = 4061\nexports.ER_MFA_METHODS_INVALID_ORDER = 4062\nexports.ER_MFA_METHODS_IDENTICAL = 4063\nexports.ER_INVALID_MFA_OPERATIONS_FOR_PASSWORDLESS_USER = 4064\nexports.ER_CHANGE_REPLICATION_SOURCE_NO_OPTIONS_FOR_GTID_ONLY = 4065\nexports.ER_CHANGE_REP_SOURCE_CANT_DISABLE_REQ_ROW_FORMAT_WITH_GTID_ONLY = 4066\nexports.ER_CHANGE_REP_SOURCE_CANT_DISABLE_AUTO_POSITION_WITH_GTID_ONLY = 4067\nexports.ER_CHANGE_REP_SOURCE_CANT_DISABLE_GTID_ONLY_WITHOUT_POSITIONS = 4068\nexports.ER_CHANGE_REP_SOURCE_CANT_DISABLE_AUTO_POS_WITHOUT_POSITIONS = 4069\nexports.ER_CHANGE_REP_SOURCE_GR_CHANNEL_WITH_GTID_MODE_NOT_ON = 4070\nexports.ER_CANT_USE_GTID_ONLY_WITH_GTID_MODE_NOT_ON = 4071\nexports.ER_WARN_C_DISABLE_GTID_ONLY_WITH_SOURCE_AUTO_POS_INVALID_POS = 4072\nexports.ER_DA_SSL_FIPS_MODE_ERROR = 4073\nexports.ER_VALUE_OUT_OF_RANGE = 4074\nexports.ER_FULLTEXT_WITH_ROLLUP = 4075\nexports.ER_REGEXP_MISSING_RESOURCE = 4076\nexports.ER_WARN_REGEXP_USING_DEFAULT = 4077\nexports.ER_REGEXP_MISSING_FILE = 4078\nexports.ER_WARN_DEPRECATED_COLLATION = 4079\nexports.ER_CONCURRENT_PROCEDURE_USAGE = 4080\nexports.ER_DA_GLOBAL_CONN_LIMIT = 4081\nexports.ER_DA_CONN_LIMIT = 4082\nexports.ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_COLUMN_TYPE_INSTANT = 4083\nexports.ER_WARN_SF_UDF_NAME_COLLISION = 4084\nexports.ER_CANNOT_PURGE_BINLOG_WITH_BACKUP_LOCK = 4085\nexports.ER_TOO_MANY_WINDOWS = 4086\nexports.ER_MYSQLBACKUP_CLIENT_MSG = 4087\nexports.ER_COMMENT_CONTAINS_INVALID_STRING = 4088\nexports.ER_DEFINITION_CONTAINS_INVALID_STRING = 4089\nexports.ER_CANT_EXECUTE_COMMAND_WITH_ASSIGNED_GTID_NEXT = 4090\nexports.ER_XA_TEMP_TABLE = 4091\nexports.ER_INNODB_MAX_ROW_VERSION = 4092\nexports.ER_INNODB_INSTANT_ADD_NOT_SUPPORTED_MAX_SIZE = 4093\nexports.ER_OPERATION_NOT_ALLOWED_WHILE_PRIMARY_CHANGE_IS_RUNNING = 4094\nexports.ER_WARN_DEPRECATED_DATETIME_DELIMITER = 4095\nexports.ER_WARN_DEPRECATED_SUPERFLUOUS_DELIMITER = 4096\nexports.ER_CANNOT_PERSIST_SENSITIVE_VARIABLES = 4097\nexports.ER_WARN_CANNOT_SECURELY_PERSIST_SENSITIVE_VARIABLES = 4098\nexports.ER_WARN_TRG_ALREADY_EXISTS = 4099\nexports.ER_IF_NOT_EXISTS_UNSUPPORTED_TRG_EXISTS_ON_DIFFERENT_TABLE = 4100\nexports.ER_IF_NOT_EXISTS_UNSUPPORTED_UDF_NATIVE_FCT_NAME_COLLISION = 4101\nexports.ER_SET_PASSWORD_AUTH_PLUGIN_ERROR = 4102\nexports.ER_REDUCED_DBLWR_FILE_CORRUPTED = 4103\nexports.ER_REDUCED_DBLWR_PAGE_FOUND = 4104\nexports.ER_SRS_INVALID_LATITUDE_OF_ORIGIN = 4105\nexports.ER_SRS_INVALID_LONGITUDE_OF_ORIGIN = 4106\nexports.ER_SRS_UNUSED_PROJ_PARAMETER_PRESENT = 4107\nexports.ER_GIPK_COLUMN_EXISTS = 4108\nexports.ER_GIPK_FAILED_AUTOINC_COLUMN_EXISTS = 4109\nexports.ER_GIPK_COLUMN_ALTER_NOT_ALLOWED = 4110\nexports.ER_DROP_PK_COLUMN_TO_DROP_GIPK = 4111\nexports.ER_CREATE_SELECT_WITH_GIPK_DISALLOWED_IN_SBR = 4112\nexports.ER_DA_EXPIRE_LOGS_DAYS_IGNORED = 4113\nexports.ER_CTE_RECURSIVE_NOT_UNION = 4114\nexports.ER_COMMAND_BACKEND_FAILED_TO_FETCH_SECURITY_CTX = 4115\nexports.ER_COMMAND_SERVICE_BACKEND_FAILED = 4116\nexports.ER_CLIENT_FILE_PRIVILEGE_FOR_REPLICATION_CHECKS = 4117\nexports.ER_GROUP_REPLICATION_FORCE_MEMBERS_COMMAND_FAILURE = 4118\nexports.ER_WARN_DEPRECATED_IDENT = 4119\nexports.ER_INTERSECT_ALL_MAX_DUPLICATES_EXCEEDED = 4120\nexports.ER_TP_QUERY_THRS_PER_GRP_EXCEEDS_TXN_THR_LIMIT = 4121\nexports.ER_BAD_TIMESTAMP_FORMAT = 4122\nexports.ER_SHAPE_PRIDICTION_UDF = 4123\nexports.ER_SRS_INVALID_HEIGHT = 4124\nexports.ER_SRS_INVALID_SCALING = 4125\nexports.ER_SRS_INVALID_ZONE_WIDTH = 4126\nexports.ER_SRS_INVALID_LATITUDE_POLAR_STERE_VAR_A = 4127\nexports.ER_WARN_DEPRECATED_CLIENT_NO_SCHEMA_OPTION = 4128\nexports.ER_TABLE_NOT_EMPTY = 4129\nexports.ER_TABLE_NO_PRIMARY_KEY = 4130\nexports.ER_TABLE_IN_SHARED_TABLESPACE = 4131\nexports.ER_INDEX_OTHER_THAN_PK = 4132\nexports.ER_LOAD_BULK_DATA_UNSORTED = 4133\nexports.ER_BULK_EXECUTOR_ERROR = 4134\nexports.ER_BULK_READER_LIBCURL_INIT_FAILED = 4135\nexports.ER_BULK_READER_LIBCURL_ERROR = 4136\nexports.ER_BULK_READER_SERVER_ERROR = 4137\nexports.ER_BULK_READER_COMMUNICATION_ERROR = 4138\nexports.ER_BULK_LOAD_DATA_FAILED = 4139\nexports.ER_BULK_LOADER_COLUMN_TOO_BIG_FOR_LEFTOVER_BUFFER = 4140\nexports.ER_BULK_LOADER_COMPONENT_ERROR = 4141\nexports.ER_BULK_LOADER_FILE_CONTAINS_LESS_LINES_THAN_IGNORE_CLAUSE = 4142\nexports.ER_BULK_PARSER_MISSING_ENCLOSED_BY = 4143\nexports.ER_BULK_PARSER_ROW_BUFFER_MAX_TOTAL_COLS_EXCEEDED = 4144\nexports.ER_BULK_PARSER_COPY_BUFFER_SIZE_EXCEEDED = 4145\nexports.ER_BULK_PARSER_UNEXPECTED_END_OF_INPUT = 4146\nexports.ER_BULK_PARSER_UNEXPECTED_ROW_TERMINATOR = 4147\nexports.ER_BULK_PARSER_UNEXPECTED_CHAR_AFTER_ENDING_ENCLOSED_BY = 4148\nexports.ER_BULK_PARSER_UNEXPECTED_CHAR_AFTER_NULL_ESCAPE = 4149\nexports.ER_BULK_PARSER_UNEXPECTED_CHAR_AFTER_COLUMN_TERMINATOR = 4150\nexports.ER_BULK_PARSER_INCOMPLETE_ESCAPE_SEQUENCE = 4151\nexports.ER_LOAD_BULK_DATA_FAILED = 4152\nexports.ER_LOAD_BULK_DATA_WRONG_VALUE_FOR_FIELD = 4153\nexports.ER_LOAD_BULK_DATA_WARN_NULL_TO_NOTNULL = 4154\nexports.ER_REQUIRE_TABLE_PRIMARY_KEY_CHECK_GENERATE_WITH_GR = 4155\nexports.ER_CANT_CHANGE_SYS_VAR_IN_READ_ONLY_MODE = 4156\nexports.ER_INNODB_INSTANT_ADD_DROP_NOT_SUPPORTED_MAX_SIZE = 4157\nexports.ER_INNODB_INSTANT_ADD_NOT_SUPPORTED_MAX_FIELDS = 4158\nexports.ER_CANT_SET_PERSISTED = 4159\nexports.ER_INSTALL_COMPONENT_SET_NULL_VALUE = 4160\nexports.ER_INSTALL_COMPONENT_SET_UNUSED_VALUE = 4161\nexports.ER_WARN_DEPRECATED_USER_DEFINED_COLLATIONS = 4162\n\n// Lookup-by-number table\nexports[1] = 'EE_CANTCREATEFILE'\nexports[2] = 'EE_READ'\nexports[3] = 'EE_WRITE'\nexports[4] = 'EE_BADCLOSE'\nexports[5] = 'EE_OUTOFMEMORY'\nexports[6] = 'EE_DELETE'\nexports[7] = 'EE_LINK'\nexports[9] = 'EE_EOFERR'\nexports[10] = 'EE_CANTLOCK'\nexports[11] = 'EE_CANTUNLOCK'\nexports[12] = 'EE_DIR'\nexports[13] = 'EE_STAT'\nexports[14] = 'EE_CANT_CHSIZE'\nexports[15] = 'EE_CANT_OPEN_STREAM'\nexports[16] = 'EE_GETWD'\nexports[17] = 'EE_SETWD'\nexports[18] = 'EE_LINK_WARNING'\nexports[19] = 'EE_OPEN_WARNING'\nexports[20] = 'EE_DISK_FULL'\nexports[21] = 'EE_CANT_MKDIR'\nexports[22] = 'EE_UNKNOWN_CHARSET'\nexports[23] = 'EE_OUT_OF_FILERESOURCES'\nexports[24] = 'EE_CANT_READLINK'\nexports[25] = 'EE_CANT_SYMLINK'\nexports[26] = 'EE_REALPATH'\nexports[27] = 'EE_SYNC'\nexports[28] = 'EE_UNKNOWN_COLLATION'\nexports[29] = 'EE_FILENOTFOUND'\nexports[30] = 'EE_FILE_NOT_CLOSED'\nexports[31] = 'EE_CHANGE_OWNERSHIP'\nexports[32] = 'EE_CHANGE_PERMISSIONS'\nexports[33] = 'EE_CANT_SEEK'\nexports[34] = 'EE_CAPACITY_EXCEEDED'\nexports[35] = 'EE_DISK_FULL_WITH_RETRY_MSG'\nexports[36] = 'EE_FAILED_TO_CREATE_TIMER'\nexports[37] = 'EE_FAILED_TO_DELETE_TIMER'\nexports[38] = 'EE_FAILED_TO_CREATE_TIMER_QUEUE'\nexports[39] = 'EE_FAILED_TO_START_TIMER_NOTIFY_THREAD'\nexports[40] = 'EE_FAILED_TO_CREATE_TIMER_NOTIFY_THREAD_INTERRUPT_EVENT'\nexports[41] = 'EE_EXITING_TIMER_NOTIFY_THREAD'\nexports[42] = 'EE_WIN_LIBRARY_LOAD_FAILED'\nexports[43] = 'EE_WIN_RUN_TIME_ERROR_CHECK'\nexports[44] = 'EE_FAILED_TO_DETERMINE_LARGE_PAGE_SIZE'\nexports[45] = 'EE_FAILED_TO_KILL_ALL_THREADS'\nexports[46] = 'EE_FAILED_TO_CREATE_IO_COMPLETION_PORT'\nexports[47] = 'EE_FAILED_TO_OPEN_DEFAULTS_FILE'\nexports[48] = 'EE_FAILED_TO_HANDLE_DEFAULTS_FILE'\nexports[49] = 'EE_WRONG_DIRECTIVE_IN_CONFIG_FILE'\nexports[50] = 'EE_SKIPPING_DIRECTIVE_DUE_TO_MAX_INCLUDE_RECURSION'\nexports[51] = 'EE_INCORRECT_GRP_DEFINITION_IN_CONFIG_FILE'\nexports[52] = 'EE_OPTION_WITHOUT_GRP_IN_CONFIG_FILE'\nexports[53] = 'EE_CONFIG_FILE_PERMISSION_ERROR'\nexports[54] = 'EE_IGNORE_WORLD_WRITABLE_CONFIG_FILE'\nexports[55] = 'EE_USING_DISABLED_OPTION'\nexports[56] = 'EE_USING_DISABLED_SHORT_OPTION'\nexports[57] = 'EE_USING_PASSWORD_ON_CLI_IS_INSECURE'\nexports[58] = 'EE_UNKNOWN_SUFFIX_FOR_VARIABLE'\nexports[59] = 'EE_SSL_ERROR_FROM_FILE'\nexports[60] = 'EE_SSL_ERROR'\nexports[61] = 'EE_NET_SEND_ERROR_IN_BOOTSTRAP'\nexports[62] = 'EE_PACKETS_OUT_OF_ORDER'\nexports[63] = 'EE_UNKNOWN_PROTOCOL_OPTION'\nexports[64] = 'EE_FAILED_TO_LOCATE_SERVER_PUBLIC_KEY'\nexports[65] = 'EE_PUBLIC_KEY_NOT_IN_PEM_FORMAT'\nexports[66] = 'EE_DEBUG_INFO'\nexports[67] = 'EE_UNKNOWN_VARIABLE'\nexports[68] = 'EE_UNKNOWN_OPTION'\nexports[69] = 'EE_UNKNOWN_SHORT_OPTION'\nexports[70] = 'EE_OPTION_WITHOUT_ARGUMENT'\nexports[71] = 'EE_OPTION_REQUIRES_ARGUMENT'\nexports[72] = 'EE_SHORT_OPTION_REQUIRES_ARGUMENT'\nexports[73] = 'EE_OPTION_IGNORED_DUE_TO_INVALID_VALUE'\nexports[74] = 'EE_OPTION_WITH_EMPTY_VALUE'\nexports[75] = 'EE_FAILED_TO_ASSIGN_MAX_VALUE_TO_OPTION'\nexports[76] = 'EE_INCORRECT_BOOLEAN_VALUE_FOR_OPTION'\nexports[77] = 'EE_FAILED_TO_SET_OPTION_VALUE'\nexports[78] = 'EE_INCORRECT_INT_VALUE_FOR_OPTION'\nexports[79] = 'EE_INCORRECT_UINT_VALUE_FOR_OPTION'\nexports[80] = 'EE_ADJUSTED_SIGNED_VALUE_FOR_OPTION'\nexports[81] = 'EE_ADJUSTED_UNSIGNED_VALUE_FOR_OPTION'\nexports[82] = 'EE_ADJUSTED_ULONGLONG_VALUE_FOR_OPTION'\nexports[83] = 'EE_ADJUSTED_DOUBLE_VALUE_FOR_OPTION'\nexports[84] = 'EE_INVALID_DECIMAL_VALUE_FOR_OPTION'\nexports[85] = 'EE_COLLATION_PARSER_ERROR'\nexports[86] = 'EE_FAILED_TO_RESET_BEFORE_PRIMARY_IGNORABLE_CHAR'\nexports[87] = 'EE_FAILED_TO_RESET_BEFORE_TERTIARY_IGNORABLE_CHAR'\nexports[88] = 'EE_SHIFT_CHAR_OUT_OF_RANGE'\nexports[89] = 'EE_RESET_CHAR_OUT_OF_RANGE'\nexports[90] = 'EE_UNKNOWN_LDML_TAG'\nexports[91] = 'EE_FAILED_TO_RESET_BEFORE_SECONDARY_IGNORABLE_CHAR'\nexports[92] = 'EE_FAILED_PROCESSING_DIRECTIVE'\nexports[93] = 'EE_PTHREAD_KILL_FAILED'\nexports[120] = 'HA_ERR_KEY_NOT_FOUND'\nexports[121] = 'HA_ERR_FOUND_DUPP_KEY'\nexports[122] = 'HA_ERR_INTERNAL_ERROR'\nexports[123] = 'HA_ERR_RECORD_CHANGED'\nexports[124] = 'HA_ERR_WRONG_INDEX'\nexports[125] = 'HA_ERR_ROLLED_BACK'\nexports[126] = 'HA_ERR_CRASHED'\nexports[127] = 'HA_ERR_WRONG_IN_RECORD'\nexports[128] = 'HA_ERR_OUT_OF_MEM'\nexports[130] = 'HA_ERR_NOT_A_TABLE'\nexports[131] = 'HA_ERR_WRONG_COMMAND'\nexports[132] = 'HA_ERR_OLD_FILE'\nexports[133] = 'HA_ERR_NO_ACTIVE_RECORD'\nexports[134] = 'HA_ERR_RECORD_DELETED'\nexports[135] = 'HA_ERR_RECORD_FILE_FULL'\nexports[136] = 'HA_ERR_INDEX_FILE_FULL'\nexports[137] = 'HA_ERR_END_OF_FILE'\nexports[138] = 'HA_ERR_UNSUPPORTED'\nexports[139] = 'HA_ERR_TOO_BIG_ROW'\nexports[140] = 'HA_WRONG_CREATE_OPTION'\nexports[141] = 'HA_ERR_FOUND_DUPP_UNIQUE'\nexports[142] = 'HA_ERR_UNKNOWN_CHARSET'\nexports[143] = 'HA_ERR_WRONG_MRG_TABLE_DEF'\nexports[144] = 'HA_ERR_CRASHED_ON_REPAIR'\nexports[145] = 'HA_ERR_CRASHED_ON_USAGE'\nexports[146] = 'HA_ERR_LOCK_WAIT_TIMEOUT'\nexports[147] = 'HA_ERR_LOCK_TABLE_FULL'\nexports[148] = 'HA_ERR_READ_ONLY_TRANSACTION'\nexports[149] = 'HA_ERR_LOCK_DEADLOCK'\nexports[150] = 'HA_ERR_CANNOT_ADD_FOREIGN'\nexports[151] = 'HA_ERR_NO_REFERENCED_ROW'\nexports[152] = 'HA_ERR_ROW_IS_REFERENCED'\nexports[153] = 'HA_ERR_NO_SAVEPOINT'\nexports[154] = 'HA_ERR_NON_UNIQUE_BLOCK_SIZE'\nexports[155] = 'HA_ERR_NO_SUCH_TABLE'\nexports[156] = 'HA_ERR_TABLE_EXIST'\nexports[157] = 'HA_ERR_NO_CONNECTION'\nexports[158] = 'HA_ERR_NULL_IN_SPATIAL'\nexports[159] = 'HA_ERR_TABLE_DEF_CHANGED'\nexports[160] = 'HA_ERR_NO_PARTITION_FOUND'\nexports[161] = 'HA_ERR_RBR_LOGGING_FAILED'\nexports[162] = 'HA_ERR_DROP_INDEX_FK'\nexports[163] = 'HA_ERR_FOREIGN_DUPLICATE_KEY'\nexports[164] = 'HA_ERR_TABLE_NEEDS_UPGRADE'\nexports[165] = 'HA_ERR_TABLE_READONLY'\nexports[166] = 'HA_ERR_AUTOINC_READ_FAILED'\nexports[167] = 'HA_ERR_AUTOINC_ERANGE'\nexports[168] = 'HA_ERR_GENERIC'\nexports[169] = 'HA_ERR_RECORD_IS_THE_SAME'\nexports[170] = 'HA_ERR_LOGGING_IMPOSSIBLE'\nexports[171] = 'HA_ERR_CORRUPT_EVENT'\nexports[172] = 'HA_ERR_NEW_FILE'\nexports[173] = 'HA_ERR_ROWS_EVENT_APPLY'\nexports[174] = 'HA_ERR_INITIALIZATION'\nexports[175] = 'HA_ERR_FILE_TOO_SHORT'\nexports[176] = 'HA_ERR_WRONG_CRC'\nexports[177] = 'HA_ERR_TOO_MANY_CONCURRENT_TRXS'\nexports[178] = 'HA_ERR_NOT_IN_LOCK_PARTITIONS'\nexports[179] = 'HA_ERR_INDEX_COL_TOO_LONG'\nexports[180] = 'HA_ERR_INDEX_CORRUPT'\nexports[181] = 'HA_ERR_UNDO_REC_TOO_BIG'\nexports[182] = 'HA_FTS_INVALID_DOCID'\nexports[183] = 'HA_ERR_TABLE_IN_FK_CHECK'\nexports[184] = 'HA_ERR_TABLESPACE_EXISTS'\nexports[185] = 'HA_ERR_TOO_MANY_FIELDS'\nexports[186] = 'HA_ERR_ROW_IN_WRONG_PARTITION'\nexports[187] = 'HA_ERR_INNODB_READ_ONLY'\nexports[188] = 'HA_ERR_FTS_EXCEED_RESULT_CACHE_LIMIT'\nexports[189] = 'HA_ERR_TEMP_FILE_WRITE_FAILURE'\nexports[190] = 'HA_ERR_INNODB_FORCED_RECOVERY'\nexports[191] = 'HA_ERR_FTS_TOO_MANY_WORDS_IN_PHRASE'\nexports[192] = 'HA_ERR_FK_DEPTH_EXCEEDED'\nexports[193] = 'HA_MISSING_CREATE_OPTION'\nexports[194] = 'HA_ERR_SE_OUT_OF_MEMORY'\nexports[195] = 'HA_ERR_TABLE_CORRUPT'\nexports[196] = 'HA_ERR_QUERY_INTERRUPTED'\nexports[197] = 'HA_ERR_TABLESPACE_MISSING'\nexports[198] = 'HA_ERR_TABLESPACE_IS_NOT_EMPTY'\nexports[199] = 'HA_ERR_WRONG_FILE_NAME'\nexports[200] = 'HA_ERR_NOT_ALLOWED_COMMAND'\nexports[201] = 'HA_ERR_COMPUTE_FAILED'\nexports[202] = 'HA_ERR_ROW_FORMAT_CHANGED'\nexports[203] = 'HA_ERR_NO_WAIT_LOCK'\nexports[204] = 'HA_ERR_DISK_FULL_NOWAIT'\nexports[205] = 'HA_ERR_NO_SESSION_TEMP'\nexports[206] = 'HA_ERR_WRONG_TABLE_NAME'\nexports[207] = 'HA_ERR_TOO_LONG_PATH'\nexports[208] = 'HA_ERR_SAMPLING_INIT_FAILED'\nexports[209] = 'HA_ERR_FTS_TOO_MANY_NESTED_EXP'\nexports[1000] = 'ER_HASHCHK'\nexports[1001] = 'ER_NISAMCHK'\nexports[1002] = 'ER_NO'\nexports[1003] = 'ER_YES'\nexports[1004] = 'ER_CANT_CREATE_FILE'\nexports[1005] = 'ER_CANT_CREATE_TABLE'\nexports[1006] = 'ER_CANT_CREATE_DB'\nexports[1007] = 'ER_DB_CREATE_EXISTS'\nexports[1008] = 'ER_DB_DROP_EXISTS'\nexports[1009] = 'ER_DB_DROP_DELETE'\nexports[1010] = 'ER_DB_DROP_RMDIR'\nexports[1011] = 'ER_CANT_DELETE_FILE'\nexports[1012] = 'ER_CANT_FIND_SYSTEM_REC'\nexports[1013] = 'ER_CANT_GET_STAT'\nexports[1014] = 'ER_CANT_GET_WD'\nexports[1015] = 'ER_CANT_LOCK'\nexports[1016] = 'ER_CANT_OPEN_FILE'\nexports[1017] = 'ER_FILE_NOT_FOUND'\nexports[1018] = 'ER_CANT_READ_DIR'\nexports[1019] = 'ER_CANT_SET_WD'\nexports[1020] = 'ER_CHECKREAD'\nexports[1021] = 'ER_DISK_FULL'\nexports[1022] = 'ER_DUP_KEY'\nexports[1023] = 'ER_ERROR_ON_CLOSE'\nexports[1024] = 'ER_ERROR_ON_READ'\nexports[1025] = 'ER_ERROR_ON_RENAME'\nexports[1026] = 'ER_ERROR_ON_WRITE'\nexports[1027] = 'ER_FILE_USED'\nexports[1028] = 'ER_FILSORT_ABORT'\nexports[1029] = 'ER_FORM_NOT_FOUND'\nexports[1030] = 'ER_GET_ERRNO'\nexports[1031] = 'ER_ILLEGAL_HA'\nexports[1032] = 'ER_KEY_NOT_FOUND'\nexports[1033] = 'ER_NOT_FORM_FILE'\nexports[1034] = 'ER_NOT_KEYFILE'\nexports[1035] = 'ER_OLD_KEYFILE'\nexports[1036] = 'ER_OPEN_AS_READONLY'\nexports[1037] = 'ER_OUTOFMEMORY'\nexports[1038] = 'ER_OUT_OF_SORTMEMORY'\nexports[1039] = 'ER_UNEXPECTED_EOF'\nexports[1040] = 'ER_CON_COUNT_ERROR'\nexports[1041] = 'ER_OUT_OF_RESOURCES'\nexports[1042] = 'ER_BAD_HOST_ERROR'\nexports[1043] = 'ER_HANDSHAKE_ERROR'\nexports[1044] = 'ER_DBACCESS_DENIED_ERROR'\nexports[1045] = 'ER_ACCESS_DENIED_ERROR'\nexports[1046] = 'ER_NO_DB_ERROR'\nexports[1047] = 'ER_UNKNOWN_COM_ERROR'\nexports[1048] = 'ER_BAD_NULL_ERROR'\nexports[1049] = 'ER_BAD_DB_ERROR'\nexports[1050] = 'ER_TABLE_EXISTS_ERROR'\nexports[1051] = 'ER_BAD_TABLE_ERROR'\nexports[1052] = 'ER_NON_UNIQ_ERROR'\nexports[1053] = 'ER_SERVER_SHUTDOWN'\nexports[1054] = 'ER_BAD_FIELD_ERROR'\nexports[1055] = 'ER_WRONG_FIELD_WITH_GROUP'\nexports[1056] = 'ER_WRONG_GROUP_FIELD'\nexports[1057] = 'ER_WRONG_SUM_SELECT'\nexports[1058] = 'ER_WRONG_VALUE_COUNT'\nexports[1059] = 'ER_TOO_LONG_IDENT'\nexports[1060] = 'ER_DUP_FIELDNAME'\nexports[1061] = 'ER_DUP_KEYNAME'\nexports[1062] = 'ER_DUP_ENTRY'\nexports[1063] = 'ER_WRONG_FIELD_SPEC'\nexports[1064] = 'ER_PARSE_ERROR'\nexports[1065] = 'ER_EMPTY_QUERY'\nexports[1066] = 'ER_NONUNIQ_TABLE'\nexports[1067] = 'ER_INVALID_DEFAULT'\nexports[1068] = 'ER_MULTIPLE_PRI_KEY'\nexports[1069] = 'ER_TOO_MANY_KEYS'\nexports[1070] = 'ER_TOO_MANY_KEY_PARTS'\nexports[1071] = 'ER_TOO_LONG_KEY'\nexports[1072] = 'ER_KEY_COLUMN_DOES_NOT_EXITS'\nexports[1073] = 'ER_BLOB_USED_AS_KEY'\nexports[1074] = 'ER_TOO_BIG_FIELDLENGTH'\nexports[1075] = 'ER_WRONG_AUTO_KEY'\nexports[1076] = 'ER_READY'\nexports[1077] = 'ER_NORMAL_SHUTDOWN'\nexports[1078] = 'ER_GOT_SIGNAL'\nexports[1079] = 'ER_SHUTDOWN_COMPLETE'\nexports[1080] = 'ER_FORCING_CLOSE'\nexports[1081] = 'ER_IPSOCK_ERROR'\nexports[1082] = 'ER_NO_SUCH_INDEX'\nexports[1083] = 'ER_WRONG_FIELD_TERMINATORS'\nexports[1084] = 'ER_BLOBS_AND_NO_TERMINATED'\nexports[1085] = 'ER_TEXTFILE_NOT_READABLE'\nexports[1086] = 'ER_FILE_EXISTS_ERROR'\nexports[1087] = 'ER_LOAD_INFO'\nexports[1088] = 'ER_ALTER_INFO'\nexports[1089] = 'ER_WRONG_SUB_KEY'\nexports[1090] = 'ER_CANT_REMOVE_ALL_FIELDS'\nexports[1091] = 'ER_CANT_DROP_FIELD_OR_KEY'\nexports[1092] = 'ER_INSERT_INFO'\nexports[1093] = 'ER_UPDATE_TABLE_USED'\nexports[1094] = 'ER_NO_SUCH_THREAD'\nexports[1095] = 'ER_KILL_DENIED_ERROR'\nexports[1096] = 'ER_NO_TABLES_USED'\nexports[1097] = 'ER_TOO_BIG_SET'\nexports[1098] = 'ER_NO_UNIQUE_LOGFILE'\nexports[1099] = 'ER_TABLE_NOT_LOCKED_FOR_WRITE'\nexports[1100] = 'ER_TABLE_NOT_LOCKED'\nexports[1101] = 'ER_BLOB_CANT_HAVE_DEFAULT'\nexports[1102] = 'ER_WRONG_DB_NAME'\nexports[1103] = 'ER_WRONG_TABLE_NAME'\nexports[1104] = 'ER_TOO_BIG_SELECT'\nexports[1105] = 'ER_UNKNOWN_ERROR'\nexports[1106] = 'ER_UNKNOWN_PROCEDURE'\nexports[1107] = 'ER_WRONG_PARAMCOUNT_TO_PROCEDURE'\nexports[1108] = 'ER_WRONG_PARAMETERS_TO_PROCEDURE'\nexports[1109] = 'ER_UNKNOWN_TABLE'\nexports[1110] = 'ER_FIELD_SPECIFIED_TWICE'\nexports[1111] = 'ER_INVALID_GROUP_FUNC_USE'\nexports[1112] = 'ER_UNSUPPORTED_EXTENSION'\nexports[1113] = 'ER_TABLE_MUST_HAVE_COLUMNS'\nexports[1114] = 'ER_RECORD_FILE_FULL'\nexports[1115] = 'ER_UNKNOWN_CHARACTER_SET'\nexports[1116] = 'ER_TOO_MANY_TABLES'\nexports[1117] = 'ER_TOO_MANY_FIELDS'\nexports[1118] = 'ER_TOO_BIG_ROWSIZE'\nexports[1119] = 'ER_STACK_OVERRUN'\nexports[1120] = 'ER_WRONG_OUTER_JOIN'\nexports[1121] = 'ER_NULL_COLUMN_IN_INDEX'\nexports[1122] = 'ER_CANT_FIND_UDF'\nexports[1123] = 'ER_CANT_INITIALIZE_UDF'\nexports[1124] = 'ER_UDF_NO_PATHS'\nexports[1125] = 'ER_UDF_EXISTS'\nexports[1126] = 'ER_CANT_OPEN_LIBRARY'\nexports[1127] = 'ER_CANT_FIND_DL_ENTRY'\nexports[1128] = 'ER_FUNCTION_NOT_DEFINED'\nexports[1129] = 'ER_HOST_IS_BLOCKED'\nexports[1130] = 'ER_HOST_NOT_PRIVILEGED'\nexports[1131] = 'ER_PASSWORD_ANONYMOUS_USER'\nexports[1132] = 'ER_PASSWORD_NOT_ALLOWED'\nexports[1133] = 'ER_PASSWORD_NO_MATCH'\nexports[1134] = 'ER_UPDATE_INFO'\nexports[1135] = 'ER_CANT_CREATE_THREAD'\nexports[1136] = 'ER_WRONG_VALUE_COUNT_ON_ROW'\nexports[1137] = 'ER_CANT_REOPEN_TABLE'\nexports[1138] = 'ER_INVALID_USE_OF_NULL'\nexports[1139] = 'ER_REGEXP_ERROR'\nexports[1140] = 'ER_MIX_OF_GROUP_FUNC_AND_FIELDS'\nexports[1141] = 'ER_NONEXISTING_GRANT'\nexports[1142] = 'ER_TABLEACCESS_DENIED_ERROR'\nexports[1143] = 'ER_COLUMNACCESS_DENIED_ERROR'\nexports[1144] = 'ER_ILLEGAL_GRANT_FOR_TABLE'\nexports[1145] = 'ER_GRANT_WRONG_HOST_OR_USER'\nexports[1146] = 'ER_NO_SUCH_TABLE'\nexports[1147] = 'ER_NONEXISTING_TABLE_GRANT'\nexports[1148] = 'ER_NOT_ALLOWED_COMMAND'\nexports[1149] = 'ER_SYNTAX_ERROR'\nexports[1150] = 'ER_UNUSED1'\nexports[1151] = 'ER_UNUSED2'\nexports[1152] = 'ER_ABORTING_CONNECTION'\nexports[1153] = 'ER_NET_PACKET_TOO_LARGE'\nexports[1154] = 'ER_NET_READ_ERROR_FROM_PIPE'\nexports[1155] = 'ER_NET_FCNTL_ERROR'\nexports[1156] = 'ER_NET_PACKETS_OUT_OF_ORDER'\nexports[1157] = 'ER_NET_UNCOMPRESS_ERROR'\nexports[1158] = 'ER_NET_READ_ERROR'\nexports[1159] = 'ER_NET_READ_INTERRUPTED'\nexports[1160] = 'ER_NET_ERROR_ON_WRITE'\nexports[1161] = 'ER_NET_WRITE_INTERRUPTED'\nexports[1162] = 'ER_TOO_LONG_STRING'\nexports[1163] = 'ER_TABLE_CANT_HANDLE_BLOB'\nexports[1164] = 'ER_TABLE_CANT_HANDLE_AUTO_INCREMENT'\nexports[1165] = 'ER_UNUSED3'\nexports[1166] = 'ER_WRONG_COLUMN_NAME'\nexports[1167] = 'ER_WRONG_KEY_COLUMN'\nexports[1168] = 'ER_WRONG_MRG_TABLE'\nexports[1169] = 'ER_DUP_UNIQUE'\nexports[1170] = 'ER_BLOB_KEY_WITHOUT_LENGTH'\nexports[1171] = 'ER_PRIMARY_CANT_HAVE_NULL'\nexports[1172] = 'ER_TOO_MANY_ROWS'\nexports[1173] = 'ER_REQUIRES_PRIMARY_KEY'\nexports[1174] = 'ER_NO_RAID_COMPILED'\nexports[1175] = 'ER_UPDATE_WITHOUT_KEY_IN_SAFE_MODE'\nexports[1176] = 'ER_KEY_DOES_NOT_EXITS'\nexports[1177] = 'ER_CHECK_NO_SUCH_TABLE'\nexports[1178] = 'ER_CHECK_NOT_IMPLEMENTED'\nexports[1179] = 'ER_CANT_DO_THIS_DURING_AN_TRANSACTION'\nexports[1180] = 'ER_ERROR_DURING_COMMIT'\nexports[1181] = 'ER_ERROR_DURING_ROLLBACK'\nexports[1182] = 'ER_ERROR_DURING_FLUSH_LOGS'\nexports[1183] = 'ER_ERROR_DURING_CHECKPOINT'\nexports[1184] = 'ER_NEW_ABORTING_CONNECTION'\nexports[1185] = 'ER_DUMP_NOT_IMPLEMENTED'\nexports[1186] = 'ER_FLUSH_MASTER_BINLOG_CLOSED'\nexports[1187] = 'ER_INDEX_REBUILD'\nexports[1188] = 'ER_SOURCE'\nexports[1189] = 'ER_SOURCE_NET_READ'\nexports[1190] = 'ER_SOURCE_NET_WRITE'\nexports[1191] = 'ER_FT_MATCHING_KEY_NOT_FOUND'\nexports[1192] = 'ER_LOCK_OR_ACTIVE_TRANSACTION'\nexports[1193] = 'ER_UNKNOWN_SYSTEM_VARIABLE'\nexports[1194] = 'ER_CRASHED_ON_USAGE'\nexports[1195] = 'ER_CRASHED_ON_REPAIR'\nexports[1196] = 'ER_WARNING_NOT_COMPLETE_ROLLBACK'\nexports[1197] = 'ER_TRANS_CACHE_FULL'\nexports[1198] = 'ER_SLAVE_MUST_STOP'\nexports[1199] = 'ER_REPLICA_NOT_RUNNING'\nexports[1200] = 'ER_BAD_REPLICA'\nexports[1201] = 'ER_CONNECTION_METADATA'\nexports[1202] = 'ER_REPLICA_THREAD'\nexports[1203] = 'ER_TOO_MANY_USER_CONNECTIONS'\nexports[1204] = 'ER_SET_CONSTANTS_ONLY'\nexports[1205] = 'ER_LOCK_WAIT_TIMEOUT'\nexports[1206] = 'ER_LOCK_TABLE_FULL'\nexports[1207] = 'ER_READ_ONLY_TRANSACTION'\nexports[1208] = 'ER_DROP_DB_WITH_READ_LOCK'\nexports[1209] = 'ER_CREATE_DB_WITH_READ_LOCK'\nexports[1210] = 'ER_WRONG_ARGUMENTS'\nexports[1211] = 'ER_NO_PERMISSION_TO_CREATE_USER'\nexports[1212] = 'ER_UNION_TABLES_IN_DIFFERENT_DIR'\nexports[1213] = 'ER_LOCK_DEADLOCK'\nexports[1214] = 'ER_TABLE_CANT_HANDLE_FT'\nexports[1215] = 'ER_CANNOT_ADD_FOREIGN'\nexports[1216] = 'ER_NO_REFERENCED_ROW'\nexports[1217] = 'ER_ROW_IS_REFERENCED'\nexports[1218] = 'ER_CONNECT_TO_SOURCE'\nexports[1219] = 'ER_QUERY_ON_MASTER'\nexports[1220] = 'ER_ERROR_WHEN_EXECUTING_COMMAND'\nexports[1221] = 'ER_WRONG_USAGE'\nexports[1222] = 'ER_WRONG_NUMBER_OF_COLUMNS_IN_SELECT'\nexports[1223] = 'ER_CANT_UPDATE_WITH_READLOCK'\nexports[1224] = 'ER_MIXING_NOT_ALLOWED'\nexports[1225] = 'ER_DUP_ARGUMENT'\nexports[1226] = 'ER_USER_LIMIT_REACHED'\nexports[1227] = 'ER_SPECIFIC_ACCESS_DENIED_ERROR'\nexports[1228] = 'ER_LOCAL_VARIABLE'\nexports[1229] = 'ER_GLOBAL_VARIABLE'\nexports[1230] = 'ER_NO_DEFAULT'\nexports[1231] = 'ER_WRONG_VALUE_FOR_VAR'\nexports[1232] = 'ER_WRONG_TYPE_FOR_VAR'\nexports[1233] = 'ER_VAR_CANT_BE_READ'\nexports[1234] = 'ER_CANT_USE_OPTION_HERE'\nexports[1235] = 'ER_NOT_SUPPORTED_YET'\nexports[1236] = 'ER_SOURCE_FATAL_ERROR_READING_BINLOG'\nexports[1237] = 'ER_REPLICA_IGNORED_TABLE'\nexports[1238] = 'ER_INCORRECT_GLOBAL_LOCAL_VAR'\nexports[1239] = 'ER_WRONG_FK_DEF'\nexports[1240] = 'ER_KEY_REF_DO_NOT_MATCH_TABLE_REF'\nexports[1241] = 'ER_OPERAND_COLUMNS'\nexports[1242] = 'ER_SUBQUERY_NO_1_ROW'\nexports[1243] = 'ER_UNKNOWN_STMT_HANDLER'\nexports[1244] = 'ER_CORRUPT_HELP_DB'\nexports[1245] = 'ER_CYCLIC_REFERENCE'\nexports[1246] = 'ER_AUTO_CONVERT'\nexports[1247] = 'ER_ILLEGAL_REFERENCE'\nexports[1248] = 'ER_DERIVED_MUST_HAVE_ALIAS'\nexports[1249] = 'ER_SELECT_REDUCED'\nexports[1250] = 'ER_TABLENAME_NOT_ALLOWED_HERE'\nexports[1251] = 'ER_NOT_SUPPORTED_AUTH_MODE'\nexports[1252] = 'ER_SPATIAL_CANT_HAVE_NULL'\nexports[1253] = 'ER_COLLATION_CHARSET_MISMATCH'\nexports[1254] = 'ER_SLAVE_WAS_RUNNING'\nexports[1255] = 'ER_SLAVE_WAS_NOT_RUNNING'\nexports[1256] = 'ER_TOO_BIG_FOR_UNCOMPRESS'\nexports[1257] = 'ER_ZLIB_Z_MEM_ERROR'\nexports[1258] = 'ER_ZLIB_Z_BUF_ERROR'\nexports[1259] = 'ER_ZLIB_Z_DATA_ERROR'\nexports[1260] = 'ER_CUT_VALUE_GROUP_CONCAT'\nexports[1261] = 'ER_WARN_TOO_FEW_RECORDS'\nexports[1262] = 'ER_WARN_TOO_MANY_RECORDS'\nexports[1263] = 'ER_WARN_NULL_TO_NOTNULL'\nexports[1264] = 'ER_WARN_DATA_OUT_OF_RANGE'\nexports[1265] = 'WARN_DATA_TRUNCATED'\nexports[1266] = 'ER_WARN_USING_OTHER_HANDLER'\nexports[1267] = 'ER_CANT_AGGREGATE_2COLLATIONS'\nexports[1268] = 'ER_DROP_USER'\nexports[1269] = 'ER_REVOKE_GRANTS'\nexports[1270] = 'ER_CANT_AGGREGATE_3COLLATIONS'\nexports[1271] = 'ER_CANT_AGGREGATE_NCOLLATIONS'\nexports[1272] = 'ER_VARIABLE_IS_NOT_STRUCT'\nexports[1273] = 'ER_UNKNOWN_COLLATION'\nexports[1274] = 'ER_REPLICA_IGNORED_SSL_PARAMS'\nexports[1275] = 'ER_SERVER_IS_IN_SECURE_AUTH_MODE'\nexports[1276] = 'ER_WARN_FIELD_RESOLVED'\nexports[1277] = 'ER_BAD_REPLICA_UNTIL_COND'\nexports[1278] = 'ER_MISSING_SKIP_REPLICA'\nexports[1279] = 'ER_UNTIL_COND_IGNORED'\nexports[1280] = 'ER_WRONG_NAME_FOR_INDEX'\nexports[1281] = 'ER_WRONG_NAME_FOR_CATALOG'\nexports[1282] = 'ER_WARN_QC_RESIZE'\nexports[1283] = 'ER_BAD_FT_COLUMN'\nexports[1284] = 'ER_UNKNOWN_KEY_CACHE'\nexports[1285] = 'ER_WARN_HOSTNAME_WONT_WORK'\nexports[1286] = 'ER_UNKNOWN_STORAGE_ENGINE'\nexports[1287] = 'ER_WARN_DEPRECATED_SYNTAX'\nexports[1288] = 'ER_NON_UPDATABLE_TABLE'\nexports[1289] = 'ER_FEATURE_DISABLED'\nexports[1290] = 'ER_OPTION_PREVENTS_STATEMENT'\nexports[1291] = 'ER_DUPLICATED_VALUE_IN_TYPE'\nexports[1292] = 'ER_TRUNCATED_WRONG_VALUE'\nexports[1293] = 'ER_TOO_MUCH_AUTO_TIMESTAMP_COLS'\nexports[1294] = 'ER_INVALID_ON_UPDATE'\nexports[1295] = 'ER_UNSUPPORTED_PS'\nexports[1296] = 'ER_GET_ERRMSG'\nexports[1297] = 'ER_GET_TEMPORARY_ERRMSG'\nexports[1298] = 'ER_UNKNOWN_TIME_ZONE'\nexports[1299] = 'ER_WARN_INVALID_TIMESTAMP'\nexports[1300] = 'ER_INVALID_CHARACTER_STRING'\nexports[1301] = 'ER_WARN_ALLOWED_PACKET_OVERFLOWED'\nexports[1302] = 'ER_CONFLICTING_DECLARATIONS'\nexports[1303] = 'ER_SP_NO_RECURSIVE_CREATE'\nexports[1304] = 'ER_SP_ALREADY_EXISTS'\nexports[1305] = 'ER_SP_DOES_NOT_EXIST'\nexports[1306] = 'ER_SP_DROP_FAILED'\nexports[1307] = 'ER_SP_STORE_FAILED'\nexports[1308] = 'ER_SP_LILABEL_MISMATCH'\nexports[1309] = 'ER_SP_LABEL_REDEFINE'\nexports[1310] = 'ER_SP_LABEL_MISMATCH'\nexports[1311] = 'ER_SP_UNINIT_VAR'\nexports[1312] = 'ER_SP_BADSELECT'\nexports[1313] = 'ER_SP_BADRETURN'\nexports[1314] = 'ER_SP_BADSTATEMENT'\nexports[1315] = 'ER_UPDATE_LOG_DEPRECATED_IGNORED'\nexports[1316] = 'ER_UPDATE_LOG_DEPRECATED_TRANSLATED'\nexports[1317] = 'ER_QUERY_INTERRUPTED'\nexports[1318] = 'ER_SP_WRONG_NO_OF_ARGS'\nexports[1319] = 'ER_SP_COND_MISMATCH'\nexports[1320] = 'ER_SP_NORETURN'\nexports[1321] = 'ER_SP_NORETURNEND'\nexports[1322] = 'ER_SP_BAD_CURSOR_QUERY'\nexports[1323] = 'ER_SP_BAD_CURSOR_SELECT'\nexports[1324] = 'ER_SP_CURSOR_MISMATCH'\nexports[1325] = 'ER_SP_CURSOR_ALREADY_OPEN'\nexports[1326] = 'ER_SP_CURSOR_NOT_OPEN'\nexports[1327] = 'ER_SP_UNDECLARED_VAR'\nexports[1328] = 'ER_SP_WRONG_NO_OF_FETCH_ARGS'\nexports[1329] = 'ER_SP_FETCH_NO_DATA'\nexports[1330] = 'ER_SP_DUP_PARAM'\nexports[1331] = 'ER_SP_DUP_VAR'\nexports[1332] = 'ER_SP_DUP_COND'\nexports[1333] = 'ER_SP_DUP_CURS'\nexports[1334] = 'ER_SP_CANT_ALTER'\nexports[1335] = 'ER_SP_SUBSELECT_NYI'\nexports[1336] = 'ER_STMT_NOT_ALLOWED_IN_SF_OR_TRG'\nexports[1337] = 'ER_SP_VARCOND_AFTER_CURSHNDLR'\nexports[1338] = 'ER_SP_CURSOR_AFTER_HANDLER'\nexports[1339] = 'ER_SP_CASE_NOT_FOUND'\nexports[1340] = 'ER_FPARSER_TOO_BIG_FILE'\nexports[1341] = 'ER_FPARSER_BAD_HEADER'\nexports[1342] = 'ER_FPARSER_EOF_IN_COMMENT'\nexports[1343] = 'ER_FPARSER_ERROR_IN_PARAMETER'\nexports[1344] = 'ER_FPARSER_EOF_IN_UNKNOWN_PARAMETER'\nexports[1345] = 'ER_VIEW_NO_EXPLAIN'\nexports[1346] = 'ER_FRM_UNKNOWN_TYPE'\nexports[1347] = 'ER_WRONG_OBJECT'\nexports[1348] = 'ER_NONUPDATEABLE_COLUMN'\nexports[1349] = 'ER_VIEW_SELECT_DERIVED'\nexports[1350] = 'ER_VIEW_SELECT_CLAUSE'\nexports[1351] = 'ER_VIEW_SELECT_VARIABLE'\nexports[1352] = 'ER_VIEW_SELECT_TMPTABLE'\nexports[1353] = 'ER_VIEW_WRONG_LIST'\nexports[1354] = 'ER_WARN_VIEW_MERGE'\nexports[1355] = 'ER_WARN_VIEW_WITHOUT_KEY'\nexports[1356] = 'ER_VIEW_INVALID'\nexports[1357] = 'ER_SP_NO_DROP_SP'\nexports[1358] = 'ER_SP_GOTO_IN_HNDLR'\nexports[1359] = 'ER_TRG_ALREADY_EXISTS'\nexports[1360] = 'ER_TRG_DOES_NOT_EXIST'\nexports[1361] = 'ER_TRG_ON_VIEW_OR_TEMP_TABLE'\nexports[1362] = 'ER_TRG_CANT_CHANGE_ROW'\nexports[1363] = 'ER_TRG_NO_SUCH_ROW_IN_TRG'\nexports[1364] = 'ER_NO_DEFAULT_FOR_FIELD'\nexports[1365] = 'ER_DIVISION_BY_ZERO'\nexports[1366] = 'ER_TRUNCATED_WRONG_VALUE_FOR_FIELD'\nexports[1367] = 'ER_ILLEGAL_VALUE_FOR_TYPE'\nexports[1368] = 'ER_VIEW_NONUPD_CHECK'\nexports[1369] = 'ER_VIEW_CHECK_FAILED'\nexports[1370] = 'ER_PROCACCESS_DENIED_ERROR'\nexports[1371] = 'ER_RELAY_LOG_FAIL'\nexports[1372] = 'ER_PASSWD_LENGTH'\nexports[1373] = 'ER_UNKNOWN_TARGET_BINLOG'\nexports[1374] = 'ER_IO_ERR_LOG_INDEX_READ'\nexports[1375] = 'ER_BINLOG_PURGE_PROHIBITED'\nexports[1376] = 'ER_FSEEK_FAIL'\nexports[1377] = 'ER_BINLOG_PURGE_FATAL_ERR'\nexports[1378] = 'ER_LOG_IN_USE'\nexports[1379] = 'ER_LOG_PURGE_UNKNOWN_ERR'\nexports[1380] = 'ER_RELAY_LOG_INIT'\nexports[1381] = 'ER_NO_BINARY_LOGGING'\nexports[1382] = 'ER_RESERVED_SYNTAX'\nexports[1383] = 'ER_WSAS_FAILED'\nexports[1384] = 'ER_DIFF_GROUPS_PROC'\nexports[1385] = 'ER_NO_GROUP_FOR_PROC'\nexports[1386] = 'ER_ORDER_WITH_PROC'\nexports[1387] = 'ER_LOGGING_PROHIBIT_CHANGING_OF'\nexports[1388] = 'ER_NO_FILE_MAPPING'\nexports[1389] = 'ER_WRONG_MAGIC'\nexports[1390] = 'ER_PS_MANY_PARAM'\nexports[1391] = 'ER_KEY_PART_0'\nexports[1392] = 'ER_VIEW_CHECKSUM'\nexports[1393] = 'ER_VIEW_MULTIUPDATE'\nexports[1394] = 'ER_VIEW_NO_INSERT_FIELD_LIST'\nexports[1395] = 'ER_VIEW_DELETE_MERGE_VIEW'\nexports[1396] = 'ER_CANNOT_USER'\nexports[1397] = 'ER_XAER_NOTA'\nexports[1398] = 'ER_XAER_INVAL'\nexports[1399] = 'ER_XAER_RMFAIL'\nexports[1400] = 'ER_XAER_OUTSIDE'\nexports[1401] = 'ER_XAER_RMERR'\nexports[1402] = 'ER_XA_RBROLLBACK'\nexports[1403] = 'ER_NONEXISTING_PROC_GRANT'\nexports[1404] = 'ER_PROC_AUTO_GRANT_FAIL'\nexports[1405] = 'ER_PROC_AUTO_REVOKE_FAIL'\nexports[1406] = 'ER_DATA_TOO_LONG'\nexports[1407] = 'ER_SP_BAD_SQLSTATE'\nexports[1408] = 'ER_STARTUP'\nexports[1409] = 'ER_LOAD_FROM_FIXED_SIZE_ROWS_TO_VAR'\nexports[1410] = 'ER_CANT_CREATE_USER_WITH_GRANT'\nexports[1411] = 'ER_WRONG_VALUE_FOR_TYPE'\nexports[1412] = 'ER_TABLE_DEF_CHANGED'\nexports[1413] = 'ER_SP_DUP_HANDLER'\nexports[1414] = 'ER_SP_NOT_VAR_ARG'\nexports[1415] = 'ER_SP_NO_RETSET'\nexports[1416] = 'ER_CANT_CREATE_GEOMETRY_OBJECT'\nexports[1417] = 'ER_FAILED_ROUTINE_BREAK_BINLOG'\nexports[1418] = 'ER_BINLOG_UNSAFE_ROUTINE'\nexports[1419] = 'ER_BINLOG_CREATE_ROUTINE_NEED_SUPER'\nexports[1420] = 'ER_EXEC_STMT_WITH_OPEN_CURSOR'\nexports[1421] = 'ER_STMT_HAS_NO_OPEN_CURSOR'\nexports[1422] = 'ER_COMMIT_NOT_ALLOWED_IN_SF_OR_TRG'\nexports[1423] = 'ER_NO_DEFAULT_FOR_VIEW_FIELD'\nexports[1424] = 'ER_SP_NO_RECURSION'\nexports[1425] = 'ER_TOO_BIG_SCALE'\nexports[1426] = 'ER_TOO_BIG_PRECISION'\nexports[1427] = 'ER_M_BIGGER_THAN_D'\nexports[1428] = 'ER_WRONG_LOCK_OF_SYSTEM_TABLE'\nexports[1429] = 'ER_CONNECT_TO_FOREIGN_DATA_SOURCE'\nexports[1430] = 'ER_QUERY_ON_FOREIGN_DATA_SOURCE'\nexports[1431] = 'ER_FOREIGN_DATA_SOURCE_DOESNT_EXIST'\nexports[1432] = 'ER_FOREIGN_DATA_STRING_INVALID_CANT_CREATE'\nexports[1433] = 'ER_FOREIGN_DATA_STRING_INVALID'\nexports[1434] = 'ER_CANT_CREATE_FEDERATED_TABLE'\nexports[1435] = 'ER_TRG_IN_WRONG_SCHEMA'\nexports[1436] = 'ER_STACK_OVERRUN_NEED_MORE'\nexports[1437] = 'ER_TOO_LONG_BODY'\nexports[1438] = 'ER_WARN_CANT_DROP_DEFAULT_KEYCACHE'\nexports[1439] = 'ER_TOO_BIG_DISPLAYWIDTH'\nexports[1440] = 'ER_XAER_DUPID'\nexports[1441] = 'ER_DATETIME_FUNCTION_OVERFLOW'\nexports[1442] = 'ER_CANT_UPDATE_USED_TABLE_IN_SF_OR_TRG'\nexports[1443] = 'ER_VIEW_PREVENT_UPDATE'\nexports[1444] = 'ER_PS_NO_RECURSION'\nexports[1445] = 'ER_SP_CANT_SET_AUTOCOMMIT'\nexports[1446] = 'ER_MALFORMED_DEFINER'\nexports[1447] = 'ER_VIEW_FRM_NO_USER'\nexports[1448] = 'ER_VIEW_OTHER_USER'\nexports[1449] = 'ER_NO_SUCH_USER'\nexports[1450] = 'ER_FORBID_SCHEMA_CHANGE'\nexports[1451] = 'ER_ROW_IS_REFERENCED_2'\nexports[1452] = 'ER_NO_REFERENCED_ROW_2'\nexports[1453] = 'ER_SP_BAD_VAR_SHADOW'\nexports[1454] = 'ER_TRG_NO_DEFINER'\nexports[1455] = 'ER_OLD_FILE_FORMAT'\nexports[1456] = 'ER_SP_RECURSION_LIMIT'\nexports[1457] = 'ER_SP_PROC_TABLE_CORRUPT'\nexports[1458] = 'ER_SP_WRONG_NAME'\nexports[1459] = 'ER_TABLE_NEEDS_UPGRADE'\nexports[1460] = 'ER_SP_NO_AGGREGATE'\nexports[1461] = 'ER_MAX_PREPARED_STMT_COUNT_REACHED'\nexports[1462] = 'ER_VIEW_RECURSIVE'\nexports[1463] = 'ER_NON_GROUPING_FIELD_USED'\nexports[1464] = 'ER_TABLE_CANT_HANDLE_SPKEYS'\nexports[1465] = 'ER_NO_TRIGGERS_ON_SYSTEM_SCHEMA'\nexports[1466] = 'ER_REMOVED_SPACES'\nexports[1467] = 'ER_AUTOINC_READ_FAILED'\nexports[1468] = 'ER_USERNAME'\nexports[1469] = 'ER_HOSTNAME'\nexports[1470] = 'ER_WRONG_STRING_LENGTH'\nexports[1471] = 'ER_NON_INSERTABLE_TABLE'\nexports[1472] = 'ER_ADMIN_WRONG_MRG_TABLE'\nexports[1473] = 'ER_TOO_HIGH_LEVEL_OF_NESTING_FOR_SELECT'\nexports[1474] = 'ER_NAME_BECOMES_EMPTY'\nexports[1475] = 'ER_AMBIGUOUS_FIELD_TERM'\nexports[1476] = 'ER_FOREIGN_SERVER_EXISTS'\nexports[1477] = 'ER_FOREIGN_SERVER_DOESNT_EXIST'\nexports[1478] = 'ER_ILLEGAL_HA_CREATE_OPTION'\nexports[1479] = 'ER_PARTITION_REQUIRES_VALUES_ERROR'\nexports[1480] = 'ER_PARTITION_WRONG_VALUES_ERROR'\nexports[1481] = 'ER_PARTITION_MAXVALUE_ERROR'\nexports[1482] = 'ER_PARTITION_SUBPARTITION_ERROR'\nexports[1483] = 'ER_PARTITION_SUBPART_MIX_ERROR'\nexports[1484] = 'ER_PARTITION_WRONG_NO_PART_ERROR'\nexports[1485] = 'ER_PARTITION_WRONG_NO_SUBPART_ERROR'\nexports[1486] = 'ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR'\nexports[1487] = 'ER_NO_CONST_EXPR_IN_RANGE_OR_LIST_ERROR'\nexports[1488] = 'ER_FIELD_NOT_FOUND_PART_ERROR'\nexports[1489] = 'ER_LIST_OF_FIELDS_ONLY_IN_HASH_ERROR'\nexports[1490] = 'ER_INCONSISTENT_PARTITION_INFO_ERROR'\nexports[1491] = 'ER_PARTITION_FUNC_NOT_ALLOWED_ERROR'\nexports[1492] = 'ER_PARTITIONS_MUST_BE_DEFINED_ERROR'\nexports[1493] = 'ER_RANGE_NOT_INCREASING_ERROR'\nexports[1494] = 'ER_INCONSISTENT_TYPE_OF_FUNCTIONS_ERROR'\nexports[1495] = 'ER_MULTIPLE_DEF_CONST_IN_LIST_PART_ERROR'\nexports[1496] = 'ER_PARTITION_ENTRY_ERROR'\nexports[1497] = 'ER_MIX_HANDLER_ERROR'\nexports[1498] = 'ER_PARTITION_NOT_DEFINED_ERROR'\nexports[1499] = 'ER_TOO_MANY_PARTITIONS_ERROR'\nexports[1500] = 'ER_SUBPARTITION_ERROR'\nexports[1501] = 'ER_CANT_CREATE_HANDLER_FILE'\nexports[1502] = 'ER_BLOB_FIELD_IN_PART_FUNC_ERROR'\nexports[1503] = 'ER_UNIQUE_KEY_NEED_ALL_FIELDS_IN_PF'\nexports[1504] = 'ER_NO_PARTS_ERROR'\nexports[1505] = 'ER_PARTITION_MGMT_ON_NONPARTITIONED'\nexports[1506] = 'ER_FOREIGN_KEY_ON_PARTITIONED'\nexports[1507] = 'ER_DROP_PARTITION_NON_EXISTENT'\nexports[1508] = 'ER_DROP_LAST_PARTITION'\nexports[1509] = 'ER_COALESCE_ONLY_ON_HASH_PARTITION'\nexports[1510] = 'ER_REORG_HASH_ONLY_ON_SAME_NO'\nexports[1511] = 'ER_REORG_NO_PARAM_ERROR'\nexports[1512] = 'ER_ONLY_ON_RANGE_LIST_PARTITION'\nexports[1513] = 'ER_ADD_PARTITION_SUBPART_ERROR'\nexports[1514] = 'ER_ADD_PARTITION_NO_NEW_PARTITION'\nexports[1515] = 'ER_COALESCE_PARTITION_NO_PARTITION'\nexports[1516] = 'ER_REORG_PARTITION_NOT_EXIST'\nexports[1517] = 'ER_SAME_NAME_PARTITION'\nexports[1518] = 'ER_NO_BINLOG_ERROR'\nexports[1519] = 'ER_CONSECUTIVE_REORG_PARTITIONS'\nexports[1520] = 'ER_REORG_OUTSIDE_RANGE'\nexports[1521] = 'ER_PARTITION_FUNCTION_FAILURE'\nexports[1522] = 'ER_PART_STATE_ERROR'\nexports[1523] = 'ER_LIMITED_PART_RANGE'\nexports[1524] = 'ER_PLUGIN_IS_NOT_LOADED'\nexports[1525] = 'ER_WRONG_VALUE'\nexports[1526] = 'ER_NO_PARTITION_FOR_GIVEN_VALUE'\nexports[1527] = 'ER_FILEGROUP_OPTION_ONLY_ONCE'\nexports[1528] = 'ER_CREATE_FILEGROUP_FAILED'\nexports[1529] = 'ER_DROP_FILEGROUP_FAILED'\nexports[1530] = 'ER_TABLESPACE_AUTO_EXTEND_ERROR'\nexports[1531] = 'ER_WRONG_SIZE_NUMBER'\nexports[1532] = 'ER_SIZE_OVERFLOW_ERROR'\nexports[1533] = 'ER_ALTER_FILEGROUP_FAILED'\nexports[1534] = 'ER_BINLOG_ROW_LOGGING_FAILED'\nexports[1535] = 'ER_BINLOG_ROW_WRONG_TABLE_DEF'\nexports[1536] = 'ER_BINLOG_ROW_RBR_TO_SBR'\nexports[1537] = 'ER_EVENT_ALREADY_EXISTS'\nexports[1538] = 'ER_EVENT_STORE_FAILED'\nexports[1539] = 'ER_EVENT_DOES_NOT_EXIST'\nexports[1540] = 'ER_EVENT_CANT_ALTER'\nexports[1541] = 'ER_EVENT_DROP_FAILED'\nexports[1542] = 'ER_EVENT_INTERVAL_NOT_POSITIVE_OR_TOO_BIG'\nexports[1543] = 'ER_EVENT_ENDS_BEFORE_STARTS'\nexports[1544] = 'ER_EVENT_EXEC_TIME_IN_THE_PAST'\nexports[1545] = 'ER_EVENT_OPEN_TABLE_FAILED'\nexports[1546] = 'ER_EVENT_NEITHER_M_EXPR_NOR_M_AT'\nexports[1547] = 'ER_COL_COUNT_DOESNT_MATCH_CORRUPTED'\nexports[1548] = 'ER_CANNOT_LOAD_FROM_TABLE'\nexports[1549] = 'ER_EVENT_CANNOT_DELETE'\nexports[1550] = 'ER_EVENT_COMPILE_ERROR'\nexports[1551] = 'ER_EVENT_SAME_NAME'\nexports[1552] = 'ER_EVENT_DATA_TOO_LONG'\nexports[1553] = 'ER_DROP_INDEX_FK'\nexports[1554] = 'ER_WARN_DEPRECATED_SYNTAX_WITH_VER'\nexports[1555] = 'ER_CANT_WRITE_LOCK_LOG_TABLE'\nexports[1556] = 'ER_CANT_LOCK_LOG_TABLE'\nexports[1557] = 'ER_FOREIGN_DUPLICATE_KEY'\nexports[1558] = 'ER_COL_COUNT_DOESNT_MATCH_PLEASE_UPDATE'\nexports[1559] = 'ER_TEMP_TABLE_PREVENTS_SWITCH_OUT_OF_RBR'\nexports[1560] = 'ER_STORED_FUNCTION_PREVENTS_SWITCH_BINLOG_FORMAT'\nexports[1561] = 'ER_NDB_CANT_SWITCH_BINLOG_FORMAT'\nexports[1562] = 'ER_PARTITION_NO_TEMPORARY'\nexports[1563] = 'ER_PARTITION_CONST_DOMAIN_ERROR'\nexports[1564] = 'ER_PARTITION_FUNCTION_IS_NOT_ALLOWED'\nexports[1565] = 'ER_DDL_LOG_ERROR'\nexports[1566] = 'ER_NULL_IN_VALUES_LESS_THAN'\nexports[1567] = 'ER_WRONG_PARTITION_NAME'\nexports[1568] = 'ER_CANT_CHANGE_TX_CHARACTERISTICS'\nexports[1569] = 'ER_DUP_ENTRY_AUTOINCREMENT_CASE'\nexports[1570] = 'ER_EVENT_MODIFY_QUEUE_ERROR'\nexports[1571] = 'ER_EVENT_SET_VAR_ERROR'\nexports[1572] = 'ER_PARTITION_MERGE_ERROR'\nexports[1573] = 'ER_CANT_ACTIVATE_LOG'\nexports[1574] = 'ER_RBR_NOT_AVAILABLE'\nexports[1575] = 'ER_BASE64_DECODE_ERROR'\nexports[1576] = 'ER_EVENT_RECURSION_FORBIDDEN'\nexports[1577] = 'ER_EVENTS_DB_ERROR'\nexports[1578] = 'ER_ONLY_INTEGERS_ALLOWED'\nexports[1579] = 'ER_UNSUPORTED_LOG_ENGINE'\nexports[1580] = 'ER_BAD_LOG_STATEMENT'\nexports[1581] = 'ER_CANT_RENAME_LOG_TABLE'\nexports[1582] = 'ER_WRONG_PARAMCOUNT_TO_NATIVE_FCT'\nexports[1583] = 'ER_WRONG_PARAMETERS_TO_NATIVE_FCT'\nexports[1584] = 'ER_WRONG_PARAMETERS_TO_STORED_FCT'\nexports[1585] = 'ER_NATIVE_FCT_NAME_COLLISION'\nexports[1586] = 'ER_DUP_ENTRY_WITH_KEY_NAME'\nexports[1587] = 'ER_BINLOG_PURGE_EMFILE'\nexports[1588] = 'ER_EVENT_CANNOT_CREATE_IN_THE_PAST'\nexports[1589] = 'ER_EVENT_CANNOT_ALTER_IN_THE_PAST'\nexports[1590] = 'ER_SLAVE_INCIDENT'\nexports[1591] = 'ER_NO_PARTITION_FOR_GIVEN_VALUE_SILENT'\nexports[1592] = 'ER_BINLOG_UNSAFE_STATEMENT'\nexports[1593] = 'ER_BINLOG_FATAL_ERROR'\nexports[1594] = 'ER_SLAVE_RELAY_LOG_READ_FAILURE'\nexports[1595] = 'ER_SLAVE_RELAY_LOG_WRITE_FAILURE'\nexports[1596] = 'ER_SLAVE_CREATE_EVENT_FAILURE'\nexports[1597] = 'ER_SLAVE_MASTER_COM_FAILURE'\nexports[1598] = 'ER_BINLOG_LOGGING_IMPOSSIBLE'\nexports[1599] = 'ER_VIEW_NO_CREATION_CTX'\nexports[1600] = 'ER_VIEW_INVALID_CREATION_CTX'\nexports[1601] = 'ER_SR_INVALID_CREATION_CTX'\nexports[1602] = 'ER_TRG_CORRUPTED_FILE'\nexports[1603] = 'ER_TRG_NO_CREATION_CTX'\nexports[1604] = 'ER_TRG_INVALID_CREATION_CTX'\nexports[1605] = 'ER_EVENT_INVALID_CREATION_CTX'\nexports[1606] = 'ER_TRG_CANT_OPEN_TABLE'\nexports[1607] = 'ER_CANT_CREATE_SROUTINE'\nexports[1608] = 'ER_NEVER_USED'\nexports[1609] = 'ER_NO_FORMAT_DESCRIPTION_EVENT_BEFORE_BINLOG_STATEMENT'\nexports[1610] = 'ER_REPLICA_CORRUPT_EVENT'\nexports[1611] = 'ER_LOAD_DATA_INVALID_COLUMN'\nexports[1612] = 'ER_LOG_PURGE_NO_FILE'\nexports[1613] = 'ER_XA_RBTIMEOUT'\nexports[1614] = 'ER_XA_RBDEADLOCK'\nexports[1615] = 'ER_NEED_REPREPARE'\nexports[1616] = 'ER_DELAYED_NOT_SUPPORTED'\nexports[1617] = 'WARN_NO_CONNECTION_METADATA'\nexports[1618] = 'WARN_OPTION_IGNORED'\nexports[1619] = 'ER_PLUGIN_DELETE_BUILTIN'\nexports[1620] = 'WARN_PLUGIN_BUSY'\nexports[1621] = 'ER_VARIABLE_IS_READONLY'\nexports[1622] = 'ER_WARN_ENGINE_TRANSACTION_ROLLBACK'\nexports[1623] = 'ER_SLAVE_HEARTBEAT_FAILURE'\nexports[1624] = 'ER_REPLICA_HEARTBEAT_VALUE_OUT_OF_RANGE'\nexports[1625] = 'ER_NDB_REPLICATION_SCHEMA_ERROR'\nexports[1626] = 'ER_CONFLICT_FN_PARSE_ERROR'\nexports[1627] = 'ER_EXCEPTIONS_WRITE_ERROR'\nexports[1628] = 'ER_TOO_LONG_TABLE_COMMENT'\nexports[1629] = 'ER_TOO_LONG_FIELD_COMMENT'\nexports[1630] = 'ER_FUNC_INEXISTENT_NAME_COLLISION'\nexports[1631] = 'ER_DATABASE_NAME'\nexports[1632] = 'ER_TABLE_NAME'\nexports[1633] = 'ER_PARTITION_NAME'\nexports[1634] = 'ER_SUBPARTITION_NAME'\nexports[1635] = 'ER_TEMPORARY_NAME'\nexports[1636] = 'ER_RENAMED_NAME'\nexports[1637] = 'ER_TOO_MANY_CONCURRENT_TRXS'\nexports[1638] = 'WARN_NON_ASCII_SEPARATOR_NOT_IMPLEMENTED'\nexports[1639] = 'ER_DEBUG_SYNC_TIMEOUT'\nexports[1640] = 'ER_DEBUG_SYNC_HIT_LIMIT'\nexports[1641] = 'ER_DUP_SIGNAL_SET'\nexports[1642] = 'ER_SIGNAL_WARN'\nexports[1643] = 'ER_SIGNAL_NOT_FOUND'\nexports[1644] = 'ER_SIGNAL_EXCEPTION'\nexports[1645] = 'ER_RESIGNAL_WITHOUT_ACTIVE_HANDLER'\nexports[1646] = 'ER_SIGNAL_BAD_CONDITION_TYPE'\nexports[1647] = 'WARN_COND_ITEM_TRUNCATED'\nexports[1648] = 'ER_COND_ITEM_TOO_LONG'\nexports[1649] = 'ER_UNKNOWN_LOCALE'\nexports[1650] = 'ER_REPLICA_IGNORE_SERVER_IDS'\nexports[1651] = 'ER_QUERY_CACHE_DISABLED'\nexports[1652] = 'ER_SAME_NAME_PARTITION_FIELD'\nexports[1653] = 'ER_PARTITION_COLUMN_LIST_ERROR'\nexports[1654] = 'ER_WRONG_TYPE_COLUMN_VALUE_ERROR'\nexports[1655] = 'ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR'\nexports[1656] = 'ER_MAXVALUE_IN_VALUES_IN'\nexports[1657] = 'ER_TOO_MANY_VALUES_ERROR'\nexports[1658] = 'ER_ROW_SINGLE_PARTITION_FIELD_ERROR'\nexports[1659] = 'ER_FIELD_TYPE_NOT_ALLOWED_AS_PARTITION_FIELD'\nexports[1660] = 'ER_PARTITION_FIELDS_TOO_LONG'\nexports[1661] = 'ER_BINLOG_ROW_ENGINE_AND_STMT_ENGINE'\nexports[1662] = 'ER_BINLOG_ROW_MODE_AND_STMT_ENGINE'\nexports[1663] = 'ER_BINLOG_UNSAFE_AND_STMT_ENGINE'\nexports[1664] = 'ER_BINLOG_ROW_INJECTION_AND_STMT_ENGINE'\nexports[1665] = 'ER_BINLOG_STMT_MODE_AND_ROW_ENGINE'\nexports[1666] = 'ER_BINLOG_ROW_INJECTION_AND_STMT_MODE'\nexports[1667] = 'ER_BINLOG_MULTIPLE_ENGINES_AND_SELF_LOGGING_ENGINE'\nexports[1668] = 'ER_BINLOG_UNSAFE_LIMIT'\nexports[1669] = 'ER_UNUSED4'\nexports[1670] = 'ER_BINLOG_UNSAFE_SYSTEM_TABLE'\nexports[1671] = 'ER_BINLOG_UNSAFE_AUTOINC_COLUMNS'\nexports[1672] = 'ER_BINLOG_UNSAFE_UDF'\nexports[1673] = 'ER_BINLOG_UNSAFE_SYSTEM_VARIABLE'\nexports[1674] = 'ER_BINLOG_UNSAFE_SYSTEM_FUNCTION'\nexports[1675] = 'ER_BINLOG_UNSAFE_NONTRANS_AFTER_TRANS'\nexports[1676] = 'ER_MESSAGE_AND_STATEMENT'\nexports[1677] = 'ER_SLAVE_CONVERSION_FAILED'\nexports[1678] = 'ER_REPLICA_CANT_CREATE_CONVERSION'\nexports[1679] = 'ER_INSIDE_TRANSACTION_PREVENTS_SWITCH_BINLOG_FORMAT'\nexports[1680] = 'ER_PATH_LENGTH'\nexports[1681] = 'ER_WARN_DEPRECATED_SYNTAX_NO_REPLACEMENT'\nexports[1682] = 'ER_WRONG_NATIVE_TABLE_STRUCTURE'\nexports[1683] = 'ER_WRONG_PERFSCHEMA_USAGE'\nexports[1684] = 'ER_WARN_I_S_SKIPPED_TABLE'\nexports[1685] = 'ER_INSIDE_TRANSACTION_PREVENTS_SWITCH_BINLOG_DIRECT'\nexports[1686] = 'ER_STORED_FUNCTION_PREVENTS_SWITCH_BINLOG_DIRECT'\nexports[1687] = 'ER_SPATIAL_MUST_HAVE_GEOM_COL'\nexports[1688] = 'ER_TOO_LONG_INDEX_COMMENT'\nexports[1689] = 'ER_LOCK_ABORTED'\nexports[1690] = 'ER_DATA_OUT_OF_RANGE'\nexports[1691] = 'ER_WRONG_SPVAR_TYPE_IN_LIMIT'\nexports[1692] = 'ER_BINLOG_UNSAFE_MULTIPLE_ENGINES_AND_SELF_LOGGING_ENGINE'\nexports[1693] = 'ER_BINLOG_UNSAFE_MIXED_STATEMENT'\nexports[1694] = 'ER_INSIDE_TRANSACTION_PREVENTS_SWITCH_SQL_LOG_BIN'\nexports[1695] = 'ER_STORED_FUNCTION_PREVENTS_SWITCH_SQL_LOG_BIN'\nexports[1696] = 'ER_FAILED_READ_FROM_PAR_FILE'\nexports[1697] = 'ER_VALUES_IS_NOT_INT_TYPE_ERROR'\nexports[1698] = 'ER_ACCESS_DENIED_NO_PASSWORD_ERROR'\nexports[1699] = 'ER_SET_PASSWORD_AUTH_PLUGIN'\nexports[1700] = 'ER_GRANT_PLUGIN_USER_EXISTS'\nexports[1701] = 'ER_TRUNCATE_ILLEGAL_FK'\nexports[1702] = 'ER_PLUGIN_IS_PERMANENT'\nexports[1703] = 'ER_REPLICA_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN'\nexports[1704] = 'ER_REPLICA_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX'\nexports[1705] = 'ER_STMT_CACHE_FULL'\nexports[1706] = 'ER_MULTI_UPDATE_KEY_CONFLICT'\nexports[1707] = 'ER_TABLE_NEEDS_REBUILD'\nexports[1708] = 'WARN_OPTION_BELOW_LIMIT'\nexports[1709] = 'ER_INDEX_COLUMN_TOO_LONG'\nexports[1710] = 'ER_ERROR_IN_TRIGGER_BODY'\nexports[1711] = 'ER_ERROR_IN_UNKNOWN_TRIGGER_BODY'\nexports[1712] = 'ER_INDEX_CORRUPT'\nexports[1713] = 'ER_UNDO_RECORD_TOO_BIG'\nexports[1714] = 'ER_BINLOG_UNSAFE_INSERT_IGNORE_SELECT'\nexports[1715] = 'ER_BINLOG_UNSAFE_INSERT_SELECT_UPDATE'\nexports[1716] = 'ER_BINLOG_UNSAFE_REPLACE_SELECT'\nexports[1717] = 'ER_BINLOG_UNSAFE_CREATE_IGNORE_SELECT'\nexports[1718] = 'ER_BINLOG_UNSAFE_CREATE_REPLACE_SELECT'\nexports[1719] = 'ER_BINLOG_UNSAFE_UPDATE_IGNORE'\nexports[1720] = 'ER_PLUGIN_NO_UNINSTALL'\nexports[1721] = 'ER_PLUGIN_NO_INSTALL'\nexports[1722] = 'ER_BINLOG_UNSAFE_WRITE_AUTOINC_SELECT'\nexports[1723] = 'ER_BINLOG_UNSAFE_CREATE_SELECT_AUTOINC'\nexports[1724] = 'ER_BINLOG_UNSAFE_INSERT_TWO_KEYS'\nexports[1725] = 'ER_TABLE_IN_FK_CHECK'\nexports[1726] = 'ER_UNSUPPORTED_ENGINE'\nexports[1727] = 'ER_BINLOG_UNSAFE_AUTOINC_NOT_FIRST'\nexports[1728] = 'ER_CANNOT_LOAD_FROM_TABLE_V2'\nexports[1729] = 'ER_SOURCE_DELAY_VALUE_OUT_OF_RANGE'\nexports[1730] = 'ER_ONLY_FD_AND_RBR_EVENTS_ALLOWED_IN_BINLOG_STATEMENT'\nexports[1731] = 'ER_PARTITION_EXCHANGE_DIFFERENT_OPTION'\nexports[1732] = 'ER_PARTITION_EXCHANGE_PART_TABLE'\nexports[1733] = 'ER_PARTITION_EXCHANGE_TEMP_TABLE'\nexports[1734] = 'ER_PARTITION_INSTEAD_OF_SUBPARTITION'\nexports[1735] = 'ER_UNKNOWN_PARTITION'\nexports[1736] = 'ER_TABLES_DIFFERENT_METADATA'\nexports[1737] = 'ER_ROW_DOES_NOT_MATCH_PARTITION'\nexports[1738] = 'ER_BINLOG_CACHE_SIZE_GREATER_THAN_MAX'\nexports[1739] = 'ER_WARN_INDEX_NOT_APPLICABLE'\nexports[1740] = 'ER_PARTITION_EXCHANGE_FOREIGN_KEY'\nexports[1741] = 'ER_NO_SUCH_KEY_VALUE'\nexports[1742] = 'ER_RPL_INFO_DATA_TOO_LONG'\nexports[1743] = 'ER_NETWORK_READ_EVENT_CHECKSUM_FAILURE'\nexports[1744] = 'ER_BINLOG_READ_EVENT_CHECKSUM_FAILURE'\nexports[1745] = 'ER_BINLOG_STMT_CACHE_SIZE_GREATER_THAN_MAX'\nexports[1746] = 'ER_CANT_UPDATE_TABLE_IN_CREATE_TABLE_SELECT'\nexports[1747] = 'ER_PARTITION_CLAUSE_ON_NONPARTITIONED'\nexports[1748] = 'ER_ROW_DOES_NOT_MATCH_GIVEN_PARTITION_SET'\nexports[1749] = 'ER_NO_SUCH_PARTITION'\nexports[1750] = 'ER_CHANGE_RPL_INFO_REPOSITORY_FAILURE'\nexports[1751] = 'ER_WARNING_NOT_COMPLETE_ROLLBACK_WITH_CREATED_TEMP_TABLE'\nexports[1752] = 'ER_WARNING_NOT_COMPLETE_ROLLBACK_WITH_DROPPED_TEMP_TABLE'\nexports[1753] = 'ER_MTA_FEATURE_IS_NOT_SUPPORTED'\nexports[1754] = 'ER_MTA_UPDATED_DBS_GREATER_MAX'\nexports[1755] = 'ER_MTA_CANT_PARALLEL'\nexports[1756] = 'ER_MTA_INCONSISTENT_DATA'\nexports[1757] = 'ER_FULLTEXT_NOT_SUPPORTED_WITH_PARTITIONING'\nexports[1758] = 'ER_DA_INVALID_CONDITION_NUMBER'\nexports[1759] = 'ER_INSECURE_PLAIN_TEXT'\nexports[1760] = 'ER_INSECURE_CHANGE_SOURCE'\nexports[1761] = 'ER_FOREIGN_DUPLICATE_KEY_WITH_CHILD_INFO'\nexports[1762] = 'ER_FOREIGN_DUPLICATE_KEY_WITHOUT_CHILD_INFO'\nexports[1763] = 'ER_SQLTHREAD_WITH_SECURE_REPLICA'\nexports[1764] = 'ER_TABLE_HAS_NO_FT'\nexports[1765] = 'ER_VARIABLE_NOT_SETTABLE_IN_SF_OR_TRIGGER'\nexports[1766] = 'ER_VARIABLE_NOT_SETTABLE_IN_TRANSACTION'\nexports[1767] = 'ER_GTID_NEXT_IS_NOT_IN_GTID_NEXT_LIST'\nexports[1768] = 'ER_CANT_CHANGE_GTID_NEXT_IN_TRANSACTION'\nexports[1769] = 'ER_SET_STATEMENT_CANNOT_INVOKE_FUNCTION'\nexports[1770] = 'ER_GTID_NEXT_CANT_BE_AUTOMATIC_IF_GTID_NEXT_LIST_IS_NON_NULL'\nexports[1771] = 'ER_SKIPPING_LOGGED_TRANSACTION'\nexports[1772] = 'ER_MALFORMED_GTID_SET_SPECIFICATION'\nexports[1773] = 'ER_MALFORMED_GTID_SET_ENCODING'\nexports[1774] = 'ER_MALFORMED_GTID_SPECIFICATION'\nexports[1775] = 'ER_GNO_EXHAUSTED'\nexports[1776] = 'ER_BAD_REPLICA_AUTO_POSITION'\nexports[1777] = 'ER_AUTO_POSITION_REQUIRES_GTID_MODE_NOT_OFF'\nexports[1778] = 'ER_CANT_DO_IMPLICIT_COMMIT_IN_TRX_WHEN_GTID_NEXT_IS_SET'\nexports[1779] = 'ER_GTID_MODE_ON_REQUIRES_ENFORCE_GTID_CONSISTENCY_ON'\nexports[1780] = 'ER_GTID_MODE_REQUIRES_BINLOG'\nexports[1781] = 'ER_CANT_SET_GTID_NEXT_TO_GTID_WHEN_GTID_MODE_IS_OFF'\nexports[1782] = 'ER_CANT_SET_GTID_NEXT_TO_ANONYMOUS_WHEN_GTID_MODE_IS_ON'\nexports[1783] = 'ER_CANT_SET_GTID_NEXT_LIST_TO_NON_NULL_WHEN_GTID_MODE_IS_OFF'\nexports[1784] = 'ER_FOUND_GTID_EVENT_WHEN_GTID_MODE_IS_OFF'\nexports[1785] = 'ER_GTID_UNSAFE_NON_TRANSACTIONAL_TABLE'\nexports[1786] = 'ER_GTID_UNSAFE_CREATE_SELECT'\nexports[1787] = 'ER_GTID_UNSAFE_CREATE_DROP_TEMP_TABLE_IN_TRANSACTION'\nexports[1788] = 'ER_GTID_MODE_CAN_ONLY_CHANGE_ONE_STEP_AT_A_TIME'\nexports[1789] = 'ER_SOURCE_HAS_PURGED_REQUIRED_GTIDS'\nexports[1790] = 'ER_CANT_SET_GTID_NEXT_WHEN_OWNING_GTID'\nexports[1791] = 'ER_UNKNOWN_EXPLAIN_FORMAT'\nexports[1792] = 'ER_CANT_EXECUTE_IN_READ_ONLY_TRANSACTION'\nexports[1793] = 'ER_TOO_LONG_TABLE_PARTITION_COMMENT'\nexports[1794] = 'ER_REPLICA_CONFIGURATION'\nexports[1795] = 'ER_INNODB_FT_LIMIT'\nexports[1796] = 'ER_INNODB_NO_FT_TEMP_TABLE'\nexports[1797] = 'ER_INNODB_FT_WRONG_DOCID_COLUMN'\nexports[1798] = 'ER_INNODB_FT_WRONG_DOCID_INDEX'\nexports[1799] = 'ER_INNODB_ONLINE_LOG_TOO_BIG'\nexports[1800] = 'ER_UNKNOWN_ALTER_ALGORITHM'\nexports[1801] = 'ER_UNKNOWN_ALTER_LOCK'\nexports[1802] = 'ER_MTA_CHANGE_SOURCE_CANT_RUN_WITH_GAPS'\nexports[1803] = 'ER_MTA_RECOVERY_FAILURE'\nexports[1804] = 'ER_MTA_RESET_WORKERS'\nexports[1805] = 'ER_COL_COUNT_DOESNT_MATCH_CORRUPTED_V2'\nexports[1806] = 'ER_REPLICA_SILENT_RETRY_TRANSACTION'\nexports[1807] = 'ER_DISCARD_FK_CHECKS_RUNNING'\nexports[1808] = 'ER_TABLE_SCHEMA_MISMATCH'\nexports[1809] = 'ER_TABLE_IN_SYSTEM_TABLESPACE'\nexports[1810] = 'ER_IO_READ_ERROR'\nexports[1811] = 'ER_IO_WRITE_ERROR'\nexports[1812] = 'ER_TABLESPACE_MISSING'\nexports[1813] = 'ER_TABLESPACE_EXISTS'\nexports[1814] = 'ER_TABLESPACE_DISCARDED'\nexports[1815] = 'ER_INTERNAL_ERROR'\nexports[1816] = 'ER_INNODB_IMPORT_ERROR'\nexports[1817] = 'ER_INNODB_INDEX_CORRUPT'\nexports[1818] = 'ER_INVALID_YEAR_COLUMN_LENGTH'\nexports[1819] = 'ER_NOT_VALID_PASSWORD'\nexports[1820] = 'ER_MUST_CHANGE_PASSWORD'\nexports[1821] = 'ER_FK_NO_INDEX_CHILD'\nexports[1822] = 'ER_FK_NO_INDEX_PARENT'\nexports[1823] = 'ER_FK_FAIL_ADD_SYSTEM'\nexports[1824] = 'ER_FK_CANNOT_OPEN_PARENT'\nexports[1825] = 'ER_FK_INCORRECT_OPTION'\nexports[1826] = 'ER_FK_DUP_NAME'\nexports[1827] = 'ER_PASSWORD_FORMAT'\nexports[1828] = 'ER_FK_COLUMN_CANNOT_DROP'\nexports[1829] = 'ER_FK_COLUMN_CANNOT_DROP_CHILD'\nexports[1830] = 'ER_FK_COLUMN_NOT_NULL'\nexports[1831] = 'ER_DUP_INDEX'\nexports[1832] = 'ER_FK_COLUMN_CANNOT_CHANGE'\nexports[1833] = 'ER_FK_COLUMN_CANNOT_CHANGE_CHILD'\nexports[1834] = 'ER_UNUSED5'\nexports[1835] = 'ER_MALFORMED_PACKET'\nexports[1836] = 'ER_READ_ONLY_MODE'\nexports[1837] = 'ER_GTID_NEXT_TYPE_UNDEFINED_GTID'\nexports[1838] = 'ER_VARIABLE_NOT_SETTABLE_IN_SP'\nexports[1839] = 'ER_CANT_SET_GTID_PURGED_WHEN_GTID_MODE_IS_OFF'\nexports[1840] = 'ER_CANT_SET_GTID_PURGED_WHEN_GTID_EXECUTED_IS_NOT_EMPTY'\nexports[1841] = 'ER_CANT_SET_GTID_PURGED_WHEN_OWNED_GTIDS_IS_NOT_EMPTY'\nexports[1842] = 'ER_GTID_PURGED_WAS_CHANGED'\nexports[1843] = 'ER_GTID_EXECUTED_WAS_CHANGED'\nexports[1844] = 'ER_BINLOG_STMT_MODE_AND_NO_REPL_TABLES'\nexports[1845] = 'ER_ALTER_OPERATION_NOT_SUPPORTED'\nexports[1846] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON'\nexports[1847] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_COPY'\nexports[1848] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_PARTITION'\nexports[1849] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_FK_RENAME'\nexports[1850] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_COLUMN_TYPE'\nexports[1851] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_FK_CHECK'\nexports[1852] = 'ER_UNUSED6'\nexports[1853] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_NOPK'\nexports[1854] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_AUTOINC'\nexports[1855] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_HIDDEN_FTS'\nexports[1856] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_CHANGE_FTS'\nexports[1857] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_FTS'\nexports[1858] = 'ER_SQL_REPLICA_SKIP_COUNTER_NOT_SETTABLE_IN_GTID_MODE'\nexports[1859] = 'ER_DUP_UNKNOWN_IN_INDEX'\nexports[1860] = 'ER_IDENT_CAUSES_TOO_LONG_PATH'\nexports[1861] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_NOT_NULL'\nexports[1862] = 'ER_MUST_CHANGE_PASSWORD_LOGIN'\nexports[1863] = 'ER_ROW_IN_WRONG_PARTITION'\nexports[1864] = 'ER_MTA_EVENT_BIGGER_PENDING_JOBS_SIZE_MAX'\nexports[1865] = 'ER_INNODB_NO_FT_USES_PARSER'\nexports[1866] = 'ER_BINLOG_LOGICAL_CORRUPTION'\nexports[1867] = 'ER_WARN_PURGE_LOG_IN_USE'\nexports[1868] = 'ER_WARN_PURGE_LOG_IS_ACTIVE'\nexports[1869] = 'ER_AUTO_INCREMENT_CONFLICT'\nexports[1870] = 'WARN_ON_BLOCKHOLE_IN_RBR'\nexports[1871] = 'ER_REPLICA_CM_INIT_REPOSITORY'\nexports[1872] = 'ER_REPLICA_AM_INIT_REPOSITORY'\nexports[1873] = 'ER_ACCESS_DENIED_CHANGE_USER_ERROR'\nexports[1874] = 'ER_INNODB_READ_ONLY'\nexports[1875] = 'ER_STOP_REPLICA_SQL_THREAD_TIMEOUT'\nexports[1876] = 'ER_STOP_REPLICA_IO_THREAD_TIMEOUT'\nexports[1877] = 'ER_TABLE_CORRUPT'\nexports[1878] = 'ER_TEMP_FILE_WRITE_FAILURE'\nexports[1879] = 'ER_INNODB_FT_AUX_NOT_HEX_ID'\nexports[1880] = 'ER_OLD_TEMPORALS_UPGRADED'\nexports[1881] = 'ER_INNODB_FORCED_RECOVERY'\nexports[1882] = 'ER_AES_INVALID_IV'\nexports[1883] = 'ER_PLUGIN_CANNOT_BE_UNINSTALLED'\nexports[1884] = 'ER_GTID_UNSAFE_BINLOG_SPLITTABLE_STATEMENT_AND_ASSIGNED_GTID'\nexports[1885] = 'ER_REPLICA_HAS_MORE_GTIDS_THAN_SOURCE'\nexports[1886] = 'ER_MISSING_KEY'\nexports[1887] = 'WARN_NAMED_PIPE_ACCESS_EVERYONE'\nexports[3000] = 'ER_FILE_CORRUPT'\nexports[3001] = 'ER_ERROR_ON_SOURCE'\nexports[3002] = 'ER_INCONSISTENT_ERROR'\nexports[3003] = 'ER_STORAGE_ENGINE_NOT_LOADED'\nexports[3004] = 'ER_GET_STACKED_DA_WITHOUT_ACTIVE_HANDLER'\nexports[3005] = 'ER_WARN_LEGACY_SYNTAX_CONVERTED'\nexports[3006] = 'ER_BINLOG_UNSAFE_FULLTEXT_PLUGIN'\nexports[3007] = 'ER_CANNOT_DISCARD_TEMPORARY_TABLE'\nexports[3008] = 'ER_FK_DEPTH_EXCEEDED'\nexports[3009] = 'ER_COL_COUNT_DOESNT_MATCH_PLEASE_UPDATE_V2'\nexports[3010] = 'ER_WARN_TRIGGER_DOESNT_HAVE_CREATED'\nexports[3011] = 'ER_REFERENCED_TRG_DOES_NOT_EXIST'\nexports[3012] = 'ER_EXPLAIN_NOT_SUPPORTED'\nexports[3013] = 'ER_INVALID_FIELD_SIZE'\nexports[3014] = 'ER_MISSING_HA_CREATE_OPTION'\nexports[3015] = 'ER_ENGINE_OUT_OF_MEMORY'\nexports[3016] = 'ER_PASSWORD_EXPIRE_ANONYMOUS_USER'\nexports[3017] = 'ER_REPLICA_SQL_THREAD_MUST_STOP'\nexports[3018] = 'ER_NO_FT_MATERIALIZED_SUBQUERY'\nexports[3019] = 'ER_INNODB_UNDO_LOG_FULL'\nexports[3020] = 'ER_INVALID_ARGUMENT_FOR_LOGARITHM'\nexports[3021] = 'ER_REPLICA_CHANNEL_IO_THREAD_MUST_STOP'\nexports[3022] = 'ER_WARN_OPEN_TEMP_TABLES_MUST_BE_ZERO'\nexports[3023] = 'ER_WARN_ONLY_SOURCE_LOG_FILE_NO_POS'\nexports[3024] = 'ER_QUERY_TIMEOUT'\nexports[3025] = 'ER_NON_RO_SELECT_DISABLE_TIMER'\nexports[3026] = 'ER_DUP_LIST_ENTRY'\nexports[3027] = 'ER_SQL_MODE_NO_EFFECT'\nexports[3028] = 'ER_AGGREGATE_ORDER_FOR_UNION'\nexports[3029] = 'ER_AGGREGATE_ORDER_NON_AGG_QUERY'\nexports[3030] = 'ER_REPLICA_WORKER_STOPPED_PREVIOUS_THD_ERROR'\nexports[3031] = 'ER_DONT_SUPPORT_REPLICA_PRESERVE_COMMIT_ORDER'\nexports[3032] = 'ER_SERVER_OFFLINE_MODE'\nexports[3033] = 'ER_GIS_DIFFERENT_SRIDS'\nexports[3034] = 'ER_GIS_UNSUPPORTED_ARGUMENT'\nexports[3035] = 'ER_GIS_UNKNOWN_ERROR'\nexports[3036] = 'ER_GIS_UNKNOWN_EXCEPTION'\nexports[3037] = 'ER_GIS_INVALID_DATA'\nexports[3038] = 'ER_BOOST_GEOMETRY_EMPTY_INPUT_EXCEPTION'\nexports[3039] = 'ER_BOOST_GEOMETRY_CENTROID_EXCEPTION'\nexports[3040] = 'ER_BOOST_GEOMETRY_OVERLAY_INVALID_INPUT_EXCEPTION'\nexports[3041] = 'ER_BOOST_GEOMETRY_TURN_INFO_EXCEPTION'\nexports[3042] = 'ER_BOOST_GEOMETRY_SELF_INTERSECTION_POINT_EXCEPTION'\nexports[3043] = 'ER_BOOST_GEOMETRY_UNKNOWN_EXCEPTION'\nexports[3044] = 'ER_STD_BAD_ALLOC_ERROR'\nexports[3045] = 'ER_STD_DOMAIN_ERROR'\nexports[3046] = 'ER_STD_LENGTH_ERROR'\nexports[3047] = 'ER_STD_INVALID_ARGUMENT'\nexports[3048] = 'ER_STD_OUT_OF_RANGE_ERROR'\nexports[3049] = 'ER_STD_OVERFLOW_ERROR'\nexports[3050] = 'ER_STD_RANGE_ERROR'\nexports[3051] = 'ER_STD_UNDERFLOW_ERROR'\nexports[3052] = 'ER_STD_LOGIC_ERROR'\nexports[3053] = 'ER_STD_RUNTIME_ERROR'\nexports[3054] = 'ER_STD_UNKNOWN_EXCEPTION'\nexports[3055] = 'ER_GIS_DATA_WRONG_ENDIANESS'\nexports[3056] = 'ER_CHANGE_SOURCE_PASSWORD_LENGTH'\nexports[3057] = 'ER_USER_LOCK_WRONG_NAME'\nexports[3058] = 'ER_USER_LOCK_DEADLOCK'\nexports[3059] = 'ER_REPLACE_INACCESSIBLE_ROWS'\nexports[3060] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_GIS'\nexports[3061] = 'ER_ILLEGAL_USER_VAR'\nexports[3062] = 'ER_GTID_MODE_OFF'\nexports[3063] = 'ER_UNSUPPORTED_BY_REPLICATION_THREAD'\nexports[3064] = 'ER_INCORRECT_TYPE'\nexports[3065] = 'ER_FIELD_IN_ORDER_NOT_SELECT'\nexports[3066] = 'ER_AGGREGATE_IN_ORDER_NOT_SELECT'\nexports[3067] = 'ER_INVALID_RPL_WILD_TABLE_FILTER_PATTERN'\nexports[3068] = 'ER_NET_OK_PACKET_TOO_LARGE'\nexports[3069] = 'ER_INVALID_JSON_DATA'\nexports[3070] = 'ER_INVALID_GEOJSON_MISSING_MEMBER'\nexports[3071] = 'ER_INVALID_GEOJSON_WRONG_TYPE'\nexports[3072] = 'ER_INVALID_GEOJSON_UNSPECIFIED'\nexports[3073] = 'ER_DIMENSION_UNSUPPORTED'\nexports[3074] = 'ER_REPLICA_CHANNEL_DOES_NOT_EXIST'\nexports[3075] = 'ER_SLAVE_MULTIPLE_CHANNELS_HOST_PORT'\nexports[3076] = 'ER_REPLICA_CHANNEL_NAME_INVALID_OR_TOO_LONG'\nexports[3077] = 'ER_REPLICA_NEW_CHANNEL_WRONG_REPOSITORY'\nexports[3078] = 'ER_SLAVE_CHANNEL_DELETE'\nexports[3079] = 'ER_REPLICA_MULTIPLE_CHANNELS_CMD'\nexports[3080] = 'ER_REPLICA_MAX_CHANNELS_EXCEEDED'\nexports[3081] = 'ER_REPLICA_CHANNEL_MUST_STOP'\nexports[3082] = 'ER_REPLICA_CHANNEL_NOT_RUNNING'\nexports[3083] = 'ER_REPLICA_CHANNEL_WAS_RUNNING'\nexports[3084] = 'ER_REPLICA_CHANNEL_WAS_NOT_RUNNING'\nexports[3085] = 'ER_REPLICA_CHANNEL_SQL_THREAD_MUST_STOP'\nexports[3086] = 'ER_REPLICA_CHANNEL_SQL_SKIP_COUNTER'\nexports[3087] = 'ER_WRONG_FIELD_WITH_GROUP_V2'\nexports[3088] = 'ER_MIX_OF_GROUP_FUNC_AND_FIELDS_V2'\nexports[3089] = 'ER_WARN_DEPRECATED_SYSVAR_UPDATE'\nexports[3090] = 'ER_WARN_DEPRECATED_SQLMODE'\nexports[3091] = 'ER_CANNOT_LOG_PARTIAL_DROP_DATABASE_WITH_GTID'\nexports[3092] = 'ER_GROUP_REPLICATION_CONFIGURATION'\nexports[3093] = 'ER_GROUP_REPLICATION_RUNNING'\nexports[3094] = 'ER_GROUP_REPLICATION_APPLIER_INIT_ERROR'\nexports[3095] = 'ER_GROUP_REPLICATION_STOP_APPLIER_THREAD_TIMEOUT'\nexports[3096] = 'ER_GROUP_REPLICATION_COMMUNICATION_LAYER_SESSION_ERROR'\nexports[3097] = 'ER_GROUP_REPLICATION_COMMUNICATION_LAYER_JOIN_ERROR'\nexports[3098] = 'ER_BEFORE_DML_VALIDATION_ERROR'\nexports[3099] = 'ER_PREVENTS_VARIABLE_WITHOUT_RBR'\nexports[3100] = 'ER_RUN_HOOK_ERROR'\nexports[3101] = 'ER_TRANSACTION_ROLLBACK_DURING_COMMIT'\nexports[3102] = 'ER_GENERATED_COLUMN_FUNCTION_IS_NOT_ALLOWED'\nexports[3103] = 'ER_UNSUPPORTED_ALTER_INPLACE_ON_VIRTUAL_COLUMN'\nexports[3104] = 'ER_WRONG_FK_OPTION_FOR_GENERATED_COLUMN'\nexports[3105] = 'ER_NON_DEFAULT_VALUE_FOR_GENERATED_COLUMN'\nexports[3106] = 'ER_UNSUPPORTED_ACTION_ON_GENERATED_COLUMN'\nexports[3107] = 'ER_GENERATED_COLUMN_NON_PRIOR'\nexports[3108] = 'ER_DEPENDENT_BY_GENERATED_COLUMN'\nexports[3109] = 'ER_GENERATED_COLUMN_REF_AUTO_INC'\nexports[3110] = 'ER_FEATURE_NOT_AVAILABLE'\nexports[3111] = 'ER_CANT_SET_GTID_MODE'\nexports[3112] = 'ER_CANT_USE_AUTO_POSITION_WITH_GTID_MODE_OFF'\nexports[3113] = 'ER_CANT_REPLICATE_ANONYMOUS_WITH_AUTO_POSITION'\nexports[3114] = 'ER_CANT_REPLICATE_ANONYMOUS_WITH_GTID_MODE_ON'\nexports[3115] = 'ER_CANT_REPLICATE_GTID_WITH_GTID_MODE_OFF'\nexports[3116] =\n  'ER_CANT_ENFORCE_GTID_CONSISTENCY_WITH_ONGOING_GTID_VIOLATING_TX'\nexports[3117] =\n  'ER_ENFORCE_GTID_CONSISTENCY_WARN_WITH_ONGOING_GTID_VIOLATING_TX'\nexports[3118] = 'ER_ACCOUNT_HAS_BEEN_LOCKED'\nexports[3119] = 'ER_WRONG_TABLESPACE_NAME'\nexports[3120] = 'ER_TABLESPACE_IS_NOT_EMPTY'\nexports[3121] = 'ER_WRONG_FILE_NAME'\nexports[3122] = 'ER_BOOST_GEOMETRY_INCONSISTENT_TURNS_EXCEPTION'\nexports[3123] = 'ER_WARN_OPTIMIZER_HINT_SYNTAX_ERROR'\nexports[3124] = 'ER_WARN_BAD_MAX_EXECUTION_TIME'\nexports[3125] = 'ER_WARN_UNSUPPORTED_MAX_EXECUTION_TIME'\nexports[3126] = 'ER_WARN_CONFLICTING_HINT'\nexports[3127] = 'ER_WARN_UNKNOWN_QB_NAME'\nexports[3128] = 'ER_UNRESOLVED_HINT_NAME'\nexports[3129] = 'ER_WARN_ON_MODIFYING_GTID_EXECUTED_TABLE'\nexports[3130] = 'ER_PLUGGABLE_PROTOCOL_COMMAND_NOT_SUPPORTED'\nexports[3131] = 'ER_LOCKING_SERVICE_WRONG_NAME'\nexports[3132] = 'ER_LOCKING_SERVICE_DEADLOCK'\nexports[3133] = 'ER_LOCKING_SERVICE_TIMEOUT'\nexports[3134] = 'ER_GIS_MAX_POINTS_IN_GEOMETRY_OVERFLOWED'\nexports[3135] = 'ER_SQL_MODE_MERGED'\nexports[3136] = 'ER_VTOKEN_PLUGIN_TOKEN_MISMATCH'\nexports[3137] = 'ER_VTOKEN_PLUGIN_TOKEN_NOT_FOUND'\nexports[3138] = 'ER_CANT_SET_VARIABLE_WHEN_OWNING_GTID'\nexports[3139] = 'ER_REPLICA_CHANNEL_OPERATION_NOT_ALLOWED'\nexports[3140] = 'ER_INVALID_JSON_TEXT'\nexports[3141] = 'ER_INVALID_JSON_TEXT_IN_PARAM'\nexports[3142] = 'ER_INVALID_JSON_BINARY_DATA'\nexports[3143] = 'ER_INVALID_JSON_PATH'\nexports[3144] = 'ER_INVALID_JSON_CHARSET'\nexports[3145] = 'ER_INVALID_JSON_CHARSET_IN_FUNCTION'\nexports[3146] = 'ER_INVALID_TYPE_FOR_JSON'\nexports[3147] = 'ER_INVALID_CAST_TO_JSON'\nexports[3148] = 'ER_INVALID_JSON_PATH_CHARSET'\nexports[3149] = 'ER_INVALID_JSON_PATH_WILDCARD'\nexports[3150] = 'ER_JSON_VALUE_TOO_BIG'\nexports[3151] = 'ER_JSON_KEY_TOO_BIG'\nexports[3152] = 'ER_JSON_USED_AS_KEY'\nexports[3153] = 'ER_JSON_VACUOUS_PATH'\nexports[3154] = 'ER_JSON_BAD_ONE_OR_ALL_ARG'\nexports[3155] = 'ER_NUMERIC_JSON_VALUE_OUT_OF_RANGE'\nexports[3156] = 'ER_INVALID_JSON_VALUE_FOR_CAST'\nexports[3157] = 'ER_JSON_DOCUMENT_TOO_DEEP'\nexports[3158] = 'ER_JSON_DOCUMENT_NULL_KEY'\nexports[3159] = 'ER_SECURE_TRANSPORT_REQUIRED'\nexports[3160] = 'ER_NO_SECURE_TRANSPORTS_CONFIGURED'\nexports[3161] = 'ER_DISABLED_STORAGE_ENGINE'\nexports[3162] = 'ER_USER_DOES_NOT_EXIST'\nexports[3163] = 'ER_USER_ALREADY_EXISTS'\nexports[3164] = 'ER_AUDIT_API_ABORT'\nexports[3165] = 'ER_INVALID_JSON_PATH_ARRAY_CELL'\nexports[3166] = 'ER_BUFPOOL_RESIZE_INPROGRESS'\nexports[3167] = 'ER_FEATURE_DISABLED_SEE_DOC'\nexports[3168] = 'ER_SERVER_ISNT_AVAILABLE'\nexports[3169] = 'ER_SESSION_WAS_KILLED'\nexports[3170] = 'ER_CAPACITY_EXCEEDED'\nexports[3171] = 'ER_CAPACITY_EXCEEDED_IN_RANGE_OPTIMIZER'\nexports[3172] = 'ER_TABLE_NEEDS_UPG_PART'\nexports[3173] = 'ER_CANT_WAIT_FOR_EXECUTED_GTID_SET_WHILE_OWNING_A_GTID'\nexports[3174] = 'ER_CANNOT_ADD_FOREIGN_BASE_COL_VIRTUAL'\nexports[3175] = 'ER_CANNOT_CREATE_VIRTUAL_INDEX_CONSTRAINT'\nexports[3176] = 'ER_ERROR_ON_MODIFYING_GTID_EXECUTED_TABLE'\nexports[3177] = 'ER_LOCK_REFUSED_BY_ENGINE'\nexports[3178] = 'ER_UNSUPPORTED_ALTER_ONLINE_ON_VIRTUAL_COLUMN'\nexports[3179] = 'ER_MASTER_KEY_ROTATION_NOT_SUPPORTED_BY_SE'\nexports[3180] = 'ER_MASTER_KEY_ROTATION_ERROR_BY_SE'\nexports[3181] = 'ER_MASTER_KEY_ROTATION_BINLOG_FAILED'\nexports[3182] = 'ER_MASTER_KEY_ROTATION_SE_UNAVAILABLE'\nexports[3183] = 'ER_TABLESPACE_CANNOT_ENCRYPT'\nexports[3184] = 'ER_INVALID_ENCRYPTION_OPTION'\nexports[3185] = 'ER_CANNOT_FIND_KEY_IN_KEYRING'\nexports[3186] = 'ER_CAPACITY_EXCEEDED_IN_PARSER'\nexports[3187] = 'ER_UNSUPPORTED_ALTER_ENCRYPTION_INPLACE'\nexports[3188] = 'ER_KEYRING_UDF_KEYRING_SERVICE_ERROR'\nexports[3189] = 'ER_USER_COLUMN_OLD_LENGTH'\nexports[3190] = 'ER_CANT_RESET_SOURCE'\nexports[3191] = 'ER_GROUP_REPLICATION_MAX_GROUP_SIZE'\nexports[3192] = 'ER_CANNOT_ADD_FOREIGN_BASE_COL_STORED'\nexports[3193] = 'ER_TABLE_REFERENCED'\nexports[3194] = 'ER_PARTITION_ENGINE_DEPRECATED_FOR_TABLE'\nexports[3195] = 'ER_WARN_USING_GEOMFROMWKB_TO_SET_SRID_ZERO'\nexports[3196] = 'ER_WARN_USING_GEOMFROMWKB_TO_SET_SRID'\nexports[3197] = 'ER_XA_RETRY'\nexports[3198] = 'ER_KEYRING_AWS_UDF_AWS_KMS_ERROR'\nexports[3199] = 'ER_BINLOG_UNSAFE_XA'\nexports[3200] = 'ER_UDF_ERROR'\nexports[3201] = 'ER_KEYRING_MIGRATION_FAILURE'\nexports[3202] = 'ER_KEYRING_ACCESS_DENIED_ERROR'\nexports[3203] = 'ER_KEYRING_MIGRATION_STATUS'\nexports[3204] = 'ER_PLUGIN_FAILED_TO_OPEN_TABLES'\nexports[3205] = 'ER_PLUGIN_FAILED_TO_OPEN_TABLE'\nexports[3206] = 'ER_AUDIT_LOG_NO_KEYRING_PLUGIN_INSTALLED'\nexports[3207] = 'ER_AUDIT_LOG_ENCRYPTION_PASSWORD_HAS_NOT_BEEN_SET'\nexports[3208] = 'ER_AUDIT_LOG_COULD_NOT_CREATE_AES_KEY'\nexports[3209] = 'ER_AUDIT_LOG_ENCRYPTION_PASSWORD_CANNOT_BE_FETCHED'\nexports[3210] = 'ER_AUDIT_LOG_JSON_FILTERING_NOT_ENABLED'\nexports[3211] = 'ER_AUDIT_LOG_UDF_INSUFFICIENT_PRIVILEGE'\nexports[3212] = 'ER_AUDIT_LOG_SUPER_PRIVILEGE_REQUIRED'\nexports[3213] = 'ER_COULD_NOT_REINITIALIZE_AUDIT_LOG_FILTERS'\nexports[3214] = 'ER_AUDIT_LOG_UDF_INVALID_ARGUMENT_TYPE'\nexports[3215] = 'ER_AUDIT_LOG_UDF_INVALID_ARGUMENT_COUNT'\nexports[3216] = 'ER_AUDIT_LOG_HAS_NOT_BEEN_INSTALLED'\nexports[3217] = 'ER_AUDIT_LOG_UDF_READ_INVALID_MAX_ARRAY_LENGTH_ARG_TYPE'\nexports[3218] = 'ER_AUDIT_LOG_UDF_READ_INVALID_MAX_ARRAY_LENGTH_ARG_VALUE'\nexports[3219] = 'ER_AUDIT_LOG_JSON_FILTER_PARSING_ERROR'\nexports[3220] = 'ER_AUDIT_LOG_JSON_FILTER_NAME_CANNOT_BE_EMPTY'\nexports[3221] = 'ER_AUDIT_LOG_JSON_USER_NAME_CANNOT_BE_EMPTY'\nexports[3222] = 'ER_AUDIT_LOG_JSON_FILTER_DOES_NOT_EXISTS'\nexports[3223] = 'ER_AUDIT_LOG_USER_FIRST_CHARACTER_MUST_BE_ALPHANUMERIC'\nexports[3224] = 'ER_AUDIT_LOG_USER_NAME_INVALID_CHARACTER'\nexports[3225] = 'ER_AUDIT_LOG_HOST_NAME_INVALID_CHARACTER'\nexports[3226] = 'WARN_DEPRECATED_MAXDB_SQL_MODE_FOR_TIMESTAMP'\nexports[3227] = 'ER_XA_REPLICATION_FILTERS'\nexports[3228] = 'ER_CANT_OPEN_ERROR_LOG'\nexports[3229] = 'ER_GROUPING_ON_TIMESTAMP_IN_DST'\nexports[3230] = 'ER_CANT_START_SERVER_NAMED_PIPE'\nexports[3231] = 'ER_WRITE_SET_EXCEEDS_LIMIT'\nexports[3232] = 'ER_DEPRECATED_TLS_VERSION_SESSION_57'\nexports[3233] = 'ER_WARN_DEPRECATED_TLS_VERSION_57'\nexports[3234] = 'ER_WARN_WRONG_NATIVE_TABLE_STRUCTURE'\nexports[3235] = 'ER_AES_INVALID_KDF_NAME'\nexports[3236] = 'ER_AES_INVALID_KDF_ITERATIONS'\nexports[3237] = 'WARN_AES_KEY_SIZE'\nexports[3238] = 'ER_AES_INVALID_KDF_OPTION_SIZE'\nexports[3500] = 'ER_UNSUPPORT_COMPRESSED_TEMPORARY_TABLE'\nexports[3501] = 'ER_ACL_OPERATION_FAILED'\nexports[3502] = 'ER_UNSUPPORTED_INDEX_ALGORITHM'\nexports[3503] = 'ER_NO_SUCH_DB'\nexports[3504] = 'ER_TOO_BIG_ENUM'\nexports[3505] = 'ER_TOO_LONG_SET_ENUM_VALUE'\nexports[3506] = 'ER_INVALID_DD_OBJECT'\nexports[3507] = 'ER_UPDATING_DD_TABLE'\nexports[3508] = 'ER_INVALID_DD_OBJECT_ID'\nexports[3509] = 'ER_INVALID_DD_OBJECT_NAME'\nexports[3510] = 'ER_TABLESPACE_MISSING_WITH_NAME'\nexports[3511] = 'ER_TOO_LONG_ROUTINE_COMMENT'\nexports[3512] = 'ER_SP_LOAD_FAILED'\nexports[3513] = 'ER_INVALID_BITWISE_OPERANDS_SIZE'\nexports[3514] = 'ER_INVALID_BITWISE_AGGREGATE_OPERANDS_SIZE'\nexports[3515] = 'ER_WARN_UNSUPPORTED_HINT'\nexports[3516] = 'ER_UNEXPECTED_GEOMETRY_TYPE'\nexports[3517] = 'ER_SRS_PARSE_ERROR'\nexports[3518] = 'ER_SRS_PROJ_PARAMETER_MISSING'\nexports[3519] = 'ER_WARN_SRS_NOT_FOUND'\nexports[3520] = 'ER_SRS_NOT_CARTESIAN'\nexports[3521] = 'ER_SRS_NOT_CARTESIAN_UNDEFINED'\nexports[3522] = 'ER_PK_INDEX_CANT_BE_INVISIBLE'\nexports[3523] = 'ER_UNKNOWN_AUTHID'\nexports[3524] = 'ER_FAILED_ROLE_GRANT'\nexports[3525] = 'ER_OPEN_ROLE_TABLES'\nexports[3526] = 'ER_FAILED_DEFAULT_ROLES'\nexports[3527] = 'ER_COMPONENTS_NO_SCHEME'\nexports[3528] = 'ER_COMPONENTS_NO_SCHEME_SERVICE'\nexports[3529] = 'ER_COMPONENTS_CANT_LOAD'\nexports[3530] = 'ER_ROLE_NOT_GRANTED'\nexports[3531] = 'ER_FAILED_REVOKE_ROLE'\nexports[3532] = 'ER_RENAME_ROLE'\nexports[3533] = 'ER_COMPONENTS_CANT_ACQUIRE_SERVICE_IMPLEMENTATION'\nexports[3534] = 'ER_COMPONENTS_CANT_SATISFY_DEPENDENCY'\nexports[3535] = 'ER_COMPONENTS_LOAD_CANT_REGISTER_SERVICE_IMPLEMENTATION'\nexports[3536] = 'ER_COMPONENTS_LOAD_CANT_INITIALIZE'\nexports[3537] = 'ER_COMPONENTS_UNLOAD_NOT_LOADED'\nexports[3538] = 'ER_COMPONENTS_UNLOAD_CANT_DEINITIALIZE'\nexports[3539] = 'ER_COMPONENTS_CANT_RELEASE_SERVICE'\nexports[3540] = 'ER_COMPONENTS_UNLOAD_CANT_UNREGISTER_SERVICE'\nexports[3541] = 'ER_COMPONENTS_CANT_UNLOAD'\nexports[3542] = 'ER_WARN_UNLOAD_THE_NOT_PERSISTED'\nexports[3543] = 'ER_COMPONENT_TABLE_INCORRECT'\nexports[3544] = 'ER_COMPONENT_MANIPULATE_ROW_FAILED'\nexports[3545] = 'ER_COMPONENTS_UNLOAD_DUPLICATE_IN_GROUP'\nexports[3546] = 'ER_CANT_SET_GTID_PURGED_DUE_SETS_CONSTRAINTS'\nexports[3547] = 'ER_CANNOT_LOCK_USER_MANAGEMENT_CACHES'\nexports[3548] = 'ER_SRS_NOT_FOUND'\nexports[3549] = 'ER_VARIABLE_NOT_PERSISTED'\nexports[3550] = 'ER_IS_QUERY_INVALID_CLAUSE'\nexports[3551] = 'ER_UNABLE_TO_STORE_STATISTICS'\nexports[3552] = 'ER_NO_SYSTEM_SCHEMA_ACCESS'\nexports[3553] = 'ER_NO_SYSTEM_TABLESPACE_ACCESS'\nexports[3554] = 'ER_NO_SYSTEM_TABLE_ACCESS'\nexports[3555] = 'ER_NO_SYSTEM_TABLE_ACCESS_FOR_DICTIONARY_TABLE'\nexports[3556] = 'ER_NO_SYSTEM_TABLE_ACCESS_FOR_SYSTEM_TABLE'\nexports[3557] = 'ER_NO_SYSTEM_TABLE_ACCESS_FOR_TABLE'\nexports[3558] = 'ER_INVALID_OPTION_KEY'\nexports[3559] = 'ER_INVALID_OPTION_VALUE'\nexports[3560] = 'ER_INVALID_OPTION_KEY_VALUE_PAIR'\nexports[3561] = 'ER_INVALID_OPTION_START_CHARACTER'\nexports[3562] = 'ER_INVALID_OPTION_END_CHARACTER'\nexports[3563] = 'ER_INVALID_OPTION_CHARACTERS'\nexports[3564] = 'ER_DUPLICATE_OPTION_KEY'\nexports[3565] = 'ER_WARN_SRS_NOT_FOUND_AXIS_ORDER'\nexports[3566] = 'ER_NO_ACCESS_TO_NATIVE_FCT'\nexports[3567] = 'ER_RESET_SOURCE_TO_VALUE_OUT_OF_RANGE'\nexports[3568] = 'ER_UNRESOLVED_TABLE_LOCK'\nexports[3569] = 'ER_DUPLICATE_TABLE_LOCK'\nexports[3570] = 'ER_BINLOG_UNSAFE_SKIP_LOCKED'\nexports[3571] = 'ER_BINLOG_UNSAFE_NOWAIT'\nexports[3572] = 'ER_LOCK_NOWAIT'\nexports[3573] = 'ER_CTE_RECURSIVE_REQUIRES_UNION'\nexports[3574] = 'ER_CTE_RECURSIVE_REQUIRES_NONRECURSIVE_FIRST'\nexports[3575] = 'ER_CTE_RECURSIVE_FORBIDS_AGGREGATION'\nexports[3576] = 'ER_CTE_RECURSIVE_FORBIDDEN_JOIN_ORDER'\nexports[3577] = 'ER_CTE_RECURSIVE_REQUIRES_SINGLE_REFERENCE'\nexports[3578] = 'ER_SWITCH_TMP_ENGINE'\nexports[3579] = 'ER_WINDOW_NO_SUCH_WINDOW'\nexports[3580] = 'ER_WINDOW_CIRCULARITY_IN_WINDOW_GRAPH'\nexports[3581] = 'ER_WINDOW_NO_CHILD_PARTITIONING'\nexports[3582] = 'ER_WINDOW_NO_INHERIT_FRAME'\nexports[3583] = 'ER_WINDOW_NO_REDEFINE_ORDER_BY'\nexports[3584] = 'ER_WINDOW_FRAME_START_ILLEGAL'\nexports[3585] = 'ER_WINDOW_FRAME_END_ILLEGAL'\nexports[3586] = 'ER_WINDOW_FRAME_ILLEGAL'\nexports[3587] = 'ER_WINDOW_RANGE_FRAME_ORDER_TYPE'\nexports[3588] = 'ER_WINDOW_RANGE_FRAME_TEMPORAL_TYPE'\nexports[3589] = 'ER_WINDOW_RANGE_FRAME_NUMERIC_TYPE'\nexports[3590] = 'ER_WINDOW_RANGE_BOUND_NOT_CONSTANT'\nexports[3591] = 'ER_WINDOW_DUPLICATE_NAME'\nexports[3592] = 'ER_WINDOW_ILLEGAL_ORDER_BY'\nexports[3593] = 'ER_WINDOW_INVALID_WINDOW_FUNC_USE'\nexports[3594] = 'ER_WINDOW_INVALID_WINDOW_FUNC_ALIAS_USE'\nexports[3595] = 'ER_WINDOW_NESTED_WINDOW_FUNC_USE_IN_WINDOW_SPEC'\nexports[3596] = 'ER_WINDOW_ROWS_INTERVAL_USE'\nexports[3597] = 'ER_WINDOW_NO_GROUP_ORDER'\nexports[3598] = 'ER_WINDOW_EXPLAIN_JSON'\nexports[3599] = 'ER_WINDOW_FUNCTION_IGNORES_FRAME'\nexports[3600] = 'ER_WL9236_NOW'\nexports[3601] = 'ER_INVALID_NO_OF_ARGS'\nexports[3602] = 'ER_FIELD_IN_GROUPING_NOT_GROUP_BY'\nexports[3603] = 'ER_TOO_LONG_TABLESPACE_COMMENT'\nexports[3604] = 'ER_ENGINE_CANT_DROP_TABLE'\nexports[3605] = 'ER_ENGINE_CANT_DROP_MISSING_TABLE'\nexports[3606] = 'ER_TABLESPACE_DUP_FILENAME'\nexports[3607] = 'ER_DB_DROP_RMDIR2'\nexports[3608] = 'ER_IMP_NO_FILES_MATCHED'\nexports[3609] = 'ER_IMP_SCHEMA_DOES_NOT_EXIST'\nexports[3610] = 'ER_IMP_TABLE_ALREADY_EXISTS'\nexports[3611] = 'ER_IMP_INCOMPATIBLE_MYSQLD_VERSION'\nexports[3612] = 'ER_IMP_INCOMPATIBLE_DD_VERSION'\nexports[3613] = 'ER_IMP_INCOMPATIBLE_SDI_VERSION'\nexports[3614] = 'ER_WARN_INVALID_HINT'\nexports[3615] = 'ER_VAR_DOES_NOT_EXIST'\nexports[3616] = 'ER_LONGITUDE_OUT_OF_RANGE'\nexports[3617] = 'ER_LATITUDE_OUT_OF_RANGE'\nexports[3618] = 'ER_NOT_IMPLEMENTED_FOR_GEOGRAPHIC_SRS'\nexports[3619] = 'ER_ILLEGAL_PRIVILEGE_LEVEL'\nexports[3620] = 'ER_NO_SYSTEM_VIEW_ACCESS'\nexports[3621] = 'ER_COMPONENT_FILTER_FLABBERGASTED'\nexports[3622] = 'ER_PART_EXPR_TOO_LONG'\nexports[3623] = 'ER_UDF_DROP_DYNAMICALLY_REGISTERED'\nexports[3624] = 'ER_UNABLE_TO_STORE_COLUMN_STATISTICS'\nexports[3625] = 'ER_UNABLE_TO_UPDATE_COLUMN_STATISTICS'\nexports[3626] = 'ER_UNABLE_TO_DROP_COLUMN_STATISTICS'\nexports[3627] = 'ER_UNABLE_TO_BUILD_HISTOGRAM'\nexports[3628] = 'ER_MANDATORY_ROLE'\nexports[3629] = 'ER_MISSING_TABLESPACE_FILE'\nexports[3630] = 'ER_PERSIST_ONLY_ACCESS_DENIED_ERROR'\nexports[3631] = 'ER_CMD_NEED_SUPER'\nexports[3632] = 'ER_PATH_IN_DATADIR'\nexports[3633] = 'ER_CLONE_DDL_IN_PROGRESS'\nexports[3634] = 'ER_CLONE_TOO_MANY_CONCURRENT_CLONES'\nexports[3635] = 'ER_APPLIER_LOG_EVENT_VALIDATION_ERROR'\nexports[3636] = 'ER_CTE_MAX_RECURSION_DEPTH'\nexports[3637] = 'ER_NOT_HINT_UPDATABLE_VARIABLE'\nexports[3638] = 'ER_CREDENTIALS_CONTRADICT_TO_HISTORY'\nexports[3639] = 'ER_WARNING_PASSWORD_HISTORY_CLAUSES_VOID'\nexports[3640] = 'ER_CLIENT_DOES_NOT_SUPPORT'\nexports[3641] = 'ER_I_S_SKIPPED_TABLESPACE'\nexports[3642] = 'ER_TABLESPACE_ENGINE_MISMATCH'\nexports[3643] = 'ER_WRONG_SRID_FOR_COLUMN'\nexports[3644] = 'ER_CANNOT_ALTER_SRID_DUE_TO_INDEX'\nexports[3645] = 'ER_WARN_BINLOG_PARTIAL_UPDATES_DISABLED'\nexports[3646] = 'ER_WARN_BINLOG_V1_ROW_EVENTS_DISABLED'\nexports[3647] = 'ER_WARN_BINLOG_PARTIAL_UPDATES_SUGGESTS_PARTIAL_IMAGES'\nexports[3648] = 'ER_COULD_NOT_APPLY_JSON_DIFF'\nexports[3649] = 'ER_CORRUPTED_JSON_DIFF'\nexports[3650] = 'ER_RESOURCE_GROUP_EXISTS'\nexports[3651] = 'ER_RESOURCE_GROUP_NOT_EXISTS'\nexports[3652] = 'ER_INVALID_VCPU_ID'\nexports[3653] = 'ER_INVALID_VCPU_RANGE'\nexports[3654] = 'ER_INVALID_THREAD_PRIORITY'\nexports[3655] = 'ER_DISALLOWED_OPERATION'\nexports[3656] = 'ER_RESOURCE_GROUP_BUSY'\nexports[3657] = 'ER_RESOURCE_GROUP_DISABLED'\nexports[3658] = 'ER_FEATURE_UNSUPPORTED'\nexports[3659] = 'ER_ATTRIBUTE_IGNORED'\nexports[3660] = 'ER_INVALID_THREAD_ID'\nexports[3661] = 'ER_RESOURCE_GROUP_BIND_FAILED'\nexports[3662] = 'ER_INVALID_USE_OF_FORCE_OPTION'\nexports[3663] = 'ER_GROUP_REPLICATION_COMMAND_FAILURE'\nexports[3664] = 'ER_SDI_OPERATION_FAILED'\nexports[3665] = 'ER_MISSING_JSON_TABLE_VALUE'\nexports[3666] = 'ER_WRONG_JSON_TABLE_VALUE'\nexports[3667] = 'ER_TF_MUST_HAVE_ALIAS'\nexports[3668] = 'ER_TF_FORBIDDEN_JOIN_TYPE'\nexports[3669] = 'ER_JT_VALUE_OUT_OF_RANGE'\nexports[3670] = 'ER_JT_MAX_NESTED_PATH'\nexports[3671] = 'ER_PASSWORD_EXPIRATION_NOT_SUPPORTED_BY_AUTH_METHOD'\nexports[3672] = 'ER_INVALID_GEOJSON_CRS_NOT_TOP_LEVEL'\nexports[3673] = 'ER_BAD_NULL_ERROR_NOT_IGNORED'\nexports[3674] = 'WARN_USELESS_SPATIAL_INDEX'\nexports[3675] = 'ER_DISK_FULL_NOWAIT'\nexports[3676] = 'ER_PARSE_ERROR_IN_DIGEST_FN'\nexports[3677] = 'ER_UNDISCLOSED_PARSE_ERROR_IN_DIGEST_FN'\nexports[3678] = 'ER_SCHEMA_DIR_EXISTS'\nexports[3679] = 'ER_SCHEMA_DIR_MISSING'\nexports[3680] = 'ER_SCHEMA_DIR_CREATE_FAILED'\nexports[3681] = 'ER_SCHEMA_DIR_UNKNOWN'\nexports[3682] = 'ER_ONLY_IMPLEMENTED_FOR_SRID_0_AND_4326'\nexports[3683] = 'ER_BINLOG_EXPIRE_LOG_DAYS_AND_SECS_USED_TOGETHER'\nexports[3684] = 'ER_REGEXP_BUFFER_OVERFLOW'\nexports[3685] = 'ER_REGEXP_ILLEGAL_ARGUMENT'\nexports[3686] = 'ER_REGEXP_INDEX_OUTOFBOUNDS_ERROR'\nexports[3687] = 'ER_REGEXP_INTERNAL_ERROR'\nexports[3688] = 'ER_REGEXP_RULE_SYNTAX'\nexports[3689] = 'ER_REGEXP_BAD_ESCAPE_SEQUENCE'\nexports[3690] = 'ER_REGEXP_UNIMPLEMENTED'\nexports[3691] = 'ER_REGEXP_MISMATCHED_PAREN'\nexports[3692] = 'ER_REGEXP_BAD_INTERVAL'\nexports[3693] = 'ER_REGEXP_MAX_LT_MIN'\nexports[3694] = 'ER_REGEXP_INVALID_BACK_REF'\nexports[3695] = 'ER_REGEXP_LOOK_BEHIND_LIMIT'\nexports[3696] = 'ER_REGEXP_MISSING_CLOSE_BRACKET'\nexports[3697] = 'ER_REGEXP_INVALID_RANGE'\nexports[3698] = 'ER_REGEXP_STACK_OVERFLOW'\nexports[3699] = 'ER_REGEXP_TIME_OUT'\nexports[3700] = 'ER_REGEXP_PATTERN_TOO_BIG'\nexports[3701] = 'ER_CANT_SET_ERROR_LOG_SERVICE'\nexports[3702] = 'ER_EMPTY_PIPELINE_FOR_ERROR_LOG_SERVICE'\nexports[3703] = 'ER_COMPONENT_FILTER_DIAGNOSTICS'\nexports[3704] = 'ER_NOT_IMPLEMENTED_FOR_CARTESIAN_SRS'\nexports[3705] = 'ER_NOT_IMPLEMENTED_FOR_PROJECTED_SRS'\nexports[3706] = 'ER_NONPOSITIVE_RADIUS'\nexports[3707] = 'ER_RESTART_SERVER_FAILED'\nexports[3708] = 'ER_SRS_MISSING_MANDATORY_ATTRIBUTE'\nexports[3709] = 'ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS'\nexports[3710] = 'ER_SRS_NAME_CANT_BE_EMPTY_OR_WHITESPACE'\nexports[3711] = 'ER_SRS_ORGANIZATION_CANT_BE_EMPTY_OR_WHITESPACE'\nexports[3712] = 'ER_SRS_ID_ALREADY_EXISTS'\nexports[3713] = 'ER_WARN_SRS_ID_ALREADY_EXISTS'\nexports[3714] = 'ER_CANT_MODIFY_SRID_0'\nexports[3715] = 'ER_WARN_RESERVED_SRID_RANGE'\nexports[3716] = 'ER_CANT_MODIFY_SRS_USED_BY_COLUMN'\nexports[3717] = 'ER_SRS_INVALID_CHARACTER_IN_ATTRIBUTE'\nexports[3718] = 'ER_SRS_ATTRIBUTE_STRING_TOO_LONG'\nexports[3719] = 'ER_DEPRECATED_UTF8_ALIAS'\nexports[3720] = 'ER_DEPRECATED_NATIONAL'\nexports[3721] = 'ER_INVALID_DEFAULT_UTF8MB4_COLLATION'\nexports[3722] = 'ER_UNABLE_TO_COLLECT_LOG_STATUS'\nexports[3723] = 'ER_RESERVED_TABLESPACE_NAME'\nexports[3724] = 'ER_UNABLE_TO_SET_OPTION'\nexports[3725] = 'ER_REPLICA_POSSIBLY_DIVERGED_AFTER_DDL'\nexports[3726] = 'ER_SRS_NOT_GEOGRAPHIC'\nexports[3727] = 'ER_POLYGON_TOO_LARGE'\nexports[3728] = 'ER_SPATIAL_UNIQUE_INDEX'\nexports[3729] = 'ER_INDEX_TYPE_NOT_SUPPORTED_FOR_SPATIAL_INDEX'\nexports[3730] = 'ER_FK_CANNOT_DROP_PARENT'\nexports[3731] = 'ER_GEOMETRY_PARAM_LONGITUDE_OUT_OF_RANGE'\nexports[3732] = 'ER_GEOMETRY_PARAM_LATITUDE_OUT_OF_RANGE'\nexports[3733] = 'ER_FK_CANNOT_USE_VIRTUAL_COLUMN'\nexports[3734] = 'ER_FK_NO_COLUMN_PARENT'\nexports[3735] = 'ER_CANT_SET_ERROR_SUPPRESSION_LIST'\nexports[3736] = 'ER_SRS_GEOGCS_INVALID_AXES'\nexports[3737] = 'ER_SRS_INVALID_SEMI_MAJOR_AXIS'\nexports[3738] = 'ER_SRS_INVALID_INVERSE_FLATTENING'\nexports[3739] = 'ER_SRS_INVALID_ANGULAR_UNIT'\nexports[3740] = 'ER_SRS_INVALID_PRIME_MERIDIAN'\nexports[3741] = 'ER_TRANSFORM_SOURCE_SRS_NOT_SUPPORTED'\nexports[3742] = 'ER_TRANSFORM_TARGET_SRS_NOT_SUPPORTED'\nexports[3743] = 'ER_TRANSFORM_SOURCE_SRS_MISSING_TOWGS84'\nexports[3744] = 'ER_TRANSFORM_TARGET_SRS_MISSING_TOWGS84'\nexports[3745] = 'ER_TEMP_TABLE_PREVENTS_SWITCH_SESSION_BINLOG_FORMAT'\nexports[3746] = 'ER_TEMP_TABLE_PREVENTS_SWITCH_GLOBAL_BINLOG_FORMAT'\nexports[3747] = 'ER_RUNNING_APPLIER_PREVENTS_SWITCH_GLOBAL_BINLOG_FORMAT'\nexports[3748] = 'ER_CLIENT_GTID_UNSAFE_CREATE_DROP_TEMP_TABLE_IN_TRX_IN_SBR'\nexports[3749] = 'ER_XA_CANT_CREATE_MDL_BACKUP'\nexports[3750] = 'ER_TABLE_WITHOUT_PK'\nexports[3751] = 'ER_WARN_DATA_TRUNCATED_FUNCTIONAL_INDEX'\nexports[3752] = 'ER_WARN_DATA_OUT_OF_RANGE_FUNCTIONAL_INDEX'\nexports[3753] = 'ER_FUNCTIONAL_INDEX_ON_JSON_OR_GEOMETRY_FUNCTION'\nexports[3754] = 'ER_FUNCTIONAL_INDEX_REF_AUTO_INCREMENT'\nexports[3755] = 'ER_CANNOT_DROP_COLUMN_FUNCTIONAL_INDEX'\nexports[3756] = 'ER_FUNCTIONAL_INDEX_PRIMARY_KEY'\nexports[3757] = 'ER_FUNCTIONAL_INDEX_ON_LOB'\nexports[3758] = 'ER_FUNCTIONAL_INDEX_FUNCTION_IS_NOT_ALLOWED'\nexports[3759] = 'ER_FULLTEXT_FUNCTIONAL_INDEX'\nexports[3760] = 'ER_SPATIAL_FUNCTIONAL_INDEX'\nexports[3761] = 'ER_WRONG_KEY_COLUMN_FUNCTIONAL_INDEX'\nexports[3762] = 'ER_FUNCTIONAL_INDEX_ON_FIELD'\nexports[3763] = 'ER_GENERATED_COLUMN_NAMED_FUNCTION_IS_NOT_ALLOWED'\nexports[3764] = 'ER_GENERATED_COLUMN_ROW_VALUE'\nexports[3765] = 'ER_GENERATED_COLUMN_VARIABLES'\nexports[3766] = 'ER_DEPENDENT_BY_DEFAULT_GENERATED_VALUE'\nexports[3767] = 'ER_DEFAULT_VAL_GENERATED_NON_PRIOR'\nexports[3768] = 'ER_DEFAULT_VAL_GENERATED_REF_AUTO_INC'\nexports[3769] = 'ER_DEFAULT_VAL_GENERATED_FUNCTION_IS_NOT_ALLOWED'\nexports[3770] = 'ER_DEFAULT_VAL_GENERATED_NAMED_FUNCTION_IS_NOT_ALLOWED'\nexports[3771] = 'ER_DEFAULT_VAL_GENERATED_ROW_VALUE'\nexports[3772] = 'ER_DEFAULT_VAL_GENERATED_VARIABLES'\nexports[3773] = 'ER_DEFAULT_AS_VAL_GENERATED'\nexports[3774] = 'ER_UNSUPPORTED_ACTION_ON_DEFAULT_VAL_GENERATED'\nexports[3775] = 'ER_GTID_UNSAFE_ALTER_ADD_COL_WITH_DEFAULT_EXPRESSION'\nexports[3776] = 'ER_FK_CANNOT_CHANGE_ENGINE'\nexports[3777] = 'ER_WARN_DEPRECATED_USER_SET_EXPR'\nexports[3778] = 'ER_WARN_DEPRECATED_UTF8MB3_COLLATION'\nexports[3779] = 'ER_WARN_DEPRECATED_NESTED_COMMENT_SYNTAX'\nexports[3780] = 'ER_FK_INCOMPATIBLE_COLUMNS'\nexports[3781] = 'ER_GR_HOLD_WAIT_TIMEOUT'\nexports[3782] = 'ER_GR_HOLD_KILLED'\nexports[3783] = 'ER_GR_HOLD_MEMBER_STATUS_ERROR'\nexports[3784] = 'ER_RPL_ENCRYPTION_FAILED_TO_FETCH_KEY'\nexports[3785] = 'ER_RPL_ENCRYPTION_KEY_NOT_FOUND'\nexports[3786] = 'ER_RPL_ENCRYPTION_KEYRING_INVALID_KEY'\nexports[3787] = 'ER_RPL_ENCRYPTION_HEADER_ERROR'\nexports[3788] = 'ER_RPL_ENCRYPTION_FAILED_TO_ROTATE_LOGS'\nexports[3789] = 'ER_RPL_ENCRYPTION_KEY_EXISTS_UNEXPECTED'\nexports[3790] = 'ER_RPL_ENCRYPTION_FAILED_TO_GENERATE_KEY'\nexports[3791] = 'ER_RPL_ENCRYPTION_FAILED_TO_STORE_KEY'\nexports[3792] = 'ER_RPL_ENCRYPTION_FAILED_TO_REMOVE_KEY'\nexports[3793] = 'ER_RPL_ENCRYPTION_UNABLE_TO_CHANGE_OPTION'\nexports[3794] = 'ER_RPL_ENCRYPTION_MASTER_KEY_RECOVERY_FAILED'\nexports[3795] = 'ER_SLOW_LOG_MODE_IGNORED_WHEN_NOT_LOGGING_TO_FILE'\nexports[3796] = 'ER_GRP_TRX_CONSISTENCY_NOT_ALLOWED'\nexports[3797] = 'ER_GRP_TRX_CONSISTENCY_BEFORE'\nexports[3798] = 'ER_GRP_TRX_CONSISTENCY_AFTER_ON_TRX_BEGIN'\nexports[3799] = 'ER_GRP_TRX_CONSISTENCY_BEGIN_NOT_ALLOWED'\nexports[3800] = 'ER_FUNCTIONAL_INDEX_ROW_VALUE_IS_NOT_ALLOWED'\nexports[3801] = 'ER_RPL_ENCRYPTION_FAILED_TO_ENCRYPT'\nexports[3802] = 'ER_PAGE_TRACKING_NOT_STARTED'\nexports[3803] = 'ER_PAGE_TRACKING_RANGE_NOT_TRACKED'\nexports[3804] = 'ER_PAGE_TRACKING_CANNOT_PURGE'\nexports[3805] = 'ER_RPL_ENCRYPTION_CANNOT_ROTATE_BINLOG_MASTER_KEY'\nexports[3806] = 'ER_BINLOG_MASTER_KEY_RECOVERY_OUT_OF_COMBINATION'\nexports[3807] = 'ER_BINLOG_MASTER_KEY_ROTATION_FAIL_TO_OPERATE_KEY'\nexports[3808] = 'ER_BINLOG_MASTER_KEY_ROTATION_FAIL_TO_ROTATE_LOGS'\nexports[3809] = 'ER_BINLOG_MASTER_KEY_ROTATION_FAIL_TO_REENCRYPT_LOG'\nexports[3810] = 'ER_BINLOG_MASTER_KEY_ROTATION_FAIL_TO_CLEANUP_UNUSED_KEYS'\nexports[3811] = 'ER_BINLOG_MASTER_KEY_ROTATION_FAIL_TO_CLEANUP_AUX_KEY'\nexports[3812] = 'ER_NON_BOOLEAN_EXPR_FOR_CHECK_CONSTRAINT'\nexports[3813] = 'ER_COLUMN_CHECK_CONSTRAINT_REFERENCES_OTHER_COLUMN'\nexports[3814] = 'ER_CHECK_CONSTRAINT_NAMED_FUNCTION_IS_NOT_ALLOWED'\nexports[3815] = 'ER_CHECK_CONSTRAINT_FUNCTION_IS_NOT_ALLOWED'\nexports[3816] = 'ER_CHECK_CONSTRAINT_VARIABLES'\nexports[3817] = 'ER_CHECK_CONSTRAINT_ROW_VALUE'\nexports[3818] = 'ER_CHECK_CONSTRAINT_REFERS_AUTO_INCREMENT_COLUMN'\nexports[3819] = 'ER_CHECK_CONSTRAINT_VIOLATED'\nexports[3820] = 'ER_CHECK_CONSTRAINT_REFERS_UNKNOWN_COLUMN'\nexports[3821] = 'ER_CHECK_CONSTRAINT_NOT_FOUND'\nexports[3822] = 'ER_CHECK_CONSTRAINT_DUP_NAME'\nexports[3823] = 'ER_CHECK_CONSTRAINT_CLAUSE_USING_FK_REFER_ACTION_COLUMN'\nexports[3824] = 'WARN_UNENCRYPTED_TABLE_IN_ENCRYPTED_DB'\nexports[3825] = 'ER_INVALID_ENCRYPTION_REQUEST'\nexports[3826] = 'ER_CANNOT_SET_TABLE_ENCRYPTION'\nexports[3827] = 'ER_CANNOT_SET_DATABASE_ENCRYPTION'\nexports[3828] = 'ER_CANNOT_SET_TABLESPACE_ENCRYPTION'\nexports[3829] = 'ER_TABLESPACE_CANNOT_BE_ENCRYPTED'\nexports[3830] = 'ER_TABLESPACE_CANNOT_BE_DECRYPTED'\nexports[3831] = 'ER_TABLESPACE_TYPE_UNKNOWN'\nexports[3832] = 'ER_TARGET_TABLESPACE_UNENCRYPTED'\nexports[3833] = 'ER_CANNOT_USE_ENCRYPTION_CLAUSE'\nexports[3834] = 'ER_INVALID_MULTIPLE_CLAUSES'\nexports[3835] = 'ER_UNSUPPORTED_USE_OF_GRANT_AS'\nexports[3836] = 'ER_UKNOWN_AUTH_ID_OR_ACCESS_DENIED_FOR_GRANT_AS'\nexports[3837] = 'ER_DEPENDENT_BY_FUNCTIONAL_INDEX'\nexports[3838] = 'ER_PLUGIN_NOT_EARLY'\nexports[3839] = 'ER_INNODB_REDO_LOG_ARCHIVE_START_SUBDIR_PATH'\nexports[3840] = 'ER_INNODB_REDO_LOG_ARCHIVE_START_TIMEOUT'\nexports[3841] = 'ER_INNODB_REDO_LOG_ARCHIVE_DIRS_INVALID'\nexports[3842] = 'ER_INNODB_REDO_LOG_ARCHIVE_LABEL_NOT_FOUND'\nexports[3843] = 'ER_INNODB_REDO_LOG_ARCHIVE_DIR_EMPTY'\nexports[3844] = 'ER_INNODB_REDO_LOG_ARCHIVE_NO_SUCH_DIR'\nexports[3845] = 'ER_INNODB_REDO_LOG_ARCHIVE_DIR_CLASH'\nexports[3846] = 'ER_INNODB_REDO_LOG_ARCHIVE_DIR_PERMISSIONS'\nexports[3847] = 'ER_INNODB_REDO_LOG_ARCHIVE_FILE_CREATE'\nexports[3848] = 'ER_INNODB_REDO_LOG_ARCHIVE_ACTIVE'\nexports[3849] = 'ER_INNODB_REDO_LOG_ARCHIVE_INACTIVE'\nexports[3850] = 'ER_INNODB_REDO_LOG_ARCHIVE_FAILED'\nexports[3851] = 'ER_INNODB_REDO_LOG_ARCHIVE_SESSION'\nexports[3852] = 'ER_STD_REGEX_ERROR'\nexports[3853] = 'ER_INVALID_JSON_TYPE'\nexports[3854] = 'ER_CANNOT_CONVERT_STRING'\nexports[3855] = 'ER_DEPENDENT_BY_PARTITION_FUNC'\nexports[3856] = 'ER_WARN_DEPRECATED_FLOAT_AUTO_INCREMENT'\nexports[3857] = 'ER_RPL_CANT_STOP_REPLICA_WHILE_LOCKED_BACKUP'\nexports[3858] = 'ER_WARN_DEPRECATED_FLOAT_DIGITS'\nexports[3859] = 'ER_WARN_DEPRECATED_FLOAT_UNSIGNED'\nexports[3860] = 'ER_WARN_DEPRECATED_INTEGER_DISPLAY_WIDTH'\nexports[3861] = 'ER_WARN_DEPRECATED_ZEROFILL'\nexports[3862] = 'ER_CLONE_DONOR'\nexports[3863] = 'ER_CLONE_PROTOCOL'\nexports[3864] = 'ER_CLONE_DONOR_VERSION'\nexports[3865] = 'ER_CLONE_OS'\nexports[3866] = 'ER_CLONE_PLATFORM'\nexports[3867] = 'ER_CLONE_CHARSET'\nexports[3868] = 'ER_CLONE_CONFIG'\nexports[3869] = 'ER_CLONE_SYS_CONFIG'\nexports[3870] = 'ER_CLONE_PLUGIN_MATCH'\nexports[3871] = 'ER_CLONE_LOOPBACK'\nexports[3872] = 'ER_CLONE_ENCRYPTION'\nexports[3873] = 'ER_CLONE_DISK_SPACE'\nexports[3874] = 'ER_CLONE_IN_PROGRESS'\nexports[3875] = 'ER_CLONE_DISALLOWED'\nexports[3876] = 'ER_CANNOT_GRANT_ROLES_TO_ANONYMOUS_USER'\nexports[3877] = 'ER_SECONDARY_ENGINE_PLUGIN'\nexports[3878] = 'ER_SECOND_PASSWORD_CANNOT_BE_EMPTY'\nexports[3879] = 'ER_DB_ACCESS_DENIED'\nexports[3880] = 'ER_DA_AUTH_ID_WITH_SYSTEM_USER_PRIV_IN_MANDATORY_ROLES'\nexports[3881] = 'ER_DA_RPL_GTID_TABLE_CANNOT_OPEN'\nexports[3882] = 'ER_GEOMETRY_IN_UNKNOWN_LENGTH_UNIT'\nexports[3883] = 'ER_DA_PLUGIN_INSTALL_ERROR'\nexports[3884] = 'ER_NO_SESSION_TEMP'\nexports[3885] = 'ER_DA_UNKNOWN_ERROR_NUMBER'\nexports[3886] = 'ER_COLUMN_CHANGE_SIZE'\nexports[3887] = 'ER_REGEXP_INVALID_CAPTURE_GROUP_NAME'\nexports[3888] = 'ER_DA_SSL_LIBRARY_ERROR'\nexports[3889] = 'ER_SECONDARY_ENGINE'\nexports[3890] = 'ER_SECONDARY_ENGINE_DDL'\nexports[3891] = 'ER_INCORRECT_CURRENT_PASSWORD'\nexports[3892] = 'ER_MISSING_CURRENT_PASSWORD'\nexports[3893] = 'ER_CURRENT_PASSWORD_NOT_REQUIRED'\nexports[3894] = 'ER_PASSWORD_CANNOT_BE_RETAINED_ON_PLUGIN_CHANGE'\nexports[3895] = 'ER_CURRENT_PASSWORD_CANNOT_BE_RETAINED'\nexports[3896] = 'ER_PARTIAL_REVOKES_EXIST'\nexports[3897] = 'ER_CANNOT_GRANT_SYSTEM_PRIV_TO_MANDATORY_ROLE'\nexports[3898] = 'ER_XA_REPLICATION_FILTERS'\nexports[3899] = 'ER_UNSUPPORTED_SQL_MODE'\nexports[3900] = 'ER_REGEXP_INVALID_FLAG'\nexports[3901] = 'ER_PARTIAL_REVOKE_AND_DB_GRANT_BOTH_EXISTS'\nexports[3902] = 'ER_UNIT_NOT_FOUND'\nexports[3903] = 'ER_INVALID_JSON_VALUE_FOR_FUNC_INDEX'\nexports[3904] = 'ER_JSON_VALUE_OUT_OF_RANGE_FOR_FUNC_INDEX'\nexports[3905] = 'ER_EXCEEDED_MV_KEYS_NUM'\nexports[3906] = 'ER_EXCEEDED_MV_KEYS_SPACE'\nexports[3907] = 'ER_FUNCTIONAL_INDEX_DATA_IS_TOO_LONG'\nexports[3908] = 'ER_WRONG_MVI_VALUE'\nexports[3909] = 'ER_WARN_FUNC_INDEX_NOT_APPLICABLE'\nexports[3910] = 'ER_GRP_RPL_UDF_ERROR'\nexports[3911] = 'ER_UPDATE_GTID_PURGED_WITH_GR'\nexports[3912] = 'ER_GROUPING_ON_TIMESTAMP_IN_DST'\nexports[3913] = 'ER_TABLE_NAME_CAUSES_TOO_LONG_PATH'\nexports[3914] = 'ER_AUDIT_LOG_INSUFFICIENT_PRIVILEGE'\nexports[3915] = 'ER_AUDIT_LOG_PASSWORD_HAS_BEEN_COPIED'\nexports[3916] = 'ER_DA_GRP_RPL_STARTED_AUTO_REJOIN'\nexports[3917] = 'ER_SYSVAR_CHANGE_DURING_QUERY'\nexports[3918] = 'ER_GLOBSTAT_CHANGE_DURING_QUERY'\nexports[3919] = 'ER_GRP_RPL_MESSAGE_SERVICE_INIT_FAILURE'\nexports[3920] = 'ER_CHANGE_SOURCE_WRONG_COMPRESSION_ALGORITHM_CLIENT'\nexports[3921] = 'ER_CHANGE_SOURCE_WRONG_COMPRESSION_LEVEL_CLIENT'\nexports[3922] = 'ER_WRONG_COMPRESSION_ALGORITHM_CLIENT'\nexports[3923] = 'ER_WRONG_COMPRESSION_LEVEL_CLIENT'\nexports[3924] = 'ER_CHANGE_SOURCE_WRONG_COMPRESSION_ALGORITHM_LIST_CLIENT'\nexports[3925] = 'ER_CLIENT_PRIVILEGE_CHECKS_USER_CANNOT_BE_ANONYMOUS'\nexports[3926] = 'ER_CLIENT_PRIVILEGE_CHECKS_USER_DOES_NOT_EXIST'\nexports[3927] = 'ER_CLIENT_PRIVILEGE_CHECKS_USER_CORRUPT'\nexports[3928] = 'ER_CLIENT_PRIVILEGE_CHECKS_USER_NEEDS_RPL_APPLIER_PRIV'\nexports[3929] = 'ER_WARN_DA_PRIVILEGE_NOT_REGISTERED'\nexports[3930] = 'ER_CLIENT_KEYRING_UDF_KEY_INVALID'\nexports[3931] = 'ER_CLIENT_KEYRING_UDF_KEY_TYPE_INVALID'\nexports[3932] = 'ER_CLIENT_KEYRING_UDF_KEY_TOO_LONG'\nexports[3933] = 'ER_CLIENT_KEYRING_UDF_KEY_TYPE_TOO_LONG'\nexports[3934] = 'ER_JSON_SCHEMA_VALIDATION_ERROR_WITH_DETAILED_REPORT'\nexports[3935] = 'ER_DA_UDF_INVALID_CHARSET_SPECIFIED'\nexports[3936] = 'ER_DA_UDF_INVALID_CHARSET'\nexports[3937] = 'ER_DA_UDF_INVALID_COLLATION'\nexports[3938] = 'ER_DA_UDF_INVALID_EXTENSION_ARGUMENT_TYPE'\nexports[3939] = 'ER_MULTIPLE_CONSTRAINTS_WITH_SAME_NAME'\nexports[3940] = 'ER_CONSTRAINT_NOT_FOUND'\nexports[3941] = 'ER_ALTER_CONSTRAINT_ENFORCEMENT_NOT_SUPPORTED'\nexports[3942] = 'ER_TABLE_VALUE_CONSTRUCTOR_MUST_HAVE_COLUMNS'\nexports[3943] = 'ER_TABLE_VALUE_CONSTRUCTOR_CANNOT_HAVE_DEFAULT'\nexports[3944] = 'ER_CLIENT_QUERY_FAILURE_INVALID_NON_ROW_FORMAT'\nexports[3945] = 'ER_REQUIRE_ROW_FORMAT_INVALID_VALUE'\nexports[3946] = 'ER_FAILED_TO_DETERMINE_IF_ROLE_IS_MANDATORY'\nexports[3947] = 'ER_FAILED_TO_FETCH_MANDATORY_ROLE_LIST'\nexports[3948] = 'ER_CLIENT_LOCAL_FILES_DISABLED'\nexports[3949] = 'ER_IMP_INCOMPATIBLE_CFG_VERSION'\nexports[3950] = 'ER_DA_OOM'\nexports[3951] = 'ER_DA_UDF_INVALID_ARGUMENT_TO_SET_CHARSET'\nexports[3952] = 'ER_DA_UDF_INVALID_RETURN_TYPE_TO_SET_CHARSET'\nexports[3953] = 'ER_MULTIPLE_INTO_CLAUSES'\nexports[3954] = 'ER_MISPLACED_INTO'\nexports[3955] = 'ER_USER_ACCESS_DENIED_FOR_USER_ACCOUNT_BLOCKED_BY_PASSWORD_LOCK'\nexports[3956] = 'ER_WARN_DEPRECATED_YEAR_UNSIGNED'\nexports[3957] = 'ER_CLONE_NETWORK_PACKET'\nexports[3958] = 'ER_SDI_OPERATION_FAILED_MISSING_RECORD'\nexports[3959] = 'ER_DEPENDENT_BY_CHECK_CONSTRAINT'\nexports[3960] = 'ER_GRP_OPERATION_NOT_ALLOWED_GR_MUST_STOP'\nexports[3961] = 'ER_WARN_DEPRECATED_JSON_TABLE_ON_ERROR_ON_EMPTY'\nexports[3962] = 'ER_WARN_DEPRECATED_INNER_INTO'\nexports[3963] = 'ER_WARN_DEPRECATED_VALUES_FUNCTION_ALWAYS_NULL'\nexports[3964] = 'ER_WARN_DEPRECATED_SQL_CALC_FOUND_ROWS'\nexports[3965] = 'ER_WARN_DEPRECATED_FOUND_ROWS'\nexports[3966] = 'ER_MISSING_JSON_VALUE'\nexports[3967] = 'ER_MULTIPLE_JSON_VALUES'\nexports[3968] = 'ER_HOSTNAME_TOO_LONG'\nexports[3969] = 'ER_WARN_CLIENT_DEPRECATED_PARTITION_PREFIX_KEY'\nexports[3970] = 'ER_GROUP_REPLICATION_USER_EMPTY_MSG'\nexports[3971] = 'ER_GROUP_REPLICATION_USER_MANDATORY_MSG'\nexports[3972] = 'ER_GROUP_REPLICATION_PASSWORD_LENGTH'\nexports[3973] = 'ER_SUBQUERY_TRANSFORM_REJECTED'\nexports[3974] = 'ER_DA_GRP_RPL_RECOVERY_ENDPOINT_FORMAT'\nexports[3975] = 'ER_DA_GRP_RPL_RECOVERY_ENDPOINT_INVALID'\nexports[3976] = 'ER_WRONG_VALUE_FOR_VAR_PLUS_ACTIONABLE_PART'\nexports[3977] = 'ER_STATEMENT_NOT_ALLOWED_AFTER_START_TRANSACTION'\nexports[3978] = 'ER_FOREIGN_KEY_WITH_ATOMIC_CREATE_SELECT'\nexports[3979] = 'ER_NOT_ALLOWED_WITH_START_TRANSACTION'\nexports[3980] = 'ER_INVALID_JSON_ATTRIBUTE'\nexports[3981] = 'ER_ENGINE_ATTRIBUTE_NOT_SUPPORTED'\nexports[3982] = 'ER_INVALID_USER_ATTRIBUTE_JSON'\nexports[3983] = 'ER_INNODB_REDO_DISABLED'\nexports[3984] = 'ER_INNODB_REDO_ARCHIVING_ENABLED'\nexports[3985] = 'ER_MDL_OUT_OF_RESOURCES'\nexports[3986] = 'ER_IMPLICIT_COMPARISON_FOR_JSON'\nexports[3987] = 'ER_FUNCTION_DOES_NOT_SUPPORT_CHARACTER_SET'\nexports[3988] = 'ER_IMPOSSIBLE_STRING_CONVERSION'\nexports[3989] = 'ER_SCHEMA_READ_ONLY'\nexports[3990] = 'ER_RPL_ASYNC_RECONNECT_GTID_MODE_OFF'\nexports[3991] = 'ER_RPL_ASYNC_RECONNECT_AUTO_POSITION_OFF'\nexports[3992] = 'ER_DISABLE_GTID_MODE_REQUIRES_ASYNC_RECONNECT_OFF'\nexports[3993] = 'ER_DISABLE_AUTO_POSITION_REQUIRES_ASYNC_RECONNECT_OFF'\nexports[3994] = 'ER_INVALID_PARAMETER_USE'\nexports[3995] = 'ER_CHARACTER_SET_MISMATCH'\nexports[3996] = 'ER_WARN_VAR_VALUE_CHANGE_NOT_SUPPORTED'\nexports[3997] = 'ER_INVALID_TIME_ZONE_INTERVAL'\nexports[3998] = 'ER_INVALID_CAST'\nexports[3999] = 'ER_HYPERGRAPH_NOT_SUPPORTED_YET'\nexports[4000] = 'ER_WARN_HYPERGRAPH_EXPERIMENTAL'\nexports[4001] = 'ER_DA_NO_ERROR_LOG_PARSER_CONFIGURED'\nexports[4002] = 'ER_DA_ERROR_LOG_TABLE_DISABLED'\nexports[4003] = 'ER_DA_ERROR_LOG_MULTIPLE_FILTERS'\nexports[4004] = 'ER_DA_CANT_OPEN_ERROR_LOG'\nexports[4005] = 'ER_USER_REFERENCED_AS_DEFINER'\nexports[4006] = 'ER_CANNOT_USER_REFERENCED_AS_DEFINER'\nexports[4007] = 'ER_REGEX_NUMBER_TOO_BIG'\nexports[4008] = 'ER_SPVAR_NONINTEGER_TYPE'\nexports[4009] = 'WARN_UNSUPPORTED_ACL_TABLES_READ'\nexports[4010] = 'ER_BINLOG_UNSAFE_ACL_TABLE_READ_IN_DML_DDL'\nexports[4011] = 'ER_STOP_REPLICA_MONITOR_IO_THREAD_TIMEOUT'\nexports[4012] = 'ER_STARTING_REPLICA_MONITOR_IO_THREAD'\nexports[4013] = 'ER_CANT_USE_ANONYMOUS_TO_GTID_WITH_GTID_MODE_NOT_ON'\nexports[4014] = 'ER_CANT_COMBINE_ANONYMOUS_TO_GTID_AND_AUTOPOSITION'\nexports[4015] = 'ER_ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS_REQUIRES_GTID_MODE_ON'\nexports[4016] = 'ER_SQL_REPLICA_SKIP_COUNTER_USED_WITH_GTID_MODE_ON'\nexports[4017] = 'ER_USING_ASSIGN_GTIDS_TO_ANONYMOUS_TRANSACTIONS_AS_LOCAL_OR_UUID'\nexports[4018] = 'ER_CANT_SET_ANONYMOUS_TO_GTID_AND_WAIT_UNTIL_SQL_THD_AFTER_GTIDS'\nexports[4019] = 'ER_CANT_SET_SQL_AFTER_OR_BEFORE_GTIDS_WITH_ANONYMOUS_TO_GTID'\nexports[4020] = 'ER_ANONYMOUS_TO_GTID_UUID_SAME_AS_GROUP_NAME'\nexports[4021] = 'ER_CANT_USE_SAME_UUID_AS_GROUP_NAME'\nexports[4022] = 'ER_GRP_RPL_RECOVERY_CHANNEL_STILL_RUNNING'\nexports[4023] = 'ER_INNODB_INVALID_AUTOEXTEND_SIZE_VALUE'\nexports[4024] = 'ER_INNODB_INCOMPATIBLE_WITH_TABLESPACE'\nexports[4025] = 'ER_INNODB_AUTOEXTEND_SIZE_OUT_OF_RANGE'\nexports[4026] = 'ER_CANNOT_USE_AUTOEXTEND_SIZE_CLAUSE'\nexports[4027] = 'ER_ROLE_GRANTED_TO_ITSELF'\nexports[4028] = 'ER_TABLE_MUST_HAVE_A_VISIBLE_COLUMN'\nexports[4029] = 'ER_INNODB_COMPRESSION_FAILURE'\nexports[4030] = 'ER_WARN_ASYNC_CONN_FAILOVER_NETWORK_NAMESPACE'\nexports[4031] = 'ER_CLIENT_INTERACTION_TIMEOUT'\nexports[4032] = 'ER_INVALID_CAST_TO_GEOMETRY'\nexports[4033] = 'ER_INVALID_CAST_POLYGON_RING_DIRECTION'\nexports[4034] = 'ER_GIS_DIFFERENT_SRIDS_AGGREGATION'\nexports[4035] = 'ER_RELOAD_KEYRING_FAILURE'\nexports[4036] = 'ER_SDI_GET_KEYS_INVALID_TABLESPACE'\nexports[4037] = 'ER_CHANGE_RPL_SRC_WRONG_COMPRESSION_ALGORITHM_SIZE'\nexports[4038] = 'ER_WARN_DEPRECATED_TLS_VERSION_FOR_CHANNEL_CLI'\nexports[4039] = 'ER_CANT_USE_SAME_UUID_AS_VIEW_CHANGE_UUID'\nexports[4040] = 'ER_ANONYMOUS_TO_GTID_UUID_SAME_AS_VIEW_CHANGE_UUID'\nexports[4041] = 'ER_GRP_RPL_VIEW_CHANGE_UUID_FAIL_GET_VARIABLE'\nexports[4042] = 'ER_WARN_ADUIT_LOG_MAX_SIZE_AND_PRUNE_SECONDS'\nexports[4043] = 'ER_WARN_ADUIT_LOG_MAX_SIZE_CLOSE_TO_ROTATE_ON_SIZE'\nexports[4044] = 'ER_KERBEROS_CREATE_USER'\nexports[4045] = 'ER_INSTALL_PLUGIN_CONFLICT_CLIENT'\nexports[4046] = 'ER_DA_ERROR_LOG_COMPONENT_FLUSH_FAILED'\nexports[4047] = 'ER_WARN_SQL_AFTER_MTS_GAPS_GAP_NOT_CALCULATED'\nexports[4048] = 'ER_INVALID_ASSIGNMENT_TARGET'\nexports[4049] = 'ER_OPERATION_NOT_ALLOWED_ON_GR_SECONDARY'\nexports[4050] = 'ER_GRP_RPL_FAILOVER_CHANNEL_STATUS_PROPAGATION'\nexports[4051] = 'ER_WARN_AUDIT_LOG_FORMAT_UNIX_TIMESTAMP_ONLY_WHEN_JSON'\nexports[4052] = 'ER_INVALID_MFA_PLUGIN_SPECIFIED'\nexports[4053] = 'ER_IDENTIFIED_BY_UNSUPPORTED'\nexports[4054] = 'ER_INVALID_PLUGIN_FOR_REGISTRATION'\nexports[4055] = 'ER_PLUGIN_REQUIRES_REGISTRATION'\nexports[4056] = 'ER_MFA_METHOD_EXISTS'\nexports[4057] = 'ER_MFA_METHOD_NOT_EXISTS'\nexports[4058] = 'ER_AUTHENTICATION_POLICY_MISMATCH'\nexports[4059] = 'ER_PLUGIN_REGISTRATION_DONE'\nexports[4060] = 'ER_INVALID_USER_FOR_REGISTRATION'\nexports[4061] = 'ER_USER_REGISTRATION_FAILED'\nexports[4062] = 'ER_MFA_METHODS_INVALID_ORDER'\nexports[4063] = 'ER_MFA_METHODS_IDENTICAL'\nexports[4064] = 'ER_INVALID_MFA_OPERATIONS_FOR_PASSWORDLESS_USER'\nexports[4065] = 'ER_CHANGE_REPLICATION_SOURCE_NO_OPTIONS_FOR_GTID_ONLY'\nexports[4066] = 'ER_CHANGE_REP_SOURCE_CANT_DISABLE_REQ_ROW_FORMAT_WITH_GTID_ONLY'\nexports[4067] = 'ER_CHANGE_REP_SOURCE_CANT_DISABLE_AUTO_POSITION_WITH_GTID_ONLY'\nexports[4068] = 'ER_CHANGE_REP_SOURCE_CANT_DISABLE_GTID_ONLY_WITHOUT_POSITIONS'\nexports[4069] = 'ER_CHANGE_REP_SOURCE_CANT_DISABLE_AUTO_POS_WITHOUT_POSITIONS'\nexports[4070] = 'ER_CHANGE_REP_SOURCE_GR_CHANNEL_WITH_GTID_MODE_NOT_ON'\nexports[4071] = 'ER_CANT_USE_GTID_ONLY_WITH_GTID_MODE_NOT_ON'\nexports[4072] = 'ER_WARN_C_DISABLE_GTID_ONLY_WITH_SOURCE_AUTO_POS_INVALID_POS'\nexports[4073] = 'ER_DA_SSL_FIPS_MODE_ERROR'\nexports[4074] = 'ER_VALUE_OUT_OF_RANGE'\nexports[4075] = 'ER_FULLTEXT_WITH_ROLLUP'\nexports[4076] = 'ER_REGEXP_MISSING_RESOURCE'\nexports[4077] = 'ER_WARN_REGEXP_USING_DEFAULT'\nexports[4078] = 'ER_REGEXP_MISSING_FILE'\nexports[4079] = 'ER_WARN_DEPRECATED_COLLATION'\nexports[4080] = 'ER_CONCURRENT_PROCEDURE_USAGE'\nexports[4081] = 'ER_DA_GLOBAL_CONN_LIMIT'\nexports[4082] = 'ER_DA_CONN_LIMIT'\nexports[4083] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_COLUMN_TYPE_INSTANT'\nexports[4084] = 'ER_WARN_SF_UDF_NAME_COLLISION'\nexports[4085] = 'ER_CANNOT_PURGE_BINLOG_WITH_BACKUP_LOCK'\nexports[4086] = 'ER_TOO_MANY_WINDOWS'\nexports[4087] = 'ER_MYSQLBACKUP_CLIENT_MSG'\nexports[4088] = 'ER_COMMENT_CONTAINS_INVALID_STRING'\nexports[4089] = 'ER_DEFINITION_CONTAINS_INVALID_STRING'\nexports[4090] = 'ER_CANT_EXECUTE_COMMAND_WITH_ASSIGNED_GTID_NEXT'\nexports[4091] = 'ER_XA_TEMP_TABLE'\nexports[4092] = 'ER_INNODB_MAX_ROW_VERSION'\nexports[4093] = 'ER_INNODB_INSTANT_ADD_NOT_SUPPORTED_MAX_SIZE'\nexports[4094] = 'ER_OPERATION_NOT_ALLOWED_WHILE_PRIMARY_CHANGE_IS_RUNNING'\nexports[4095] = 'ER_WARN_DEPRECATED_DATETIME_DELIMITER'\nexports[4096] = 'ER_WARN_DEPRECATED_SUPERFLUOUS_DELIMITER'\nexports[4097] = 'ER_CANNOT_PERSIST_SENSITIVE_VARIABLES'\nexports[4098] = 'ER_WARN_CANNOT_SECURELY_PERSIST_SENSITIVE_VARIABLES'\nexports[4099] = 'ER_WARN_TRG_ALREADY_EXISTS'\nexports[4100] = 'ER_IF_NOT_EXISTS_UNSUPPORTED_TRG_EXISTS_ON_DIFFERENT_TABLE'\nexports[4101] = 'ER_IF_NOT_EXISTS_UNSUPPORTED_UDF_NATIVE_FCT_NAME_COLLISION'\nexports[4102] = 'ER_SET_PASSWORD_AUTH_PLUGIN_ERROR'\nexports[4103] = 'ER_REDUCED_DBLWR_FILE_CORRUPTED'\nexports[4104] = 'ER_REDUCED_DBLWR_PAGE_FOUND'\nexports[4105] = 'ER_SRS_INVALID_LATITUDE_OF_ORIGIN'\nexports[4106] = 'ER_SRS_INVALID_LONGITUDE_OF_ORIGIN'\nexports[4107] = 'ER_SRS_UNUSED_PROJ_PARAMETER_PRESENT'\nexports[4108] = 'ER_GIPK_COLUMN_EXISTS'\nexports[4109] = 'ER_GIPK_FAILED_AUTOINC_COLUMN_EXISTS'\nexports[4110] = 'ER_GIPK_COLUMN_ALTER_NOT_ALLOWED'\nexports[4111] = 'ER_DROP_PK_COLUMN_TO_DROP_GIPK'\nexports[4112] = 'ER_CREATE_SELECT_WITH_GIPK_DISALLOWED_IN_SBR'\nexports[4113] = 'ER_DA_EXPIRE_LOGS_DAYS_IGNORED'\nexports[4114] = 'ER_CTE_RECURSIVE_NOT_UNION'\nexports[4115] = 'ER_COMMAND_BACKEND_FAILED_TO_FETCH_SECURITY_CTX'\nexports[4116] = 'ER_COMMAND_SERVICE_BACKEND_FAILED'\nexports[4117] = 'ER_CLIENT_FILE_PRIVILEGE_FOR_REPLICATION_CHECKS'\nexports[4118] = 'ER_GROUP_REPLICATION_FORCE_MEMBERS_COMMAND_FAILURE'\nexports[4119] = 'ER_WARN_DEPRECATED_IDENT'\nexports[4120] = 'ER_INTERSECT_ALL_MAX_DUPLICATES_EXCEEDED'\nexports[4121] = 'ER_TP_QUERY_THRS_PER_GRP_EXCEEDS_TXN_THR_LIMIT'\nexports[4122] = 'ER_BAD_TIMESTAMP_FORMAT'\nexports[4123] = 'ER_SHAPE_PRIDICTION_UDF'\nexports[4124] = 'ER_SRS_INVALID_HEIGHT'\nexports[4125] = 'ER_SRS_INVALID_SCALING'\nexports[4126] = 'ER_SRS_INVALID_ZONE_WIDTH'\nexports[4127] = 'ER_SRS_INVALID_LATITUDE_POLAR_STERE_VAR_A'\nexports[4128] = 'ER_WARN_DEPRECATED_CLIENT_NO_SCHEMA_OPTION'\nexports[4129] = 'ER_TABLE_NOT_EMPTY'\nexports[4130] = 'ER_TABLE_NO_PRIMARY_KEY'\nexports[4131] = 'ER_TABLE_IN_SHARED_TABLESPACE'\nexports[4132] = 'ER_INDEX_OTHER_THAN_PK'\nexports[4133] = 'ER_LOAD_BULK_DATA_UNSORTED'\nexports[4134] = 'ER_BULK_EXECUTOR_ERROR'\nexports[4135] = 'ER_BULK_READER_LIBCURL_INIT_FAILED'\nexports[4136] = 'ER_BULK_READER_LIBCURL_ERROR'\nexports[4137] = 'ER_BULK_READER_SERVER_ERROR'\nexports[4138] = 'ER_BULK_READER_COMMUNICATION_ERROR'\nexports[4139] = 'ER_BULK_LOAD_DATA_FAILED'\nexports[4140] = 'ER_BULK_LOADER_COLUMN_TOO_BIG_FOR_LEFTOVER_BUFFER'\nexports[4141] = 'ER_BULK_LOADER_COMPONENT_ERROR'\nexports[4142] = 'ER_BULK_LOADER_FILE_CONTAINS_LESS_LINES_THAN_IGNORE_CLAUSE'\nexports[4143] = 'ER_BULK_PARSER_MISSING_ENCLOSED_BY'\nexports[4144] = 'ER_BULK_PARSER_ROW_BUFFER_MAX_TOTAL_COLS_EXCEEDED'\nexports[4145] = 'ER_BULK_PARSER_COPY_BUFFER_SIZE_EXCEEDED'\nexports[4146] = 'ER_BULK_PARSER_UNEXPECTED_END_OF_INPUT'\nexports[4147] = 'ER_BULK_PARSER_UNEXPECTED_ROW_TERMINATOR'\nexports[4148] = 'ER_BULK_PARSER_UNEXPECTED_CHAR_AFTER_ENDING_ENCLOSED_BY'\nexports[4149] = 'ER_BULK_PARSER_UNEXPECTED_CHAR_AFTER_NULL_ESCAPE'\nexports[4150] = 'ER_BULK_PARSER_UNEXPECTED_CHAR_AFTER_COLUMN_TERMINATOR'\nexports[4151] = 'ER_BULK_PARSER_INCOMPLETE_ESCAPE_SEQUENCE'\nexports[4152] = 'ER_LOAD_BULK_DATA_FAILED'\nexports[4153] = 'ER_LOAD_BULK_DATA_WRONG_VALUE_FOR_FIELD'\nexports[4154] = 'ER_LOAD_BULK_DATA_WARN_NULL_TO_NOTNULL'\nexports[4155] = 'ER_REQUIRE_TABLE_PRIMARY_KEY_CHECK_GENERATE_WITH_GR'\nexports[4156] = 'ER_CANT_CHANGE_SYS_VAR_IN_READ_ONLY_MODE'\nexports[4157] = 'ER_INNODB_INSTANT_ADD_DROP_NOT_SUPPORTED_MAX_SIZE'\nexports[4158] = 'ER_INNODB_INSTANT_ADD_NOT_SUPPORTED_MAX_FIELDS'\nexports[4159] = 'ER_CANT_SET_PERSISTED'\nexports[4160] = 'ER_INSTALL_COMPONENT_SET_NULL_VALUE'\nexports[4161] = 'ER_INSTALL_COMPONENT_SET_UNUSED_VALUE'\nexports[4162] = 'ER_WARN_DEPRECATED_USER_DEFINED_COLLATIONS'\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/constants/errors.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/constants/field_flags.js":
/*!**********************************************************!*\
  !*** ./node_modules/mysql2/lib/constants/field_flags.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\n// Manually extracted from mysql-5.5.23/include/mysql_com.h\nexports.NOT_NULL = 1; /* Field can't be NULL */\nexports.PRI_KEY = 2; /* Field is part of a primary key */\nexports.UNIQUE_KEY = 4; /* Field is part of a unique key */\nexports.MULTIPLE_KEY = 8; /* Field is part of a key */\nexports.BLOB = 16; /* Field is a blob */\nexports.UNSIGNED = 32; /* Field is unsigned */\nexports.ZEROFILL = 64; /* Field is zerofill */\nexports.BINARY = 128; /* Field is binary   */\n\n/* The following are only sent to new clients */\nexports.ENUM = 256; /* field is an enum */\nexports.AUTO_INCREMENT = 512; /* field is a autoincrement field */\nexports.TIMESTAMP = 1024; /* Field is a timestamp */\nexports.SET = 2048; /* field is a set */\nexports.NO_DEFAULT_VALUE = 4096; /* Field doesn't have default value */\nexports.ON_UPDATE_NOW = 8192; /* Field is set to NOW on UPDATE */\nexports.NUM = 32768; /* Field is num (for clients) */\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb25zdGFudHMvZmllbGRfZmxhZ3MuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQSxnQkFBZ0IsTUFBTTtBQUN0QixlQUFlLE1BQU07QUFDckIsa0JBQWtCLE1BQU07QUFDeEIsb0JBQW9CLE1BQU07QUFDMUIsWUFBWSxPQUFPO0FBQ25CLGdCQUFnQixPQUFPO0FBQ3ZCLGdCQUFnQixPQUFPO0FBQ3ZCLGNBQWMsUUFBUTs7QUFFdEI7QUFDQSxZQUFZLFFBQVE7QUFDcEIsc0JBQXNCLFFBQVE7QUFDOUIsaUJBQWlCLFNBQVM7QUFDMUIsV0FBVyxTQUFTO0FBQ3BCLHdCQUF3QixTQUFTO0FBQ2pDLHFCQUFxQixTQUFTO0FBQzlCLFdBQVcsVUFBVSIsInNvdXJjZXMiOlsid2VicGFjazovL3JlYWxfZXN0YXRlLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvY29uc3RhbnRzL2ZpZWxkX2ZsYWdzLmpzPzAwYTYiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vLyBNYW51YWxseSBleHRyYWN0ZWQgZnJvbSBteXNxbC01LjUuMjMvaW5jbHVkZS9teXNxbF9jb20uaFxuZXhwb3J0cy5OT1RfTlVMTCA9IDE7IC8qIEZpZWxkIGNhbid0IGJlIE5VTEwgKi9cbmV4cG9ydHMuUFJJX0tFWSA9IDI7IC8qIEZpZWxkIGlzIHBhcnQgb2YgYSBwcmltYXJ5IGtleSAqL1xuZXhwb3J0cy5VTklRVUVfS0VZID0gNDsgLyogRmllbGQgaXMgcGFydCBvZiBhIHVuaXF1ZSBrZXkgKi9cbmV4cG9ydHMuTVVMVElQTEVfS0VZID0gODsgLyogRmllbGQgaXMgcGFydCBvZiBhIGtleSAqL1xuZXhwb3J0cy5CTE9CID0gMTY7IC8qIEZpZWxkIGlzIGEgYmxvYiAqL1xuZXhwb3J0cy5VTlNJR05FRCA9IDMyOyAvKiBGaWVsZCBpcyB1bnNpZ25lZCAqL1xuZXhwb3J0cy5aRVJPRklMTCA9IDY0OyAvKiBGaWVsZCBpcyB6ZXJvZmlsbCAqL1xuZXhwb3J0cy5CSU5BUlkgPSAxMjg7IC8qIEZpZWxkIGlzIGJpbmFyeSAgICovXG5cbi8qIFRoZSBmb2xsb3dpbmcgYXJlIG9ubHkgc2VudCB0byBuZXcgY2xpZW50cyAqL1xuZXhwb3J0cy5FTlVNID0gMjU2OyAvKiBmaWVsZCBpcyBhbiBlbnVtICovXG5leHBvcnRzLkFVVE9fSU5DUkVNRU5UID0gNTEyOyAvKiBmaWVsZCBpcyBhIGF1dG9pbmNyZW1lbnQgZmllbGQgKi9cbmV4cG9ydHMuVElNRVNUQU1QID0gMTAyNDsgLyogRmllbGQgaXMgYSB0aW1lc3RhbXAgKi9cbmV4cG9ydHMuU0VUID0gMjA0ODsgLyogZmllbGQgaXMgYSBzZXQgKi9cbmV4cG9ydHMuTk9fREVGQVVMVF9WQUxVRSA9IDQwOTY7IC8qIEZpZWxkIGRvZXNuJ3QgaGF2ZSBkZWZhdWx0IHZhbHVlICovXG5leHBvcnRzLk9OX1VQREFURV9OT1cgPSA4MTkyOyAvKiBGaWVsZCBpcyBzZXQgdG8gTk9XIG9uIFVQREFURSAqL1xuZXhwb3J0cy5OVU0gPSAzMjc2ODsgLyogRmllbGQgaXMgbnVtIChmb3IgY2xpZW50cykgKi9cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/constants/field_flags.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/constants/server_status.js":
/*!************************************************************!*\
  !*** ./node_modules/mysql2/lib/constants/server_status.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\n// Manually extracted from mysql-5.5.23/include/mysql_com.h\n\n/**\n  Is raised when a multi-statement transaction\n  has been started, either explicitly, by means\n  of BEGIN or COMMIT AND CHAIN, or\n  implicitly, by the first transactional\n  statement, when autocommit=off.\n*/\nexports.SERVER_STATUS_IN_TRANS = 1;\nexports.SERVER_STATUS_AUTOCOMMIT = 2; /* Server in auto_commit mode */\nexports.SERVER_MORE_RESULTS_EXISTS = 8; /* Multi query - next query exists */\nexports.SERVER_QUERY_NO_GOOD_INDEX_USED = 16;\nexports.SERVER_QUERY_NO_INDEX_USED = 32;\n/**\n  The server was able to fulfill the clients request and opened a\n  read-only non-scrollable cursor for a query. This flag comes\n  in reply to COM_STMT_EXECUTE and COM_STMT_FETCH commands.\n*/\nexports.SERVER_STATUS_CURSOR_EXISTS = 64;\n/**\n  This flag is sent when a read-only cursor is exhausted, in reply to\n  COM_STMT_FETCH command.\n*/\nexports.SERVER_STATUS_LAST_ROW_SENT = 128;\nexports.SERVER_STATUS_DB_DROPPED = 256; /* A database was dropped */\nexports.SERVER_STATUS_NO_BACKSLASH_ESCAPES = 512;\n/**\n  Sent to the client if after a prepared statement reprepare\n  we discovered that the new statement returns a different\n  number of result set columns.\n*/\nexports.SERVER_STATUS_METADATA_CHANGED = 1024;\nexports.SERVER_QUERY_WAS_SLOW = 2048;\n\n/**\n  To mark ResultSet containing output parameter values.\n*/\nexports.SERVER_PS_OUT_PARAMS = 4096;\n\nexports.SERVER_STATUS_IN_TRANS_READONLY = 0x2000; // in a read-only transaction\nexports.SERVER_SESSION_STATE_CHANGED = 0x4000;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb25zdGFudHMvc2VydmVyX3N0YXR1cy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QjtBQUM5QixnQ0FBZ0MsTUFBTTtBQUN0QyxrQ0FBa0MsTUFBTTtBQUN4Qyx1Q0FBdUM7QUFDdkMsa0NBQWtDO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUM7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUM7QUFDbkMsZ0NBQWdDLFFBQVE7QUFDeEMsMENBQTBDO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0M7QUFDdEMsNkJBQTZCOztBQUU3QjtBQUNBO0FBQ0E7QUFDQSw0QkFBNEI7O0FBRTVCLHVDQUF1QyxXQUFXO0FBQ2xELG9DQUFvQyIsInNvdXJjZXMiOlsid2VicGFjazovL3JlYWxfZXN0YXRlLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvY29uc3RhbnRzL3NlcnZlcl9zdGF0dXMuanM/YTk4ZCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8vIE1hbnVhbGx5IGV4dHJhY3RlZCBmcm9tIG15c3FsLTUuNS4yMy9pbmNsdWRlL215c3FsX2NvbS5oXG5cbi8qKlxuICBJcyByYWlzZWQgd2hlbiBhIG11bHRpLXN0YXRlbWVudCB0cmFuc2FjdGlvblxuICBoYXMgYmVlbiBzdGFydGVkLCBlaXRoZXIgZXhwbGljaXRseSwgYnkgbWVhbnNcbiAgb2YgQkVHSU4gb3IgQ09NTUlUIEFORCBDSEFJTiwgb3JcbiAgaW1wbGljaXRseSwgYnkgdGhlIGZpcnN0IHRyYW5zYWN0aW9uYWxcbiAgc3RhdGVtZW50LCB3aGVuIGF1dG9jb21taXQ9b2ZmLlxuKi9cbmV4cG9ydHMuU0VSVkVSX1NUQVRVU19JTl9UUkFOUyA9IDE7XG5leHBvcnRzLlNFUlZFUl9TVEFUVVNfQVVUT0NPTU1JVCA9IDI7IC8qIFNlcnZlciBpbiBhdXRvX2NvbW1pdCBtb2RlICovXG5leHBvcnRzLlNFUlZFUl9NT1JFX1JFU1VMVFNfRVhJU1RTID0gODsgLyogTXVsdGkgcXVlcnkgLSBuZXh0IHF1ZXJ5IGV4aXN0cyAqL1xuZXhwb3J0cy5TRVJWRVJfUVVFUllfTk9fR09PRF9JTkRFWF9VU0VEID0gMTY7XG5leHBvcnRzLlNFUlZFUl9RVUVSWV9OT19JTkRFWF9VU0VEID0gMzI7XG4vKipcbiAgVGhlIHNlcnZlciB3YXMgYWJsZSB0byBmdWxmaWxsIHRoZSBjbGllbnRzIHJlcXVlc3QgYW5kIG9wZW5lZCBhXG4gIHJlYWQtb25seSBub24tc2Nyb2xsYWJsZSBjdXJzb3IgZm9yIGEgcXVlcnkuIFRoaXMgZmxhZyBjb21lc1xuICBpbiByZXBseSB0byBDT01fU1RNVF9FWEVDVVRFIGFuZCBDT01fU1RNVF9GRVRDSCBjb21tYW5kcy5cbiovXG5leHBvcnRzLlNFUlZFUl9TVEFUVVNfQ1VSU09SX0VYSVNUUyA9IDY0O1xuLyoqXG4gIFRoaXMgZmxhZyBpcyBzZW50IHdoZW4gYSByZWFkLW9ubHkgY3Vyc29yIGlzIGV4aGF1c3RlZCwgaW4gcmVwbHkgdG9cbiAgQ09NX1NUTVRfRkVUQ0ggY29tbWFuZC5cbiovXG5leHBvcnRzLlNFUlZFUl9TVEFUVVNfTEFTVF9ST1dfU0VOVCA9IDEyODtcbmV4cG9ydHMuU0VSVkVSX1NUQVRVU19EQl9EUk9QUEVEID0gMjU2OyAvKiBBIGRhdGFiYXNlIHdhcyBkcm9wcGVkICovXG5leHBvcnRzLlNFUlZFUl9TVEFUVVNfTk9fQkFDS1NMQVNIX0VTQ0FQRVMgPSA1MTI7XG4vKipcbiAgU2VudCB0byB0aGUgY2xpZW50IGlmIGFmdGVyIGEgcHJlcGFyZWQgc3RhdGVtZW50IHJlcHJlcGFyZVxuICB3ZSBkaXNjb3ZlcmVkIHRoYXQgdGhlIG5ldyBzdGF0ZW1lbnQgcmV0dXJucyBhIGRpZmZlcmVudFxuICBudW1iZXIgb2YgcmVzdWx0IHNldCBjb2x1bW5zLlxuKi9cbmV4cG9ydHMuU0VSVkVSX1NUQVRVU19NRVRBREFUQV9DSEFOR0VEID0gMTAyNDtcbmV4cG9ydHMuU0VSVkVSX1FVRVJZX1dBU19TTE9XID0gMjA0ODtcblxuLyoqXG4gIFRvIG1hcmsgUmVzdWx0U2V0IGNvbnRhaW5pbmcgb3V0cHV0IHBhcmFtZXRlciB2YWx1ZXMuXG4qL1xuZXhwb3J0cy5TRVJWRVJfUFNfT1VUX1BBUkFNUyA9IDQwOTY7XG5cbmV4cG9ydHMuU0VSVkVSX1NUQVRVU19JTl9UUkFOU19SRUFET05MWSA9IDB4MjAwMDsgLy8gaW4gYSByZWFkLW9ubHkgdHJhbnNhY3Rpb25cbmV4cG9ydHMuU0VSVkVSX1NFU1NJT05fU1RBVEVfQ0hBTkdFRCA9IDB4NDAwMDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/constants/server_status.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/constants/session_track.js":
/*!************************************************************!*\
  !*** ./node_modules/mysql2/lib/constants/session_track.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\nexports.SYSTEM_VARIABLES = 0;\nexports.SCHEMA = 1;\nexports.STATE_CHANGE = 2;\nexports.STATE_GTIDS = 3;\nexports.TRANSACTION_CHARACTERISTICS = 4;\nexports.TRANSACTION_STATE = 5;\n\nexports.FIRST_KEY = exports.SYSTEM_VARIABLES;\nexports.LAST_KEY = exports.TRANSACTION_STATE;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb25zdGFudHMvc2Vzc2lvbl90cmFjay5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYix3QkFBd0I7QUFDeEIsY0FBYztBQUNkLG9CQUFvQjtBQUNwQixtQkFBbUI7QUFDbkIsbUNBQW1DO0FBQ25DLHlCQUF5Qjs7QUFFekIsaUJBQWlCO0FBQ2pCLGdCQUFnQiIsInNvdXJjZXMiOlsid2VicGFjazovL3JlYWxfZXN0YXRlLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvY29uc3RhbnRzL3Nlc3Npb25fdHJhY2suanM/NTI5NiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmV4cG9ydHMuU1lTVEVNX1ZBUklBQkxFUyA9IDA7XG5leHBvcnRzLlNDSEVNQSA9IDE7XG5leHBvcnRzLlNUQVRFX0NIQU5HRSA9IDI7XG5leHBvcnRzLlNUQVRFX0dUSURTID0gMztcbmV4cG9ydHMuVFJBTlNBQ1RJT05fQ0hBUkFDVEVSSVNUSUNTID0gNDtcbmV4cG9ydHMuVFJBTlNBQ1RJT05fU1RBVEUgPSA1O1xuXG5leHBvcnRzLkZJUlNUX0tFWSA9IGV4cG9ydHMuU1lTVEVNX1ZBUklBQkxFUztcbmV4cG9ydHMuTEFTVF9LRVkgPSBleHBvcnRzLlRSQU5TQUNUSU9OX1NUQVRFO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/constants/session_track.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/constants/ssl_profiles.js":
/*!***********************************************************!*\
  !*** ./node_modules/mysql2/lib/constants/ssl_profiles.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n\n// CA Certificates for Amazon RDS\n// https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.SSL.html\n// https://docs.amazonaws.cn/en_us/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.SSL.html\n// https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html#aurora-serverless.tls\nexports[\"Amazon RDS\"] = {\n  ca: [\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIEEjCCAvqgAwIBAgIJAM2ZN/+nPi27MA0GCSqGSIb3DQEBCwUAMIGVMQswCQYD\\n' +\n      'VQQGEwJVUzEQMA4GA1UEBwwHU2VhdHRsZTETMBEGA1UECAwKV2FzaGluZ3RvbjEi\\n' +\n      'MCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1h\\n' +\n      'em9uIFJEUzEmMCQGA1UEAwwdQW1hem9uIFJEUyBhZi1zb3V0aC0xIFJvb3QgQ0Ew\\n' +\n      'HhcNMTkxMDI4MTgwNTU4WhcNMjQxMDI2MTgwNTU4WjCBlTELMAkGA1UEBhMCVVMx\\n' +\n      'EDAOBgNVBAcMB1NlYXR0bGUxEzARBgNVBAgMCldhc2hpbmd0b24xIjAgBgNVBAoM\\n' +\n      'GUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMx\\n' +\n      'JjAkBgNVBAMMHUFtYXpvbiBSRFMgYWYtc291dGgtMSBSb290IENBMIIBIjANBgkq\\n' +\n      'hkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwR2351uPMZaJk2gMGT+1sk8HE9MQh2rc\\n' +\n      '/sCnbxGn2p1c7Oi9aBbd/GiFijeJb2BXvHU+TOq3d3Jjqepq8tapXVt4ojbTJNyC\\n' +\n      'J5E7r7KjTktKdLxtBE1MK25aY+IRJjtdU6vG3KiPKUT1naO3xs3yt0F76WVuFivd\\n' +\n      '9OHv2a+KHvPkRUWIxpmAHuMY9SIIMmEZtVE7YZGx5ah0iO4JzItHcbVR0y0PBH55\\n' +\n      'arpFBddpIVHCacp1FUPxSEWkOpI7q0AaU4xfX0fe1BV5HZYRKpBOIp1TtZWvJD+X\\n' +\n      'jGUtL1BEsT5vN5g9MkqdtYrC+3SNpAk4VtpvJrdjraI/hhvfeXNnAwIDAQABo2Mw\\n' +\n      'YTAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUEEi/\\n' +\n      'WWMcBJsoGXg+EZwkQ0MscZQwHwYDVR0jBBgwFoAUEEi/WWMcBJsoGXg+EZwkQ0Ms\\n' +\n      'cZQwDQYJKoZIhvcNAQELBQADggEBAGDZ5js5Pc/gC58LJrwMPXFhJDBS8QuDm23C\\n' +\n      'FFUdlqucskwOS3907ErK1ZkmVJCIqFLArHqskFXMAkRZ2PNR7RjWLqBs+0znG5yH\\n' +\n      'hRKb4DXzhUFQ18UBRcvT6V6zN97HTRsEEaNhM/7k8YLe7P8vfNZ28VIoJIGGgv9D\\n' +\n      'wQBBvkxQ71oOmAG0AwaGD0ORGUfbYry9Dz4a4IcUsZyRWRMADixgrFv6VuETp26s\\n' +\n      '/+z+iqNaGWlELBKh3iQCT6Y/1UnkPLO42bxrCSyOvshdkYN58Q2gMTE1SVTqyo8G\\n' +\n      'Lw8lLAz9bnvUSgHzB3jRrSx6ggF/WRMRYlR++y6LXP4SAsSAaC0=\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIEEjCCAvqgAwIBAgIJAJYM4LxvTZA6MA0GCSqGSIb3DQEBCwUAMIGVMQswCQYD\\n' +\n      'VQQGEwJVUzEQMA4GA1UEBwwHU2VhdHRsZTETMBEGA1UECAwKV2FzaGluZ3RvbjEi\\n' +\n      'MCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1h\\n' +\n      'em9uIFJEUzEmMCQGA1UEAwwdQW1hem9uIFJEUyBldS1zb3V0aC0xIFJvb3QgQ0Ew\\n' +\n      'HhcNMTkxMDMwMjAyMDM2WhcNMjQxMDI4MjAyMDM2WjCBlTELMAkGA1UEBhMCVVMx\\n' +\n      'EDAOBgNVBAcMB1NlYXR0bGUxEzARBgNVBAgMCldhc2hpbmd0b24xIjAgBgNVBAoM\\n' +\n      'GUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMx\\n' +\n      'JjAkBgNVBAMMHUFtYXpvbiBSRFMgZXUtc291dGgtMSBSb290IENBMIIBIjANBgkq\\n' +\n      'hkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAqM921jXCXeqpRNCS9CBPOe5N7gMaEt+D\\n' +\n      's5uR3riZbqzRlHGiF1jZihkXfHAIQewDwy+Yz+Oec1aEZCQMhUHxZJPusuX0cJfj\\n' +\n      'b+UluFqHIijL2TfXJ3D0PVLLoNTQJZ8+GAPECyojAaNuoHbdVqxhOcznMsXIXVFq\\n' +\n      'yVLKDGvyKkJjai/iSPDrQMXufg3kWt0ISjNLvsG5IFXgP4gttsM8i0yvRd4QcHoo\\n' +\n      'DjvH7V3cS+CQqW5SnDrGnHToB0RLskE1ET+oNOfeN9PWOxQprMOX/zmJhnJQlTqD\\n' +\n      'QP7jcf7SddxrKFjuziFiouskJJyNDsMjt1Lf60+oHZhed2ogTeifGwIDAQABo2Mw\\n' +\n      'YTAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUFBAF\\n' +\n      'cgJe/BBuZiGeZ8STfpkgRYQwHwYDVR0jBBgwFoAUFBAFcgJe/BBuZiGeZ8STfpkg\\n' +\n      'RYQwDQYJKoZIhvcNAQELBQADggEBAKAYUtlvDuX2UpZW9i1QgsjFuy/ErbW0dLHU\\n' +\n      'e/IcFtju2z6RLZ+uF+5A8Kme7IKG1hgt8s+w9TRVQS/7ukQzoK3TaN6XKXRosjtc\\n' +\n      'o9Rm4gYWM8bmglzY1TPNaiI4HC7546hSwJhubjN0bXCuj/0sHD6w2DkiGuwKNAef\\n' +\n      'yTu5vZhPkeNyXLykxkzz7bNp2/PtMBnzIp+WpS7uUDmWyScGPohKMq5PqvL59z+L\\n' +\n      'ZI3CYeMZrJ5VpXUg3fNNIz/83N3G0sk7wr0ohs/kHTP7xPOYB0zD7Ku4HA0Q9Swf\\n' +\n      'WX0qr6UQgTPMjfYDLffI7aEId0gxKw1eGYc6Cq5JAZ3ipi/cBFc=\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIEEjCCAvqgAwIBAgIJANew34ehz5l8MA0GCSqGSIb3DQEBCwUAMIGVMQswCQYD\\n' +\n      'VQQGEwJVUzEQMA4GA1UEBwwHU2VhdHRsZTETMBEGA1UECAwKV2FzaGluZ3RvbjEi\\n' +\n      'MCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1h\\n' +\n      'em9uIFJEUzEmMCQGA1UEAwwdQW1hem9uIFJEUyBtZS1zb3V0aC0xIFJvb3QgQ0Ew\\n' +\n      'HhcNMTkwNTEwMjE0ODI3WhcNMjQwNTA4MjE0ODI3WjCBlTELMAkGA1UEBhMCVVMx\\n' +\n      'EDAOBgNVBAcMB1NlYXR0bGUxEzARBgNVBAgMCldhc2hpbmd0b24xIjAgBgNVBAoM\\n' +\n      'GUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMx\\n' +\n      'JjAkBgNVBAMMHUFtYXpvbiBSRFMgbWUtc291dGgtMSBSb290IENBMIIBIjANBgkq\\n' +\n      'hkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAp7BYV88MukcY+rq0r79+C8UzkT30fEfT\\n' +\n      'aPXbx1d6M7uheGN4FMaoYmL+JE1NZPaMRIPTHhFtLSdPccInvenRDIatcXX+jgOk\\n' +\n      'UA6lnHQ98pwN0pfDUyz/Vph4jBR9LcVkBbe0zdoKKp+HGbMPRU0N2yNrog9gM5O8\\n' +\n      'gkU/3O2csJ/OFQNnj4c2NQloGMUpEmedwJMOyQQfcUyt9CvZDfIPNnheUS29jGSw\\n' +\n      'ERpJe/AENu8Pxyc72jaXQuD+FEi2Ck6lBkSlWYQFhTottAeGvVFNCzKszCntrtqd\\n' +\n      'rdYUwurYsLTXDHv9nW2hfDUQa0mhXf9gNDOBIVAZugR9NqNRNyYLHQIDAQABo2Mw\\n' +\n      'YTAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQU54cf\\n' +\n      'DjgwBx4ycBH8+/r8WXdaiqYwHwYDVR0jBBgwFoAU54cfDjgwBx4ycBH8+/r8WXda\\n' +\n      'iqYwDQYJKoZIhvcNAQELBQADggEBAIIMTSPx/dR7jlcxggr+O6OyY49Rlap2laKA\\n' +\n      'eC/XI4ySP3vQkIFlP822U9Kh8a9s46eR0uiwV4AGLabcu0iKYfXjPkIprVCqeXV7\\n' +\n      'ny9oDtrbflyj7NcGdZLvuzSwgl9SYTJp7PVCZtZutsPYlbJrBPHwFABvAkMvRtDB\\n' +\n      'hitIg4AESDGPoCl94sYHpfDfjpUDMSrAMDUyO6DyBdZH5ryRMAs3lGtsmkkNUrso\\n' +\n      'aTW6R05681Z0mvkRdb+cdXtKOSuDZPoe2wJJIaz3IlNQNSrB5TImMYgmt6iAsFhv\\n' +\n      '3vfTSTKrZDNTJn4ybG6pq1zWExoXsktZPylJly6R3RBwV6nwqBM=\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIEBjCCAu6gAwIBAgIJAMc0ZzaSUK51MA0GCSqGSIb3DQEBCwUAMIGPMQswCQYD\\n' +\n      'VQQGEwJVUzEQMA4GA1UEBwwHU2VhdHRsZTETMBEGA1UECAwKV2FzaGluZ3RvbjEi\\n' +\n      'MCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1h\\n' +\n      'em9uIFJEUzEgMB4GA1UEAwwXQW1hem9uIFJEUyBSb290IDIwMTkgQ0EwHhcNMTkw\\n' +\n      'ODIyMTcwODUwWhcNMjQwODIyMTcwODUwWjCBjzELMAkGA1UEBhMCVVMxEDAOBgNV\\n' +\n      'BAcMB1NlYXR0bGUxEzARBgNVBAgMCldhc2hpbmd0b24xIjAgBgNVBAoMGUFtYXpv\\n' +\n      'biBXZWIgU2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxIDAeBgNV\\n' +\n      'BAMMF0FtYXpvbiBSRFMgUm9vdCAyMDE5IENBMIIBIjANBgkqhkiG9w0BAQEFAAOC\\n' +\n      'AQ8AMIIBCgKCAQEArXnF/E6/Qh+ku3hQTSKPMhQQlCpoWvnIthzX6MK3p5a0eXKZ\\n' +\n      'oWIjYcNNG6UwJjp4fUXl6glp53Jobn+tWNX88dNH2n8DVbppSwScVE2LpuL+94vY\\n' +\n      '0EYE/XxN7svKea8YvlrqkUBKyxLxTjh+U/KrGOaHxz9v0l6ZNlDbuaZw3qIWdD/I\\n' +\n      '6aNbGeRUVtpM6P+bWIoxVl/caQylQS6CEYUk+CpVyJSkopwJlzXT07tMoDL5WgX9\\n' +\n      'O08KVgDNz9qP/IGtAcRduRcNioH3E9v981QO1zt/Gpb2f8NqAjUUCUZzOnij6mx9\\n' +\n      'McZ+9cWX88CRzR0vQODWuZscgI08NvM69Fn2SQIDAQABo2MwYTAOBgNVHQ8BAf8E\\n' +\n      'BAMCAQYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUc19g2LzLA5j0Kxc0LjZa\\n' +\n      'pmD/vB8wHwYDVR0jBBgwFoAUc19g2LzLA5j0Kxc0LjZapmD/vB8wDQYJKoZIhvcN\\n' +\n      'AQELBQADggEBAHAG7WTmyjzPRIM85rVj+fWHsLIvqpw6DObIjMWokpliCeMINZFV\\n' +\n      'ynfgBKsf1ExwbvJNzYFXW6dihnguDG9VMPpi2up/ctQTN8tm9nDKOy08uNZoofMc\\n' +\n      'NUZxKCEkVKZv+IL4oHoeayt8egtv3ujJM6V14AstMQ6SwvwvA93EP/Ug2e4WAXHu\\n' +\n      'cbI1NAbUgVDqp+DRdfvZkgYKryjTWd/0+1fS8X1bBZVWzl7eirNVnHbSH2ZDpNuY\\n' +\n      '0SBd8dj5F6ld3t58ydZbrTHze7JJOd8ijySAp4/kiu9UfZWuTPABzDa/DSdz9Dk/\\n' +\n      'zPW4CXXvhLmE02TA9/HeCw3KEHIwicNuEfw=\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIEEDCCAvigAwIBAgIJAKFMXyltvuRdMA0GCSqGSIb3DQEBCwUAMIGUMQswCQYD\\n' +\n      'VQQGEwJVUzEQMA4GA1UEBwwHU2VhdHRsZTETMBEGA1UECAwKV2FzaGluZ3RvbjEi\\n' +\n      'MCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1h\\n' +\n      'em9uIFJEUzElMCMGA1UEAwwcQW1hem9uIFJEUyBCZXRhIFJvb3QgMjAxOSBDQTAe\\n' +\n      'Fw0xOTA4MTkxNzM4MjZaFw0yNDA4MTkxNzM4MjZaMIGUMQswCQYDVQQGEwJVUzEQ\\n' +\n      'MA4GA1UEBwwHU2VhdHRsZTETMBEGA1UECAwKV2FzaGluZ3RvbjEiMCAGA1UECgwZ\\n' +\n      'QW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEl\\n' +\n      'MCMGA1UEAwwcQW1hem9uIFJEUyBCZXRhIFJvb3QgMjAxOSBDQTCCASIwDQYJKoZI\\n' +\n      'hvcNAQEBBQADggEPADCCAQoCggEBAMkZdnIH9ndatGAcFo+DppGJ1HUt4x+zeO+0\\n' +\n      'ZZ29m0sfGetVulmTlv2d5b66e+QXZFWpcPQMouSxxYTW08TbrQiZngKr40JNXftA\\n' +\n      'atvzBqIImD4II0ZX5UEVj2h98qe/ypW5xaDN7fEa5e8FkYB1TEemPaWIbNXqchcL\\n' +\n      'tV7IJPr3Cd7Z5gZJlmujIVDPpMuSiNaal9/6nT9oqN+JSM1fx5SzrU5ssg1Vp1vv\\n' +\n      '5Xab64uOg7wCJRB9R2GC9XD04odX6VcxUAGrZo6LR64ZSifupo3l+R5sVOc5i8NH\\n' +\n      'skdboTzU9H7+oSdqoAyhIU717PcqeDum23DYlPE2nGBWckE+eT8CAwEAAaNjMGEw\\n' +\n      'DgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFK2hDBWl\\n' +\n      'sbHzt/EHd0QYOooqcFPhMB8GA1UdIwQYMBaAFK2hDBWlsbHzt/EHd0QYOooqcFPh\\n' +\n      'MA0GCSqGSIb3DQEBCwUAA4IBAQAO/718k8EnOqJDx6wweUscGTGL/QdKXUzTVRAx\\n' +\n      'JUsjNUv49mH2HQVEW7oxszfH6cPCaupNAddMhQc4C/af6GHX8HnqfPDk27/yBQI+\\n' +\n      'yBBvIanGgxv9c9wBbmcIaCEWJcsLp3HzXSYHmjiqkViXwCpYfkoV3Ns2m8bp+KCO\\n' +\n      'y9XmcCKRaXkt237qmoxoh2sGmBHk2UlQtOsMC0aUQ4d7teAJG0q6pbyZEiPyKZY1\\n' +\n      'XR/UVxMJL0Q4iVpcRS1kaNCMfqS2smbLJeNdsan8pkw1dvPhcaVTb7CvjhJtjztF\\n' +\n      'YfDzAI5794qMlWxwilKMmUvDlPPOTen8NNHkLwWvyFCH7Doh\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIEFjCCAv6gAwIBAgIJAMzYZJ+R9NBVMA0GCSqGSIb3DQEBCwUAMIGXMQswCQYD\\n' +\n      'VQQGEwJVUzEQMA4GA1UEBwwHU2VhdHRsZTETMBEGA1UECAwKV2FzaGluZ3RvbjEi\\n' +\n      'MCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1h\\n' +\n      'em9uIFJEUzEoMCYGA1UEAwwfQW1hem9uIFJEUyBQcmV2aWV3IFJvb3QgMjAxOSBD\\n' +\n      'QTAeFw0xOTA4MjEyMjI5NDlaFw0yNDA4MjEyMjI5NDlaMIGXMQswCQYDVQQGEwJV\\n' +\n      'UzEQMA4GA1UEBwwHU2VhdHRsZTETMBEGA1UECAwKV2FzaGluZ3RvbjEiMCAGA1UE\\n' +\n      'CgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJE\\n' +\n      'UzEoMCYGA1UEAwwfQW1hem9uIFJEUyBQcmV2aWV3IFJvb3QgMjAxOSBDQTCCASIw\\n' +\n      'DQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAM7kkS6vjgKKQTPynC2NjdN5aPPV\\n' +\n      'O71G0JJS/2ARVBVJd93JLiGovVJilfWYfwZCs4gTRSSjrUD4D4HyqCd6A+eEEtJq\\n' +\n      'M0DEC7i0dC+9WNTsPszuB206Jy2IUmxZMIKJAA1NHSbIMjB+b6/JhbSUi7nKdbR/\\n' +\n      'brj83bF+RoSA+ogrgX7mQbxhmFcoZN9OGaJgYKsKWUt5Wqv627KkGodUK8mDepgD\\n' +\n      'S3ZfoRQRx3iceETpcmHJvaIge6+vyDX3d9Z22jmvQ4AKv3py2CmU2UwuhOltFDwB\\n' +\n      '0ddtb39vgwrJxaGfiMRHpEP1DfNLWHAnA69/pgZPwIggidS+iBPUhgucMp8CAwEA\\n' +\n      'AaNjMGEwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYE\\n' +\n      'FGnTGpQuQ2H/DZlXMQijZEhjs7TdMB8GA1UdIwQYMBaAFGnTGpQuQ2H/DZlXMQij\\n' +\n      'ZEhjs7TdMA0GCSqGSIb3DQEBCwUAA4IBAQC3xz1vQvcXAfpcZlngiRWeqU8zQAMQ\\n' +\n      'LZPCFNv7PVk4pmqX+ZiIRo4f9Zy7TrOVcboCnqmP/b/mNq0gVF4O+88jwXJZD+f8\\n' +\n      '/RnABMZcnGU+vK0YmxsAtYU6TIb1uhRFmbF8K80HHbj9vSjBGIQdPCbvmR2zY6VJ\\n' +\n      'BYM+w9U9hp6H4DVMLKXPc1bFlKA5OBTgUtgkDibWJKFOEPW3UOYwp9uq6pFoN0AO\\n' +\n      'xMTldqWFsOF3bJIlvOY0c/1EFZXu3Ns6/oCP//Ap9vumldYMUZWmbK+gK33FPOXV\\n' +\n      '8BQ6jNC29icv7lLDpRPwjibJBXX+peDR5UK4FdYcswWEB1Tix5X8dYu6\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIECTCCAvGgAwIBAgICEAAwDQYJKoZIhvcNAQELBQAwgZUxCzAJBgNVBAYTAlVT\\n' +\n      'MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n' +\n      'DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n' +\n      'MSYwJAYDVQQDDB1BbWF6b24gUkRTIGFmLXNvdXRoLTEgUm9vdCBDQTAeFw0xOTEw\\n' +\n      'MjgxODA2NTNaFw0yNDEwMjgxODA2NTNaMIGQMQswCQYDVQQGEwJVUzETMBEGA1UE\\n' +\n      'CAwKV2FzaGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9u\\n' +\n      'IFdlYiBTZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEhMB8GA1UE\\n' +\n      'AwwYQW1hem9uIFJEUyBhZi1zb3V0aC0xIENBMIIBIjANBgkqhkiG9w0BAQEFAAOC\\n' +\n      'AQ8AMIIBCgKCAQEAvtV1OqmFa8zCVQSKOvPUJERLVFtd4rZmDpImc5rIoeBk7w/P\\n' +\n      '9lcKUJjO8R/w1a2lJXx3oQ81tiY0Piw6TpT62YWVRMWrOw8+Vxq1dNaDSFp9I8d0\\n' +\n      'UHillSSbOk6FOrPDp+R6AwbGFqUDebbN5LFFoDKbhNmH1BVS0a6YNKpGigLRqhka\\n' +\n      'cClPslWtPqtjbaP3Jbxl26zWzLo7OtZl98dR225pq8aApNBwmtgA7Gh60HK/cX0t\\n' +\n      '32W94n8D+GKSg6R4MKredVFqRTi9hCCNUu0sxYPoELuM+mHiqB5NPjtm92EzCWs+\\n' +\n      '+vgWhMc6GxG+82QSWx1Vj8sgLqtE/vLrWddf5QIDAQABo2YwZDAOBgNVHQ8BAf8E\\n' +\n      'BAMCAQYwEgYDVR0TAQH/BAgwBgEB/wIBADAdBgNVHQ4EFgQUuLB4gYVJrSKJj/Gz\\n' +\n      'pqc6yeA+RcAwHwYDVR0jBBgwFoAUEEi/WWMcBJsoGXg+EZwkQ0MscZQwDQYJKoZI\\n' +\n      'hvcNAQELBQADggEBABauYOZxUhe9/RhzGJ8MsWCz8eKcyDVd4FCnY6Qh+9wcmYNT\\n' +\n      'LtnD88LACtJKb/b81qYzcB0Em6+zVJ3Z9jznfr6buItE6es9wAoja22Xgv44BTHL\\n' +\n      'rimbgMwpTt3uEMXDffaS0Ww6YWb3pSE0XYI2ISMWz+xRERRf+QqktSaL39zuiaW5\\n' +\n      'tfZMre+YhohRa/F0ZQl3RCd6yFcLx4UoSPqQsUl97WhYzwAxZZfwvLJXOc4ATt3u\\n' +\n      'VlCUylNDkaZztDJc/yN5XQoK9W5nOt2cLu513MGYKbuarQr8f+gYU8S+qOyuSRSP\\n' +\n      'NRITzwCRVnsJE+2JmcRInn/NcanB7uOGqTvJ9+c=\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIECTCCAvGgAwIBAgICEAAwDQYJKoZIhvcNAQELBQAwgZUxCzAJBgNVBAYTAlVT\\n' +\n      'MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n' +\n      'DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n' +\n      'MSYwJAYDVQQDDB1BbWF6b24gUkRTIGV1LXNvdXRoLTEgUm9vdCBDQTAeFw0xOTEw\\n' +\n      'MzAyMDIxMzBaFw0yNDEwMzAyMDIxMzBaMIGQMQswCQYDVQQGEwJVUzETMBEGA1UE\\n' +\n      'CAwKV2FzaGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9u\\n' +\n      'IFdlYiBTZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEhMB8GA1UE\\n' +\n      'AwwYQW1hem9uIFJEUyBldS1zb3V0aC0xIENBMIIBIjANBgkqhkiG9w0BAQEFAAOC\\n' +\n      'AQ8AMIIBCgKCAQEAtEyjYcajx6xImJn8Vz1zjdmL4ANPgQXwF7+tF7xccmNAZETb\\n' +\n      'bzb3I9i5fZlmrRaVznX+9biXVaGxYzIUIR3huQ3Q283KsDYnVuGa3mk690vhvJbB\\n' +\n      'QIPgKa5mVwJppnuJm78KqaSpi0vxyCPe3h8h6LLFawVyWrYNZ4okli1/U582eef8\\n' +\n      'RzJp/Ear3KgHOLIiCdPDF0rjOdCG1MOlDLixVnPn9IYOciqO+VivXBg+jtfc5J+L\\n' +\n      'AaPm0/Yx4uELt1tkbWkm4BvTU/gBOODnYziITZM0l6Fgwvbwgq5duAtKW+h031lC\\n' +\n      '37rEvrclqcp4wrsUYcLAWX79ZyKIlRxcAdvEhQIDAQABo2YwZDAOBgNVHQ8BAf8E\\n' +\n      'BAMCAQYwEgYDVR0TAQH/BAgwBgEB/wIBADAdBgNVHQ4EFgQU7zPyc0azQxnBCe7D\\n' +\n      'b9KAadH1QSEwHwYDVR0jBBgwFoAUFBAFcgJe/BBuZiGeZ8STfpkgRYQwDQYJKoZI\\n' +\n      'hvcNAQELBQADggEBAFGaNiYxg7yC/xauXPlaqLCtwbm2dKyK9nIFbF/7be8mk7Q3\\n' +\n      'MOA0of1vGHPLVQLr6bJJpD9MAbUcm4cPAwWaxwcNpxOjYOFDaq10PCK4eRAxZWwF\\n' +\n      'NJRIRmGsl8NEsMNTMCy8X+Kyw5EzH4vWFl5Uf2bGKOeFg0zt43jWQVOX6C+aL3Cd\\n' +\n      'pRS5MhmYpxMG8irrNOxf4NVFE2zpJOCm3bn0STLhkDcV/ww4zMzObTJhiIb5wSWn\\n' +\n      'EXKKWhUXuRt7A2y1KJtXpTbSRHQxE++69Go1tWhXtRiULCJtf7wF2Ksm0RR/AdXT\\n' +\n      '1uR1vKyH5KBJPX3ppYkQDukoHTFR0CpB+G84NLo=\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIECTCCAvGgAwIBAgICEAAwDQYJKoZIhvcNAQELBQAwgZUxCzAJBgNVBAYTAlVT\\n' +\n      'MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n' +\n      'DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n' +\n      'MSYwJAYDVQQDDB1BbWF6b24gUkRTIG1lLXNvdXRoLTEgUm9vdCBDQTAeFw0xOTA1\\n' +\n      'MTAyMTU4NDNaFw0yNTA2MDExMjAwMDBaMIGQMQswCQYDVQQGEwJVUzETMBEGA1UE\\n' +\n      'CAwKV2FzaGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9u\\n' +\n      'IFdlYiBTZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEhMB8GA1UE\\n' +\n      'AwwYQW1hem9uIFJEUyBtZS1zb3V0aC0xIENBMIIBIjANBgkqhkiG9w0BAQEFAAOC\\n' +\n      'AQ8AMIIBCgKCAQEAudOYPZH+ihJAo6hNYMB5izPVBe3TYhnZm8+X3IoaaYiKtsp1\\n' +\n      'JJhkTT0CEejYIQ58Fh4QrMUyWvU8qsdK3diNyQRoYLbctsBPgxBR1u07eUJDv38/\\n' +\n      'C1JlqgHmMnMi4y68Iy7ymv50QgAMuaBqgEBRI1R6Lfbyrb2YvH5txjJyTVMwuCfd\\n' +\n      'YPAtZVouRz0JxmnfsHyxjE+So56uOKTDuw++Ho4HhZ7Qveej7XB8b+PIPuroknd3\\n' +\n      'FQB5RVbXRvt5ZcVD4F2fbEdBniF7FAF4dEiofVCQGQ2nynT7dZdEIPfPdH3n7ZmE\\n' +\n      'lAOmwHQ6G83OsiHRBLnbp+QZRgOsjkHJxT20bQIDAQABo2YwZDAOBgNVHQ8BAf8E\\n' +\n      'BAMCAQYwEgYDVR0TAQH/BAgwBgEB/wIBADAdBgNVHQ4EFgQUOEVDM7VomRH4HVdA\\n' +\n      'QvIMNq2tXOcwHwYDVR0jBBgwFoAU54cfDjgwBx4ycBH8+/r8WXdaiqYwDQYJKoZI\\n' +\n      'hvcNAQELBQADggEBAHhvMssj+Th8IpNePU6RH0BiL6o9c437R3Q4IEJeFdYL+nZz\\n' +\n      'PW/rELDPvLRUNMfKM+KzduLZ+l29HahxefejYPXtvXBlq/E/9czFDD4fWXg+zVou\\n' +\n      'uDXhyrV4kNmP4S0eqsAP/jQHPOZAMFA4yVwO9hlqmePhyDnszCh9c1PfJSBh49+b\\n' +\n      '4w7i/L3VBOMt8j3EKYvqz0gVfpeqhJwL4Hey8UbVfJRFJMJzfNHpePqtDRAY7yjV\\n' +\n      'PYquRaV2ab/E+/7VFkWMM4tazYz/qsYA2jSH+4xDHvYk8LnsbcrF9iuidQmEc5sb\\n' +\n      'FgcWaSKG4DJjcI5k7AJLWcXyTDt21Ci43LE+I9Q=\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIECDCCAvCgAwIBAgICVIYwDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAlVT\\n' +\n      'MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n' +\n      'DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n' +\n      'MSAwHgYDVQQDDBdBbWF6b24gUkRTIFJvb3QgMjAxOSBDQTAeFw0xOTA5MDQxNzEz\\n' +\n      'MDRaFw0yNDA4MjIxNzA4NTBaMIGVMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2Fz\\n' +\n      'aGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBT\\n' +\n      'ZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEmMCQGA1UEAwwdQW1h\\n' +\n      'em9uIFJEUyBhcC1zb3V0aC0xIDIwMTkgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IB\\n' +\n      'DwAwggEKAoIBAQDUYOz1hGL42yUCrcsMSOoU8AeD/3KgZ4q7gP+vAz1WnY9K/kim\\n' +\n      'eWN/2Qqzlo3+mxSFQFyD4MyV3+CnCPnBl9Sh1G/F6kThNiJ7dEWSWBQGAB6HMDbC\\n' +\n      'BaAsmUc1UIz8sLTL3fO+S9wYhA63Wun0Fbm/Rn2yk/4WnJAaMZcEtYf6e0KNa0LM\\n' +\n      'p/kN/70/8cD3iz3dDR8zOZFpHoCtf0ek80QqTich0A9n3JLxR6g6tpwoYviVg89e\\n' +\n      'qCjQ4axxOkWWeusLeTJCcY6CkVyFvDAKvcUl1ytM5AiaUkXblE7zDFXRM4qMMRdt\\n' +\n      'lPm8d3pFxh0fRYk8bIKnpmtOpz3RIctDrZZxAgMBAAGjZjBkMA4GA1UdDwEB/wQE\\n' +\n      'AwIBBjASBgNVHRMBAf8ECDAGAQH/AgEAMB0GA1UdDgQWBBT99wKJftD3jb4sHoHG\\n' +\n      'i3uGlH6W6TAfBgNVHSMEGDAWgBRzX2DYvMsDmPQrFzQuNlqmYP+8HzANBgkqhkiG\\n' +\n      '9w0BAQsFAAOCAQEAZ17hhr3dII3hUfuHQ1hPWGrpJOX/G9dLzkprEIcCidkmRYl+\\n' +\n      'hu1Pe3caRMh/17+qsoEErmnVq5jNY9X1GZL04IZH8YbHc7iRHw3HcWAdhN8633+K\\n' +\n      'jYEB2LbJ3vluCGnCejq9djDb6alOugdLMJzxOkHDhMZ6/gYbECOot+ph1tQuZXzD\\n' +\n      'tZ7prRsrcuPBChHlPjmGy8M9z8u+kF196iNSUGC4lM8vLkHM7ycc1/ZOwRq9aaTe\\n' +\n      'iOghbQQyAEe03MWCyDGtSmDfr0qEk+CHN+6hPiaL8qKt4s+V9P7DeK4iW08ny8Ox\\n' +\n      'AVS7u0OK/5+jKMAMrKwpYrBydOjTUTHScocyNw==\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIEBzCCAu+gAwIBAgICQ2QwDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAlVT\\n' +\n      'MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n' +\n      'DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n' +\n      'MSAwHgYDVQQDDBdBbWF6b24gUkRTIFJvb3QgMjAxOSBDQTAeFw0xOTA5MDUxODQ2\\n' +\n      'MjlaFw0yNDA4MjIxNzA4NTBaMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2Fz\\n' +\n      'aGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBT\\n' +\n      'ZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzElMCMGA1UEAwwcQW1h\\n' +\n      'em9uIFJEUyBzYS1lYXN0LTEgMjAxOSBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEP\\n' +\n      'ADCCAQoCggEBAMMvR+ReRnOzqJzoaPipNTt1Z2VA968jlN1+SYKUrYM3No+Vpz0H\\n' +\n      'M6Tn0oYB66ByVsXiGc28ulsqX1HbHsxqDPwvQTKvO7SrmDokoAkjJgLocOLUAeld\\n' +\n      '5AwvUjxGRP6yY90NV7X786MpnYb2Il9DIIaV9HjCmPt+rjy2CZjS0UjPjCKNfB8J\\n' +\n      'bFjgW6GGscjeyGb/zFwcom5p4j0rLydbNaOr9wOyQrtt3ZQWLYGY9Zees/b8pmcc\\n' +\n      'Jt+7jstZ2UMV32OO/kIsJ4rMUn2r/uxccPwAc1IDeRSSxOrnFKhW3Cu69iB3bHp7\\n' +\n      'JbawY12g7zshE4I14sHjv3QoXASoXjx4xgMCAwEAAaNmMGQwDgYDVR0PAQH/BAQD\\n' +\n      'AgEGMBIGA1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFI1Fc/Ql2jx+oJPgBVYq\\n' +\n      'ccgP0pQ8MB8GA1UdIwQYMBaAFHNfYNi8ywOY9CsXNC42WqZg/7wfMA0GCSqGSIb3\\n' +\n      'DQEBCwUAA4IBAQB4VVVabVp70myuYuZ3vltQIWqSUMhkaTzehMgGcHjMf9iLoZ/I\\n' +\n      '93KiFUSGnek5cRePyS9wcpp0fcBT3FvkjpUdCjVtdttJgZFhBxgTd8y26ImdDDMR\\n' +\n      '4+BUuhI5msvjL08f+Vkkpu1GQcGmyFVPFOy/UY8iefu+QyUuiBUnUuEDd49Hw0Fn\\n' +\n      '/kIPII6Vj82a2mWV/Q8e+rgN8dIRksRjKI03DEoP8lhPlsOkhdwU6Uz9Vu6NOB2Q\\n' +\n      'Ls1kbcxAc7cFSyRVJEhh12Sz9d0q/CQSTFsVJKOjSNQBQfVnLz1GwO/IieUEAr4C\\n' +\n      'jkTntH0r1LX5b/GwN4R887LvjAEdTbg1his7\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIECDCCAvCgAwIBAgIDAIkHMA0GCSqGSIb3DQEBCwUAMIGPMQswCQYDVQQGEwJV\\n' +\n      'UzEQMA4GA1UEBwwHU2VhdHRsZTETMBEGA1UECAwKV2FzaGluZ3RvbjEiMCAGA1UE\\n' +\n      'CgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJE\\n' +\n      'UzEgMB4GA1UEAwwXQW1hem9uIFJEUyBSb290IDIwMTkgQ0EwHhcNMTkwOTA2MTc0\\n' +\n      'MDIxWhcNMjQwODIyMTcwODUwWjCBlDELMAkGA1UEBhMCVVMxEzARBgNVBAgMCldh\\n' +\n      'c2hpbmd0b24xEDAOBgNVBAcMB1NlYXR0bGUxIjAgBgNVBAoMGUFtYXpvbiBXZWIg\\n' +\n      'U2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxJTAjBgNVBAMMHEFt\\n' +\n      'YXpvbiBSRFMgdXMtd2VzdC0xIDIwMTkgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IB\\n' +\n      'DwAwggEKAoIBAQDD2yzbbAl77OofTghDMEf624OvU0eS9O+lsdO0QlbfUfWa1Kd6\\n' +\n      '0WkgjkLZGfSRxEHMCnrv4UPBSK/Qwn6FTjkDLgemhqBtAnplN4VsoDL+BkRX4Wwq\\n' +\n      '/dSQJE2b+0hm9w9UMVGFDEq1TMotGGTD2B71eh9HEKzKhGzqiNeGsiX4VV+LJzdH\\n' +\n      'uM23eGisNqmd4iJV0zcAZ+Gbh2zK6fqTOCvXtm7Idccv8vZZnyk1FiWl3NR4WAgK\\n' +\n      'AkvWTIoFU3Mt7dIXKKClVmvssG8WHCkd3Xcb4FHy/G756UZcq67gMMTX/9fOFM/v\\n' +\n      'l5C0+CHl33Yig1vIDZd+fXV1KZD84dEJfEvHAgMBAAGjZjBkMA4GA1UdDwEB/wQE\\n' +\n      'AwIBBjASBgNVHRMBAf8ECDAGAQH/AgEAMB0GA1UdDgQWBBR+ap20kO/6A7pPxo3+\\n' +\n      'T3CfqZpQWjAfBgNVHSMEGDAWgBRzX2DYvMsDmPQrFzQuNlqmYP+8HzANBgkqhkiG\\n' +\n      '9w0BAQsFAAOCAQEAHCJky2tPjPttlDM/RIqExupBkNrnSYnOK4kr9xJ3sl8UF2DA\\n' +\n      'PAnYsjXp3rfcjN/k/FVOhxwzi3cXJF/2Tjj39Bm/OEfYTOJDNYtBwB0VVH4ffa/6\\n' +\n      'tZl87jaIkrxJcreeeHqYMnIxeN0b/kliyA+a5L2Yb0VPjt9INq34QDc1v74FNZ17\\n' +\n      '4z8nr1nzg4xsOWu0Dbjo966lm4nOYIGBRGOKEkHZRZ4mEiMgr3YLkv8gSmeitx57\\n' +\n      'Z6dVemNtUic/LVo5Iqw4n3TBS0iF2C1Q1xT/s3h+0SXZlfOWttzSluDvoMv5PvCd\\n' +\n      'pFjNn+aXLAALoihL1MJSsxydtsLjOBro5eK0Vw==\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIEDDCCAvSgAwIBAgICOFAwDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAlVT\\n' +\n      'MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n' +\n      'DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n' +\n      'MSAwHgYDVQQDDBdBbWF6b24gUkRTIFJvb3QgMjAxOSBDQTAeFw0xOTA5MTAxNzQ2\\n' +\n      'MjFaFw0yNDA4MjIxNzA4NTBaMIGZMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2Fz\\n' +\n      'aGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBT\\n' +\n      'ZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEqMCgGA1UEAwwhQW1h\\n' +\n      'em9uIFJEUyBhcC1ub3J0aGVhc3QtMiAyMDE5IENBMIIBIjANBgkqhkiG9w0BAQEF\\n' +\n      'AAOCAQ8AMIIBCgKCAQEAzU72e6XbaJbi4HjJoRNjKxzUEuChKQIt7k3CWzNnmjc5\\n' +\n      '8I1MjCpa2W1iw1BYVysXSNSsLOtUsfvBZxi/1uyMn5ZCaf9aeoA9UsSkFSZBjOCN\\n' +\n      'DpKPCmfV1zcEOvJz26+1m8WDg+8Oa60QV0ou2AU1tYcw98fOQjcAES0JXXB80P2s\\n' +\n      '3UfkNcnDz+l4k7j4SllhFPhH6BQ4lD2NiFAP4HwoG6FeJUn45EPjzrydxjq6v5Fc\\n' +\n      'cQ8rGuHADVXotDbEhaYhNjIrsPL+puhjWfhJjheEw8c4whRZNp6gJ/b6WEes/ZhZ\\n' +\n      'h32DwsDsZw0BfRDUMgUn8TdecNexHUw8vQWeC181hwIDAQABo2YwZDAOBgNVHQ8B\\n' +\n      'Af8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB/wIBADAdBgNVHQ4EFgQUwW9bWgkWkr0U\\n' +\n      'lrOsq2kvIdrECDgwHwYDVR0jBBgwFoAUc19g2LzLA5j0Kxc0LjZapmD/vB8wDQYJ\\n' +\n      'KoZIhvcNAQELBQADggEBAEugF0Gj7HVhX0ehPZoGRYRt3PBuI2YjfrrJRTZ9X5wc\\n' +\n      '9T8oHmw07mHmNy1qqWvooNJg09bDGfB0k5goC2emDiIiGfc/kvMLI7u+eQOoMKj6\\n' +\n      'mkfCncyRN3ty08Po45vTLBFZGUvtQmjM6yKewc4sXiASSBmQUpsMbiHRCL72M5qV\\n' +\n      'obcJOjGcIdDTmV1BHdWT+XcjynsGjUqOvQWWhhLPrn4jWe6Xuxll75qlrpn3IrIx\\n' +\n      'CRBv/5r7qbcQJPOgwQsyK4kv9Ly8g7YT1/vYBlR3cRsYQjccw5ceWUj2DrMVWhJ4\\n' +\n      'prf+E3Aa4vYmLLOUUvKnDQ1k3RGNu56V0tonsQbfsaM=\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIECjCCAvKgAwIBAgICEzUwDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAlVT\\n' +\n      'MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n' +\n      'DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n' +\n      'MSAwHgYDVQQDDBdBbWF6b24gUkRTIFJvb3QgMjAxOSBDQTAeFw0xOTA5MTAyMDUy\\n' +\n      'MjVaFw0yNDA4MjIxNzA4NTBaMIGXMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2Fz\\n' +\n      'aGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBT\\n' +\n      'ZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEoMCYGA1UEAwwfQW1h\\n' +\n      'em9uIFJEUyBjYS1jZW50cmFsLTEgMjAxOSBDQTCCASIwDQYJKoZIhvcNAQEBBQAD\\n' +\n      'ggEPADCCAQoCggEBAOxHqdcPSA2uBjsCP4DLSlqSoPuQ/X1kkJLusVRKiQE2zayB\\n' +\n      'viuCBt4VB9Qsh2rW3iYGM+usDjltGnI1iUWA5KHcvHszSMkWAOYWLiMNKTlg6LCp\\n' +\n      'XnE89tvj5dIH6U8WlDvXLdjB/h30gW9JEX7S8supsBSci2GxEzb5mRdKaDuuF/0O\\n' +\n      'qvz4YE04pua3iZ9QwmMFuTAOYzD1M72aOpj+7Ac+YLMM61qOtU+AU6MndnQkKoQi\\n' +\n      'qmUN2A9IFaqHFzRlSdXwKCKUA4otzmz+/N3vFwjb5F4DSsbsrMfjeHMo6o/nb6Nh\\n' +\n      'YDb0VJxxPee6TxSuN7CQJ2FxMlFUezcoXqwqXD0CAwEAAaNmMGQwDgYDVR0PAQH/\\n' +\n      'BAQDAgEGMBIGA1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFDGGpon9WfIpsggE\\n' +\n      'CxHq8hZ7E2ESMB8GA1UdIwQYMBaAFHNfYNi8ywOY9CsXNC42WqZg/7wfMA0GCSqG\\n' +\n      'SIb3DQEBCwUAA4IBAQAvpeQYEGZvoTVLgV9rd2+StPYykMsmFjWQcyn3dBTZRXC2\\n' +\n      'lKq7QhQczMAOhEaaN29ZprjQzsA2X/UauKzLR2Uyqc2qOeO9/YOl0H3qauo8C/W9\\n' +\n      'r8xqPbOCDLEXlOQ19fidXyyEPHEq5WFp8j+fTh+s8WOx2M7IuC0ANEetIZURYhSp\\n' +\n      'xl9XOPRCJxOhj7JdelhpweX0BJDNHeUFi0ClnFOws8oKQ7sQEv66d5ddxqqZ3NVv\\n' +\n      'RbCvCtEutQMOUMIuaygDlMn1anSM8N7Wndx8G6+Uy67AnhjGx7jw/0YPPxopEj6x\\n' +\n      'JXP8j0sJbcT9K/9/fPVLNT25RvQ/93T2+IQL4Ca2\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIEBzCCAu+gAwIBAgICYpgwDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAlVT\\n' +\n      'MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n' +\n      'DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n' +\n      'MSAwHgYDVQQDDBdBbWF6b24gUkRTIFJvb3QgMjAxOSBDQTAeFw0xOTA5MTExNzMx\\n' +\n      'NDhaFw0yNDA4MjIxNzA4NTBaMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2Fz\\n' +\n      'aGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBT\\n' +\n      'ZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzElMCMGA1UEAwwcQW1h\\n' +\n      'em9uIFJEUyBldS13ZXN0LTEgMjAxOSBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEP\\n' +\n      'ADCCAQoCggEBAMk3YdSZ64iAYp6MyyKtYJtNzv7zFSnnNf6vv0FB4VnfITTMmOyZ\\n' +\n      'LXqKAT2ahZ00hXi34ewqJElgU6eUZT/QlzdIu359TEZyLVPwURflL6SWgdG01Q5X\\n' +\n      'O++7fSGcBRyIeuQWs9FJNIIqK8daF6qw0Rl5TXfu7P9dBc3zkgDXZm2DHmxGDD69\\n' +\n      '7liQUiXzoE1q2Z9cA8+jirDioJxN9av8hQt12pskLQumhlArsMIhjhHRgF03HOh5\\n' +\n      'tvi+RCfihVOxELyIRTRpTNiIwAqfZxxTWFTgfn+gijTmd0/1DseAe82aYic8JbuS\\n' +\n      'EMbrDduAWsqrnJ4GPzxHKLXX0JasCUcWyMECAwEAAaNmMGQwDgYDVR0PAQH/BAQD\\n' +\n      'AgEGMBIGA1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFPLtsq1NrwJXO13C9eHt\\n' +\n      'sLY11AGwMB8GA1UdIwQYMBaAFHNfYNi8ywOY9CsXNC42WqZg/7wfMA0GCSqGSIb3\\n' +\n      'DQEBCwUAA4IBAQAnWBKj5xV1A1mYd0kIgDdkjCwQkiKF5bjIbGkT3YEFFbXoJlSP\\n' +\n      '0lZZ/hDaOHI8wbLT44SzOvPEEmWF9EE7SJzkvSdQrUAWR9FwDLaU427ALI3ngNHy\\n' +\n      'lGJ2hse1fvSRNbmg8Sc9GBv8oqNIBPVuw+AJzHTacZ1OkyLZrz1c1QvwvwN2a+Jd\\n' +\n      'vH0V0YIhv66llKcYDMUQJAQi4+8nbRxXWv6Gq3pvrFoorzsnkr42V3JpbhnYiK+9\\n' +\n      'nRKd4uWl62KRZjGkfMbmsqZpj2fdSWMY1UGyN1k+kDmCSWYdrTRDP0xjtIocwg+A\\n' +\n      'J116n4hV/5mbA0BaPiS2krtv17YAeHABZcvz\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIECjCCAvKgAwIBAgICV2YwDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAlVT\\n' +\n      'MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n' +\n      'DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n' +\n      'MSAwHgYDVQQDDBdBbWF6b24gUkRTIFJvb3QgMjAxOSBDQTAeFw0xOTA5MTExOTM2\\n' +\n      'MjBaFw0yNDA4MjIxNzA4NTBaMIGXMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2Fz\\n' +\n      'aGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBT\\n' +\n      'ZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEoMCYGA1UEAwwfQW1h\\n' +\n      'em9uIFJEUyBldS1jZW50cmFsLTEgMjAxOSBDQTCCASIwDQYJKoZIhvcNAQEBBQAD\\n' +\n      'ggEPADCCAQoCggEBAMEx54X2pHVv86APA0RWqxxRNmdkhAyp2R1cFWumKQRofoFv\\n' +\n      'n+SPXdkpIINpMuEIGJANozdiEz7SPsrAf8WHyD93j/ZxrdQftRcIGH41xasetKGl\\n' +\n      'I67uans8d+pgJgBKGb/Z+B5m+UsIuEVekpvgpwKtmmaLFC/NCGuSsJoFsRqoa6Gh\\n' +\n      'm34W6yJoY87UatddCqLY4IIXaBFsgK9Q/wYzYLbnWM6ZZvhJ52VMtdhcdzeTHNW0\\n' +\n      '5LGuXJOF7Ahb4JkEhoo6TS2c0NxB4l4MBfBPgti+O7WjR3FfZHpt18A6Zkq6A2u6\\n' +\n      'D/oTSL6c9/3sAaFTFgMyL3wHb2YlW0BPiljZIqECAwEAAaNmMGQwDgYDVR0PAQH/\\n' +\n      'BAQDAgEGMBIGA1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFOcAToAc6skWffJa\\n' +\n      'TnreaswAfrbcMB8GA1UdIwQYMBaAFHNfYNi8ywOY9CsXNC42WqZg/7wfMA0GCSqG\\n' +\n      'SIb3DQEBCwUAA4IBAQA1d0Whc1QtspK496mFWfFEQNegLh0a9GWYlJm+Htcj5Nxt\\n' +\n      'DAIGXb+8xrtOZFHmYP7VLCT5Zd2C+XytqseK/+s07iAr0/EPF+O2qcyQWMN5KhgE\\n' +\n      'cXw2SwuP9FPV3i+YAm11PBVeenrmzuk9NrdHQ7TxU4v7VGhcsd2C++0EisrmquWH\\n' +\n      'mgIfmVDGxphwoES52cY6t3fbnXmTkvENvR+h3rj+fUiSz0aSo+XZUGHPgvuEKM/W\\n' +\n      'CBD9Smc9CBoBgvy7BgHRgRUmwtABZHFUIEjHI5rIr7ZvYn+6A0O6sogRfvVYtWFc\\n' +\n      'qpyrW1YX8mD0VlJ8fGKM3G+aCOsiiPKDV/Uafrm+\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIECDCCAvCgAwIBAgICGAcwDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAlVT\\n' +\n      'MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n' +\n      'DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n' +\n      'MSAwHgYDVQQDDBdBbWF6b24gUkRTIFJvb3QgMjAxOSBDQTAeFw0xOTA5MTIxODE5\\n' +\n      'NDRaFw0yNDA4MjIxNzA4NTBaMIGVMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2Fz\\n' +\n      'aGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBT\\n' +\n      'ZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEmMCQGA1UEAwwdQW1h\\n' +\n      'em9uIFJEUyBldS1ub3J0aC0xIDIwMTkgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IB\\n' +\n      'DwAwggEKAoIBAQCiIYnhe4UNBbdBb/nQxl5giM0XoVHWNrYV5nB0YukA98+TPn9v\\n' +\n      'Aoj1RGYmtryjhrf01Kuv8SWO+Eom95L3zquoTFcE2gmxCfk7bp6qJJ3eHOJB+QUO\\n' +\n      'XsNRh76fwDzEF1yTeZWH49oeL2xO13EAx4PbZuZpZBttBM5zAxgZkqu4uWQczFEs\\n' +\n      'JXfla7z2fvWmGcTagX10O5C18XaFroV0ubvSyIi75ue9ykg/nlFAeB7O0Wxae88e\\n' +\n      'uhiBEFAuLYdqWnsg3459NfV8Yi1GnaitTym6VI3tHKIFiUvkSiy0DAlAGV2iiyJE\\n' +\n      'q+DsVEO4/hSINJEtII4TMtysOsYPpINqeEzRAgMBAAGjZjBkMA4GA1UdDwEB/wQE\\n' +\n      'AwIBBjASBgNVHRMBAf8ECDAGAQH/AgEAMB0GA1UdDgQWBBRR0UpnbQyjnHChgmOc\\n' +\n      'hnlc0PogzTAfBgNVHSMEGDAWgBRzX2DYvMsDmPQrFzQuNlqmYP+8HzANBgkqhkiG\\n' +\n      '9w0BAQsFAAOCAQEAKJD4xVzSf4zSGTBJrmamo86jl1NHQxXUApAZuBZEc8tqC6TI\\n' +\n      'T5CeoSr9CMuVC8grYyBjXblC4OsM5NMvmsrXl/u5C9dEwtBFjo8mm53rOOIm1fxl\\n' +\n      'I1oYB/9mtO9ANWjkykuLzWeBlqDT/i7ckaKwalhLODsRDO73vRhYNjsIUGloNsKe\\n' +\n      'pxw3dzHwAZx4upSdEVG4RGCZ1D0LJ4Gw40OfD69hfkDfRVVxKGrbEzqxXRvovmDc\\n' +\n      'tKLdYZO/6REoca36v4BlgIs1CbUXJGLSXUwtg7YXGLSVBJ/U0+22iGJmBSNcoyUN\\n' +\n      'cjPFD9JQEhDDIYYKSGzIYpvslvGc4T5ISXFiuQ==\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIEBzCCAu+gAwIBAgICZIEwDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAlVT\\n' +\n      'MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n' +\n      'DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n' +\n      'MSAwHgYDVQQDDBdBbWF6b24gUkRTIFJvb3QgMjAxOSBDQTAeFw0xOTA5MTIyMTMy\\n' +\n      'MzJaFw0yNDA4MjIxNzA4NTBaMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2Fz\\n' +\n      'aGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBT\\n' +\n      'ZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzElMCMGA1UEAwwcQW1h\\n' +\n      'em9uIFJEUyBldS13ZXN0LTIgMjAxOSBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEP\\n' +\n      'ADCCAQoCggEBALGiwqjiF7xIjT0Sx7zB3764K2T2a1DHnAxEOr+/EIftWKxWzT3u\\n' +\n      'PFwS2eEZcnKqSdRQ+vRzonLBeNLO4z8aLjQnNbkizZMBuXGm4BqRm1Kgq3nlLDQn\\n' +\n      '7YqdijOq54SpShvR/8zsO4sgMDMmHIYAJJOJqBdaus2smRt0NobIKc0liy7759KB\\n' +\n      '6kmQ47Gg+kfIwxrQA5zlvPLeQImxSoPi9LdbRoKvu7Iot7SOa+jGhVBh3VdqndJX\\n' +\n      '7tm/saj4NE375csmMETFLAOXjat7zViMRwVorX4V6AzEg1vkzxXpA9N7qywWIT5Y\\n' +\n      'fYaq5M8i6vvLg0CzrH9fHORtnkdjdu1y+0MCAwEAAaNmMGQwDgYDVR0PAQH/BAQD\\n' +\n      'AgEGMBIGA1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFFOhOx1yt3Z7mvGB9jBv\\n' +\n      '2ymdZwiOMB8GA1UdIwQYMBaAFHNfYNi8ywOY9CsXNC42WqZg/7wfMA0GCSqGSIb3\\n' +\n      'DQEBCwUAA4IBAQBehqY36UGDvPVU9+vtaYGr38dBbp+LzkjZzHwKT1XJSSUc2wqM\\n' +\n      'hnCIQKilonrTIvP1vmkQi8qHPvDRtBZKqvz/AErW/ZwQdZzqYNFd+BmOXaeZWV0Q\\n' +\n      'oHtDzXmcwtP8aUQpxN0e1xkWb1E80qoy+0uuRqb/50b/R4Q5qqSfJhkn6z8nwB10\\n' +\n      '7RjLtJPrK8igxdpr3tGUzfAOyiPrIDncY7UJaL84GFp7WWAkH0WG3H8Y8DRcRXOU\\n' +\n      'mqDxDLUP3rNuow3jnGxiUY+gGX5OqaZg4f4P6QzOSmeQYs6nLpH0PiN00+oS1BbD\\n' +\n      'bpWdZEttILPI+vAYkU4QuBKKDjJL6HbSd+cn\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIECDCCAvCgAwIBAgIDAIVCMA0GCSqGSIb3DQEBCwUAMIGPMQswCQYDVQQGEwJV\\n' +\n      'UzEQMA4GA1UEBwwHU2VhdHRsZTETMBEGA1UECAwKV2FzaGluZ3RvbjEiMCAGA1UE\\n' +\n      'CgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJE\\n' +\n      'UzEgMB4GA1UEAwwXQW1hem9uIFJEUyBSb290IDIwMTkgQ0EwHhcNMTkwOTEzMTcw\\n' +\n      'NjQxWhcNMjQwODIyMTcwODUwWjCBlDELMAkGA1UEBhMCVVMxEzARBgNVBAgMCldh\\n' +\n      'c2hpbmd0b24xEDAOBgNVBAcMB1NlYXR0bGUxIjAgBgNVBAoMGUFtYXpvbiBXZWIg\\n' +\n      'U2VydmljZXMsIEluYy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxJTAjBgNVBAMMHEFt\\n' +\n      'YXpvbiBSRFMgdXMtZWFzdC0yIDIwMTkgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IB\\n' +\n      'DwAwggEKAoIBAQDE+T2xYjUbxOp+pv+gRA3FO24+1zCWgXTDF1DHrh1lsPg5k7ht\\n' +\n      '2KPYzNc+Vg4E+jgPiW0BQnA6jStX5EqVh8BU60zELlxMNvpg4KumniMCZ3krtMUC\\n' +\n      'au1NF9rM7HBh+O+DYMBLK5eSIVt6lZosOb7bCi3V6wMLA8YqWSWqabkxwN4w0vXI\\n' +\n      '8lu5uXXFRemHnlNf+yA/4YtN4uaAyd0ami9+klwdkZfkrDOaiy59haOeBGL8EB/c\\n' +\n      'dbJJlguHH5CpCscs3RKtOOjEonXnKXldxarFdkMzi+aIIjQ8GyUOSAXHtQHb3gZ4\\n' +\n      'nS6Ey0CMlwkB8vUObZU9fnjKJcL5QCQqOfwvAgMBAAGjZjBkMA4GA1UdDwEB/wQE\\n' +\n      'AwIBBjASBgNVHRMBAf8ECDAGAQH/AgEAMB0GA1UdDgQWBBQUPuRHohPxx4VjykmH\\n' +\n      '6usGrLL1ETAfBgNVHSMEGDAWgBRzX2DYvMsDmPQrFzQuNlqmYP+8HzANBgkqhkiG\\n' +\n      '9w0BAQsFAAOCAQEAUdR9Vb3y33Yj6X6KGtuthZ08SwjImVQPtknzpajNE5jOJAh8\\n' +\n      'quvQnU9nlnMO85fVDU1Dz3lLHGJ/YG1pt1Cqq2QQ200JcWCvBRgdvH6MjHoDQpqZ\\n' +\n      'HvQ3vLgOGqCLNQKFuet9BdpsHzsctKvCVaeBqbGpeCtt3Hh/26tgx0rorPLw90A2\\n' +\n      'V8QSkZJjlcKkLa58N5CMM8Xz8KLWg3MZeT4DmlUXVCukqK2RGuP2L+aME8dOxqNv\\n' +\n      'OnOz1zrL5mR2iJoDpk8+VE/eBDmJX40IJk6jBjWoxAO/RXq+vBozuF5YHN1ujE92\\n' +\n      'tO8HItgTp37XT8bJBAiAnt5mxw+NLSqtxk2QdQ==\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIEDDCCAvSgAwIBAgICY4kwDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAlVT\\n' +\n      'MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n' +\n      'DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n' +\n      'MSAwHgYDVQQDDBdBbWF6b24gUkRTIFJvb3QgMjAxOSBDQTAeFw0xOTA5MTMyMDEx\\n' +\n      'NDJaFw0yNDA4MjIxNzA4NTBaMIGZMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2Fz\\n' +\n      'aGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBT\\n' +\n      'ZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEqMCgGA1UEAwwhQW1h\\n' +\n      'em9uIFJEUyBhcC1zb3V0aGVhc3QtMSAyMDE5IENBMIIBIjANBgkqhkiG9w0BAQEF\\n' +\n      'AAOCAQ8AMIIBCgKCAQEAr5u9OuLL/OF/fBNUX2kINJLzFl4DnmrhnLuSeSnBPgbb\\n' +\n      'qddjf5EFFJBfv7IYiIWEFPDbDG5hoBwgMup5bZDbas+ZTJTotnnxVJTQ6wlhTmns\\n' +\n      'eHECcg2pqGIKGrxZfbQhlj08/4nNAPvyYCTS0bEcmQ1emuDPyvJBYDDLDU6AbCB5\\n' +\n      '6Z7YKFQPTiCBblvvNzchjLWF9IpkqiTsPHiEt21sAdABxj9ityStV3ja/W9BfgxH\\n' +\n      'wzABSTAQT6FbDwmQMo7dcFOPRX+hewQSic2Rn1XYjmNYzgEHisdUsH7eeXREAcTw\\n' +\n      '61TRvaLH8AiOWBnTEJXPAe6wYfrcSd1pD0MXpoB62wIDAQABo2YwZDAOBgNVHQ8B\\n' +\n      'Af8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB/wIBADAdBgNVHQ4EFgQUytwMiomQOgX5\\n' +\n      'Ichd+2lDWRUhkikwHwYDVR0jBBgwFoAUc19g2LzLA5j0Kxc0LjZapmD/vB8wDQYJ\\n' +\n      'KoZIhvcNAQELBQADggEBACf6lRDpfCD7BFRqiWM45hqIzffIaysmVfr+Jr+fBTjP\\n' +\n      'uYe/ba1omSrNGG23bOcT9LJ8hkQJ9d+FxUwYyICQNWOy6ejicm4z0C3VhphbTPqj\\n' +\n      'yjpt9nG56IAcV8BcRJh4o/2IfLNzC/dVuYJV8wj7XzwlvjysenwdrJCoLadkTr1h\\n' +\n      'eIdG6Le07sB9IxrGJL9e04afk37h7c8ESGSE4E+oS4JQEi3ATq8ne1B9DQ9SasXi\\n' +\n      'IRmhNAaISDzOPdyLXi9N9V9Lwe/DHcja7hgLGYx3UqfjhLhOKwp8HtoZORixAmOI\\n' +\n      'HfILgNmwyugAbuZoCazSKKBhQ0wgO0WZ66ZKTMG8Oho=\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIEBzCCAu+gAwIBAgICUYkwDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAlVT\\n' +\n      'MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n' +\n      'DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n' +\n      'MSAwHgYDVQQDDBdBbWF6b24gUkRTIFJvb3QgMjAxOSBDQTAeFw0xOTA5MTYxODIx\\n' +\n      'MTVaFw0yNDA4MjIxNzA4NTBaMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2Fz\\n' +\n      'aGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBT\\n' +\n      'ZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzElMCMGA1UEAwwcQW1h\\n' +\n      'em9uIFJEUyB1cy13ZXN0LTIgMjAxOSBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEP\\n' +\n      'ADCCAQoCggEBANCEZBZyu6yJQFZBJmSUZfSZd3Ui2gitczMKC4FLr0QzkbxY+cLa\\n' +\n      'uVONIOrPt4Rwi+3h/UdnUg917xao3S53XDf1TDMFEYp4U8EFPXqCn/GXBIWlU86P\\n' +\n      'PvBN+gzw3nS+aco7WXb+woTouvFVkk8FGU7J532llW8o/9ydQyDIMtdIkKTuMfho\\n' +\n      'OiNHSaNc+QXQ32TgvM9A/6q7ksUoNXGCP8hDOkSZ/YOLiI5TcdLh/aWj00ziL5bj\\n' +\n      'pvytiMZkilnc9dLY9QhRNr0vGqL0xjmWdoEXz9/OwjmCihHqJq+20MJPsvFm7D6a\\n' +\n      '2NKybR9U+ddrjb8/iyLOjURUZnj5O+2+OPcCAwEAAaNmMGQwDgYDVR0PAQH/BAQD\\n' +\n      'AgEGMBIGA1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFEBxMBdv81xuzqcK5TVu\\n' +\n      'pHj+Aor8MB8GA1UdIwQYMBaAFHNfYNi8ywOY9CsXNC42WqZg/7wfMA0GCSqGSIb3\\n' +\n      'DQEBCwUAA4IBAQBZkfiVqGoJjBI37aTlLOSjLcjI75L5wBrwO39q+B4cwcmpj58P\\n' +\n      '3sivv+jhYfAGEbQnGRzjuFoyPzWnZ1DesRExX+wrmHsLLQbF2kVjLZhEJMHF9eB7\\n' +\n      'GZlTPdTzHErcnuXkwA/OqyXMpj9aghcQFuhCNguEfnROY9sAoK2PTfnTz9NJHL+Q\\n' +\n      'UpDLEJEUfc0GZMVWYhahc0x38ZnSY2SKacIPECQrTI0KpqZv/P+ijCEcMD9xmYEb\\n' +\n      'jL4en+XKS1uJpw5fIU5Sj0MxhdGstH6S84iAE5J3GM3XHklGSFwwqPYvuTXvANH6\\n' +\n      'uboynxRgSae59jIlAK6Jrr6GWMwQRbgcaAlW\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIEDDCCAvSgAwIBAgICEkYwDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAlVT\\n' +\n      'MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n' +\n      'DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n' +\n      'MSAwHgYDVQQDDBdBbWF6b24gUkRTIFJvb3QgMjAxOSBDQTAeFw0xOTA5MTYxOTUz\\n' +\n      'NDdaFw0yNDA4MjIxNzA4NTBaMIGZMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2Fz\\n' +\n      'aGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBT\\n' +\n      'ZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEqMCgGA1UEAwwhQW1h\\n' +\n      'em9uIFJEUyBhcC1zb3V0aGVhc3QtMiAyMDE5IENBMIIBIjANBgkqhkiG9w0BAQEF\\n' +\n      'AAOCAQ8AMIIBCgKCAQEAufodI2Flker8q7PXZG0P0vmFSlhQDw907A6eJuF/WeMo\\n' +\n      'GHnll3b4S6nC3oRS3nGeRMHbyU2KKXDwXNb3Mheu+ox+n5eb/BJ17eoj9HbQR1cd\\n' +\n      'gEkIciiAltf8gpMMQH4anP7TD+HNFlZnP7ii3geEJB2GGXSxgSWvUzH4etL67Zmn\\n' +\n      'TpGDWQMB0T8lK2ziLCMF4XAC/8xDELN/buHCNuhDpxpPebhct0T+f6Arzsiswt2j\\n' +\n      '7OeNeLLZwIZvVwAKF7zUFjC6m7/VmTQC8nidVY559D6l0UhhU0Co/txgq3HVsMOH\\n' +\n      'PbxmQUwJEKAzQXoIi+4uZzHFZrvov/nDTNJUhC6DqwIDAQABo2YwZDAOBgNVHQ8B\\n' +\n      'Af8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB/wIBADAdBgNVHQ4EFgQUwaZpaCme+EiV\\n' +\n      'M5gcjeHZSTgOn4owHwYDVR0jBBgwFoAUc19g2LzLA5j0Kxc0LjZapmD/vB8wDQYJ\\n' +\n      'KoZIhvcNAQELBQADggEBAAR6a2meCZuXO2TF9bGqKGtZmaah4pH2ETcEVUjkvXVz\\n' +\n      'sl+ZKbYjrun+VkcMGGKLUjS812e7eDF726ptoku9/PZZIxlJB0isC/0OyixI8N4M\\n' +\n      'NsEyvp52XN9QundTjkl362bomPnHAApeU0mRbMDRR2JdT70u6yAzGLGsUwMkoNnw\\n' +\n      '1VR4XKhXHYGWo7KMvFrZ1KcjWhubxLHxZWXRulPVtGmyWg/MvE6KF+2XMLhojhUL\\n' +\n      '+9jB3Fpn53s6KMx5tVq1x8PukHmowcZuAF8k+W4gk8Y68wIwynrdZrKRyRv6CVtR\\n' +\n      'FZ8DeJgoNZT3y/GT254VqMxxfuy2Ccb/RInd16tEvVk=\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIEDDCCAvSgAwIBAgICOYIwDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAlVT\\n' +\n      'MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n' +\n      'DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n' +\n      'MSAwHgYDVQQDDBdBbWF6b24gUkRTIFJvb3QgMjAxOSBDQTAeFw0xOTA5MTcyMDA1\\n' +\n      'MjlaFw0yNDA4MjIxNzA4NTBaMIGZMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2Fz\\n' +\n      'aGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBT\\n' +\n      'ZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEqMCgGA1UEAwwhQW1h\\n' +\n      'em9uIFJEUyBhcC1ub3J0aGVhc3QtMyAyMDE5IENBMIIBIjANBgkqhkiG9w0BAQEF\\n' +\n      'AAOCAQ8AMIIBCgKCAQEA4dMak8W+XW8y/2F6nRiytFiA4XLwePadqWebGtlIgyCS\\n' +\n      'kbug8Jv5w7nlMkuxOxoUeD4WhI6A9EkAn3r0REM/2f0aYnd2KPxeqS2MrtdxxHw1\\n' +\n      'xoOxk2x0piNSlOz6yog1idsKR5Wurf94fvM9FdTrMYPPrDabbGqiBMsZZmoHLvA3\\n' +\n      'Z+57HEV2tU0Ei3vWeGIqnNjIekS+E06KhASxrkNU5vi611UsnYZlSi0VtJsH4UGV\\n' +\n      'LhnHl53aZL0YFO5mn/fzuNG/51qgk/6EFMMhaWInXX49Dia9FnnuWXwVwi6uX1Wn\\n' +\n      '7kjoHi5VtmC8ZlGEHroxX2DxEr6bhJTEpcLMnoQMqwIDAQABo2YwZDAOBgNVHQ8B\\n' +\n      'Af8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB/wIBADAdBgNVHQ4EFgQUsUI5Cb3SWB8+\\n' +\n      'gv1YLN/ABPMdxSAwHwYDVR0jBBgwFoAUc19g2LzLA5j0Kxc0LjZapmD/vB8wDQYJ\\n' +\n      'KoZIhvcNAQELBQADggEBAJAF3E9PM1uzVL8YNdzb6fwJrxxqI2shvaMVmC1mXS+w\\n' +\n      'G0zh4v2hBZOf91l1EO0rwFD7+fxoI6hzQfMxIczh875T6vUXePKVOCOKI5wCrDad\\n' +\n      'zQbVqbFbdhsBjF4aUilOdtw2qjjs9JwPuB0VXN4/jY7m21oKEOcnpe36+7OiSPjN\\n' +\n      'xngYewCXKrSRqoj3mw+0w/+exYj3Wsush7uFssX18av78G+ehKPIVDXptOCP/N7W\\n' +\n      '8iKVNeQ2QGTnu2fzWsGUSvMGyM7yqT+h1ILaT//yQS8er511aHMLc142bD4D9VSy\\n' +\n      'DgactwPDTShK/PXqhvNey9v/sKXm4XatZvwcc8KYlW4=\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIEDDCCAvSgAwIBAgICcEUwDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAlVT\\n' +\n      'MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n' +\n      'DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n' +\n      'MSAwHgYDVQQDDBdBbWF6b24gUkRTIFJvb3QgMjAxOSBDQTAeFw0xOTA5MTgxNjU2\\n' +\n      'MjBaFw0yNDA4MjIxNzA4NTBaMIGZMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2Fz\\n' +\n      'aGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBT\\n' +\n      'ZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzEqMCgGA1UEAwwhQW1h\\n' +\n      'em9uIFJEUyBhcC1ub3J0aGVhc3QtMSAyMDE5IENBMIIBIjANBgkqhkiG9w0BAQEF\\n' +\n      'AAOCAQ8AMIIBCgKCAQEAndtkldmHtk4TVQAyqhAvtEHSMb6pLhyKrIFved1WO3S7\\n' +\n      '+I+bWwv9b2W/ljJxLq9kdT43bhvzonNtI4a1LAohS6bqyirmk8sFfsWT3akb+4Sx\\n' +\n      '1sjc8Ovc9eqIWJCrUiSvv7+cS7ZTA9AgM1PxvHcsqrcUXiK3Jd/Dax9jdZE1e15s\\n' +\n      'BEhb2OEPE+tClFZ+soj8h8Pl2Clo5OAppEzYI4LmFKtp1X/BOf62k4jviXuCSst3\\n' +\n      'UnRJzE/CXtjmN6oZySVWSe0rQYuyqRl6//9nK40cfGKyxVnimB8XrrcxUN743Vud\\n' +\n      'QQVU0Esm8OVTX013mXWQXJHP2c0aKkog8LOga0vobQIDAQABo2YwZDAOBgNVHQ8B\\n' +\n      'Af8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB/wIBADAdBgNVHQ4EFgQULmoOS1mFSjj+\\n' +\n      'snUPx4DgS3SkLFYwHwYDVR0jBBgwFoAUc19g2LzLA5j0Kxc0LjZapmD/vB8wDQYJ\\n' +\n      'KoZIhvcNAQELBQADggEBAAkVL2P1M2/G9GM3DANVAqYOwmX0Xk58YBHQu6iiQg4j\\n' +\n      'b4Ky/qsZIsgT7YBsZA4AOcPKQFgGTWhe9pvhmXqoN3RYltN8Vn7TbUm/ZVDoMsrM\\n' +\n      'gwv0+TKxW1/u7s8cXYfHPiTzVSJuOogHx99kBW6b2f99GbP7O1Sv3sLq4j6lVvBX\\n' +\n      'Fiacf5LAWC925nvlTzLlBgIc3O9xDtFeAGtZcEtxZJ4fnGXiqEnN4539+nqzIyYq\\n' +\n      'nvlgCzyvcfRAxwltrJHuuRu6Maw5AGcd2Y0saMhqOVq9KYKFKuD/927BTrbd2JVf\\n' +\n      '2sGWyuPZPCk3gq+5pCjbD0c6DkhcMGI6WwxvM5V/zSM=\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIEBzCCAu+gAwIBAgICJDQwDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAlVT\\n' +\n      'MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n' +\n      'DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n' +\n      'MSAwHgYDVQQDDBdBbWF6b24gUkRTIFJvb3QgMjAxOSBDQTAeFw0xOTA5MTgxNzAz\\n' +\n      'MTVaFw0yNDA4MjIxNzA4NTBaMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2Fz\\n' +\n      'aGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBT\\n' +\n      'ZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzElMCMGA1UEAwwcQW1h\\n' +\n      'em9uIFJEUyBldS13ZXN0LTMgMjAxOSBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEP\\n' +\n      'ADCCAQoCggEBAL9bL7KE0n02DLVtlZ2PL+g/BuHpMYFq2JnE2RgompGurDIZdjmh\\n' +\n      '1pxfL3nT+QIVMubuAOy8InRfkRxfpxyjKYdfLJTPJG+jDVL+wDcPpACFVqoV7Prg\\n' +\n      'pVYEV0lc5aoYw4bSeYFhdzgim6F8iyjoPnObjll9mo4XsHzSoqJLCd0QC+VG9Fw2\\n' +\n      'q+GDRZrLRmVM2oNGDRbGpGIFg77aRxRapFZa8SnUgs2AqzuzKiprVH5i0S0M6dWr\\n' +\n      'i+kk5epmTtkiDHceX+dP/0R1NcnkCPoQ9TglyXyPdUdTPPRfKCq12dftqll+u4mV\\n' +\n      'ARdN6WFjovxax8EAP2OAUTi1afY+1JFMj+sCAwEAAaNmMGQwDgYDVR0PAQH/BAQD\\n' +\n      'AgEGMBIGA1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFLfhrbrO5exkCVgxW0x3\\n' +\n      'Y2mAi8lNMB8GA1UdIwQYMBaAFHNfYNi8ywOY9CsXNC42WqZg/7wfMA0GCSqGSIb3\\n' +\n      'DQEBCwUAA4IBAQAigQ5VBNGyw+OZFXwxeJEAUYaXVoP/qrhTOJ6mCE2DXUVEoJeV\\n' +\n      'SxScy/TlFA9tJXqmit8JH8VQ/xDL4ubBfeMFAIAo4WzNWDVoeVMqphVEcDWBHsI1\\n' +\n      'AETWzfsapRS9yQekOMmxg63d/nV8xewIl8aNVTHdHYXMqhhik47VrmaVEok1UQb3\\n' +\n      'O971RadLXIEbVd9tjY5bMEHm89JsZDnDEw1hQXBb67Elu64OOxoKaHBgUH8AZn/2\\n' +\n      'zFsL1ynNUjOhCSAA15pgd1vjwc0YsBbAEBPcHBWYBEyME6NLNarjOzBl4FMtATSF\\n' +\n      'wWCKRGkvqN8oxYhwR2jf2rR5Mu4DWkK5Q8Ep\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIEBzCCAu+gAwIBAgICJVUwDQYJKoZIhvcNAQELBQAwgY8xCzAJBgNVBAYTAlVT\\n' +\n      'MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n' +\n      'DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n' +\n      'MSAwHgYDVQQDDBdBbWF6b24gUkRTIFJvb3QgMjAxOSBDQTAeFw0xOTA5MTkxODE2\\n' +\n      'NTNaFw0yNDA4MjIxNzA4NTBaMIGUMQswCQYDVQQGEwJVUzETMBEGA1UECAwKV2Fz\\n' +\n      'aGluZ3RvbjEQMA4GA1UEBwwHU2VhdHRsZTEiMCAGA1UECgwZQW1hem9uIFdlYiBT\\n' +\n      'ZXJ2aWNlcywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzElMCMGA1UEAwwcQW1h\\n' +\n      'em9uIFJEUyB1cy1lYXN0LTEgMjAxOSBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEP\\n' +\n      'ADCCAQoCggEBAM3i/k2u6cqbMdcISGRvh+m+L0yaSIoOXjtpNEoIftAipTUYoMhL\\n' +\n      'InXGlQBVA4shkekxp1N7HXe1Y/iMaPEyb3n+16pf3vdjKl7kaSkIhjdUz3oVUEYt\\n' +\n      'i8Z/XeJJ9H2aEGuiZh3kHixQcZczn8cg3dA9aeeyLSEnTkl/npzLf//669Ammyhs\\n' +\n      'XcAo58yvT0D4E0D/EEHf2N7HRX7j/TlyWvw/39SW0usiCrHPKDLxByLojxLdHzso\\n' +\n      'QIp/S04m+eWn6rmD+uUiRteN1hI5ncQiA3wo4G37mHnUEKo6TtTUh+sd/ku6a8HK\\n' +\n      'glMBcgqudDI90s1OpuIAWmuWpY//8xEG2YECAwEAAaNmMGQwDgYDVR0PAQH/BAQD\\n' +\n      'AgEGMBIGA1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFPqhoWZcrVY9mU7tuemR\\n' +\n      'RBnQIj1jMB8GA1UdIwQYMBaAFHNfYNi8ywOY9CsXNC42WqZg/7wfMA0GCSqGSIb3\\n' +\n      'DQEBCwUAA4IBAQB6zOLZ+YINEs72heHIWlPZ8c6WY8MDU+Be5w1M+BK2kpcVhCUK\\n' +\n      'PJO4nMXpgamEX8DIiaO7emsunwJzMSvavSPRnxXXTKIc0i/g1EbiDjnYX9d85DkC\\n' +\n      'E1LaAUCmCZBVi9fIe0H2r9whIh4uLWZA41oMnJx/MOmo3XyMfQoWcqaSFlMqfZM4\\n' +\n      '0rNoB/tdHLNuV4eIdaw2mlHxdWDtF4oH+HFm+2cVBUVC1jXKrFv/euRVtsTT+A6i\\n' +\n      'h2XBHKxQ1Y4HgAn0jACP2QSPEmuoQEIa57bEKEcZsBR8SDY6ZdTd2HLRIApcCOSF\\n' +\n      'MRM8CKLeF658I0XgF8D5EsYoKPsA+74Z+jDH\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIEETCCAvmgAwIBAgICEAAwDQYJKoZIhvcNAQELBQAwgZQxCzAJBgNVBAYTAlVT\\n' +\n      'MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n' +\n      'DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n' +\n      'MSUwIwYDVQQDDBxBbWF6b24gUkRTIEJldGEgUm9vdCAyMDE5IENBMB4XDTE5MDgy\\n' +\n      'MDE3MTAwN1oXDTI0MDgxOTE3MzgyNlowgZkxCzAJBgNVBAYTAlVTMRMwEQYDVQQI\\n' +\n      'DApXYXNoaW5ndG9uMRAwDgYDVQQHDAdTZWF0dGxlMSIwIAYDVQQKDBlBbWF6b24g\\n' +\n      'V2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMSowKAYDVQQD\\n' +\n      'DCFBbWF6b24gUkRTIEJldGEgdXMtZWFzdC0xIDIwMTkgQ0EwggEiMA0GCSqGSIb3\\n' +\n      'DQEBAQUAA4IBDwAwggEKAoIBAQDTNCOlotQcLP8TP82U2+nk0bExVuuMVOgFeVMx\\n' +\n      'vbUHZQeIj9ikjk+jm6eTDnnkhoZcmJiJgRy+5Jt69QcRbb3y3SAU7VoHgtraVbxF\\n' +\n      'QDh7JEHI9tqEEVOA5OvRrDRcyeEYBoTDgh76ROco2lR+/9uCvGtHVrMCtG7BP7ZB\\n' +\n      'sSVNAr1IIRZZqKLv2skKT/7mzZR2ivcw9UeBBTUf8xsfiYVBvMGoEsXEycjYdf6w\\n' +\n      'WV+7XS7teNOc9UgsFNN+9AhIBc1jvee5E//72/4F8pAttAg/+mmPUyIKtekNJ4gj\\n' +\n      'OAR2VAzGx1ybzWPwIgOudZFHXFduxvq4f1hIRPH0KbQ/gkRrAgMBAAGjZjBkMA4G\\n' +\n      'A1UdDwEB/wQEAwIBBjASBgNVHRMBAf8ECDAGAQH/AgEAMB0GA1UdDgQWBBTkvpCD\\n' +\n      '6C43rar9TtJoXr7q8dkrrjAfBgNVHSMEGDAWgBStoQwVpbGx87fxB3dEGDqKKnBT\\n' +\n      '4TANBgkqhkiG9w0BAQsFAAOCAQEAJd9fOSkwB3uVdsS+puj6gCER8jqmhd3g/J5V\\n' +\n      'Zjk9cKS8H0e8pq/tMxeJ8kpurPAzUk5RkCspGt2l0BSwmf3ahr8aJRviMX6AuW3/\\n' +\n      'g8aKplTvq/WMNGKLXONa3Sq8591J+ce8gtOX/1rDKmFI4wQ/gUzOSYiT991m7QKS\\n' +\n      'Fr6HMgFuz7RNJbb3Fy5cnurh8eYWA7mMv7laiLwTNsaro5qsqErD5uXuot6o9beT\\n' +\n      'a+GiKinEur35tNxAr47ax4IRubuIzyfCrezjfKc5raVV2NURJDyKP0m0CCaffAxE\\n' +\n      'qn2dNfYc3v1D8ypg3XjHlOzRo32RB04o8ALHMD9LSwsYDLpMag==\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIEFzCCAv+gAwIBAgICFSUwDQYJKoZIhvcNAQELBQAwgZcxCzAJBgNVBAYTAlVT\\n' +\n      'MRAwDgYDVQQHDAdTZWF0dGxlMRMwEQYDVQQIDApXYXNoaW5ndG9uMSIwIAYDVQQK\\n' +\n      'DBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRT\\n' +\n      'MSgwJgYDVQQDDB9BbWF6b24gUkRTIFByZXZpZXcgUm9vdCAyMDE5IENBMB4XDTE5\\n' +\n      'MDgyMTIyMzk0N1oXDTI0MDgyMTIyMjk0OVowgZwxCzAJBgNVBAYTAlVTMRMwEQYD\\n' +\n      'VQQIDApXYXNoaW5ndG9uMRAwDgYDVQQHDAdTZWF0dGxlMSIwIAYDVQQKDBlBbWF6\\n' +\n      'b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMS0wKwYD\\n' +\n      'VQQDDCRBbWF6b24gUkRTIFByZXZpZXcgdXMtZWFzdC0yIDIwMTkgQ0EwggEiMA0G\\n' +\n      'CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQD0dB/U7qRnSf05wOi7m10Pa2uPMTJv\\n' +\n      'r6U/3Y17a5prq5Zr4++CnSUYarG51YuIf355dKs+7Lpzs782PIwCmLpzAHKWzix6\\n' +\n      'pOaTQ+WZ0+vUMTxyqgqWbsBgSCyP7pVBiyqnmLC/L4az9XnscrbAX4pNaoJxsuQe\\n' +\n      'mzBo6yofjQaAzCX69DuqxFkVTRQnVy7LCFkVaZtjNAftnAHJjVgQw7lIhdGZp9q9\\n' +\n      'IafRt2gteihYfpn+EAQ/t/E4MnhrYs4CPLfS7BaYXBycEKC5Muj1l4GijNNQ0Efo\\n' +\n      'xG8LSZz7SNgUvfVwiNTaqfLP3AtEAWiqxyMyh3VO+1HpCjT7uNBFtmF3AgMBAAGj\\n' +\n      'ZjBkMA4GA1UdDwEB/wQEAwIBBjASBgNVHRMBAf8ECDAGAQH/AgEAMB0GA1UdDgQW\\n' +\n      'BBQtinkdrj+0B2+qdXngV2tgHnPIujAfBgNVHSMEGDAWgBRp0xqULkNh/w2ZVzEI\\n' +\n      'o2RIY7O03TANBgkqhkiG9w0BAQsFAAOCAQEAtJdqbCxDeMc8VN1/RzCabw9BIL/z\\n' +\n      '73Auh8eFTww/sup26yn8NWUkfbckeDYr1BrXa+rPyLfHpg06kwR8rBKyrs5mHwJx\\n' +\n      'bvOzXD/5WTdgreB+2Fb7mXNvWhenYuji1MF+q1R2DXV3I05zWHteKX6Dajmx+Uuq\\n' +\n      'Yq78oaCBSV48hMxWlp8fm40ANCL1+gzQ122xweMFN09FmNYFhwuW+Ao+Vv90ZfQG\\n' +\n      'PYwTvN4n/gegw2TYcifGZC2PNX74q3DH03DXe5fvNgRW5plgz/7f+9mS+YHd5qa9\\n' +\n      'tYTPUvoRbi169ou6jicsMKUKPORHWhiTpSCWR1FMMIbsAcsyrvtIsuaGCQ==\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIID/jCCAuagAwIBAgIQdOCSuA9psBpQd8EI368/0DANBgkqhkiG9w0BAQsFADCB\\n' +\n      'lzELMAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIElu\\n' +\n      'Yy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTAwLgYDVQQDDCdB\\n' +\n      'bWF6b24gUkRTIHNhLWVhc3QtMSBSb290IENBIFJTQTIwNDggRzExEDAOBgNVBAcM\\n' +\n      'B1NlYXR0bGUwIBcNMjEwNTE5MTgwNjI2WhgPMjA2MTA1MTkxOTA2MjZaMIGXMQsw\\n' +\n      'CQYDVQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjET\\n' +\n      'MBEGA1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExMDAuBgNVBAMMJ0FtYXpv\\n' +\n      'biBSRFMgc2EtZWFzdC0xIFJvb3QgQ0EgUlNBMjA0OCBHMTEQMA4GA1UEBwwHU2Vh\\n' +\n      'dHRsZTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAN6ftL6w8v3dB2yW\\n' +\n      'LjCxSP1D7ZsOTeLZOSCz1Zv0Gkd0XLhil5MdHOHBvwH/DrXqFU2oGzCRuAy+aZis\\n' +\n      'DardJU6ChyIQIciXCO37f0K23edhtpXuruTLLwUwzeEPdcnLPCX+sWEn9Y5FPnVm\\n' +\n      'pCd6J8edH2IfSGoa9LdErkpuESXdidLym/w0tWG/O2By4TabkNSmpdrCL00cqI+c\\n' +\n      'prA8Bx1jX8/9sY0gpAovtuFaRN+Ivg3PAnWuhqiSYyQ5nC2qDparOWuDiOhpY56E\\n' +\n      'EgmTvjwqMMjNtExfYx6Rv2Ndu50TriiNKEZBzEtkekwXInTupmYTvc7U83P/959V\\n' +\n      'UiQ+WSMCAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQU4uYHdH0+\\n' +\n      'bUeh81Eq2l5/RJbW+vswDgYDVR0PAQH/BAQDAgGGMA0GCSqGSIb3DQEBCwUAA4IB\\n' +\n      'AQBhxcExJ+w74bvDknrPZDRgTeMLYgbVJjx2ExH7/Ac5FZZWcpUpFwWMIJJxtewI\\n' +\n      'AnhryzM3tQYYd4CG9O+Iu0+h/VVfW7e4O3joWVkxNMb820kQSEwvZfA78aItGwOY\\n' +\n      'WSaFNVRyloVicZRNJSyb1UL9EiJ9ldhxm4LTT0ax+4ontI7zTx6n6h8Sr6r/UOvX\\n' +\n      'd9T5aUUENWeo6M9jGupHNn3BobtL7BZm2oS8wX8IVYj4tl0q5T89zDi2x0MxbsIV\\n' +\n      '5ZjwqBQ5JWKv7ASGPb+z286RjPA9R2knF4lJVZrYuNV90rHvI/ECyt/JrDqeljGL\\n' +\n      'BLl1W/UsvZo6ldLIpoMbbrb5\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIEBDCCAuygAwIBAgIQUfVbqapkLYpUqcLajpTJWzANBgkqhkiG9w0BAQsFADCB\\n' +\n      'mjELMAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIElu\\n' +\n      'Yy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTMwMQYDVQQDDCpB\\n' +\n      'bWF6b24gUkRTIG1lLWNlbnRyYWwtMSBSb290IENBIFJTQTIwNDggRzExEDAOBgNV\\n' +\n      'BAcMB1NlYXR0bGUwIBcNMjIwNTA2MjMyMDA5WhgPMjA2MjA1MDcwMDIwMDlaMIGa\\n' +\n      'MQswCQYDVQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5j\\n' +\n      'LjETMBEGA1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExMzAxBgNVBAMMKkFt\\n' +\n      'YXpvbiBSRFMgbWUtY2VudHJhbC0xIFJvb3QgQ0EgUlNBMjA0OCBHMTEQMA4GA1UE\\n' +\n      'BwwHU2VhdHRsZTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJIeovu3\\n' +\n      'ewI9FVitXMQzvkh34aQ6WyI4NO3YepfJaePiv3cnyFGYHN2S1cR3UQcLWgypP5va\\n' +\n      'j6bfroqwGbCbZZcb+6cyOB4ceKO9Ws1UkcaGHnNDcy5gXR7aCW2OGTUfinUuhd2d\\n' +\n      '5bOGgV7JsPbpw0bwJ156+MwfOK40OLCWVbzy8B1kITs4RUPNa/ZJnvIbiMu9rdj4\\n' +\n      '8y7GSFJLnKCjlOFUkNI5LcaYvI1+ybuNgphT3nuu5ZirvTswGakGUT/Q0J3dxP0J\\n' +\n      'pDfg5Sj/2G4gXiaM0LppVOoU5yEwVewhQ250l0eQAqSrwPqAkdTg9ng360zqCFPE\\n' +\n      'JPPcgI1tdGUgneECAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQU\\n' +\n      '/2AJVxWdZxc8eJgdpbwpW7b0f7IwDgYDVR0PAQH/BAQDAgGGMA0GCSqGSIb3DQEB\\n' +\n      'CwUAA4IBAQBYm63jTu2qYKJ94gKnqc+oUgqmb1mTXmgmp/lXDbxonjszJDOXFbri\\n' +\n      '3CCO7xB2sg9bd5YWY8sGKHaWmENj3FZpCmoefbUx++8D7Mny95Cz8R32rNcwsPTl\\n' +\n      'ebpd9A/Oaw5ug6M0x/cNr0qzF8Wk9Dx+nFEimp8RYQdKvLDfNFZHjPa1itnTiD8M\\n' +\n      'TorAqj+VwnUGHOYBsT/0NY12tnwXdD+ATWfpEHdOXV+kTMqFFwDyhfgRVNpTc+os\\n' +\n      'ygr8SwhnSCpJPB/EYl2S7r+tgAbJOkuwUvGT4pTqrzDQEhwE7swgepnHC87zhf6l\\n' +\n      'qN6mVpSnQKQLm6Ob5TeCEFgcyElsF5bH\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIICrjCCAjSgAwIBAgIRAOxu0I1QuMAhIeszB3fJIlkwCgYIKoZIzj0EAwMwgZYx\\n' +\n      'CzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMu\\n' +\n      'MRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTEvMC0GA1UEAwwmQW1h\\n' +\n      'em9uIFJEUyB1cy13ZXN0LTIgUm9vdCBDQSBFQ0MzODQgRzExEDAOBgNVBAcMB1Nl\\n' +\n      'YXR0bGUwIBcNMjEwNTI0MjIwNjU5WhgPMjEyMTA1MjQyMzA2NTlaMIGWMQswCQYD\\n' +\n      'VQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEG\\n' +\n      'A1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExLzAtBgNVBAMMJkFtYXpvbiBS\\n' +\n      'RFMgdXMtd2VzdC0yIFJvb3QgQ0EgRUNDMzg0IEcxMRAwDgYDVQQHDAdTZWF0dGxl\\n' +\n      'MHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEz4bylRcGqqDWdP7gQIIoTHdBK6FNtKH1\\n' +\n      '4SkEIXRXkYDmRvL9Bci1MuGrwuvrka5TDj4b7e+csY0llEzHpKfq6nJPFljoYYP9\\n' +\n      'uqHFkv77nOpJJ633KOr8IxmeHW5RXgrZo0IwQDAPBgNVHRMBAf8EBTADAQH/MB0G\\n' +\n      'A1UdDgQWBBQQikVz8wmjd9eDFRXzBIU8OseiGzAOBgNVHQ8BAf8EBAMCAYYwCgYI\\n' +\n      'KoZIzj0EAwMDaAAwZQIwf06Mcrpw1O0EBLBBrp84m37NYtOkE/0Z0O+C7D41wnXi\\n' +\n      'EQdn6PXUVgdD23Gj82SrAjEAklhKs+liO1PtN15yeZR1Io98nFve+lLptaLakZcH\\n' +\n      '+hfFuUtCqMbaI8CdvJlKnPqT\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIGCTCCA/GgAwIBAgIRALyWMTyCebLZOGcZZQmkmfcwDQYJKoZIhvcNAQEMBQAw\\n' +\n      'gZwxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\n      'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTE1MDMGA1UEAwws\\n' +\n      'QW1hem9uIFJEUyBhcC1ub3J0aGVhc3QtMyBSb290IENBIFJTQTQwOTYgRzExEDAO\\n' +\n      'BgNVBAcMB1NlYXR0bGUwIBcNMjEwNTI0MjAyODAzWhgPMjEyMTA1MjQyMTI4MDNa\\n' +\n      'MIGcMQswCQYDVQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywg\\n' +\n      'SW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExNTAzBgNVBAMM\\n' +\n      'LEFtYXpvbiBSRFMgYXAtbm9ydGhlYXN0LTMgUm9vdCBDQSBSU0E0MDk2IEcxMRAw\\n' +\n      'DgYDVQQHDAdTZWF0dGxlMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA\\n' +\n      'wGFiyDyCrGqgdn4fXG12cxKAAfVvhMea1mw5h9CVRoavkPqhzQpAitSOuMB9DeiP\\n' +\n      'wQyqcsiGl/cTEau4L+AUBG8b9v26RlY48exUYBXj8CieYntOT9iNw5WtdYJa3kF/\\n' +\n      'JxgI+HDMzE9cmHDs5DOO3S0uwZVyra/xE1ymfSlpOeUIOTpHRJv97CBUEpaZMUW5\\n' +\n      'Sr6GruuOwFVpO5FX3A/jQlcS+UN4GjSRgDUJuqg6RRQldEZGCVCCmodbByvI2fGm\\n' +\n      'reGpsPJD54KkmAX08nOR8e5hkGoHxq0m2DLD4SrOFmt65vG47qnuwplWJjtk9B3Z\\n' +\n      '9wDoopwZLBOtlkPIkUllWm1P8EuHC1IKOA+wSP6XdT7cy8S77wgyHzR0ynxv7q/l\\n' +\n      'vlZtH30wnNqFI0y9FeogD0TGMCHcnGqfBSicJXPy9T4fU6f0r1HwqKwPp2GArwe7\\n' +\n      'dnqLTj2D7M9MyVtFjEs6gfGWXmu1y5uDrf+CszurE8Cycoma+OfjjuVQgWOCy7Nd\\n' +\n      'jJswPxAroTzVfpgoxXza4ShUY10woZu0/J+HmNmqK7lh4NS75q1tz75in8uTZDkV\\n' +\n      'be7GK+SEusTrRgcf3tlgPjSTWG3veNzFDF2Vn1GLJXmuZfhdlVQDBNXW4MNREExS\\n' +\n      'dG57kJjICpT+r8X+si+5j51gRzkSnMYs7VHulpxfcwECAwEAAaNCMEAwDwYDVR0T\\n' +\n      'AQH/BAUwAwEB/zAdBgNVHQ4EFgQU4JWOpDBmUBuWKvGPZelw87ezhL8wDgYDVR0P\\n' +\n      'AQH/BAQDAgGGMA0GCSqGSIb3DQEBDAUAA4ICAQBRNLMql7itvXSEFQRAnyOjivHz\\n' +\n      'l5IlWVQjAbOUr6ogZcwvK6YpxNAFW5zQr8F+fdkiypLz1kk5irx9TIpff0BWC9hQ\\n' +\n      '/odMPO8Gxn8+COlSvc+dLsF2Dax3Hvz0zLeKMo+cYisJOzpdR/eKd0/AmFdkvQoM\\n' +\n      'AOK9n0yYvVJU2IrSgeJBiiCarpKSeAktEVQ4rvyacQGr+QAPkkjRwm+5LHZKK43W\\n' +\n      'nNnggRli9N/27qYtc5bgr3AaQEhEXMI4RxPRXCLsod0ehMGWyRRK728a+6PMMJAJ\\n' +\n      'WHOU0x7LCEMPP/bvpLj3BdvSGqNor4ZtyXEbwREry1uzsgODeRRns5acPwTM6ff+\\n' +\n      'CmxO2NZ0OktIUSYRmf6H/ZFlZrIhV8uWaIwEJDz71qvj7buhQ+RFDZ9CNL64C0X6\\n' +\n      'mf0zJGEpddjANHaaVky+F4gYMtEy2K2Lcm4JGTdyIzUoIe+atzCnRp0QeIcuWtF+\\n' +\n      's8AjDYCVFNypcMmqbRmNpITSnOoCHSRuVkY3gutVoYyMLbp8Jm9SJnCIlEWTA6Rm\\n' +\n      'wADOMGZJVn5/XRTRuetVOB3KlQDjs9OO01XN5NzGSZO2KT9ngAUfh9Eqhf1iRWSP\\n' +\n      'nZlRbQ2NRCuY/oJ5N59mLGxnNJSE7giEKEBRhTQ/XEPIUYAUPD5fca0arKRJwbol\\n' +\n      'l9Se1Hsq0ZU5f+OZKQ==\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      '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\\n' +\n      '5zT5+Bs=\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      '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\\n' +\n      'Hing\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIECTCCAvGgAwIBAgIRANxgyBbnxgTEOpDul2ZnC0UwDQYJKoZIhvcNAQELBQAw\\n' +\n      'gZwxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\n      'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTE1MDMGA1UEAwws\\n' +\n      'QW1hem9uIFJEUyBhcC1zb3V0aGVhc3QtMyBSb290IENBIFJTQTIwNDggRzExEDAO\\n' +\n      'BgNVBAcMB1NlYXR0bGUwIBcNMjEwNjEwMTgxOTA3WhgPMjA2MTA2MTAxOTE5MDda\\n' +\n      'MIGcMQswCQYDVQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywg\\n' +\n      'SW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExNTAzBgNVBAMM\\n' +\n      'LEFtYXpvbiBSRFMgYXAtc291dGhlYXN0LTMgUm9vdCBDQSBSU0EyMDQ4IEcxMRAw\\n' +\n      'DgYDVQQHDAdTZWF0dGxlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA\\n' +\n      'xnwSDAChrMkfk5TA4Dk8hKzStDlSlONzmd3fTG0Wqr5+x3EmFT6Ksiu/WIwEl9J2\\n' +\n      'K98UI7vYyuZfCxUKb1iMPeBdVGqk0zb92GpURd+Iz/+K1ps9ZLeGBkzR8mBmAi1S\\n' +\n      'OfpwKiTBzIv6E8twhEn4IUpHsdcuX/2Y78uESpJyM8O5CpkG0JaV9FNEbDkJeBUQ\\n' +\n      'Ao2qqNcH4R0Qcr5pyeqA9Zto1RswgL06BQMI9dTpfwSP5VvkvcNUaLl7Zv5WzLQE\\n' +\n      'JzORWePvdPzzvWEkY/3FPjxBypuYwssKaERW0fkPDmPtykktP9W/oJolKUFI6pXp\\n' +\n      'y+Y6p6/AVdnQD2zZjW5FhQIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/MB0GA1Ud\\n' +\n      'DgQWBBT+jEKs96LC+/X4BZkUYUkzPfXdqTAOBgNVHQ8BAf8EBAMCAYYwDQYJKoZI\\n' +\n      'hvcNAQELBQADggEBAIGQqgqcQ6XSGkmNebzR6DhadTbfDmbYeN5N0Vuzv+Tdmufb\\n' +\n      'tMGjdjnYMg4B+IVnTKQb+Ox3pL9gbX6KglGK8HupobmIRtwKVth+gYYz3m0SL/Nk\\n' +\n      'haWPYzOm0x3tJm8jSdufJcEob4/ATce9JwseLl76pSWdl5A4lLjnhPPKudUDfH+1\\n' +\n      'BLNUi3lxpp6GkC8aWUPtupnhZuXddolTLOuA3GwTZySI44NfaFRm+o83N1jp+EwD\\n' +\n      '6e94M4cTRzjUv6J3MZmSbdtQP/Tk1uz2K4bQZGP0PZC3bVpqiesdE/xr+wbu8uHr\\n' +\n      'cM1JXH0AmXf1yIkTgyWzmvt0k1/vgcw5ixAqvvE=\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIEATCCAumgAwIBAgIRAMhw98EQU18mIji+unM2YH8wDQYJKoZIhvcNAQELBQAw\\n' +\n      'gZgxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\n      'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTExMC8GA1UEAwwo\\n' +\n      'QW1hem9uIFJEUyBhcC1zb3V0aC0yIFJvb3QgQ0EgUlNBMjA0OCBHMTEQMA4GA1UE\\n' +\n      'BwwHU2VhdHRsZTAgFw0yMjA2MDYyMTQyMjJaGA8yMDYyMDYwNjIyNDIyMlowgZgx\\n' +\n      'CzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMu\\n' +\n      'MRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTExMC8GA1UEAwwoQW1h\\n' +\n      'em9uIFJEUyBhcC1zb3V0aC0yIFJvb3QgQ0EgUlNBMjA0OCBHMTEQMA4GA1UEBwwH\\n' +\n      'U2VhdHRsZTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIeeRoLfTm+7\\n' +\n      'vqm7ZlFSx+1/CGYHyYrOOryM4/Z3dqYVHFMgWTR7V3ziO8RZ6yUanrRcWVX3PZbF\\n' +\n      'AfX0KFE8OgLsXEZIX8odSrq86+/Th5eZOchB2fDBsUB7GuN2rvFBbM8lTI9ivVOU\\n' +\n      'lbuTnYyb55nOXN7TpmH2bK+z5c1y9RVC5iQsNAl6IJNvSN8VCqXh31eK5MlKB4DT\\n' +\n      '+Y3OivCrSGsjM+UR59uZmwuFB1h+icE+U0p9Ct3Mjq3MzSX5tQb6ElTNGlfmyGpW\\n' +\n      'Kh7GQ5XU1KaKNZXoJ37H53woNSlq56bpVrKI4uv7ATpdpFubOnSLtpsKlpLdR3sy\\n' +\n      'Ws245200pC8CAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUp0ki\\n' +\n      '6+eWvsnBjQhMxwMW5pwn7DgwDgYDVR0PAQH/BAQDAgGGMA0GCSqGSIb3DQEBCwUA\\n' +\n      'A4IBAQB2V8lv0aqbYQpj/bmVv/83QfE4vOxKCJAHv7DQ35cJsTyBdF+8pBczzi3t\\n' +\n      '3VNL5IUgW6WkyuUOWnE0eqAFOUVj0yTS1jSAtfl3vOOzGJZmWBbqm9BKEdu1D8O6\\n' +\n      'sB8bnomwiab2tNDHPmUslpdDqdabbkWwNWzLJ97oGFZ7KNODMEPXWKWNxg33iHfS\\n' +\n      '/nlmnrTVI3XgaNK9qLZiUrxu9Yz5gxi/1K+sG9/Dajd32ZxjRwDipOLiZbiXQrsd\\n' +\n      'qzIMY4GcWf3g1gHL5mCTfk7dG22h/rhPyGV0svaDnsb+hOt6sv1McMN6Y3Ou0mtM\\n' +\n      '/UaAXojREmJmTSCNvs2aBny3/2sy\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIICrjCCAjSgAwIBAgIRAMnRxsKLYscJV8Qv5pWbL7swCgYIKoZIzj0EAwMwgZYx\\n' +\n      'CzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMu\\n' +\n      'MRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTEvMC0GA1UEAwwmQW1h\\n' +\n      'em9uIFJEUyBzYS1lYXN0LTEgUm9vdCBDQSBFQ0MzODQgRzExEDAOBgNVBAcMB1Nl\\n' +\n      'YXR0bGUwIBcNMjEwNTE5MTgxNjAxWhgPMjEyMTA1MTkxOTE2MDFaMIGWMQswCQYD\\n' +\n      'VQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEG\\n' +\n      'A1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExLzAtBgNVBAMMJkFtYXpvbiBS\\n' +\n      'RFMgc2EtZWFzdC0xIFJvb3QgQ0EgRUNDMzg0IEcxMRAwDgYDVQQHDAdTZWF0dGxl\\n' +\n      'MHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEjFOCZgTNVKxLKhUxffiDEvTLFhrmIqdO\\n' +\n      'dKqVdgDoELEzIHWDdC+19aDPitbCYtBVHl65ITu/9pn6mMUl5hhUNtfZuc6A+Iw1\\n' +\n      'sBe0v0qI3y9Q9HdQYrGgeHDh8M5P7E2ho0IwQDAPBgNVHRMBAf8EBTADAQH/MB0G\\n' +\n      'A1UdDgQWBBS5L7/8M0TzoBZk39Ps7BkfTB4yJTAOBgNVHQ8BAf8EBAMCAYYwCgYI\\n' +\n      'KoZIzj0EAwMDaAAwZQIwI43O0NtWKTgnVv9z0LO5UMZYgSve7GvGTwqktZYCMObE\\n' +\n      'rUI4QerXM9D6JwLy09mqAjEAypfkdLyVWtaElVDUyHFkihAS1I1oUxaaDrynLNQK\\n' +\n      'Ou/Ay+ns+J+GyvyDUjBpVVW1\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIF/jCCA+agAwIBAgIQR71Z8lTO5Sj+as2jB7IWXzANBgkqhkiG9w0BAQwFADCB\\n' +\n      'lzELMAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIElu\\n' +\n      'Yy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTAwLgYDVQQDDCdB\\n' +\n      'bWF6b24gUkRTIHVzLXdlc3QtMiBSb290IENBIFJTQTQwOTYgRzExEDAOBgNVBAcM\\n' +\n      'B1NlYXR0bGUwIBcNMjEwNTI0MjIwMzIwWhgPMjEyMTA1MjQyMzAzMjBaMIGXMQsw\\n' +\n      'CQYDVQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjET\\n' +\n      'MBEGA1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExMDAuBgNVBAMMJ0FtYXpv\\n' +\n      'biBSRFMgdXMtd2VzdC0yIFJvb3QgQ0EgUlNBNDA5NiBHMTEQMA4GA1UEBwwHU2Vh\\n' +\n      'dHRsZTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAM977bHIs1WJijrS\\n' +\n      'XQMfUOhmlJjr2v0K0UjPl52sE1TJ76H8umo1yR4T7Whkd9IwBHNGKXCJtJmMr9zp\\n' +\n      'fB38eLTu+5ydUAXdFuZpRMKBWwPVe37AdJRKqn5beS8HQjd3JXAgGKUNNuE92iqF\\n' +\n      'qi2fIqFMpnJXWo0FIW6s2Dl2zkORd7tH0DygcRi7lgVxCsw1BJQhFJon3y+IV8/F\\n' +\n      'bnbUXSNSDUnDW2EhvWSD8L+t4eiXYsozhDAzhBvojpxhPH9OB7vqFYw5qxFx+G0t\\n' +\n      'lSLX5iWi1jzzc3XyGnB6WInZDVbvnvJ4BGZ+dTRpOCvsoMIn9bz4EQTvu243c7aU\\n' +\n      'HbS/kvnCASNt+zk7C6lbmaq0AGNztwNj85Opn2enFciWZVnnJ/4OeefUWQxD0EPp\\n' +\n      'SjEd9Cn2IHzkBZrHCg+lWZJQBKbUVS0lLIMSsLQQ6WvR38jY7D2nxM1A93xWxwpt\\n' +\n      'ZtQnYRCVXH6zt2OwDAFePInWwxUjR5t/wu3XxPgpSfrmTi3WYtr1wFypAJ811e/P\\n' +\n      'yBtswWUQ6BNJQvy+KnOEeGfOwmtdDFYR+GOCfvCihzrKJrxOtHIieehR5Iw3cbXG\\n' +\n      'sm4pDzfMUVvDDz6C2M6PRlJhhClbatHCjik9hxFYEsAlqtVVK9pxaz9i8hOqSFQq\\n' +\n      'kJSQsgWw+oM/B2CyjcSqkSQEu8RLAgMBAAGjQjBAMA8GA1UdEwEB/wQFMAMBAf8w\\n' +\n      'HQYDVR0OBBYEFPmrdxpRRgu3IcaB5BTqlprcKdTsMA4GA1UdDwEB/wQEAwIBhjAN\\n' +\n      'BgkqhkiG9w0BAQwFAAOCAgEAVdlxWjPvVKky3kn8ZizeM4D+EsLw9dWLau2UD/ls\\n' +\n      'zwDCFoT6euagVeCknrn+YEl7g20CRYT9iaonGoMUPuMR/cdtPL1W/Rf40PSrGf9q\\n' +\n      'QuxavWiHLEXOQTCtCaVZMokkvjuuLNDXyZnstgECuiZECTwhexUF4oiuhyGk9o01\\n' +\n      'QMaiz4HX4lgk0ozALUvEzaNd9gWEwD2qe+rq9cQMTVq3IArUkvTIftZUaVUMzr0O\\n' +\n      'ed1+zAsNa9nJhURJ/6anJPJjbQgb5qA1asFcp9UaMT1ku36U3gnR1T/BdgG2jX3X\\n' +\n      'Um0UcaGNVPrH1ukInWW743pxWQb7/2sumEEMVh+jWbB18SAyLI4WIh4lkurdifzS\\n' +\n      'IuTFp8TEx+MouISFhz/vJDWZ84tqoLVjkEcP6oDypq9lFoEzHDJv3V1CYcIgOusT\\n' +\n      'k1jm9P7BXdTG7TYzUaTb9USb6bkqkD9EwJAOSs7DI94aE6rsSws2yAHavjAMfuMZ\\n' +\n      'sDAZvkqS2Qg2Z2+CI6wUZn7mzkJXbZoqRjDvChDXEB1mIhzVXhiNW/CR5WKVDvlj\\n' +\n      '9v1sdGByh2pbxcLQtVaq/5coM4ANgphoNz3pOYUPWHS+JUrIivBZ+JobjXcxr3SN\\n' +\n      '9iDzcu5/FVVNbq7+KN/nvPMngT+gduEN5m+EBjm8GukJymFG0m6BENRA0QSDqZ7k\\n' +\n      'zDY=\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIECTCCAvGgAwIBAgIRAK5EYG3iHserxMqgg+0EFjgwDQYJKoZIhvcNAQELBQAw\\n' +\n      'gZwxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\n      'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTE1MDMGA1UEAwws\\n' +\n      'QW1hem9uIFJEUyBhcC1ub3J0aGVhc3QtMyBSb290IENBIFJTQTIwNDggRzExEDAO\\n' +\n      'BgNVBAcMB1NlYXR0bGUwIBcNMjEwNTI0MjAyMzE2WhgPMjA2MTA1MjQyMTIzMTZa\\n' +\n      'MIGcMQswCQYDVQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywg\\n' +\n      'SW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExNTAzBgNVBAMM\\n' +\n      'LEFtYXpvbiBSRFMgYXAtbm9ydGhlYXN0LTMgUm9vdCBDQSBSU0EyMDQ4IEcxMRAw\\n' +\n      'DgYDVQQHDAdTZWF0dGxlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA\\n' +\n      's1L6TtB84LGraLHVC+rGPhLBW2P0oN/91Rq3AnYwqDOuTom7agANwEjvLq7dSRG/\\n' +\n      'sIfZsSV/ABTgArZ5sCmLjHFZAo8Kd45yA9byx20RcYtAG8IZl+q1Cri+s0XefzyO\\n' +\n      'U6mlfXZkVe6lzjlfXBkrlE/+5ifVbJK4dqOS1t9cWIpgKqv5fbE6Qbq4LVT+5/WM\\n' +\n      'Vd2BOljuBMGMzdZubqFKFq4mzTuIYfnBm7SmHlZfTdfBYPP1ScNuhpjuzw4n3NCR\\n' +\n      'EdU6dQv04Q6th4r7eiOCwbWI9LkmVbvBe3ylhH63lApC7MiiPYLlB13xBubVHVhV\\n' +\n      'q1NHoNTi+zA3MN9HWicRxQIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/MB0GA1Ud\\n' +\n      'DgQWBBSuxoqm0/wjNiZLvqv+JlQwsDvTPDAOBgNVHQ8BAf8EBAMCAYYwDQYJKoZI\\n' +\n      'hvcNAQELBQADggEBAFfTK/j5kv90uIbM8VaFdVbr/6weKTwehafT0pAk1bfLVX+7\\n' +\n      'uf8oHgYiyKTTl0DFQicXejghXTeyzwoEkWSR8c6XkhD5vYG3oESqmt/RGvvoxz11\\n' +\n      'rHHy7yHYu7RIUc3VQG60c4qxXv/1mWySGwVwJrnuyNT9KZXPevu3jVaWOVHEILaK\\n' +\n      'HvzQ2YEcWBPmde/zEseO2QeeGF8FL45Q1d66wqIP4nNUd2pCjeTS5SpB0MMx7yi9\\n' +\n      'ki1OH1pv8tOuIdimtZ7wkdB8+JSZoaJ81b8sRrydRwJyvB88rftuI3YB4WwGuONT\\n' +\n      'ZezUPsmaoK69B0RChB0ofDpAaviF9V3xOWvVZfo=\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      '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\\n' +\n      '1axqeKpI0F5SBUPsaVNYY2uNFg==\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIECDCCAvCgAwIBAgIQCREfzzVyDTMcNME+gWnTCTANBgkqhkiG9w0BAQsFADCB\\n' +\n      'nDELMAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIElu\\n' +\n      'Yy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTUwMwYDVQQDDCxB\\n' +\n      'bWF6b24gUkRTIGFwLXNvdXRoZWFzdC0yIFJvb3QgQ0EgUlNBMjA0OCBHMTEQMA4G\\n' +\n      'A1UEBwwHU2VhdHRsZTAgFw0yMTA1MjQyMDQyMzNaGA8yMDYxMDUyNDIxNDIzM1ow\\n' +\n      'gZwxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\n      'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTE1MDMGA1UEAwws\\n' +\n      'QW1hem9uIFJEUyBhcC1zb3V0aGVhc3QtMiBSb290IENBIFJTQTIwNDggRzExEDAO\\n' +\n      'BgNVBAcMB1NlYXR0bGUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDL\\n' +\n      '1MT6br3L/4Pq87DPXtcjlXN3cnbNk2YqRAZHJayStTz8VtsFcGPJOpk14geRVeVk\\n' +\n      'e9uKFHRbcyr/RM4owrJTj5X4qcEuATYZbo6ou/rW2kYzuWFZpFp7lqm0vasV4Z9F\\n' +\n      'fChlhwkNks0UbM3G+psCSMNSoF19ERunj7w2c4E62LwujkeYLvKGNepjnaH10TJL\\n' +\n      '2krpERd+ZQ4jIpObtRcMH++bTrvklc+ei8W9lqrVOJL+89v2piN3Ecdd389uphst\\n' +\n      'qQdb1BBVXbhUrtuGHgVf7zKqN1SkCoktoWxVuOprVWhSvr7akaWeq0UmlvbEsujU\\n' +\n      'vADqxGMcJFyCzxx3CkJjAgMBAAGjQjBAMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0O\\n' +\n      'BBYEFFk8UJmlhoxFT3PP12PvhvazHjT4MA4GA1UdDwEB/wQEAwIBhjANBgkqhkiG\\n' +\n      '9w0BAQsFAAOCAQEAfFtr2lGoWVXmWAsIo2NYre7kzL8Xb9Tx7desKxCCz5HOOvIr\\n' +\n      '8JMB1YK6A7IOvQsLJQ/f1UnKRh3X3mJZjKIywfrMSh0FiDf+rjcEzXxw2dGtUem4\\n' +\n      'A+WMvIA3jwxnJ90OQj5rQ8bg3iPtE6eojzo9vWQGw/Vu48Dtw1DJo9210Lq/6hze\\n' +\n      'hPhNkFh8fMXNT7Q1Wz/TJqJElyAQGNOXhyGpHKeb0jHMMhsy5UNoW5hLeMS5ffao\\n' +\n      'TBFWEJ1gVfxIU9QRxSh+62m46JIg+dwDlWv8Aww14KgepspRbMqDuaM2cinoejv6\\n' +\n      't3dyOyHHrsOyv3ffZUKtQhQbQr+sUcL89lARsg==\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIID/zCCAuegAwIBAgIRAIJLTMpzGNxqHZ4t+c1MlCIwDQYJKoZIhvcNAQELBQAw\\n' +\n      'gZcxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\n      'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTEwMC4GA1UEAwwn\\n' +\n      'QW1hem9uIFJEUyBhcC1lYXN0LTEgUm9vdCBDQSBSU0EyMDQ4IEcxMRAwDgYDVQQH\\n' +\n      'DAdTZWF0dGxlMCAXDTIxMDUyNTIxMzAzM1oYDzIwNjEwNTI1MjIzMDMzWjCBlzEL\\n' +\n      'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\n      'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTAwLgYDVQQDDCdBbWF6\\n' +\n      'b24gUkRTIGFwLWVhc3QtMSBSb290IENBIFJTQTIwNDggRzExEDAOBgNVBAcMB1Nl\\n' +\n      'YXR0bGUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDtdHut0ZhJ9Nn2\\n' +\n      'MpVafFcwHdoEzx06okmmhjJsNy4l9QYVeh0UUoek0SufRNMRF4d5ibzpgZol0Y92\\n' +\n      '/qKWNe0jNxhEj6sXyHsHPeYtNBPuDMzThfbvsLK8z7pBP7vVyGPGuppqW/6m4ZBB\\n' +\n      'lcc9fsf7xpZ689iSgoyjiT6J5wlVgmCx8hFYc/uvcRtfd8jAHvheug7QJ3zZmIye\\n' +\n      'V4htOW+fRVWnBjf40Q+7uTv790UAqs0Zboj4Yil+hER0ibG62y1g71XcCyvcVpto\\n' +\n      '2/XW7Y9NCgMNqQ7fGN3wR1gjtSYPd7DO32LTzYhutyvfbpAZjsAHnoObmoljcgXI\\n' +\n      'QjfBcCFpAgMBAAGjQjBAMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFJI3aWLg\\n' +\n      'CS5xqU5WYVaeT5s8lpO0MA4GA1UdDwEB/wQEAwIBhjANBgkqhkiG9w0BAQsFAAOC\\n' +\n      'AQEAUwATpJOcGVOs3hZAgJwznWOoTzOVJKfrqBum7lvkVH1vBwxBl9CahaKj3ZOt\\n' +\n      'YYp2qJzhDUWludL164DL4ZjS6eRedLRviyy5cRy0581l1MxPWTThs27z+lCC14RL\\n' +\n      'PJZNVYYdl7Jy9Q5NsQ0RBINUKYlRY6OqGDySWyuMPgno2GPbE8aynMdKP+f6G/uE\\n' +\n      'YHOf08gFDqTsbyfa70ztgVEJaRooVf5JJq4UQtpDvVswW2reT96qi6tXPKHN5qp3\\n' +\n      '3wI0I1Mp4ePmiBKku2dwYzPfrJK/pQlvu0Gu5lKOQ65QdotwLAAoaFqrf9za1yYs\\n' +\n      'INUkHLWIxDds+4OHNYcerGp5Dw==\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIGCTCCA/GgAwIBAgIRAIO6ldra1KZvNWJ0TA1ihXEwDQYJKoZIhvcNAQEMBQAw\\n' +\n      'gZwxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\n      'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTE1MDMGA1UEAwws\\n' +\n      'QW1hem9uIFJEUyBhcC1zb3V0aGVhc3QtMSBSb290IENBIFJTQTQwOTYgRzExEDAO\\n' +\n      'BgNVBAcMB1NlYXR0bGUwIBcNMjEwNTIxMjE0NTA1WhgPMjEyMTA1MjEyMjQ1MDVa\\n' +\n      'MIGcMQswCQYDVQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywg\\n' +\n      'SW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExNTAzBgNVBAMM\\n' +\n      'LEFtYXpvbiBSRFMgYXAtc291dGhlYXN0LTEgUm9vdCBDQSBSU0E0MDk2IEcxMRAw\\n' +\n      'DgYDVQQHDAdTZWF0dGxlMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA\\n' +\n      'sDN52Si9pFSyZ1ruh3xAN0nVqEs960o2IK5CPu/ZfshFmzAwnx/MM8EHt/jMeZtj\\n' +\n      'SM58LADAsNDL01ELpFZATjgZQ6xNAyXRXE7RiTRUvNkK7O3o2qAGbLnJq/UqF7Sw\\n' +\n      'LRnB8V6hYOv+2EjVnohtGCn9SUFGZtYDjWXsLd4ML4Zpxv0a5LK7oEC7AHzbUR7R\\n' +\n      'jsjkrXqSv7GE7bvhSOhMkmgxgj1F3J0b0jdQdtyyj109aO0ATUmIvf+Bzadg5AI2\\n' +\n      'A9UA+TUcGeebhpHu8AP1Hf56XIlzPpaQv3ZJ4vzoLaVNUC7XKzAl1dlvCl7Klg/C\\n' +\n      '84qmbD/tjZ6GHtzpLKgg7kQEV7mRoXq8X4wDX2AFPPQl2fv+Kbe+JODqm5ZjGegm\\n' +\n      'uskABBi8IFv1hYx9jEulZPxC6uD/09W2+niFm3pirnlWS83BwVDTUBzF+CooUIMT\\n' +\n      'jhWkIIZGDDgMJTzouBHfoSJtS1KpUZi99m2WyVs21MNKHeWAbs+zmI6TO5iiMC+T\\n' +\n      'uB8spaOiHFO1573Fmeer4sy3YA6qVoqVl6jjTQqOdy3frAMbCkwH22/crV8YA+08\\n' +\n      'hLeHXrMK+6XUvU+EtHAM3VzcrLbuYJUI2XJbzTj5g0Eb8I8JWsHvWHR5K7Z7gceR\\n' +\n      '78AzxQmoGEfV6KABNWKsgoCQnfb1BidDJIe3BsI0A6UCAwEAAaNCMEAwDwYDVR0T\\n' +\n      'AQH/BAUwAwEB/zAdBgNVHQ4EFgQUABp0MlB14MSHgAcuNSOhs3MOlUcwDgYDVR0P\\n' +\n      'AQH/BAQDAgGGMA0GCSqGSIb3DQEBDAUAA4ICAQCv4CIOBSQi/QR9NxdRgVAG/pAh\\n' +\n      'tFJhV7OWb/wqwsNKFDtg6tTxwaahdCfWpGWId15OUe7G9LoPiKiwM9C92n0ZeHRz\\n' +\n      '4ewbrQVo7Eu1JI1wf0rnZJISL72hVYKmlvaWaacHhWxvsbKLrB7vt6Cknxa+S993\\n' +\n      'Kf8i2Psw8j5886gaxhiUtzMTBwoDWak8ZaK7m3Y6C6hXQk08+3pnIornVSFJ9dlS\\n' +\n      'PAqt5UPwWmrEfF+0uIDORlT+cvrAwgSp7nUF1q8iasledycZ/BxFgQqzNwnkBDwQ\\n' +\n      'Z/aM52ArGsTzfMhkZRz9HIEhz1/0mJw8gZtDVQroD8778h8zsx2SrIz7eWQ6uWsD\\n' +\n      'QEeSWXpcheiUtEfzkDImjr2DLbwbA23c9LoexUD10nwohhoiQQg77LmvBVxeu7WU\\n' +\n      'E63JqaYUlOLOzEmNJp85zekIgR8UTkO7Gc+5BD7P4noYscI7pPOL5rP7YLg15ZFi\\n' +\n      'ega+G53NTckRXz4metsd8XFWloDjZJJq4FfD60VuxgXzoMNT9wpFTNSH42PR2s9L\\n' +\n      'I1vcl3w8yNccs9se2utM2nLsItZ3J0m/+QSRiw9hbrTYTcM9sXki0DtH2kyIOwYf\\n' +\n      'lOrGJDiYOIrXSQK36H0gQ+8omlrUTvUj4msvkXuQjlfgx6sgp2duOAfnGxE7uHnc\\n' +\n      'UhnJzzoe6M+LfGHkVQ==\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIICuDCCAj2gAwIBAgIQSAG6j2WHtWUUuLGJTPb1nTAKBggqhkjOPQQDAzCBmzEL\\n' +\n      'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\n      'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTQwMgYDVQQDDCtBbWF6\\n' +\n      'b24gUkRTIGFwLW5vcnRoZWFzdC0yIFJvb3QgQ0EgRUNDMzg0IEcxMRAwDgYDVQQH\\n' +\n      'DAdTZWF0dGxlMCAXDTIxMDUyMDE2MzgyNloYDzIxMjEwNTIwMTczODI2WjCBmzEL\\n' +\n      'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\n      'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTQwMgYDVQQDDCtBbWF6\\n' +\n      'b24gUkRTIGFwLW5vcnRoZWFzdC0yIFJvb3QgQ0EgRUNDMzg0IEcxMRAwDgYDVQQH\\n' +\n      'DAdTZWF0dGxlMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAE2eqwU4FOzW8RV1W381Bd\\n' +\n      'olhDOrqoMqzWli21oDUt7y8OnXM/lmAuOS6sr8Nt61BLVbONdbr+jgCYw75KabrK\\n' +\n      'ZGg3siqvMOgabIKkKuXO14wtrGyGDt7dnKXg5ERGYOZlo0IwQDAPBgNVHRMBAf8E\\n' +\n      'BTADAQH/MB0GA1UdDgQWBBS1Acp2WYxOcblv5ikZ3ZIbRCCW+zAOBgNVHQ8BAf8E\\n' +\n      'BAMCAYYwCgYIKoZIzj0EAwMDaQAwZgIxAJL84J08PBprxmsAKPTotBuVI3MyW1r8\\n' +\n      'xQ0i8lgCQUf8GcmYjQ0jI4oZyv+TuYJAcwIxAP9Xpzq0Docxb+4N1qVhpiOfWt1O\\n' +\n      'FnemFiy9m1l+wv6p3riQMPV7mBVpklmijkIv3Q==\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIECTCCAvGgAwIBAgIRALZLcqCVIJ25maDPE3sbPCIwDQYJKoZIhvcNAQELBQAw\\n' +\n      'gZwxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\n      'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTE1MDMGA1UEAwws\\n' +\n      'QW1hem9uIFJEUyBhcC1zb3V0aGVhc3QtMSBSb290IENBIFJTQTIwNDggRzExEDAO\\n' +\n      'BgNVBAcMB1NlYXR0bGUwIBcNMjEwNTIxMjEzOTM5WhgPMjA2MTA1MjEyMjM5Mzla\\n' +\n      'MIGcMQswCQYDVQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywg\\n' +\n      'SW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExNTAzBgNVBAMM\\n' +\n      'LEFtYXpvbiBSRFMgYXAtc291dGhlYXN0LTEgUm9vdCBDQSBSU0EyMDQ4IEcxMRAw\\n' +\n      'DgYDVQQHDAdTZWF0dGxlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA\\n' +\n      'ypKc+6FfGx6Gl6fQ78WYS29QoKgQiur58oxR3zltWeg5fqh9Z85K5S3UbRSTqWWu\\n' +\n      'Xcfnkz0/FS07qHX+nWAGU27JiQb4YYqhjZNOAq8q0+ptFHJ6V7lyOqXBq5xOzO8f\\n' +\n      '+0DlbJSsy7GEtJp7d7QCM3M5KVY9dENVZUKeJwa8PC5StvwPx4jcLeZRJC2rAVDG\\n' +\n      'SW7NAInbATvr9ssSh03JqjXb+HDyywiqoQ7EVLtmtXWimX+0b3/2vhqcH5jgcKC9\\n' +\n      'IGFydrjPbv4kwMrKnm6XlPZ9L0/3FMzanXPGd64LQVy51SI4d5Xymn0Mw2kMX8s6\\n' +\n      'Nf05OsWcDzJ1n6/Q1qHSxQIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/MB0GA1Ud\\n' +\n      'DgQWBBRmaIc8eNwGP7i6P7AJrNQuK6OpFzAOBgNVHQ8BAf8EBAMCAYYwDQYJKoZI\\n' +\n      'hvcNAQELBQADggEBAIBeHfGwz3S2zwIUIpqEEI5/sMySDeS+3nJR+woWAHeO0C8i\\n' +\n      'BJdDh+kzzkP0JkWpr/4NWz84/IdYo1lqASd1Kopz9aT1+iROXaWr43CtbzjXb7/X\\n' +\n      'Zv7eZZFC8/lS5SROq42pPWl4ekbR0w8XGQElmHYcWS41LBfKeHCUwv83ATF0XQ6I\\n' +\n      '4t+9YSqZHzj4vvedrvcRInzmwWJaal9s7Z6GuwTGmnMsN3LkhZ+/GD6oW3pU/Pyh\\n' +\n      'EtWqffjsLhfcdCs3gG8x9BbkcJPH5aPAVkPn4wc8wuXg6xxb9YGsQuY930GWTYRf\\n' +\n      'schbgjsuqznW4HHakq4WNhs1UdTSTKkRdZz7FUQ=\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIEDzCCAvegAwIBAgIRAM2zAbhyckaqRim63b+Tib8wDQYJKoZIhvcNAQELBQAw\\n' +\n      'gZ8xCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\n      'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTE4MDYGA1UEAwwv\\n' +\n      'QW1hem9uIFJEUyBQcmV2aWV3IHVzLWVhc3QtMiBSb290IENBIFJTQTIwNDggRzEx\\n' +\n      'EDAOBgNVBAcMB1NlYXR0bGUwIBcNMjEwNTE4MjA0OTQ1WhgPMjA2MTA1MTgyMTQ5\\n' +\n      'NDVaMIGfMQswCQYDVQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNl\\n' +\n      'cywgSW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExODA2BgNV\\n' +\n      'BAMML0FtYXpvbiBSRFMgUHJldmlldyB1cy1lYXN0LTIgUm9vdCBDQSBSU0EyMDQ4\\n' +\n      'IEcxMRAwDgYDVQQHDAdTZWF0dGxlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB\\n' +\n      'CgKCAQEA1ybjQMH1MkbvfKsWJaCTXeCSN1SG5UYid+Twe+TjuSqaXWonyp4WRR5z\\n' +\n      'tlkqq+L2MWUeQQAX3S17ivo/t84mpZ3Rla0cx39SJtP3BiA2BwfUKRjhPwOjmk7j\\n' +\n      '3zrcJjV5k1vSeLNOfFFSlwyDiVyLAE61lO6onBx+cRjelu0egMGq6WyFVidTdCmT\\n' +\n      'Q9Zw3W6LTrnPvPmEyjHy2yCHzH3E50KSd/5k4MliV4QTujnxYexI2eR8F8YQC4m3\\n' +\n      'DYjXt/MicbqA366SOoJA50JbgpuVv62+LSBu56FpzY12wubmDZsdn4lsfYKiWxUy\\n' +\n      'uc83a2fRXsJZ1d3whxrl20VFtLFHFQIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/\\n' +\n      'MB0GA1UdDgQWBBRC0ytKmDYbfz0Bz0Psd4lRQV3aNTAOBgNVHQ8BAf8EBAMCAYYw\\n' +\n      'DQYJKoZIhvcNAQELBQADggEBAGv8qZu4uaeoF6zsbumauz6ea6tdcWt+hGFuwGrb\\n' +\n      'tRbI85ucAmVSX06x59DJClsb4MPhL1XmqO3RxVMIVVfRwRHWOsZQPnXm8OYQ2sny\\n' +\n      'rYuFln1COOz1U/KflZjgJmxbn8x4lYiTPZRLarG0V/OsCmnLkQLPtEl/spMu8Un7\\n' +\n      'r3K8SkbWN80gg17Q8EV5mnFwycUx9xsTAaFItuG0en9bGsMgMmy+ZsDmTRbL+lcX\\n' +\n      'Fq8r4LT4QjrFz0shrzCwuuM4GmcYtBSxlacl+HxYEtAs5k10tmzRf6OYlY33tGf6\\n' +\n      '1tkYvKryxDPF/EDgGp/LiBwx6ixYMBfISoYASt4V/ylAlHA=\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIICtTCCAjqgAwIBAgIRAK9BSZU6nIe6jqfODmuVctYwCgYIKoZIzj0EAwMwgZkx\\n' +\n      'CzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMu\\n' +\n      'MRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTEyMDAGA1UEAwwpQW1h\\n' +\n      'em9uIFJEUyBjYS1jZW50cmFsLTEgUm9vdCBDQSBFQ0MzODQgRzExEDAOBgNVBAcM\\n' +\n      'B1NlYXR0bGUwIBcNMjEwNTIxMjIxMzA5WhgPMjEyMTA1MjEyMzEzMDlaMIGZMQsw\\n' +\n      'CQYDVQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjET\\n' +\n      'MBEGA1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExMjAwBgNVBAMMKUFtYXpv\\n' +\n      'biBSRFMgY2EtY2VudHJhbC0xIFJvb3QgQ0EgRUNDMzg0IEcxMRAwDgYDVQQHDAdT\\n' +\n      'ZWF0dGxlMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEUkEERcgxneT5H+P+fERcbGmf\\n' +\n      'bVx+M7rNWtgWUr6w+OBENebQA9ozTkeSg4c4M+qdYSObFqjxITdYxT1z/nHz1gyx\\n' +\n      'OKAhLjWu+nkbRefqy3RwXaWT680uUaAP6ccnkZOMo0IwQDAPBgNVHRMBAf8EBTAD\\n' +\n      'AQH/MB0GA1UdDgQWBBSN6fxlg0s5Wny08uRBYZcQ3TUoyzAOBgNVHQ8BAf8EBAMC\\n' +\n      'AYYwCgYIKoZIzj0EAwMDaQAwZgIxAORaz+MBVoFBTmZ93j2G2vYTwA6T5hWzBWrx\\n' +\n      'CrI54pKn5g6At56DBrkjrwZF5T1enAIxAJe/LZ9xpDkAdxDgGJFN8gZYLRWc0NRy\\n' +\n      'Rb4hihy5vj9L+w9uKc9VfEBIFuhT7Z3ljg==\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIEADCCAuigAwIBAgIQB/57HSuaqUkLaasdjxUdPjANBgkqhkiG9w0BAQsFADCB\\n' +\n      'mDELMAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIElu\\n' +\n      'Yy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTEwLwYDVQQDDChB\\n' +\n      'bWF6b24gUkRTIGFwLXNvdXRoLTEgUm9vdCBDQSBSU0EyMDQ4IEcxMRAwDgYDVQQH\\n' +\n      'DAdTZWF0dGxlMCAXDTIxMDUxOTE3NDAzNFoYDzIwNjEwNTE5MTg0MDM0WjCBmDEL\\n' +\n      'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\n      'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTEwLwYDVQQDDChBbWF6\\n' +\n      'b24gUkRTIGFwLXNvdXRoLTEgUm9vdCBDQSBSU0EyMDQ4IEcxMRAwDgYDVQQHDAdT\\n' +\n      'ZWF0dGxlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtbkaoVsUS76o\\n' +\n      'TgLFmcnaB8cswBk1M3Bf4IVRcwWT3a1HeJSnaJUqWHCJ+u3ip/zGVOYl0gN1MgBb\\n' +\n      'MuQRIJiB95zGVcIa6HZtx00VezDTr3jgGWRHmRjNVCCHGmxOZWvJjsIE1xavT/1j\\n' +\n      'QYV/ph4EZEIZ/qPq7e3rHohJaHDe23Z7QM9kbyqp2hANG2JtU/iUhCxqgqUHNozV\\n' +\n      'Zd0l5K6KnltZQoBhhekKgyiHqdTrH8fWajYl5seD71bs0Axowb+Oh0rwmrws3Db2\\n' +\n      'Dh+oc2PwREnjHeca9/1C6J2vhY+V0LGaJmnnIuOANrslx2+bgMlyhf9j0Bv8AwSi\\n' +\n      'dSWsobOhNQIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBQb7vJT\\n' +\n      'VciLN72yJGhaRKLn6Krn2TAOBgNVHQ8BAf8EBAMCAYYwDQYJKoZIhvcNAQELBQAD\\n' +\n      'ggEBAAxEj8N9GslReAQnNOBpGl8SLgCMTejQ6AW/bapQvzxrZrfVOZOYwp/5oV0f\\n' +\n      '9S1jcGysDM+DrmfUJNzWxq2Y586R94WtpH4UpJDGqZp+FuOVJL313te4609kopzO\\n' +\n      'lDdmd+8z61+0Au93wB1rMiEfnIMkOEyt7D2eTFJfJRKNmnPrd8RjimRDlFgcLWJA\\n' +\n      '3E8wca67Lz/G0eAeLhRHIXv429y8RRXDtKNNz0wA2RwURWIxyPjn1fHjA9SPDkeW\\n' +\n      'E1Bq7gZj+tBnrqz+ra3yjZ2blss6Ds3/uRY6NYqseFTZWmQWT7FolZEnT9vMUitW\\n' +\n      'I0VynUbShVpGf6946e0vgaaKw20=\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIID/jCCAuagAwIBAgIQGyUVTaVjYJvWhroVEiHPpDANBgkqhkiG9w0BAQsFADCB\\n' +\n      'lzELMAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIElu\\n' +\n      'Yy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTAwLgYDVQQDDCdB\\n' +\n      'bWF6b24gUkRTIHVzLXdlc3QtMSBSb290IENBIFJTQTIwNDggRzExEDAOBgNVBAcM\\n' +\n      'B1NlYXR0bGUwIBcNMjEwNTE5MTkwNDA2WhgPMjA2MTA1MTkyMDA0MDZaMIGXMQsw\\n' +\n      'CQYDVQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjET\\n' +\n      'MBEGA1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExMDAuBgNVBAMMJ0FtYXpv\\n' +\n      'biBSRFMgdXMtd2VzdC0xIFJvb3QgQ0EgUlNBMjA0OCBHMTEQMA4GA1UEBwwHU2Vh\\n' +\n      'dHRsZTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANhyXpJ0t4nigRDZ\\n' +\n      'EwNtFOem1rM1k8k5XmziHKDvDk831p7QsX9ZOxl/BT59Pu/P+6W6SvasIyKls1sW\\n' +\n      'FJIjFF+6xRQcpoE5L5evMgN/JXahpKGeQJPOX9UEXVW5B8yi+/dyUitFT7YK5LZA\\n' +\n      'MqWBN/LtHVPa8UmE88RCDLiKkqiv229tmwZtWT7nlMTTCqiAHMFcryZHx0pf9VPh\\n' +\n      'x/iPV8p2gBJnuPwcz7z1kRKNmJ8/cWaY+9w4q7AYlAMaq/rzEqDaN2XXevdpsYAK\\n' +\n      'TMMj2kji4x1oZO50+VPNfBl5ZgJc92qz1ocF95SAwMfOUsP8AIRZkf0CILJYlgzk\\n' +\n      '/6u6qZECAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUm5jfcS9o\\n' +\n      '+LwL517HpB6hG+PmpBswDgYDVR0PAQH/BAQDAgGGMA0GCSqGSIb3DQEBCwUAA4IB\\n' +\n      'AQAcQ6lsqxi63MtpGk9XK8mCxGRLCad51+MF6gcNz6i6PAqhPOoKCoFqdj4cEQTF\\n' +\n      'F8dCfa3pvfJhxV6RIh+t5FCk/y6bWT8Ls/fYKVo6FhHj57bcemWsw/Z0XnROdVfK\\n' +\n      'Yqbc7zvjCPmwPHEqYBhjU34NcY4UF9yPmlLOL8uO1JKXa3CAR0htIoW4Pbmo6sA4\\n' +\n      '6P0co/clW+3zzsQ92yUCjYmRNeSbdXbPfz3K/RtFfZ8jMtriRGuO7KNxp8MqrUho\\n' +\n      'HK8O0mlSUxGXBZMNicfo7qY8FD21GIPH9w5fp5oiAl7lqFzt3E3sCLD3IiVJmxbf\\n' +\n      'fUwpGd1XZBBSdIxysRLM6j48\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIICrTCCAjOgAwIBAgIQU+PAILXGkpoTcpF200VD/jAKBggqhkjOPQQDAzCBljEL\\n' +\n      'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\n      'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMS8wLQYDVQQDDCZBbWF6\\n' +\n      'b24gUkRTIGFwLWVhc3QtMSBSb290IENBIEVDQzM4NCBHMTEQMA4GA1UEBwwHU2Vh\\n' +\n      'dHRsZTAgFw0yMTA1MjUyMTQ1MTFaGA8yMTIxMDUyNTIyNDUxMVowgZYxCzAJBgNV\\n' +\n      'BAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYD\\n' +\n      'VQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTEvMC0GA1UEAwwmQW1hem9uIFJE\\n' +\n      'UyBhcC1lYXN0LTEgUm9vdCBDQSBFQ0MzODQgRzExEDAOBgNVBAcMB1NlYXR0bGUw\\n' +\n      'djAQBgcqhkjOPQIBBgUrgQQAIgNiAAT3tFKE8Kw1sGQAvNLlLhd8OcGhlc7MiW/s\\n' +\n      'NXm3pOiCT4vZpawKvHBzD76Kcv+ZZzHRxQEmG1/muDzZGlKR32h8AAj+NNO2Wy3d\\n' +\n      'CKTtYMiVF6Z2zjtuSkZQdjuQbe4eQ7qjQjBAMA8GA1UdEwEB/wQFMAMBAf8wHQYD\\n' +\n      'VR0OBBYEFAiSQOp16Vv0Ohpvqcbd2j5RmhYNMA4GA1UdDwEB/wQEAwIBhjAKBggq\\n' +\n      'hkjOPQQDAwNoADBlAjBVsi+5Ape0kOhMt/WFkANkslD4qXA5uqhrfAtH29Xzz2NV\\n' +\n      'tR7akiA771OaIGB/6xsCMQCZt2egCtbX7J0WkuZ2KivTh66jecJr5DHvAP4X2xtS\\n' +\n      'F/5pS+AUhcKTEGjI9jDH3ew=\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIICuDCCAj2gAwIBAgIQT5mGlavQzFHsB7hV6Mmy6TAKBggqhkjOPQQDAzCBmzEL\\n' +\n      'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\n      'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTQwMgYDVQQDDCtBbWF6\\n' +\n      'b24gUkRTIGFwLXNvdXRoZWFzdC0yIFJvb3QgQ0EgRUNDMzg0IEcxMRAwDgYDVQQH\\n' +\n      'DAdTZWF0dGxlMCAXDTIxMDUyNDIwNTAxNVoYDzIxMjEwNTI0MjE1MDE1WjCBmzEL\\n' +\n      'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\n      'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTQwMgYDVQQDDCtBbWF6\\n' +\n      'b24gUkRTIGFwLXNvdXRoZWFzdC0yIFJvb3QgQ0EgRUNDMzg0IEcxMRAwDgYDVQQH\\n' +\n      'DAdTZWF0dGxlMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEcm4BBBjYK7clwm0HJRWS\\n' +\n      'flt3iYwoJbIXiXn9c1y3E+Vb7bmuyKhS4eO8mwO4GefUcXObRfoHY2TZLhMJLVBQ\\n' +\n      '7MN2xDc0RtZNj07BbGD3VAIFRTDX0mH9UNYd0JQM3t/Oo0IwQDAPBgNVHRMBAf8E\\n' +\n      'BTADAQH/MB0GA1UdDgQWBBRrd5ITedfAwrGo4FA9UaDaGFK3rjAOBgNVHQ8BAf8E\\n' +\n      'BAMCAYYwCgYIKoZIzj0EAwMDaQAwZgIxAPBNqmVv1IIA3EZyQ6XuVf4gj79/DMO8\\n' +\n      'bkicNS1EcBpUqbSuU4Zwt2BYc8c/t7KVOQIxAOHoWkoKZPiKyCxfMtJpCZySUG+n\\n' +\n      'sXgB/LOyWE5BJcXUfm+T1ckeNoWeUUMOLmnJjg==\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIECTCCAvGgAwIBAgIRAJcDeinvdNrDQBeJ8+t38WQwDQYJKoZIhvcNAQELBQAw\\n' +\n      'gZwxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\n      'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTE1MDMGA1UEAwws\\n' +\n      'QW1hem9uIFJEUyBhcC1zb3V0aGVhc3QtNCBSb290IENBIFJTQTIwNDggRzExEDAO\\n' +\n      'BgNVBAcMB1NlYXR0bGUwIBcNMjIwNTI1MTY0OTE2WhgPMjA2MjA1MjUxNzQ5MTZa\\n' +\n      'MIGcMQswCQYDVQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywg\\n' +\n      'SW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExNTAzBgNVBAMM\\n' +\n      'LEFtYXpvbiBSRFMgYXAtc291dGhlYXN0LTQgUm9vdCBDQSBSU0EyMDQ4IEcxMRAw\\n' +\n      'DgYDVQQHDAdTZWF0dGxlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA\\n' +\n      'k8DBNkr9tMoIM0NHoFiO7cQfSX0cOMhEuk/CHt0fFx95IBytx7GHCnNzpM27O5z6\\n' +\n      'x6iRhfNnx+B6CrGyCzOjxvPizneY+h+9zfvNz9jj7L1I2uYMuiNyOKR6FkHR46CT\\n' +\n      '1CiArfVLLPaTqgD/rQjS0GL2sLHS/0dmYipzynnZcs613XT0rAWdYDYgxDq7r/Yi\\n' +\n      'Xge5AkWQFkMUq3nOYDLCyGGfQqWKkwv6lZUHLCDKf+Y0Uvsrj8YGCI1O8mF0qPCQ\\n' +\n      'lmlfaDvbuBu1AV+aabmkvyFj3b8KRIlNLEtQ4N8KGYR2Jdb82S4YUGIOAt4wuuFt\\n' +\n      '1B7AUDLk3V/u+HTWiwfoLQIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/MB0GA1Ud\\n' +\n      'DgQWBBSNpcjz6ArWBtAA+Gz6kyyZxrrgdDAOBgNVHQ8BAf8EBAMCAYYwDQYJKoZI\\n' +\n      'hvcNAQELBQADggEBAGJEd7UgOzHYIcQRSF7nSYyjLROyalaIV9AX4WXW/Cqlul1c\\n' +\n      'MblP5etDZm7A/thliZIWAuyqv2bNicmS3xKvNy6/QYi1YgxZyy/qwJ3NdFl067W0\\n' +\n      't8nGo29B+EVK94IPjzFHWShuoktIgp+dmpijB7wkTIk8SmIoe9yuY4+hzgqk+bo4\\n' +\n      'ms2SOXSN1DoQ75Xv+YmztbnZM8MuWhL1T7hA4AMorzTQLJ9Pof8SpSdMHeDsHp0R\\n' +\n      '01jogNFkwy25nw7cL62nufSuH2fPYGWXyNDg+y42wKsKWYXLRgUQuDVEJ2OmTFMB\\n' +\n      'T0Vf7VuNijfIA9hkN2d3K53m/9z5WjGPSdOjGhg=\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIID/jCCAuagAwIBAgIQRiwspKyrO0xoxDgSkqLZczANBgkqhkiG9w0BAQsFADCB\\n' +\n      'lzELMAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIElu\\n' +\n      'Yy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTAwLgYDVQQDDCdB\\n' +\n      'bWF6b24gUkRTIHVzLXdlc3QtMiBSb290IENBIFJTQTIwNDggRzExEDAOBgNVBAcM\\n' +\n      'B1NlYXR0bGUwIBcNMjEwNTI0MjE1OTAwWhgPMjA2MTA1MjQyMjU5MDBaMIGXMQsw\\n' +\n      'CQYDVQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjET\\n' +\n      'MBEGA1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExMDAuBgNVBAMMJ0FtYXpv\\n' +\n      'biBSRFMgdXMtd2VzdC0yIFJvb3QgQ0EgUlNBMjA0OCBHMTEQMA4GA1UEBwwHU2Vh\\n' +\n      'dHRsZTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAL53Jk3GsKiu+4bx\\n' +\n      'jDfsevWbwPCNJ3H08Zp7GWhvI3Tgi39opfHYv2ku2BKFjK8N2L6RvNPSR8yplv5j\\n' +\n      'Y0tK0U+XVNl8o0ibhqRDhbTuh6KL8CFINWYzAajuxFS+CF0U6c1Q3tXLBdALxA7l\\n' +\n      'FlXJ71QrP06W31kRe7kvgrvO7qWU3/OzUf9qYw4LSiR1/VkvvRCTqcVNw09clw/M\\n' +\n      'Jbw6FSgweN65M9j7zPbjGAXSHkXyxH1Erin2fa+B9PE4ZDgX9cp2C1DHewYJQL/g\\n' +\n      'SepwwcudVNRN1ibKH7kpMrgPnaNIVNx5sXVsTjk6q2ZqYw3SVHegltJpLy/cZReP\\n' +\n      'mlivF2kCAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUmTcQd6o1\\n' +\n      'CuS65MjBrMwQ9JJjmBwwDgYDVR0PAQH/BAQDAgGGMA0GCSqGSIb3DQEBCwUAA4IB\\n' +\n      'AQAKSDSIzl956wVddPThf2VAzI8syw9ngSwsEHZvxVGHBvu5gg618rDyguVCYX9L\\n' +\n      '4Kw/xJrk6S3qxOS2ZDyBcOpsrBskgahDFIunzoRP3a18ARQVq55LVgfwSDQiunch\\n' +\n      'Bd05cnFGLoiLkR5rrkgYaP2ftn3gRBRaf0y0S3JXZ2XB3sMZxGxavYq9mfiEcwB0\\n' +\n      'LMTMQ1NYzahIeG6Jm3LqRqR8HkzP/Ztq4dT2AtSLvFebbNMiWqeqT7OcYp94HTYT\\n' +\n      'zqrtaVdUg9bwyAUCDgy0GV9RHDIdNAOInU/4LEETovrtuBU7Z1q4tcHXvN6Hd1H8\\n' +\n      'gMb0mCG5I393qW5hFsA/diFb\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIECTCCAvGgAwIBAgIRAPQAvihfjBg/JDbj6U64K98wDQYJKoZIhvcNAQELBQAw\\n' +\n      'gZwxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\n      'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTE1MDMGA1UEAwws\\n' +\n      'QW1hem9uIFJEUyBhcC1ub3J0aGVhc3QtMiBSb290IENBIFJTQTIwNDggRzExEDAO\\n' +\n      'BgNVBAcMB1NlYXR0bGUwIBcNMjEwNTIwMTYyODQxWhgPMjA2MTA1MjAxNzI4NDFa\\n' +\n      'MIGcMQswCQYDVQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywg\\n' +\n      'SW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExNTAzBgNVBAMM\\n' +\n      'LEFtYXpvbiBSRFMgYXAtbm9ydGhlYXN0LTIgUm9vdCBDQSBSU0EyMDQ4IEcxMRAw\\n' +\n      'DgYDVQQHDAdTZWF0dGxlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA\\n' +\n      'vJ9lgyksCxkBlY40qOzI1TCj/Q0FVGuPL/Z1Mw2YN0l+41BDv0FHApjTUkIKOeIP\\n' +\n      'nwDwpXTa3NjYbk3cOZ/fpH2rYJ++Fte6PNDGPgKppVCUh6x3jiVZ1L7wOgnTdK1Q\\n' +\n      'Trw8440IDS5eLykRHvz8OmwvYDl0iIrt832V0QyOlHTGt6ZJ/aTQKl12Fy3QBLv7\\n' +\n      'stClPzvHTrgWqVU6uidSYoDtzHbU7Vda7YH0wD9IUoMBf7Tu0rqcE4uH47s2XYkc\\n' +\n      'SdLEoOg/Ngs7Y9B1y1GCyj3Ux7hnyvCoRTw014QyNB7dTatFMDvYlrRDGG14KeiU\\n' +\n      'UL7Vo/+EejWI31eXNLw84wIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/MB0GA1Ud\\n' +\n      'DgQWBBQkgTWFsNg6wA3HbbihDQ4vpt1E2zAOBgNVHQ8BAf8EBAMCAYYwDQYJKoZI\\n' +\n      'hvcNAQELBQADggEBAGz1Asiw7hn5WYUj8RpOCzpE0h/oBZcnxP8wulzZ5Xd0YxWO\\n' +\n      '0jYUcUk3tTQy1QvoY+Q5aCjg6vFv+oFBAxkib/SmZzp4xLisZIGlzpJQuAgRkwWA\\n' +\n      '6BVMgRS+AaOMQ6wKPgz1x4v6T0cIELZEPq3piGxvvqkcLZKdCaeC3wCS6sxuafzZ\\n' +\n      '4qA3zMwWuLOzRftgX2hQto7d/2YkRXga7jSvQl3id/EI+xrYoH6zIWgjdU1AUaNq\\n' +\n      'NGT7DIo47vVMfnd9HFZNhREsd4GJE83I+JhTqIxiKPNxrKgESzyADmNPt0gXDnHo\\n' +\n      'tbV1pMZz5HpJtjnP/qVZhEK5oB0tqlKPv9yx074=\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIICuTCCAj6gAwIBAgIRAKp1Rn3aL/g/6oiHVIXtCq8wCgYIKoZIzj0EAwMwgZsx\\n' +\n      'CzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMu\\n' +\n      'MRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTE0MDIGA1UEAwwrQW1h\\n' +\n      'em9uIFJEUyBhcC1ub3J0aGVhc3QtMyBSb290IENBIEVDQzM4NCBHMTEQMA4GA1UE\\n' +\n      'BwwHU2VhdHRsZTAgFw0yMTA1MjQyMDMyMTdaGA8yMTIxMDUyNDIxMzIxN1owgZsx\\n' +\n      'CzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMu\\n' +\n      'MRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTE0MDIGA1UEAwwrQW1h\\n' +\n      'em9uIFJEUyBhcC1ub3J0aGVhc3QtMyBSb290IENBIEVDQzM4NCBHMTEQMA4GA1UE\\n' +\n      'BwwHU2VhdHRsZTB2MBAGByqGSM49AgEGBSuBBAAiA2IABGTYWPILeBJXfcL3Dz4z\\n' +\n      'EWMUq78xB1HpjBwHoTURYfcMd5r96BTVG6yaUBWnAVCMeeD6yTG9a1eVGNhG14Hk\\n' +\n      'ZAEjgLiNB7RRbEG5JZ/XV7W/vODh09WCst2y9SLKsdgeAaNCMEAwDwYDVR0TAQH/\\n' +\n      'BAUwAwEB/zAdBgNVHQ4EFgQUoE0qZHmDCDB+Bnm8GUa/evpfPwgwDgYDVR0PAQH/\\n' +\n      'BAQDAgGGMAoGCCqGSM49BAMDA2kAMGYCMQCnil5MMwhY3qoXv0xvcKZGxGPaBV15\\n' +\n      '0CCssCKn0oVtdJQfJQ3Jrf3RSaEyijXIJsoCMQC35iJi4cWoNX3N/qfgnHohW52O\\n' +\n      'B5dg0DYMqy5cNZ40+UcAanRMyqNQ6P7fy3umGco=\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIICtzCCAj2gAwIBAgIQPXnDTPegvJrI98qz8WxrMjAKBggqhkjOPQQDAzCBmzEL\\n' +\n      'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\n      'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTQwMgYDVQQDDCtBbWF6\\n' +\n      'b24gUkRTIEJldGEgdXMtZWFzdC0xIFJvb3QgQ0EgRUNDMzg0IEcxMRAwDgYDVQQH\\n' +\n      'DAdTZWF0dGxlMCAXDTIxMDUxODIxNDAxMloYDzIxMjEwNTE4MjI0MDEyWjCBmzEL\\n' +\n      'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\n      'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTQwMgYDVQQDDCtBbWF6\\n' +\n      'b24gUkRTIEJldGEgdXMtZWFzdC0xIFJvb3QgQ0EgRUNDMzg0IEcxMRAwDgYDVQQH\\n' +\n      'DAdTZWF0dGxlMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEI0sR7gwutK5AB46hM761\\n' +\n      'gcLTGBIYlURSEoM1jcBwy56CL+3CJKZwLLyJ7qoOKfWbu5GsVLUTWS8MV6Nw33cx\\n' +\n      '2KQD2svb694wi+Px2f4n9+XHkEFQw8BbiodDD7RZA70fo0IwQDAPBgNVHRMBAf8E\\n' +\n      'BTADAQH/MB0GA1UdDgQWBBTQSioOvnVLEMXwNSDg+zgln/vAkjAOBgNVHQ8BAf8E\\n' +\n      'BAMCAYYwCgYIKoZIzj0EAwMDaAAwZQIxAMwu1hqm5Bc98uE/E0B5iMYbBQ4kpMxO\\n' +\n      'tP8FTfz5UR37HUn26nXE0puj6S/Ffj4oJgIwXI7s2c26tFQeqzq6u3lrNJHp5jC9\\n' +\n      'Uxlo/hEJOLoDj5jnpxo8dMAtCNoQPaHdfL0P\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIICrjCCAjWgAwIBAgIQGKVv+5VuzEZEBzJ+bVfx2zAKBggqhkjOPQQDAzCBlzEL\\n' +\n      'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\n      'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTAwLgYDVQQDDCdBbWF6\\n' +\n      'b24gUkRTIGFwLXNvdXRoLTEgUm9vdCBDQSBFQ0MzODQgRzExEDAOBgNVBAcMB1Nl\\n' +\n      'YXR0bGUwIBcNMjEwNTE5MTc1MDU5WhgPMjEyMTA1MTkxODUwNTlaMIGXMQswCQYD\\n' +\n      'VQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEG\\n' +\n      'A1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExMDAuBgNVBAMMJ0FtYXpvbiBS\\n' +\n      'RFMgYXAtc291dGgtMSBSb290IENBIEVDQzM4NCBHMTEQMA4GA1UEBwwHU2VhdHRs\\n' +\n      'ZTB2MBAGByqGSM49AgEGBSuBBAAiA2IABMqdLJ0tZF/DGFZTKZDrGRJZID8ivC2I\\n' +\n      'JRCYTWweZKCKSCAzoiuGGHzJhr5RlLHQf/QgmFcgXsdmO2n3CggzhA4tOD9Ip7Lk\\n' +\n      'P05eHd2UPInyPCHRgmGjGb0Z+RdQ6zkitKNCMEAwDwYDVR0TAQH/BAUwAwEB/zAd\\n' +\n      'BgNVHQ4EFgQUC1yhRgVqU5bR8cGzOUCIxRpl4EYwDgYDVR0PAQH/BAQDAgGGMAoG\\n' +\n      'CCqGSM49BAMDA2cAMGQCMG0c/zLGECRPzGKJvYCkpFTCUvdP4J74YP0v/dPvKojL\\n' +\n      't/BrR1Tg4xlfhaib7hPc7wIwFvgqHes20CubQnZmswbTKLUrgSUW4/lcKFpouFd2\\n' +\n      't2/ewfi/0VhkeUW+IiHhOMdU\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIGCTCCA/GgAwIBAgIRAOXxJuyXVkbfhZCkS/dOpfEwDQYJKoZIhvcNAQEMBQAw\\n' +\n      'gZwxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\n      'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTE1MDMGA1UEAwws\\n' +\n      'QW1hem9uIFJEUyBhcC1ub3J0aGVhc3QtMSBSb290IENBIFJTQTQwOTYgRzExEDAO\\n' +\n      'BgNVBAcMB1NlYXR0bGUwIBcNMjEwNTI1MjE1OTEwWhgPMjEyMTA1MjUyMjU5MTBa\\n' +\n      'MIGcMQswCQYDVQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywg\\n' +\n      'SW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExNTAzBgNVBAMM\\n' +\n      'LEFtYXpvbiBSRFMgYXAtbm9ydGhlYXN0LTEgUm9vdCBDQSBSU0E0MDk2IEcxMRAw\\n' +\n      'DgYDVQQHDAdTZWF0dGxlMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA\\n' +\n      'xiP4RDYm4tIS12hGgn1csfO8onQDmK5SZDswUpl0HIKXOUVVWkHNlINkVxbdqpqH\\n' +\n      'FhbyZmNN6F/EWopotMDKe1B+NLrjNQf4zefv2vyKvPHJXhxoKmfyuTd5Wk8k1F7I\\n' +\n      'lNwLQzznB+ElhrLIDJl9Ro8t31YBBNFRGAGEnxyACFGcdkjlsa52UwfYrwreEg2l\\n' +\n      'gW5AzqHgjFfj9QRLydeU/n4bHm0F1adMsV7P3rVwilcUlqsENDwXnWyPEyv3sw6F\\n' +\n      'wNemLEs1129mB77fwvySb+lLNGsnzr8w4wdioZ74co+T9z2ca+eUiP+EQccVw1Is\\n' +\n      'D4Fh57IjPa6Wuc4mwiUYKkKY63+38aCfEWb0Qoi+zW+mE9nek6MOQ914cN12u5LX\\n' +\n      'dBoYopphRO5YmubSN4xcBy405nIdSdbrAVWwxXnVVyjqjknmNeqQsPZaxAhdoKhV\\n' +\n      'AqxNr8AUAdOAO6Sz3MslmcLlDXFihrEEOeUbpg/m1mSUUHGbu966ajTG1FuEHHwS\\n' +\n      '7WB52yxoJo/tHvt9nAWnh3uH5BHmS8zn6s6CGweWKbX5yICnZ1QFR1e4pogxX39v\\n' +\n      'XD6YcNOO+Vn+HY4nXmjgSYVC7l+eeP8eduMg1xJujzjrbmrXU+d+cBObgdTOAlpa\\n' +\n      'JFHaGwYw1osAwPCo9cZ2f04yitBfj9aPFia8ASKldakCAwEAAaNCMEAwDwYDVR0T\\n' +\n      'AQH/BAUwAwEB/zAdBgNVHQ4EFgQUqKS+ltlior0SyZKYAkJ/efv55towDgYDVR0P\\n' +\n      'AQH/BAQDAgGGMA0GCSqGSIb3DQEBDAUAA4ICAQAdElvp8bW4B+Cv+1WSN87dg6TN\\n' +\n      'wGyIjJ14/QYURgyrZiYpUmZpj+/pJmprSWXu4KNyqHftmaidu7cdjL5nCAvAfnY5\\n' +\n      '/6eDDbX4j8Gt9fb/6H9y0O0dn3mUPSEKG0crR+JRFAtPhn/2FNvst2P82yguWLv0\\n' +\n      'pHjHVUVcq+HqDMtUIJsTPYjSh9Iy77Q6TOZKln9dyDOWJpCSkiUWQtMAKbCSlvzd\\n' +\n      'zTs/ahqpT+zLfGR1SR+T3snZHgQnbnemmz/XtlKl52NxccARwfcEEKaCRQyGq/pR\\n' +\n      '0PVZasyJS9JY4JfQs4YOdeOt4UMZ8BmW1+BQWGSkkb0QIRl8CszoKofucAlqdPcO\\n' +\n      'IT/ZaMVhI580LFGWiQIizWFskX6lqbCyHqJB3LDl8gJISB5vNTHOHpvpMOMs5PYt\\n' +\n      'cRl5Mrksx5MKMqG7y5R734nMlZxQIHjL5FOoOxTBp9KeWIL/Ib89T2QDaLw1SQ+w\\n' +\n      'ihqWBJ4ZdrIMWYpP3WqM+MXWk7WAem+xsFJdR+MDgOOuobVQTy5dGBlPks/6gpjm\\n' +\n      'rO9TjfQ36ppJ3b7LdKUPeRfnYmlR5RU4oyYJ//uLbClI443RZAgxaCXX/nyc12lr\\n' +\n      'eVLUMNF2abLX4/VF63m2/Z9ACgMRfqGshPssn1NN33OonrotQoj4S3N9ZrjvzKt8\\n' +\n      'iHcaqd60QKpfiH2A3A==\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIICuDCCAj2gAwIBAgIQPaVGRuu86nh/ylZVCLB0MzAKBggqhkjOPQQDAzCBmzEL\\n' +\n      'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\n      'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTQwMgYDVQQDDCtBbWF6\\n' +\n      'b24gUkRTIGFwLW5vcnRoZWFzdC0xIFJvb3QgQ0EgRUNDMzg0IEcxMRAwDgYDVQQH\\n' +\n      'DAdTZWF0dGxlMCAXDTIxMDUyNTIyMDMxNloYDzIxMjEwNTI1MjMwMzE2WjCBmzEL\\n' +\n      'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\n      'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTQwMgYDVQQDDCtBbWF6\\n' +\n      'b24gUkRTIGFwLW5vcnRoZWFzdC0xIFJvb3QgQ0EgRUNDMzg0IEcxMRAwDgYDVQQH\\n' +\n      'DAdTZWF0dGxlMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEexNURoB9KE93MEtEAlJG\\n' +\n      'obz4LS/pD2hc8Gczix1WhVvpJ8bN5zCDXaKdnDMCebetyRQsmQ2LYlfmCwpZwSDu\\n' +\n      '0zowB11Pt3I5Avu2EEcuKTlKIDMBeZ1WWuOd3Tf7MEAMo0IwQDAPBgNVHRMBAf8E\\n' +\n      'BTADAQH/MB0GA1UdDgQWBBSaYbZPBvFLikSAjpa8mRJvyArMxzAOBgNVHQ8BAf8E\\n' +\n      'BAMCAYYwCgYIKoZIzj0EAwMDaQAwZgIxAOEJkuh3Zjb7Ih/zuNRd1RBqmIYcnyw0\\n' +\n      'nwUZczKXry+9XebYj3VQxSRNadrarPWVqgIxAMg1dyGoDAYjY/L/9YElyMnvHltO\\n' +\n      'PwpJShmqHvCLc/mXMgjjYb/akK7yGthvW6j/uQ==\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIGCDCCA/CgAwIBAgIQChu3v5W1Doil3v6pgRIcVzANBgkqhkiG9w0BAQwFADCB\\n' +\n      'nDELMAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIElu\\n' +\n      'Yy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTUwMwYDVQQDDCxB\\n' +\n      'bWF6b24gUkRTIEJldGEgdXMtZWFzdC0xIFJvb3QgQ0EgUlNBNDA5NiBHMTEQMA4G\\n' +\n      'A1UEBwwHU2VhdHRsZTAgFw0yMTA1MTgyMTM0MTVaGA8yMTIxMDUxODIyMzQxNVow\\n' +\n      'gZwxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\n      'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTE1MDMGA1UEAwws\\n' +\n      'QW1hem9uIFJEUyBCZXRhIHVzLWVhc3QtMSBSb290IENBIFJTQTQwOTYgRzExEDAO\\n' +\n      'BgNVBAcMB1NlYXR0bGUwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQC1\\n' +\n      'FUGQ5tf3OwpDR6hGBxhUcrkwKZhaXP+1St1lSOQvjG8wXT3RkKzRGMvb7Ee0kzqI\\n' +\n      'mzKKe4ASIhtV3UUWdlNmP0EA3XKnif6N79MismTeGkDj75Yzp5A6tSvqByCgxIjK\\n' +\n      'JqpJrch3Dszoyn8+XhwDxMZtkUa5nQVdJgPzJ6ltsQ8E4SWLyLtTu0S63jJDkqYY\\n' +\n      'S7cQblk7y7fel+Vn+LS5dGTdRRhMvSzEnb6mkVBaVzRyVX90FNUED06e8q+gU8Ob\\n' +\n      'htvQlf9/kRzHwRAdls2YBhH40ZeyhpUC7vdtPwlmIyvW5CZ/QiG0yglixnL6xahL\\n' +\n      'pbmTuTSA/Oqz4UGQZv2WzHe1lD2gRHhtFX2poQZeNQX8wO9IcUhrH5XurW/G9Xwl\\n' +\n      'Sat9CMPERQn4KC3HSkat4ir2xaEUrjfg6c4XsGyh2Pk/LZ0gLKum0dyWYpWP4JmM\\n' +\n      'RQNjrInXPbMhzQObozCyFT7jYegS/3cppdyy+K1K7434wzQGLU1gYXDKFnXwkX8R\\n' +\n      'bRKgx2pHNbH5lUddjnNt75+e8m83ygSq/ZNBUz2Ur6W2s0pl6aBjwaDES4VfWYlI\\n' +\n      'jokcmrGvJNDfQWygb1k00eF2bzNeNCHwgWsuo3HSxVgc/WGsbcGrTlDKfz+g3ich\\n' +\n      'bXUeUidPhRiv5UQIVCLIHpHuin3bj9lQO/0t6p+tAQIDAQABo0IwQDAPBgNVHRMB\\n' +\n      'Af8EBTADAQH/MB0GA1UdDgQWBBSFmMBgm5IsRv3hLrvDPIhcPweXYTAOBgNVHQ8B\\n' +\n      'Af8EBAMCAYYwDQYJKoZIhvcNAQEMBQADggIBAAa2EuozymOsQDJlEi7TqnyA2OhT\\n' +\n      'GXPfYqCyMJVkfrqNgcnsNpCAiNEiZbb+8sIPXnT8Ay8hrwJYEObJ5b7MHXpLuyft\\n' +\n      'z0Pu1oFLKnQxKjNxrIsCvaB4CRRdYjm1q7EqGhMGv76se9stOxkOqO9it31w/LoU\\n' +\n      'ENDk7GLsSqsV1OzYLhaH8t+MaNP6rZTSNuPrHwbV3CtBFl2TAZ7iKgKOhdFz1Hh9\\n' +\n      'Pez0lG+oKi4mHZ7ajov6PD0W7njn5KqzCAkJR6OYmlNVPjir+c/vUtEs0j+owsMl\\n' +\n      'g7KE5g4ZpTRShyh5BjCFRK2tv0tkqafzNtxrKC5XNpEkqqVTCnLcKG+OplIEadtr\\n' +\n      'C7UWf4HyhCiR+xIyxFyR05p3uY/QQU/5uza7GlK0J+U1sBUytx7BZ+Fo8KQfPPqV\\n' +\n      'CqDCaYUksoJcnJE/KeoksyqNQys7sDGJhkd0NeUGDrFLKHSLhIwAMbEWnqGxvhli\\n' +\n      'E7sP2E5rI/I9Y9zTbLIiI8pfeZlFF8DBdoP/Hzg8pqsiE/yiXSFTKByDwKzGwNqz\\n' +\n      'F0VoFdIZcIbLdDbzlQitgGpJtvEL7HseB0WH7B2PMMD8KPJlYvPveO3/6OLzCsav\\n' +\n      '+CAkvk47NQViKMsUTKOA0JDCW+u981YRozxa3K081snhSiSe83zIPBz1ikldXxO9\\n' +\n      '6YYLNPRrj3mi9T/f\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIICrjCCAjSgAwIBAgIRAMkvdFnVDb0mWWFiXqnKH68wCgYIKoZIzj0EAwMwgZYx\\n' +\n      'CzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMu\\n' +\n      'MRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTEvMC0GA1UEAwwmQW1h\\n' +\n      'em9uIFJEUyB1cy13ZXN0LTEgUm9vdCBDQSBFQ0MzODQgRzExEDAOBgNVBAcMB1Nl\\n' +\n      'YXR0bGUwIBcNMjEwNTE5MTkxMzI0WhgPMjEyMTA1MTkyMDEzMjRaMIGWMQswCQYD\\n' +\n      'VQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEG\\n' +\n      'A1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExLzAtBgNVBAMMJkFtYXpvbiBS\\n' +\n      'RFMgdXMtd2VzdC0xIFJvb3QgQ0EgRUNDMzg0IEcxMRAwDgYDVQQHDAdTZWF0dGxl\\n' +\n      'MHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEy86DB+9th/0A5VcWqMSWDxIUblWTt/R0\\n' +\n      'ao6Z2l3vf2YDF2wt1A2NIOGpfQ5+WAOJO/IQmnV9LhYo+kacB8sOnXdQa6biZZkR\\n' +\n      'IyouUfikVQAKWEJnh1Cuo5YMM4E2sUt5o0IwQDAPBgNVHRMBAf8EBTADAQH/MB0G\\n' +\n      'A1UdDgQWBBQ8u3OnecANmG8OoT7KLWDuFzZwBTAOBgNVHQ8BAf8EBAMCAYYwCgYI\\n' +\n      'KoZIzj0EAwMDaAAwZQIwQ817qkb7mWJFnieRAN+m9W3E0FLVKaV3zC5aYJUk2fcZ\\n' +\n      'TaUx3oLp3jPLGvY5+wgeAjEA6wAicAki4ZiDfxvAIuYiIe1OS/7H5RA++R8BH6qG\\n' +\n      'iRzUBM/FItFpnkus7u/eTkvo\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIICrzCCAjWgAwIBAgIQS/+Ryfgb/IOVEa1pWoe8oTAKBggqhkjOPQQDAzCBlzEL\\n' +\n      'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\n      'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTAwLgYDVQQDDCdBbWF6\\n' +\n      'b24gUkRTIGFwLXNvdXRoLTIgUm9vdCBDQSBFQ0MzODQgRzExEDAOBgNVBAcMB1Nl\\n' +\n      'YXR0bGUwIBcNMjIwNjA2MjE1NDQyWhgPMjEyMjA2MDYyMjU0NDJaMIGXMQswCQYD\\n' +\n      'VQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEG\\n' +\n      'A1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExMDAuBgNVBAMMJ0FtYXpvbiBS\\n' +\n      'RFMgYXAtc291dGgtMiBSb290IENBIEVDQzM4NCBHMTEQMA4GA1UEBwwHU2VhdHRs\\n' +\n      'ZTB2MBAGByqGSM49AgEGBSuBBAAiA2IABDsX6fhdUWBQpYTdseBD/P3s96Dtw2Iw\\n' +\n      'OrXKNToCnmX5nMkUGdRn9qKNiz1pw3EPzaPxShbYwQ7LYP09ENK/JN4QQjxMihxC\\n' +\n      'jLFxS85nhBQQQGRCWikDAe38mD8fSvREQKNCMEAwDwYDVR0TAQH/BAUwAwEB/zAd\\n' +\n      'BgNVHQ4EFgQUIh1xZiseQYFjPYKJmGbruAgRH+AwDgYDVR0PAQH/BAQDAgGGMAoG\\n' +\n      'CCqGSM49BAMDA2gAMGUCMFudS4zLy+UUGrtgNLtRMcu/DZ9BUzV4NdHxo0bkG44O\\n' +\n      'thnjl4+wTKI6VbyAbj2rkgIxAOHps8NMITU5DpyiMnKTxV8ubb/WGHrLl0BjB8Lw\\n' +\n      'ETVJk5DNuZvsIIcm7ykk6iL4Tw==\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      '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\\n' +\n      'cuLMVcQZceE=\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIEADCCAuigAwIBAgIQAhAteLRCvizAElaWORFU2zANBgkqhkiG9w0BAQsFADCB\\n' +\n      'mDELMAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIElu\\n' +\n      'Yy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTEwLwYDVQQDDChB\\n' +\n      'bWF6b24gUkRTIG1lLXNvdXRoLTEgUm9vdCBDQSBSU0EyMDQ4IEcxMRAwDgYDVQQH\\n' +\n      'DAdTZWF0dGxlMCAXDTIxMDUyMDE3MDkxNloYDzIwNjEwNTIwMTgwOTE2WjCBmDEL\\n' +\n      'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\n      'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTEwLwYDVQQDDChBbWF6\\n' +\n      'b24gUkRTIG1lLXNvdXRoLTEgUm9vdCBDQSBSU0EyMDQ4IEcxMRAwDgYDVQQHDAdT\\n' +\n      'ZWF0dGxlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA+qg7JAcOVKjh\\n' +\n      'N83SACnBFZPyB63EusfDr/0V9ZdL8lKcmZX9sv/CqoBo3N0EvBqHQqUUX6JvFb7F\\n' +\n      'XrMUZ740kr28gSRALfXTFgNODjXeDsCtEkKRTkac/UM8xXHn+hR7UFRPHS3e0GzI\\n' +\n      'iLiwQWDkr0Op74W8aM0CfaVKvh2bp4BI1jJbdDnQ9OKXpOxNHGUf0ZGb7TkNPkgI\\n' +\n      'b2CBAc8J5o3H9lfw4uiyvl6Fz5JoP+A+zPELAioYBXDrbE7wJeqQDJrETWqR9VEK\\n' +\n      'BXURCkVnHeaJy123MpAX2ozf4pqk0V0LOEOZRS29I+USF5DcWr7QIXR/w2I8ws1Q\\n' +\n      '7ys+qbE+kQIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBQFJ16n\\n' +\n      '1EcCMOIhoZs/F9sR+Jy++zAOBgNVHQ8BAf8EBAMCAYYwDQYJKoZIhvcNAQELBQAD\\n' +\n      'ggEBAOc5nXbT3XTDEZsxX2iD15YrQvmL5m13B3ImZWpx/pqmObsgx3/dg75rF2nQ\\n' +\n      'qS+Vl+f/HLh516pj2BPP/yWCq12TRYigGav8UH0qdT3CAClYy2o+zAzUJHm84oiB\\n' +\n      'ud+6pFVGkbqpsY+QMpJUbZWu52KViBpJMYsUEy+9cnPSFRVuRAHjYynSiLk2ZEjb\\n' +\n      'Wkdc4x0nOZR5tP0FgrX0Ve2KcjFwVQJVZLgOUqmFYQ/G0TIIGTNh9tcmR7yp+xJR\\n' +\n      'A2tbPV2Z6m9Yxx4E8lLEPNuoeouJ/GR4CkMEmF8cLwM310t174o3lKKUXJ4Vs2HO\\n' +\n      'Wj2uN6R9oI+jGLMSswTzCNV1vgc=\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIICuDCCAj6gAwIBAgIRAOocLeZWjYkG/EbHmscuy8gwCgYIKoZIzj0EAwMwgZsx\\n' +\n      'CzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMu\\n' +\n      'MRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTE0MDIGA1UEAwwrQW1h\\n' +\n      'em9uIFJEUyBhcC1zb3V0aGVhc3QtMSBSb290IENBIEVDQzM4NCBHMTEQMA4GA1UE\\n' +\n      'BwwHU2VhdHRsZTAgFw0yMTA1MjEyMTUwMDFaGA8yMTIxMDUyMTIyNTAwMVowgZsx\\n' +\n      'CzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMu\\n' +\n      'MRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTE0MDIGA1UEAwwrQW1h\\n' +\n      'em9uIFJEUyBhcC1zb3V0aGVhc3QtMSBSb290IENBIEVDQzM4NCBHMTEQMA4GA1UE\\n' +\n      'BwwHU2VhdHRsZTB2MBAGByqGSM49AgEGBSuBBAAiA2IABCEr3jq1KtRncnZfK5cq\\n' +\n      'btY0nW6ZG3FMbh7XwBIR6Ca0f8llGZ4vJEC1pXgiM/4Dh045B9ZIzNrR54rYOIfa\\n' +\n      '2NcYZ7mk06DjIQML64hbAxbQzOAuNzLPx268MrlL2uW2XaNCMEAwDwYDVR0TAQH/\\n' +\n      'BAUwAwEB/zAdBgNVHQ4EFgQUln75pChychwN4RfHl+tOinMrfVowDgYDVR0PAQH/\\n' +\n      'BAQDAgGGMAoGCCqGSM49BAMDA2gAMGUCMGiyPINRU1mwZ4Crw01vpuPvxZxb2IOr\\n' +\n      'yX3RNlOIu4We1H+5dQk5tIvH8KGYFbWEpAIxAO9NZ6/j9osMhLgZ0yj0WVjb+uZx\\n' +\n      'YlZR9fyFisY/jNfX7QhSk+nrc3SFLRUNtpXrng==\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIEBTCCAu2gAwIBAgIRAKiaRZatN8eiz9p0s0lu0rQwDQYJKoZIhvcNAQELBQAw\\n' +\n      'gZoxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\n      'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTEzMDEGA1UEAwwq\\n' +\n      'QW1hem9uIFJEUyBjYS1jZW50cmFsLTEgUm9vdCBDQSBSU0EyMDQ4IEcxMRAwDgYD\\n' +\n      'VQQHDAdTZWF0dGxlMCAXDTIxMDUyMTIyMDIzNVoYDzIwNjEwNTIxMjMwMjM1WjCB\\n' +\n      'mjELMAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIElu\\n' +\n      'Yy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTMwMQYDVQQDDCpB\\n' +\n      'bWF6b24gUkRTIGNhLWNlbnRyYWwtMSBSb290IENBIFJTQTIwNDggRzExEDAOBgNV\\n' +\n      'BAcMB1NlYXR0bGUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCygVMf\\n' +\n      'qB865IR9qYRBRFHn4eAqGJOCFx+UbraQZmjr/mnRqSkY+nhbM7Pn/DWOrRnxoh+w\\n' +\n      'q5F9ZxdZ5D5T1v6kljVwxyfFgHItyyyIL0YS7e2h7cRRscCM+75kMedAP7icb4YN\\n' +\n      'LfWBqfKHbHIOqvvQK8T6+Emu/QlG2B5LvuErrop9K0KinhITekpVIO4HCN61cuOe\\n' +\n      'CADBKF/5uUJHwS9pWw3uUbpGUwsLBuhJzCY/OpJlDqC8Y9aToi2Ivl5u3/Q/sKjr\\n' +\n      '6AZb9lx4q3J2z7tJDrm5MHYwV74elGSXoeoG8nODUqjgklIWAPrt6lQ3WJpO2kug\\n' +\n      '8RhCdSbWkcXHfX95AgMBAAGjQjBAMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYE\\n' +\n      'FOIxhqTPkKVqKBZvMWtKewKWDvDBMA4GA1UdDwEB/wQEAwIBhjANBgkqhkiG9w0B\\n' +\n      'AQsFAAOCAQEAqoItII89lOl4TKvg0I1EinxafZLXIheLcdGCxpjRxlZ9QMQUN3yb\\n' +\n      'y/8uFKBL0otbQgJEoGhxm4h0tp54g28M6TN1U0332dwkjYxUNwvzrMaV5Na55I2Z\\n' +\n      '1hq4GB3NMXW+PvdtsgVOZbEN+zOyOZ5MvJHEQVkT3YRnf6avsdntltcRzHJ16pJc\\n' +\n      'Y8rR7yWwPXh1lPaPkxddrCtwayyGxNbNmRybjR48uHRhwu7v2WuAMdChL8H8bp89\\n' +\n      'TQLMrMHgSbZfee9hKhO4Zebelf1/cslRSrhkG0ESq6G5MUINj6lMg2g6F0F7Xz2v\\n' +\n      'ncD/vuRN5P+vT8th/oZ0Q2Gc68Pun0cn/g==\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIID/zCCAuegAwIBAgIRAJYlnmkGRj4ju/2jBQsnXJYwDQYJKoZIhvcNAQELBQAw\\n' +\n      'gZcxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\n      'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTEwMC4GA1UEAwwn\\n' +\n      'QW1hem9uIFJEUyB1cy1lYXN0LTIgUm9vdCBDQSBSU0EyMDQ4IEcxMRAwDgYDVQQH\\n' +\n      'DAdTZWF0dGxlMCAXDTIxMDUyMTIzMDQ0NFoYDzIwNjEwNTIyMDAwNDQ0WjCBlzEL\\n' +\n      'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\n      'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTAwLgYDVQQDDCdBbWF6\\n' +\n      'b24gUkRTIHVzLWVhc3QtMiBSb290IENBIFJTQTIwNDggRzExEDAOBgNVBAcMB1Nl\\n' +\n      'YXR0bGUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC74V3eigv+pCj5\\n' +\n      'nqDBqplY0Jp16pTeNB06IKbzb4MOTvNde6QjsZxrE1xUmprT8LxQqN9tI3aDYEYk\\n' +\n      'b9v4F99WtQVgCv3Y34tYKX9NwWQgwS1vQwnIR8zOFBYqsAsHEkeJuSqAB12AYUSd\\n' +\n      'Zv2RVFjiFmYJho2X30IrSLQfS/IE3KV7fCyMMm154+/K1Z2IJlcissydEAwgsUHw\\n' +\n      'edrE6CxJVkkJ3EvIgG4ugK/suxd8eEMztaQYJwSdN8TdfT59LFuSPl7zmF3fIBdJ\\n' +\n      '//WexcQmGabaJ7Xnx+6o2HTfkP8Zzzzaq8fvjAcvA7gyFH5EP26G2ZqMG+0y4pTx\\n' +\n      'SPVTrQEXAgMBAAGjQjBAMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFIWWuNEF\\n' +\n      'sUMOC82XlfJeqazzrkPDMA4GA1UdDwEB/wQEAwIBhjANBgkqhkiG9w0BAQsFAAOC\\n' +\n      'AQEAgClmxcJaQTGpEZmjElL8G2Zc8lGc+ylGjiNlSIw8X25/bcLRptbDA90nuP+q\\n' +\n      'zXAMhEf0ccbdpwxG/P5a8JipmHgqQLHfpkvaXx+0CuP++3k+chAJ3Gk5XtY587jX\\n' +\n      '+MJfrPgjFt7vmMaKmynndf+NaIJAYczjhJj6xjPWmGrjM3MlTa9XesmelMwP3jep\\n' +\n      'bApIWAvCYVjGndbK9byyMq1nyj0TUzB8oJZQooaR3MMjHTmADuVBylWzkRMxbKPl\\n' +\n      '4Nlsk4Ef1JvIWBCzsMt+X17nuKfEatRfp3c9tbpGlAE/DSP0W2/Lnayxr4RpE9ds\\n' +\n      'ICF35uSis/7ZlsftODUe8wtpkQ==\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      '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\\n' +\n      'Pqj2\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      '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\\n' +\n      'KDPtFEk=\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIICtzCCAj2gAwIBAgIQVZ5Y/KqjR4XLou8MCD5pOjAKBggqhkjOPQQDAzCBmzEL\\n' +\n      'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\n      'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTQwMgYDVQQDDCtBbWF6\\n' +\n      'b24gUkRTIGFwLXNvdXRoZWFzdC00IFJvb3QgQ0EgRUNDMzg0IEcxMRAwDgYDVQQH\\n' +\n      'DAdTZWF0dGxlMCAXDTIyMDUyNTE2NTgzM1oYDzIxMjIwNTI1MTc1ODMzWjCBmzEL\\n' +\n      'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\n      'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTQwMgYDVQQDDCtBbWF6\\n' +\n      'b24gUkRTIGFwLXNvdXRoZWFzdC00IFJvb3QgQ0EgRUNDMzg0IEcxMRAwDgYDVQQH\\n' +\n      'DAdTZWF0dGxlMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEbo473OmpD5vkckdJajXg\\n' +\n      'brhmNFyoSa0WCY1njuZC2zMFp3zP6rX4I1r3imrYnJd9pFH/aSiV/r6L5ACE5RPx\\n' +\n      '4qdg5SQ7JJUaZc3DWsTOiOed7BCZSzM+KTYK/2QzDMApo0IwQDAPBgNVHRMBAf8E\\n' +\n      'BTADAQH/MB0GA1UdDgQWBBTmogc06+1knsej1ltKUOdWFvwgsjAOBgNVHQ8BAf8E\\n' +\n      'BAMCAYYwCgYIKoZIzj0EAwMDaAAwZQIxAIs7TlLMbGTWNXpGiKf9DxaM07d/iDHe\\n' +\n      'F/Vv/wyWSTGdobxBL6iArQNVXz0Gr4dvPAIwd0rsoa6R0x5mtvhdRPtM37FYrbHJ\\n' +\n      'pbV+OMusQqcSLseunLBoCHenvJW0QOCQ8EDY\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIICvTCCAkOgAwIBAgIQCIY7E/bFvFN2lK9Kckb0dTAKBggqhkjOPQQDAzCBnjEL\\n' +\n      'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\n      'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTcwNQYDVQQDDC5BbWF6\\n' +\n      'b24gUkRTIFByZXZpZXcgdXMtZWFzdC0yIFJvb3QgQ0EgRUNDMzg0IEcxMRAwDgYD\\n' +\n      'VQQHDAdTZWF0dGxlMCAXDTIxMDUxODIxMDUxMFoYDzIxMjEwNTE4MjIwNTEwWjCB\\n' +\n      'njELMAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIElu\\n' +\n      'Yy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTcwNQYDVQQDDC5B\\n' +\n      'bWF6b24gUkRTIFByZXZpZXcgdXMtZWFzdC0yIFJvb3QgQ0EgRUNDMzg0IEcxMRAw\\n' +\n      'DgYDVQQHDAdTZWF0dGxlMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEMI0hzf1JCEOI\\n' +\n      'Eue4+DmcNnSs2i2UaJxHMrNGGfU7b42a7vwP53F7045ffHPBGP4jb9q02/bStZzd\\n' +\n      'VHqfcgqkSRI7beBKjD2mfz82hF/wJSITTgCLs+NRpS6zKMFOFHUNo0IwQDAPBgNV\\n' +\n      'HRMBAf8EBTADAQH/MB0GA1UdDgQWBBS8uF/6hk5mPLH4qaWv9NVZaMmyTjAOBgNV\\n' +\n      'HQ8BAf8EBAMCAYYwCgYIKoZIzj0EAwMDaAAwZQIxAO7Pu9wzLyM0X7Q08uLIL+vL\\n' +\n      'qaxe3UFuzFTWjM16MLJHbzLf1i9IDFKz+Q4hXCSiJwIwClMBsqT49BPUxVsJnjGr\\n' +\n      'EbyEk6aOOVfY1p2yQL649zh3M4h8okLnwf+bYIb1YpeU\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIEADCCAuigAwIBAgIQY+JhwFEQTe36qyRlUlF8ozANBgkqhkiG9w0BAQsFADCB\\n' +\n      'mDELMAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIElu\\n' +\n      'Yy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTEwLwYDVQQDDChB\\n' +\n      'bWF6b24gUkRTIGFmLXNvdXRoLTEgUm9vdCBDQSBSU0EyMDQ4IEcxMRAwDgYDVQQH\\n' +\n      'DAdTZWF0dGxlMCAXDTIxMDUxOTE5MjQxNloYDzIwNjEwNTE5MjAyNDE2WjCBmDEL\\n' +\n      'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\n      'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTEwLwYDVQQDDChBbWF6\\n' +\n      'b24gUkRTIGFmLXNvdXRoLTEgUm9vdCBDQSBSU0EyMDQ4IEcxMRAwDgYDVQQHDAdT\\n' +\n      'ZWF0dGxlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnIye77j6ev40\\n' +\n      '8wRPyN2OdKFSUfI9jB20Or2RLO+RDoL43+USXdrze0Wv4HMRLqaen9BcmCfaKMp0\\n' +\n      'E4SFo47bXK/O17r6G8eyq1sqnHE+v288mWtYH9lAlSamNFRF6YwA7zncmE/iKL8J\\n' +\n      '0vePHMHP/B6svw8LULZCk+nZk3tgxQn2+r0B4FOz+RmpkoVddfqqUPMbKUxhM2wf\\n' +\n      'fO7F6bJaUXDNMBPhCn/3ayKCjYr49ErmnpYV2ZVs1i34S+LFq39J7kyv6zAgbHv9\\n' +\n      '+/MtRMoRB1CjpqW0jIOZkHBdYcd1o9p1zFn591Do1wPkmMsWdjIYj+6e7UXcHvOB\\n' +\n      '2+ScIRAcnwIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBQGtq2W\\n' +\n      'YSyMMxpdQ3IZvcGE+nyZqTAOBgNVHQ8BAf8EBAMCAYYwDQYJKoZIhvcNAQELBQAD\\n' +\n      'ggEBAEgoP3ixJsKSD5FN8dQ01RNHERl/IFbA7TRXfwC+L1yFocKnQh4Mp/msPRSV\\n' +\n      '+OeHIvemPW/wtZDJzLTOFJ6eTolGekHK1GRTQ6ZqsWiU2fmiOP8ks4oSpI+tQ9Lw\\n' +\n      'VrfZqTiEcS5wEIqyfUAZZfKDo7W1xp+dQWzfczSBuZJZwI5iaha7+ILM0r8Ckden\\n' +\n      'TVTapc5pLSoO15v0ziRuQ2bT3V3nwu/U0MRK44z+VWOJdSiKxdnOYDs8hFNnKhfe\\n' +\n      'klbTZF7kW7WbiNYB43OaAQBJ6BALZsIskEaqfeZT8FD71uN928TcEQyBDXdZpRN+\\n' +\n      'iGQZDGhht0r0URGMDSs9waJtTfA=\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIF/jCCA+agAwIBAgIQXY/dmS+72lZPranO2JM9jjANBgkqhkiG9w0BAQwFADCB\\n' +\n      'lzELMAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIElu\\n' +\n      'Yy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTAwLgYDVQQDDCdB\\n' +\n      'bWF6b24gUkRTIGFwLWVhc3QtMSBSb290IENBIFJTQTQwOTYgRzExEDAOBgNVBAcM\\n' +\n      'B1NlYXR0bGUwIBcNMjEwNTI1MjEzNDUxWhgPMjEyMTA1MjUyMjM0NTFaMIGXMQsw\\n' +\n      'CQYDVQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjET\\n' +\n      'MBEGA1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExMDAuBgNVBAMMJ0FtYXpv\\n' +\n      'biBSRFMgYXAtZWFzdC0xIFJvb3QgQ0EgUlNBNDA5NiBHMTEQMA4GA1UEBwwHU2Vh\\n' +\n      'dHRsZTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAMyW9kBJjD/hx8e8\\n' +\n      'b5E1sF42bp8TXsz1htSYE3Tl3T1Aq379DfEhB+xa/ASDZxt7/vwa81BkNo4M6HYq\\n' +\n      'okYIXeE7cu5SnSgjWXqcERhgPevtAwgmhdE3yREe8oz2DyOi2qKKZqah+1gpPaIQ\\n' +\n      'fK0uAqoeQlyHosye3KZZKkDHBatjBsQ5kf8lhuf7wVulEZVRHY2bP2X7N98PfbpL\\n' +\n      'QdH7mWXzDtJJ0LiwFwds47BrkgK1pkHx2p1mTo+HMkfX0P6Fq1atkVC2RHHtbB/X\\n' +\n      'iYyH7paaHBzviFrhr679zNqwXIOKlbf74w3mS11P76rFn9rS1BAH2Qm6eY5S/Fxe\\n' +\n      'HEKXm4kjPN63Zy0p3yE5EjPt54yPkvumOnT+RqDGJ2HCI9k8Ehcbve0ogfdRKNqQ\\n' +\n      'VHWYTy8V33ndQRHZlx/CuU1yN61TH4WSoMly1+q1ihTX9sApmlQ14B2pJi/9DnKW\\n' +\n      'cwECrPy1jAowC2UJ45RtC8UC05CbP9yrIy/7Noj8gQDiDOepm+6w1g6aNlWoiuQS\\n' +\n      'kyI6nzz1983GcnOHya73ga7otXo0Qfg9jPghlYiMomrgshlSLDHZG0Ib/3hb8cnR\\n' +\n      '1OcN9FpzNmVK2Ll1SmTMLrIhuCkyNYX9O/bOknbcf706XeESxGduSkHEjIw/k1+2\\n' +\n      'Atteoq5dT6cwjnJ9hyhiueVlVkiDAgMBAAGjQjBAMA8GA1UdEwEB/wQFMAMBAf8w\\n' +\n      'HQYDVR0OBBYEFLUI+DD7RJs+0nRnjcwIVWzzYSsFMA4GA1UdDwEB/wQEAwIBhjAN\\n' +\n      'BgkqhkiG9w0BAQwFAAOCAgEAb1mcCHv4qMQetLGTBH9IxsB2YUUhr5dda0D2BcHr\\n' +\n      'UtDbfd0VQs4tux6h/6iKwHPx0Ew8fuuYj99WknG0ffgJfNc5/fMspxR/pc1jpdyU\\n' +\n      '5zMQ+B9wi0lOZPO9uH7/pr+d2odcNEy8zAwqdv/ihsTwLmGP54is9fVbsgzNW1cm\\n' +\n      'HKAVL2t/Ope+3QnRiRilKCN1lzhav4HHdLlN401TcWRWKbEuxF/FgxSO2Hmx86pj\\n' +\n      'e726lweCTMmnq/cTsPOVY0WMjs0or3eHDVlyLgVeV5ldyN+ptg3Oit60T05SRa58\\n' +\n      'AJPTaVKIcGQ/gKkKZConpu7GDofT67P/ox0YNY57LRbhsx9r5UY4ROgz7WMQ1yoS\\n' +\n      'Y+19xizm+mBm2PyjMUbfwZUyCxsdKMwVdOq5/UmTmdms+TR8+m1uBHPOTQ2vKR0s\\n' +\n      'Pd/THSzPuu+d3dbzRyDSLQbHFFneG760CUlD/ZmzFlQjJ89/HmAmz8IyENq+Sjhx\\n' +\n      'Jgzy+FjVZb8aRUoYLlnffpUpej1n87Ynlr1GrvC4GsRpNpOHlwuf6WD4W0qUTsC/\\n' +\n      'C9JO+fBzUj/aWlJzNcLEW6pte1SB+EdkR2sZvWH+F88TxemeDrV0jKJw5R89CDf8\\n' +\n      'ZQNfkxJYjhns+YeV0moYjqQdc7tq4i04uggEQEtVzEhRLU5PE83nlh/K2NZZm8Kj\\n' +\n      'dIA=\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIID/zCCAuegAwIBAgIRAPVSMfFitmM5PhmbaOFoGfUwDQYJKoZIhvcNAQELBQAw\\n' +\n      'gZcxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\n      'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTEwMC4GA1UEAwwn\\n' +\n      'QW1hem9uIFJEUyB1cy1lYXN0LTEgUm9vdCBDQSBSU0EyMDQ4IEcxMRAwDgYDVQQH\\n' +\n      'DAdTZWF0dGxlMCAXDTIxMDUyNTIyMzQ1N1oYDzIwNjEwNTI1MjMzNDU3WjCBlzEL\\n' +\n      'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\n      'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTAwLgYDVQQDDCdBbWF6\\n' +\n      'b24gUkRTIHVzLWVhc3QtMSBSb290IENBIFJTQTIwNDggRzExEDAOBgNVBAcMB1Nl\\n' +\n      'YXR0bGUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDu9H7TBeGoDzMr\\n' +\n      'dxN6H8COntJX4IR6dbyhnj5qMD4xl/IWvp50lt0VpmMd+z2PNZzx8RazeGC5IniV\\n' +\n      '5nrLg0AKWRQ2A/lGGXbUrGXCSe09brMQCxWBSIYe1WZZ1iU1IJ/6Bp4D2YEHpXrW\\n' +\n      'bPkOq5x3YPcsoitgm1Xh8ygz6vb7PsvJvPbvRMnkDg5IqEThapPjmKb8ZJWyEFEE\\n' +\n      'QRrkCIRueB1EqQtJw0fvP4PKDlCJAKBEs/y049FoOqYpT3pRy0WKqPhWve+hScMd\\n' +\n      '6obq8kxTFy1IHACjHc51nrGII5Bt76/MpTWhnJIJrCnq1/Uc3Qs8IVeb+sLaFC8K\\n' +\n      'DI69Sw6bAgMBAAGjQjBAMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFE7PCopt\\n' +\n      'lyOgtXX0Y1lObBUxuKaCMA4GA1UdDwEB/wQEAwIBhjANBgkqhkiG9w0BAQsFAAOC\\n' +\n      'AQEAFj+bX8gLmMNefr5jRJfHjrL3iuZCjf7YEZgn89pS4z8408mjj9z6Q5D1H7yS\\n' +\n      'jNETVV8QaJip1qyhh5gRzRaArgGAYvi2/r0zPsy+Tgf7v1KGL5Lh8NT8iCEGGXwF\\n' +\n      'g3Ir+Nl3e+9XUp0eyyzBIjHtjLBm6yy8rGk9p6OtFDQnKF5OxwbAgip42CD75r/q\\n' +\n      'p421maEDDvvRFR4D+99JZxgAYDBGqRRceUoe16qDzbMvlz0A9paCZFclxeftAxv6\\n' +\n      'QlR5rItMz/XdzpBJUpYhdzM0gCzAzdQuVO5tjJxmXhkSMcDP+8Q+Uv6FA9k2VpUV\\n' +\n      'E/O5jgpqUJJ2Hc/5rs9VkAPXeA==\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIICrzCCAjWgAwIBAgIQW0yuFCle3uj4vWiGU0SaGzAKBggqhkjOPQQDAzCBlzEL\\n' +\n      'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\n      'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTAwLgYDVQQDDCdBbWF6\\n' +\n      'b24gUkRTIGFmLXNvdXRoLTEgUm9vdCBDQSBFQ0MzODQgRzExEDAOBgNVBAcMB1Nl\\n' +\n      'YXR0bGUwIBcNMjEwNTE5MTkzNTE2WhgPMjEyMTA1MTkyMDM1MTZaMIGXMQswCQYD\\n' +\n      'VQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEG\\n' +\n      'A1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExMDAuBgNVBAMMJ0FtYXpvbiBS\\n' +\n      'RFMgYWYtc291dGgtMSBSb290IENBIEVDQzM4NCBHMTEQMA4GA1UEBwwHU2VhdHRs\\n' +\n      'ZTB2MBAGByqGSM49AgEGBSuBBAAiA2IABDPiKNZSaXs3Un/J/v+LTsFDANHpi7en\\n' +\n      'oL2qh0u0DoqNzEBTbBjvO23bLN3k599zh6CY3HKW0r2k1yaIdbWqt4upMCRCcUFi\\n' +\n      'I4iedAmubgzh56wJdoMZztjXZRwDthTkJKNCMEAwDwYDVR0TAQH/BAUwAwEB/zAd\\n' +\n      'BgNVHQ4EFgQUWbYkcrvVSnAWPR5PJhIzppcAnZIwDgYDVR0PAQH/BAQDAgGGMAoG\\n' +\n      'CCqGSM49BAMDA2gAMGUCMCESGqpat93CjrSEjE7z+Hbvz0psZTHwqaxuiH64GKUm\\n' +\n      'mYynIiwpKHyBrzjKBmeDoQIxANGrjIo6/b8Jl6sdIZQI18V0pAyLfLiZjlHVOnhM\\n' +\n      'MOTVgr82ZuPoEHTX78MxeMnYlw==\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIECTCCAvGgAwIBAgIRAIbsx8XOl0sgTNiCN4O+18QwDQYJKoZIhvcNAQELBQAw\\n' +\n      'gZwxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\n      'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTE1MDMGA1UEAwws\\n' +\n      'QW1hem9uIFJEUyBhcC1ub3J0aGVhc3QtMSBSb290IENBIFJTQTIwNDggRzExEDAO\\n' +\n      'BgNVBAcMB1NlYXR0bGUwIBcNMjEwNTI1MjE1NDU4WhgPMjA2MTA1MjUyMjU0NTha\\n' +\n      'MIGcMQswCQYDVQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywg\\n' +\n      'SW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExNTAzBgNVBAMM\\n' +\n      'LEFtYXpvbiBSRFMgYXAtbm9ydGhlYXN0LTEgUm9vdCBDQSBSU0EyMDQ4IEcxMRAw\\n' +\n      'DgYDVQQHDAdTZWF0dGxlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA\\n' +\n      'tROxwXWCgn5R9gI/2Ivjzaxc0g95ysBjoJsnhPdJEHQb7w3y2kWrVWU3Y9fOitgb\\n' +\n      'CEsnEC3PrhRnzNVW0fPsK6kbvOeCmjvY30rdbxbc8h+bjXfGmIOgAkmoULEr6Hc7\\n' +\n      'G1Q/+tvv4lEwIs7bEaf+abSZxRJbZ0MBxhbHn7UHHDiMZYvzK+SV1MGCxx7JVhrm\\n' +\n      'xWu3GC1zZCsGDhB9YqY9eR6PmjbqA5wy8vqbC57dZZa1QVtWIQn3JaRXn+faIzHx\\n' +\n      'nLMN5CEWihsdmHBXhnRboXprE/OS4MFv1UrQF/XM/h5RBeCywpHePpC+Oe1T3LNC\\n' +\n      'iP8KzRFrjC1MX/WXJnmOVQIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/MB0GA1Ud\\n' +\n      'DgQWBBS33XbXAUMs1znyZo4B0+B3D68WFTAOBgNVHQ8BAf8EBAMCAYYwDQYJKoZI\\n' +\n      'hvcNAQELBQADggEBADuadd2EmlpueY2VlrIIPC30QkoA1EOSoCmZgN6124apkoY1\\n' +\n      'HiV4r+QNPljN4WP8gmcARnNkS7ZeR4fvWi8xPh5AxQCpiaBMw4gcbTMCuKDV68Pw\\n' +\n      'P2dZCTMspvR3CDfM35oXCufdtFnxyU6PAyINUqF/wyTHguO3owRFPz64+sk3r2pT\\n' +\n      'WHmJjG9E7V+KOh0s6REgD17Gqn6C5ijLchSrPUHB0wOIkeLJZndHxN/76h7+zhMt\\n' +\n      'fFeNxPWHY2MfpcaLjz4UREzZPSB2U9k+y3pW1omCIcl6MQU9itGx/LpQE+H3ZeX2\\n' +\n      'M2bdYd5L+ow+bdbGtsVKOuN+R9Dm17YpswF+vyQ=\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      '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\\n' +\n      'Em4Hy3A=\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      '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\\n' +\n      'jGKc3k6UNxpg\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      '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\\n' +\n      '0Ws=\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIICtDCCAjqgAwIBAgIRAMyaTlVLN0ndGp4ffwKAfoMwCgYIKoZIzj0EAwMwgZkx\\n' +\n      'CzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMu\\n' +\n      'MRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTEyMDAGA1UEAwwpQW1h\\n' +\n      'em9uIFJEUyBtZS1jZW50cmFsLTEgUm9vdCBDQSBFQ0MzODQgRzExEDAOBgNVBAcM\\n' +\n      'B1NlYXR0bGUwIBcNMjIwNTA3MDA0NDM3WhgPMjEyMjA1MDcwMTQ0MzdaMIGZMQsw\\n' +\n      'CQYDVQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjET\\n' +\n      'MBEGA1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExMjAwBgNVBAMMKUFtYXpv\\n' +\n      'biBSRFMgbWUtY2VudHJhbC0xIFJvb3QgQ0EgRUNDMzg0IEcxMRAwDgYDVQQHDAdT\\n' +\n      'ZWF0dGxlMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAE19nCV1nsI6CohSor13+B25cr\\n' +\n      'zg+IHdi9Y3L7ziQnHWI6yjBazvnKD+oC71aRRlR8b5YXsYGUQxWzPLHN7EGPcSGv\\n' +\n      'bzA9SLG1KQYCJaQ0m9Eg/iGrwKWOgylbhVw0bCxoo0IwQDAPBgNVHRMBAf8EBTAD\\n' +\n      'AQH/MB0GA1UdDgQWBBS4KsknsJXM9+QPEkBdZxUPaLr11zAOBgNVHQ8BAf8EBAMC\\n' +\n      'AYYwCgYIKoZIzj0EAwMDaAAwZQIxAJaRgrYIEfXQMZQQDxMTYS0azpyWSseQooXo\\n' +\n      'L3nYq4OHGBgYyQ9gVjvRYWU85PXbfgIwdi82DtANQFkCu+j+BU0JBY/uRKPEeYzo\\n' +\n      'JG92igKIcXPqCoxIJ7lJbbzmuf73gQu5\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      '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\\n' +\n      'Tspdjbg=\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIECTCCAvGgAwIBAgIRAJZFh4s9aZGzKaTMLrSb4acwDQYJKoZIhvcNAQELBQAw\\n' +\n      'gZwxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\n      'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTE1MDMGA1UEAwws\\n' +\n      'QW1hem9uIFJEUyBCZXRhIHVzLWVhc3QtMSBSb290IENBIFJTQTIwNDggRzExEDAO\\n' +\n      'BgNVBAcMB1NlYXR0bGUwIBcNMjEwNTE4MjEyODQxWhgPMjA2MTA1MTgyMjI4NDFa\\n' +\n      'MIGcMQswCQYDVQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywg\\n' +\n      'SW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExNTAzBgNVBAMM\\n' +\n      'LEFtYXpvbiBSRFMgQmV0YSB1cy1lYXN0LTEgUm9vdCBDQSBSU0EyMDQ4IEcxMRAw\\n' +\n      'DgYDVQQHDAdTZWF0dGxlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA\\n' +\n      '17i2yoU6diep+WrqxIn2CrDEO2NdJVwWTSckx4WMZlLpkQDoymSmkNHjq9ADIApD\\n' +\n      'A31Cx+843apL7wub8QkFZD0Tk7/ThdHWJOzcAM3ov98QBPQfOC1W5zYIIRP2F+vQ\\n' +\n      'TRETHQnLcW3rLv0NMk5oQvIKpJoC9ett6aeVrzu+4cU4DZVWYlJUoC/ljWzCluau\\n' +\n      '8blfW0Vwin6OB7s0HCG5/wijQWJBU5SrP/KAIPeQi1GqG5efbqAXDr/ple0Ipwyo\\n' +\n      'Xjjl73LenGUgqpANlC9EAT4i7FkJcllLPeK3NcOHjuUG0AccLv1lGsHAxZLgjk/x\\n' +\n      'z9ZcnVV9UFWZiyJTKxeKPwIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/MB0GA1Ud\\n' +\n      'DgQWBBRWyMuZUo4gxCR3Luf9/bd2AqZ7CjAOBgNVHQ8BAf8EBAMCAYYwDQYJKoZI\\n' +\n      'hvcNAQELBQADggEBAIqN2DlIKlvDFPO0QUZQVFbsi/tLdYM98/vvzBpttlTGVMyD\\n' +\n      'gJuQeHVz+MnhGIwoCGOlGU3OOUoIlLAut0+WG74qYczn43oA2gbMd7HoD7oL/IGg\\n' +\n      'njorBwJVcuuLv2G//SqM3nxGcLRtkRnQ+lvqPxMz9+0fKFUn6QcIDuF0QSfthLs2\\n' +\n      'WSiGEPKO9c9RSXdRQ4pXA7c3hXng8P4A2ZmdciPne5Nu4I4qLDGZYRrRLRkNTrOi\\n' +\n      'TyS6r2HNGUfgF7eOSeKt3NWL+mNChcYj71/Vycf5edeczpUgfnWy9WbPrK1svKyl\\n' +\n      'aAs2xg+X6O8qB+Mnj2dNBzm+lZIS3sIlm+nO9sg=\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIICrjCCAjSgAwIBAgIRAPAlEk8VJPmEzVRRaWvTh2AwCgYIKoZIzj0EAwMwgZYx\\n' +\n      'CzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMu\\n' +\n      'MRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTEvMC0GA1UEAwwmQW1h\\n' +\n      'em9uIFJEUyB1cy1lYXN0LTEgUm9vdCBDQSBFQ0MzODQgRzExEDAOBgNVBAcMB1Nl\\n' +\n      'YXR0bGUwIBcNMjEwNTI1MjI0MTU1WhgPMjEyMTA1MjUyMzQxNTVaMIGWMQswCQYD\\n' +\n      'VQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEG\\n' +\n      'A1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExLzAtBgNVBAMMJkFtYXpvbiBS\\n' +\n      'RFMgdXMtZWFzdC0xIFJvb3QgQ0EgRUNDMzg0IEcxMRAwDgYDVQQHDAdTZWF0dGxl\\n' +\n      'MHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEx5xjrup8II4HOJw15NTnS3H5yMrQGlbj\\n' +\n      'EDA5MMGnE9DmHp5dACIxmPXPMe/99nO7wNdl7G71OYPCgEvWm0FhdvVUeTb3LVnV\\n' +\n      'BnaXt32Ek7/oxGk1T+Df03C+W0vmuJ+wo0IwQDAPBgNVHRMBAf8EBTADAQH/MB0G\\n' +\n      'A1UdDgQWBBTGXmqBWN/1tkSea4pNw0oHrjk2UDAOBgNVHQ8BAf8EBAMCAYYwCgYI\\n' +\n      'KoZIzj0EAwMDaAAwZQIxAIqqZWCSrIkZ7zsv/FygtAusW6yvlL935YAWYPVXU30m\\n' +\n      'jkMFLM+/RJ9GMvnO8jHfCgIwB+whlkcItzE9CRQ6CsMo/d5cEHDUu/QW6jSIh9BR\\n' +\n      'OGh9pTYPVkUbBiKPA7lVVhre\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      '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\\n' +\n      'nWS0\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIGCTCCA/GgAwIBAgIRAOY7gfcBZgR2tqfBzMbFQCUwDQYJKoZIhvcNAQEMBQAw\\n' +\n      'gZwxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\n      'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTE1MDMGA1UEAwws\\n' +\n      'QW1hem9uIFJEUyBhcC1zb3V0aGVhc3QtNCBSb290IENBIFJTQTQwOTYgRzExEDAO\\n' +\n      'BgNVBAcMB1NlYXR0bGUwIBcNMjIwNTI1MTY1NDU5WhgPMjEyMjA1MjUxNzU0NTla\\n' +\n      'MIGcMQswCQYDVQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywg\\n' +\n      'SW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExNTAzBgNVBAMM\\n' +\n      'LEFtYXpvbiBSRFMgYXAtc291dGhlYXN0LTQgUm9vdCBDQSBSU0E0MDk2IEcxMRAw\\n' +\n      'DgYDVQQHDAdTZWF0dGxlMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA\\n' +\n      'lfxER43FuLRdL08bddF0YhbCP+XXKj1A/TFMXmd2My8XDei8rPXFYyyjMig9+xZw\\n' +\n      'uAsIxLwz8uiA26CKA8bCZKg5VG2kTeOJAfvBJaLv1CZefs3Z4Uf1Sjvm6MF2yqEj\\n' +\n      'GoORfyfL9HiZFTDuF/hcjWoKYCfMuG6M/wO8IbdICrX3n+BiYQJu/pFO660Mg3h/\\n' +\n      '8YBBWYDbHoCiH/vkqqJugQ5BM3OI5nsElW51P1icEEqti4AZ7JmtSv9t7fIFBVyR\\n' +\n      'oaEyOgpp0sm193F/cDJQdssvjoOnaubsSYm1ep3awZAUyGN/X8MBrPY95d0hLhfH\\n' +\n      'Ehc5Icyg+hsosBljlAyksmt4hFQ9iBnWIz/ZTfGMck+6p3HVL9RDgvluez+rWv59\\n' +\n      '8q7omUGsiPApy5PDdwI/Wt/KtC34/2sjslIJfvgifdAtkRPkhff1WEwER00ADrN9\\n' +\n      'eGGInaCpJfb1Rq8cV2n00jxg7DcEd65VR3dmIRb0bL+jWK62ni/WdEyomAOMfmGj\\n' +\n      'aWf78S/4rasHllWJ+QwnaUYY3u6N8Cgio0/ep4i34FxMXqMV3V0/qXdfhyabi/LM\\n' +\n      'wCxNo1Dwt+s6OtPJbwO92JL+829QAxydfmaMTeHBsgMPkG7RwAekeuatKGHNsc2Z\\n' +\n      'x2Q4C2wVvOGAhcHwxfM8JfZs3nDSZJndtVVnFlUY0UECAwEAAaNCMEAwDwYDVR0T\\n' +\n      'AQH/BAUwAwEB/zAdBgNVHQ4EFgQUpnG7mWazy6k97/tb5iduRB3RXgQwDgYDVR0P\\n' +\n      'AQH/BAQDAgGGMA0GCSqGSIb3DQEBDAUAA4ICAQCDLqq1Wwa9Tkuv7vxBnIeVvvFF\\n' +\n      'ecTn+P+wJxl9Qa2ortzqTHZsBDyJO62d04AgBwiDXkJ9a+bthgG0H1J7Xee8xqv1\\n' +\n      'xyX2yKj24ygHjspLotKP4eDMdDi5TYq+gdkbPmm9Q69B1+W6e049JVGXvWG8/7kU\\n' +\n      'igxeuCYwtCCdUPRLf6D8y+1XMGgVv3/DSOHWvTg3MJ1wJ3n3+eve3rjGdRYWZeJu\\n' +\n      'k21HLSZYzVrCtUsh2YAeLnUbSxVuT2Xr4JehYe9zW5HEQ8Je/OUfnCy9vzoN/ITw\\n' +\n      'osAH+EBJQey7RxEDqMwCaRefH0yeHFcnOll0OXg/urnQmwbEYzQ1uutJaBPsjU0J\\n' +\n      'Qf06sMxI7GiB5nPE+CnI2sM6A9AW9kvwexGXpNJiLxF8dvPQthpOKGcYu6BFvRmt\\n' +\n      '6ctfXd9b7JJoVqMWuf5cCY6ihpk1e9JTlAqu4Eb/7JNyGiGCR40iSLvV28un9wiE\\n' +\n      'plrdYxwcNYq851BEu3r3AyYWw/UW1AKJ5tM+/Gtok+AphMC9ywT66o/Kfu44mOWm\\n' +\n      'L3nSLSWEcgfUVgrikpnyGbUnGtgCmHiMlUtNVexcE7OtCIZoVAlCGKNu7tyuJf10\\n' +\n      'Qlk8oIIzfSIlcbHpOYoN79FkLoDNc2er4Gd+7w1oPQmdAB0jBJnA6t0OUBPKdDdE\\n' +\n      'Ufff2jrbfbzECn1ELg==\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      '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\\n' +\n      'fejbXelUSJSzDIdY\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIGCTCCA/GgAwIBAgIRAN7Y9G9i4I+ZaslPobE7VL4wDQYJKoZIhvcNAQEMBQAw\\n' +\n      'gZwxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\n      'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTE1MDMGA1UEAwws\\n' +\n      'QW1hem9uIFJEUyBhcC1ub3J0aGVhc3QtMiBSb290IENBIFJTQTQwOTYgRzExEDAO\\n' +\n      'BgNVBAcMB1NlYXR0bGUwIBcNMjEwNTIwMTYzMzIzWhgPMjEyMTA1MjAxNzMzMjNa\\n' +\n      'MIGcMQswCQYDVQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywg\\n' +\n      'SW5jLjETMBEGA1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExNTAzBgNVBAMM\\n' +\n      'LEFtYXpvbiBSRFMgYXAtbm9ydGhlYXN0LTIgUm9vdCBDQSBSU0E0MDk2IEcxMRAw\\n' +\n      'DgYDVQQHDAdTZWF0dGxlMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA\\n' +\n      '4BEPCiIfiK66Q/qa8k+eqf1Q3qsa6Xuu/fPkpuStXVBShhtXd3eqrM0iT4Xxs420\\n' +\n      'Va0vSB3oZ7l86P9zYfa60n6PzRxdYFckYX330aI7L/oFIdaodB/C9szvROI0oLG+\\n' +\n      '6RwmIF2zcprH0cTby8MiM7G3v9ykpq27g4WhDC1if2j8giOQL3oHpUaByekZNIHF\\n' +\n      'dIllsI3RkXmR3xmmxoOxJM1B9MZi7e1CvuVtTGOnSGpNCQiqofehTGwxCN2wFSK8\\n' +\n      'xysaWlw48G0VzZs7cbxoXMH9QbMpb4tpk0d+T8JfAPu6uWO9UwCLWWydf0CkmA/+\\n' +\n      'D50/xd1t33X9P4FEaPSg5lYbHXzSLWn7oLbrN2UqMLaQrkoEBg/VGvzmfN0mbflw\\n' +\n      '+T87bJ/VEOVNlG+gepyCTf89qIQVWOjuYMox4sK0PjzZGsYEuYiq1+OUT3vk/e5K\\n' +\n      'ag1fCcq2Isy4/iwB2xcXrsQ6ljwdk1fc+EmOnjGKrhuOHJY3S+RFv4ToQBsVyYhC\\n' +\n      'XGaC3EkqIX0xaCpDimxYhFjWhpDXAjG/zJ+hRLDAMCMhl/LPGRk/D1kzSbPmdjpl\\n' +\n      'lEMK5695PeBvEBTQdBQdOiYgOU3vWU6tzwwHfiM2/wgvess/q0FDAHfJhppbgbb9\\n' +\n      '3vgsIUcsvoC5o29JvMsUxsDRvsAfEmMSDGkJoA/X6GECAwEAAaNCMEAwDwYDVR0T\\n' +\n      'AQH/BAUwAwEB/zAdBgNVHQ4EFgQUgEWm1mZCbGD6ytbwk2UU1aLaOUUwDgYDVR0P\\n' +\n      'AQH/BAQDAgGGMA0GCSqGSIb3DQEBDAUAA4ICAQBb4+ABTGBGwxK1U/q4g8JDqTQM\\n' +\n      '1Wh8Oz8yAk4XtPJMAmCctxbd81cRnSnePWw/hxViLVtkZ/GsemvXfqAQyOn1coN7\\n' +\n      'QeYSw+ZOlu0j2jEJVynmgsR7nIRqE7QkCyZAU+d2FTJUfmee+IiBiGyFGgxz9n7A\\n' +\n      'JhBZ/eahBbiuoOik/APW2JWLh0xp0W0GznfJ8lAlaQTyDa8iDXmVtbJg9P9qzkvl\\n' +\n      'FgPXQttzEOyooF8Pb2LCZO4kUz+1sbU7tHdr2YE+SXxt6D3SBv+Yf0FlvyWLiqVk\\n' +\n      'GDEOlPPTDSjAWgKnqST8UJ0RDcZK/v1ixs7ayqQJU0GUQm1I7LGTErWXHMnCuHKe\\n' +\n      'UKYuiSZwmTcJ06NgdhcCnGZgPq13ryMDqxPeltQc3n5eO7f1cL9ERYLDLOzm6A9P\\n' +\n      'oQ3MfcVOsbHgGHZWaPSeNrQRN9xefqBXH0ZPasgcH9WJdsLlEjVUXoultaHOKx3b\\n' +\n      'UCCb+d3EfqF6pRT488ippOL6bk7zNubwhRa/+y4wjZtwe3kAX78ACJVcjPobH9jZ\\n' +\n      'ErySads5zdQeaoee5wRKdp3TOfvuCe4bwLRdhOLCHWzEcXzY3g/6+ppLvNom8o+h\\n' +\n      'Bh5X26G6KSfr9tqhQ3O9IcbARjnuPbvtJnoPY0gz3EHHGPhy0RNW8i2gl3nUp0ah\\n' +\n      'PtjwbKW0hYAhIttT0Q==\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIICtzCCAj2gAwIBAgIQQRBQTs6Y3H1DDbpHGta3lzAKBggqhkjOPQQDAzCBmzEL\\n' +\n      'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\n      'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTQwMgYDVQQDDCtBbWF6\\n' +\n      'b24gUkRTIGFwLXNvdXRoZWFzdC0zIFJvb3QgQ0EgRUNDMzg0IEcxMRAwDgYDVQQH\\n' +\n      'DAdTZWF0dGxlMCAXDTIxMDYxMTAwMTI0M1oYDzIxMjEwNjExMDExMjQzWjCBmzEL\\n' +\n      'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\n      'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTQwMgYDVQQDDCtBbWF6\\n' +\n      'b24gUkRTIGFwLXNvdXRoZWFzdC0zIFJvb3QgQ0EgRUNDMzg0IEcxMRAwDgYDVQQH\\n' +\n      'DAdTZWF0dGxlMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEs0942Xj4m/gKA+WA6F5h\\n' +\n      'AHYuek9eGpzTRoLJddM4rEV1T3eSueytMVKOSlS3Ub9IhyQrH2D8EHsLYk9ktnGR\\n' +\n      'pATk0kCYTqFbB7onNo070lmMJmGT/Q7NgwC8cySChFxbo0IwQDAPBgNVHRMBAf8E\\n' +\n      'BTADAQH/MB0GA1UdDgQWBBQ20iKBKiNkcbIZRu0y1uoF1yJTEzAOBgNVHQ8BAf8E\\n' +\n      'BAMCAYYwCgYIKoZIzj0EAwMDaAAwZQIwYv0wTSrpQTaPaarfLN8Xcqrqu3hzl07n\\n' +\n      'FrESIoRw6Cx77ZscFi2/MV6AFyjCV/TlAjEAhpwJ3tpzPXpThRML8DMJYZ3YgMh3\\n' +\n      'CMuLqhPpla3cL0PhybrD27hJWl29C4el6aMO\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIICrDCCAjOgAwIBAgIQGcztRyV40pyMKbNeSN+vXTAKBggqhkjOPQQDAzCBljEL\\n' +\n      'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\n      'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMS8wLQYDVQQDDCZBbWF6\\n' +\n      'b24gUkRTIHVzLWVhc3QtMiBSb290IENBIEVDQzM4NCBHMTEQMA4GA1UEBwwHU2Vh\\n' +\n      'dHRsZTAgFw0yMTA1MjEyMzE1NTZaGA8yMTIxMDUyMjAwMTU1NlowgZYxCzAJBgNV\\n' +\n      'BAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYD\\n' +\n      'VQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTEvMC0GA1UEAwwmQW1hem9uIFJE\\n' +\n      'UyB1cy1lYXN0LTIgUm9vdCBDQSBFQ0MzODQgRzExEDAOBgNVBAcMB1NlYXR0bGUw\\n' +\n      'djAQBgcqhkjOPQIBBgUrgQQAIgNiAAQfDcv+GGRESD9wT+I5YIPRsD3L+/jsiIis\\n' +\n      'Tr7t9RSbFl+gYpO7ZbDXvNbV5UGOC5lMJo/SnqFRTC6vL06NF7qOHfig3XO8QnQz\\n' +\n      '6T5uhhrhnX2RSY3/10d2kTyHq3ZZg3+jQjBAMA8GA1UdEwEB/wQFMAMBAf8wHQYD\\n' +\n      'VR0OBBYEFLDyD3PRyNXpvKHPYYxjHXWOgfPnMA4GA1UdDwEB/wQEAwIBhjAKBggq\\n' +\n      'hkjOPQQDAwNnADBkAjB20HQp6YL7CqYD82KaLGzgw305aUKw2aMrdkBR29J183jY\\n' +\n      '6Ocj9+Wcif9xnRMS+7oCMAvrt03rbh4SU9BohpRUcQ2Pjkh7RoY0jDR4Xq4qzjNr\\n' +\n      '5UFr3BXpFvACxXF51BksGQ==\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIICrjCCAjWgAwIBAgIQeKbS5zvtqDvRtwr5H48cAjAKBggqhkjOPQQDAzCBlzEL\\n' +\n      'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\n      'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTAwLgYDVQQDDCdBbWF6\\n' +\n      'b24gUkRTIG1lLXNvdXRoLTEgUm9vdCBDQSBFQ0MzODQgRzExEDAOBgNVBAcMB1Nl\\n' +\n      'YXR0bGUwIBcNMjEwNTIwMTcxOTU1WhgPMjEyMTA1MjAxODE5NTVaMIGXMQswCQYD\\n' +\n      'VQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEG\\n' +\n      'A1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExMDAuBgNVBAMMJ0FtYXpvbiBS\\n' +\n      'RFMgbWUtc291dGgtMSBSb290IENBIEVDQzM4NCBHMTEQMA4GA1UEBwwHU2VhdHRs\\n' +\n      'ZTB2MBAGByqGSM49AgEGBSuBBAAiA2IABEKjgUaAPmUlRMEQdBC7BScAGosJ1zRV\\n' +\n      'LDd38qTBjzgmwBfQJ5ZfGIvyEK5unB09MB4e/3qqK5I/L6Qn5Px/n5g4dq0c7MQZ\\n' +\n      'u7G9GBYm90U3WRJBf7lQrPStXaRnS4A/O6NCMEAwDwYDVR0TAQH/BAUwAwEB/zAd\\n' +\n      'BgNVHQ4EFgQUNKcAbGEIn03/vkwd8g6jNyiRdD4wDgYDVR0PAQH/BAQDAgGGMAoG\\n' +\n      'CCqGSM49BAMDA2cAMGQCMHIeTrjenCSYuGC6txuBt/0ZwnM/ciO9kHGWVCoK8QLs\\n' +\n      'jGghb5/YSFGZbmQ6qpGlSAIwVOQgdFfTpEfe5i+Vs9frLJ4QKAfc27cTNYzRIM0I\\n' +\n      'E+AJgK4C4+DiyyMzOpiCfmvq\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      '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\\n' +\n      'WT1QcNdw7ntUJP/w\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIICrzCCAjWgAwIBAgIQARky6+5PNFRkFVOp3Ob1CTAKBggqhkjOPQQDAzCBlzEL\\n' +\n      'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\n      'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTAwLgYDVQQDDCdBbWF6\\n' +\n      'b24gUkRTIGV1LXNvdXRoLTIgUm9vdCBDQSBFQ0MzODQgRzExEDAOBgNVBAcMB1Nl\\n' +\n      'YXR0bGUwIBcNMjIwNTIzMTg0MTI4WhgPMjEyMjA1MjMxOTQxMjdaMIGXMQswCQYD\\n' +\n      'VQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEG\\n' +\n      'A1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExMDAuBgNVBAMMJ0FtYXpvbiBS\\n' +\n      'RFMgZXUtc291dGgtMiBSb290IENBIEVDQzM4NCBHMTEQMA4GA1UEBwwHU2VhdHRs\\n' +\n      'ZTB2MBAGByqGSM49AgEGBSuBBAAiA2IABNVGL5oF7cfIBxKyWd2PVK/S5yQfaJY3\\n' +\n      'QFHWvEdt6951n9JhiiPrHzfVHsxZp1CBjILRMzjgRbYWmc8qRoLkgGE7htGdwudJ\\n' +\n      'Fa/WuKzO574Prv4iZXUnVGTboC7JdvKbh6NCMEAwDwYDVR0TAQH/BAUwAwEB/zAd\\n' +\n      'BgNVHQ4EFgQUgDeIIEKynwUbNXApdIPnmRWieZwwDgYDVR0PAQH/BAQDAgGGMAoG\\n' +\n      'CCqGSM49BAMDA2gAMGUCMEOOJfucrST+FxuqJkMZyCM3gWGZaB+/w6+XUAJC6hFM\\n' +\n      'uSTY0F44/bERkA4XhH+YGAIxAIpJQBakCA1/mXjsTnQ+0El9ty+LODp8ibkn031c\\n' +\n      '8DKDS7pR9UK7ZYdR6zFg3ZCjQw==\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIICrjCCAjOgAwIBAgIQJvkWUcYLbnxtuwnyjMmntDAKBggqhkjOPQQDAzCBljEL\\n' +\n      'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\n      'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMS8wLQYDVQQDDCZBbWF6\\n' +\n      'b24gUkRTIGV1LXdlc3QtMyBSb290IENBIEVDQzM4NCBHMTEQMA4GA1UEBwwHU2Vh\\n' +\n      'dHRsZTAgFw0yMTA1MjUyMjI2MTJaGA8yMTIxMDUyNTIzMjYxMlowgZYxCzAJBgNV\\n' +\n      'BAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMwEQYD\\n' +\n      'VQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTEvMC0GA1UEAwwmQW1hem9uIFJE\\n' +\n      'UyBldS13ZXN0LTMgUm9vdCBDQSBFQ0MzODQgRzExEDAOBgNVBAcMB1NlYXR0bGUw\\n' +\n      'djAQBgcqhkjOPQIBBgUrgQQAIgNiAARENn8uHCyjn1dFax4OeXxvbV861qsXFD9G\\n' +\n      'DshumTmFzWWHN/69WN/AOsxy9XN5S7Cgad4gQgeYYYgZ5taw+tFo/jQvCLY//uR5\\n' +\n      'uihcLuLJ78opvRPvD9kbWZ6oXfBtFkWjQjBAMA8GA1UdEwEB/wQFMAMBAf8wHQYD\\n' +\n      'VR0OBBYEFKiK3LpoF+gDnqPldGSwChBPCYciMA4GA1UdDwEB/wQEAwIBhjAKBggq\\n' +\n      'hkjOPQQDAwNpADBmAjEA+7qfvRlnvF1Aosyp9HzxxCbN7VKu+QXXPhLEBWa5oeWW\\n' +\n      'UOcifunf/IVLC4/FGCsLAjEAte1AYp+iJyOHDB8UYkhBE/1sxnFaTiEPbvQBU0wZ\\n' +\n      'SuwWVLhu2wWDuSW+K7tTuL8p\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIID/zCCAuegAwIBAgIRAKeDpqX5WFCGNo94M4v69sUwDQYJKoZIhvcNAQELBQAw\\n' +\n      'gZcxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\n      'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTEwMC4GA1UEAwwn\\n' +\n      'QW1hem9uIFJEUyBldS13ZXN0LTMgUm9vdCBDQSBSU0EyMDQ4IEcxMRAwDgYDVQQH\\n' +\n      'DAdTZWF0dGxlMCAXDTIxMDUyNTIyMTgzM1oYDzIwNjEwNTI1MjMxODMzWjCBlzEL\\n' +\n      'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\n      'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTAwLgYDVQQDDCdBbWF6\\n' +\n      'b24gUkRTIGV1LXdlc3QtMyBSb290IENBIFJTQTIwNDggRzExEDAOBgNVBAcMB1Nl\\n' +\n      'YXR0bGUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCcKOTEMTfzvs4H\\n' +\n      'WtJR8gI7GXN6xesulWtZPv21oT+fLGwJ+9Bv8ADCGDDrDxfeH/HxJmzG9hgVAzVn\\n' +\n      '4g97Bn7q07tGZM5pVi96/aNp11velZT7spOJKfJDZTlGns6DPdHmx48whpdO+dOb\\n' +\n      '6+eR0VwCIv+Vl1fWXgoACXYCoKjhxJs+R+fwY//0JJ1YG8yjZ+ghLCJmvlkOJmE1\\n' +\n      'TCPUyIENaEONd6T+FHGLVYRRxC2cPO65Jc4yQjsXvvQypoGgx7FwD5voNJnFMdyY\\n' +\n      '754JGPOOe/SZdepN7Tz7UEq8kn7NQSbhmCsgA/Hkjkchz96qN/YJ+H/okiQUTNB0\\n' +\n      'eG9ogiVFAgMBAAGjQjBAMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFFjayw9Y\\n' +\n      'MjbxfF14XAhMM2VPl0PfMA4GA1UdDwEB/wQEAwIBhjANBgkqhkiG9w0BAQsFAAOC\\n' +\n      'AQEAAtmx6d9+9CWlMoU0JCirtp4dSS41bBfb9Oor6GQ8WIr2LdfZLL6uES/ubJPE\\n' +\n      '1Sh5Vu/Zon5/MbqLMVrfniv3UpQIof37jKXsjZJFE1JVD/qQfRzG8AlBkYgHNEiS\\n' +\n      'VtD4lFxERmaCkY1tjKB4Dbd5hfhdrDy29618ZjbSP7NwAfnwb96jobCmMKgxVGiH\\n' +\n      'UqsLSiEBZ33b2hI7PJ6iTJnYBWGuiDnsWzKRmheA4nxwbmcQSfjbrNwa93w3caL2\\n' +\n      'v/4u54Kcasvcu3yFsUwJygt8z43jsGAemNZsS7GWESxVVlW93MJRn6M+MMakkl9L\\n' +\n      'tWaXdHZ+KUV7LhfYLb0ajvb40w==\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIEBDCCAuygAwIBAgIQJ5oxPEjefCsaESSwrxk68DANBgkqhkiG9w0BAQsFADCB\\n' +\n      'mjELMAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIElu\\n' +\n      'Yy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTMwMQYDVQQDDCpB\\n' +\n      'bWF6b24gUkRTIGV1LWNlbnRyYWwtMiBSb290IENBIFJTQTIwNDggRzExEDAOBgNV\\n' +\n      'BAcMB1NlYXR0bGUwIBcNMjIwNjA2MjExNzA1WhgPMjA2MjA2MDYyMjE3MDVaMIGa\\n' +\n      'MQswCQYDVQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5j\\n' +\n      'LjETMBEGA1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExMzAxBgNVBAMMKkFt\\n' +\n      'YXpvbiBSRFMgZXUtY2VudHJhbC0yIFJvb3QgQ0EgUlNBMjA0OCBHMTEQMA4GA1UE\\n' +\n      'BwwHU2VhdHRsZTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALTQt5eX\\n' +\n      'g+VP3BjO9VBkWJhE0GfLrU/QIk32I6WvrnejayTrlup9H1z4QWlXF7GNJrqScRMY\\n' +\n      'KhJHlcP05aPsx1lYco6pdFOf42ybXyWHHJdShj4A5glU81GTT+VrXGzHSarLmtua\\n' +\n      'eozkQgPpDsSlPt0RefyTyel7r3Cq+5K/4vyjCTcIqbfgaGwTU36ffjM1LaPCuE4O\\n' +\n      'nINMeD6YuImt2hU/mFl20FZ+IZQUIFZZU7pxGLqTRz/PWcH8tDDxnkYg7tNuXOeN\\n' +\n      'JbTpXrw7St50/E9ZQ0llGS+MxJD8jGRAa/oL4G/cwnV8P2OEPVVkgN9xDDQeieo0\\n' +\n      '3xkzolkDkmeKOnUCAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQU\\n' +\n      'bwu8635iQGQMRanekesORM8Hkm4wDgYDVR0PAQH/BAQDAgGGMA0GCSqGSIb3DQEB\\n' +\n      'CwUAA4IBAQAgN6LE9mUgjsj6xGCX1afYE69fnmCjjb0rC6eEe1mb/QZNcyw4XBIW\\n' +\n      '6+zTXo4mjZ4ffoxb//R0/+vdTE7IvaLgfAZgFsLKJCtYDDstXZj8ujQnGR9Pig3R\\n' +\n      'W+LpNacvOOSJSawNQq0Xrlcu55AU4buyD5VjcICnfF1dqBMnGTnh27m/scd/ZMx/\\n' +\n      'kapHZ/fMoK2mAgSX/NvUKF3UkhT85vSSM2BTtET33DzCPDQTZQYxFBa4rFRmFi4c\\n' +\n      'BLlmIReiCGyh3eJhuUUuYAbK6wLaRyPsyEcIOLMQmZe1+gAFm1+1/q5Ke9ugBmjf\\n' +\n      'PbTWjsi/lfZ5CdVAhc5lmZj/l5aKqwaS\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIICrjCCAjSgAwIBAgIRAKKPTYKln9L4NTx9dpZGUjowCgYIKoZIzj0EAwMwgZYx\\n' +\n      'CzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMu\\n' +\n      'MRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTEvMC0GA1UEAwwmQW1h\\n' +\n      'em9uIFJEUyBldS13ZXN0LTIgUm9vdCBDQSBFQ0MzODQgRzExEDAOBgNVBAcMB1Nl\\n' +\n      'YXR0bGUwIBcNMjEwNTIxMjI1NTIxWhgPMjEyMTA1MjEyMzU1MjFaMIGWMQswCQYD\\n' +\n      'VQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEG\\n' +\n      'A1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExLzAtBgNVBAMMJkFtYXpvbiBS\\n' +\n      'RFMgZXUtd2VzdC0yIFJvb3QgQ0EgRUNDMzg0IEcxMRAwDgYDVQQHDAdTZWF0dGxl\\n' +\n      'MHYwEAYHKoZIzj0CAQYFK4EEACIDYgAE/owTReDvaRqdmbtTzXbyRmEpKCETNj6O\\n' +\n      'hZMKH0F8oU9Tmn8RU7kQQj6xUKEyjLPrFBN7c+26TvrVO1KmJAvbc8bVliiJZMbc\\n' +\n      'C0yV5PtJTalvlMZA1NnciZuhxaxrzlK1o0IwQDAPBgNVHRMBAf8EBTADAQH/MB0G\\n' +\n      'A1UdDgQWBBT4i5HaoHtrs7Mi8auLhMbKM1XevDAOBgNVHQ8BAf8EBAMCAYYwCgYI\\n' +\n      'KoZIzj0EAwMDaAAwZQIxAK9A+8/lFdX4XJKgfP+ZLy5ySXC2E0Spoy12Gv2GdUEZ\\n' +\n      'p1G7c1KbWVlyb1d6subzkQIwKyH0Naf/3usWfftkmq8SzagicKz5cGcEUaULq4tO\\n' +\n      'GzA/AMpr63IDBAqkZbMDTCmH\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIICrzCCAjWgAwIBAgIQTgIvwTDuNWQo0Oe1sOPQEzAKBggqhkjOPQQDAzCBlzEL\\n' +\n      'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\n      'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTAwLgYDVQQDDCdBbWF6\\n' +\n      'b24gUkRTIGV1LW5vcnRoLTEgUm9vdCBDQSBFQ0MzODQgRzExEDAOBgNVBAcMB1Nl\\n' +\n      'YXR0bGUwIBcNMjEwNTI0MjEwNjM4WhgPMjEyMTA1MjQyMjA2MzhaMIGXMQswCQYD\\n' +\n      'VQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEG\\n' +\n      'A1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExMDAuBgNVBAMMJ0FtYXpvbiBS\\n' +\n      'RFMgZXUtbm9ydGgtMSBSb290IENBIEVDQzM4NCBHMTEQMA4GA1UEBwwHU2VhdHRs\\n' +\n      'ZTB2MBAGByqGSM49AgEGBSuBBAAiA2IABJuzXLU8q6WwSKXBvx8BbdIi3mPhb7Xo\\n' +\n      'rNJBfuMW1XRj5BcKH1ZoGaDGw+BIIwyBJg8qNmCK8kqIb4cH8/Hbo3Y+xBJyoXq/\\n' +\n      'cuk8aPrxiNoRsKWwiDHCsVxaK9L7GhHHAqNCMEAwDwYDVR0TAQH/BAUwAwEB/zAd\\n' +\n      'BgNVHQ4EFgQUYgcsdU4fm5xtuqLNppkfTHM2QMYwDgYDVR0PAQH/BAQDAgGGMAoG\\n' +\n      'CCqGSM49BAMDA2gAMGUCMQDz/Rm89+QJOWJecYAmYcBWCcETASyoK1kbr4vw7Hsg\\n' +\n      '7Ew3LpLeq4IRmTyuiTMl0gMCMAa0QSjfAnxBKGhAnYxcNJSntUyyMpaXzur43ec0\\n' +\n      '3D8npJghwC4DuICtKEkQiI5cSg==\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      '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\\n' +\n      'u3UBpZI=\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIICtDCCAjmgAwIBAgIQenQbcP/Zbj9JxvZ+jXbRnTAKBggqhkjOPQQDAzCBmTEL\\n' +\n      'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\n      'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTIwMAYDVQQDDClBbWF6\\n' +\n      'b24gUkRTIGV1LWNlbnRyYWwtMSBSb290IENBIEVDQzM4NCBHMTEQMA4GA1UEBwwH\\n' +\n      'U2VhdHRsZTAgFw0yMTA1MjEyMjMzMjRaGA8yMTIxMDUyMTIzMzMyNFowgZkxCzAJ\\n' +\n      'BgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMuMRMw\\n' +\n      'EQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTEyMDAGA1UEAwwpQW1hem9u\\n' +\n      'IFJEUyBldS1jZW50cmFsLTEgUm9vdCBDQSBFQ0MzODQgRzExEDAOBgNVBAcMB1Nl\\n' +\n      'YXR0bGUwdjAQBgcqhkjOPQIBBgUrgQQAIgNiAATlBHiEM9LoEb1Hdnd5j2VpCDOU\\n' +\n      '5nGuFoBD8ROUCkFLFh5mHrHfPXwBc63heW9WrP3qnDEm+UZEUvW7ROvtWCTPZdLz\\n' +\n      'Z4XaqgAlSqeE2VfUyZOZzBSgUUJk7OlznXfkCMOjQjBAMA8GA1UdEwEB/wQFMAMB\\n' +\n      'Af8wHQYDVR0OBBYEFDT/ThjQZl42Nv/4Z/7JYaPNMly2MA4GA1UdDwEB/wQEAwIB\\n' +\n      'hjAKBggqhkjOPQQDAwNpADBmAjEAnZWmSgpEbmq+oiCa13l5aGmxSlfp9h12Orvw\\n' +\n      'Dq/W5cENJz891QD0ufOsic5oGq1JAjEAp5kSJj0MxJBTHQze1Aa9gG4sjHBxXn98\\n' +\n      '4MP1VGsQuhfndNHQb4V0Au7OWnOeiobq\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIID/zCCAuegAwIBAgIRAMgnyikWz46xY6yRgiYwZ3swDQYJKoZIhvcNAQELBQAw\\n' +\n      'gZcxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\n      'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTEwMC4GA1UEAwwn\\n' +\n      'QW1hem9uIFJEUyBldS13ZXN0LTEgUm9vdCBDQSBSU0EyMDQ4IEcxMRAwDgYDVQQH\\n' +\n      'DAdTZWF0dGxlMCAXDTIxMDUyMDE2NDkxMloYDzIwNjEwNTIwMTc0OTEyWjCBlzEL\\n' +\n      'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\n      'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTAwLgYDVQQDDCdBbWF6\\n' +\n      'b24gUkRTIGV1LXdlc3QtMSBSb290IENBIFJTQTIwNDggRzExEDAOBgNVBAcMB1Nl\\n' +\n      'YXR0bGUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCi8JYOc9cYSgZH\\n' +\n      'gYPxLk6Xcc7HqzamvsnjYU98Dcb98y6iDqS46Ra2Ne02MITtU5MDL+qjxb8WGDZV\\n' +\n      'RUA9ZS69tkTO3gldW8QdiSh3J6hVNJQW81F0M7ZWgV0gB3n76WCmfT4IWos0AXHM\\n' +\n      '5v7M/M4tqVmCPViQnZb2kdVlM3/Xc9GInfSMCgNfwHPTXl+PXX+xCdNBePaP/A5C\\n' +\n      '5S0oK3HiXaKGQAy3K7VnaQaYdiv32XUatlM4K2WS4AMKt+2cw3hTCjlmqKRHvYFQ\\n' +\n      'veWCXAuc+U5PQDJ9SuxB1buFJZhT4VP3JagOuZbh5NWpIbOTxlAJOb5pGEDuJTKi\\n' +\n      '1gQQQVEFAgMBAAGjQjBAMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFNXm+N87\\n' +\n      'OFxK9Af/bjSxDCiulGUzMA4GA1UdDwEB/wQEAwIBhjANBgkqhkiG9w0BAQsFAAOC\\n' +\n      'AQEAkqIbkgZ45spvrgRQ6n9VKzDLvNg+WciLtmVrqyohwwJbj4pYvWwnKQCkVc7c\\n' +\n      'hUOSBmlSBa5REAPbH5o8bdt00FPRrD6BdXLXhaECKgjsHe1WW08nsequRKD8xVmc\\n' +\n      '8bEX6sw/utBeBV3mB+3Zv7ejYAbDFM4vnRsWtO+XqgReOgrl+cwdA6SNQT9oW3e5\\n' +\n      'rSQ+VaXgJtl9NhkiIysq9BeYigxqS/A13pHQp0COMwS8nz+kBPHhJTsajHCDc8F4\\n' +\n      'HfLi6cgs9G0gaRhT8FCH66OdGSqn196sE7Y3bPFFFs/3U+vxvmQgoZC6jegQXAg5\\n' +\n      'Prxd+VNXtNI/azitTysQPumH7A==\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIEBTCCAu2gAwIBAgIRAO8bekN7rUReuNPG8pSTKtEwDQYJKoZIhvcNAQELBQAw\\n' +\n      'gZoxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\n      'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTEzMDEGA1UEAwwq\\n' +\n      'QW1hem9uIFJEUyBldS1jZW50cmFsLTEgUm9vdCBDQSBSU0EyMDQ4IEcxMRAwDgYD\\n' +\n      'VQQHDAdTZWF0dGxlMCAXDTIxMDUyMTIyMjM0N1oYDzIwNjEwNTIxMjMyMzQ3WjCB\\n' +\n      'mjELMAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIElu\\n' +\n      'Yy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTMwMQYDVQQDDCpB\\n' +\n      'bWF6b24gUkRTIGV1LWNlbnRyYWwtMSBSb290IENBIFJTQTIwNDggRzExEDAOBgNV\\n' +\n      'BAcMB1NlYXR0bGUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCTTYds\\n' +\n      'Tray+Q9VA5j5jTh5TunHKFQzn68ZbOzdqaoi/Rq4ohfC0xdLrxCpfqn2TGDHN6Zi\\n' +\n      '2qGK1tWJZEd1H0trhzd9d1CtGK+3cjabUmz/TjSW/qBar7e9MA67/iJ74Gc+Ww43\\n' +\n      'A0xPNIWcL4aLrHaLm7sHgAO2UCKsrBUpxErOAACERScVYwPAfu79xeFcX7DmcX+e\\n' +\n      'lIqY16pQAvK2RIzrekSYfLFxwFq2hnlgKHaVgZ3keKP+nmXcXmRSHQYUUr72oYNZ\\n' +\n      'HcNYl2+gxCc9ccPEHM7xncVEKmb5cWEWvVoaysgQ+osi5f5aQdzgC2X2g2daKbyA\\n' +\n      'XL/z5FM9GHpS5BJjAgMBAAGjQjBAMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYE\\n' +\n      'FBDAiJ7Py9/A9etNa/ebOnx5l5MGMA4GA1UdDwEB/wQEAwIBhjANBgkqhkiG9w0B\\n' +\n      'AQsFAAOCAQEALMh/+81fFPdJV/RrJUeoUvFCGMp8iaANu97NpeJyKitNOv7RoeVP\\n' +\n      'WjivS0KcCqZaDBs+p6IZ0sLI5ZH098LDzzytcfZg0PsGqUAb8a0MiU/LfgDCI9Ee\\n' +\n      'jsOiwaFB8k0tfUJK32NPcIoQYApTMT2e26lPzYORSkfuntme2PTHUnuC7ikiQrZk\\n' +\n      'P+SZjWgRuMcp09JfRXyAYWIuix4Gy0eZ4rpRuaTK6mjAb1/LYoNK/iZ/gTeIqrNt\\n' +\n      'l70OWRsWW8jEmSyNTIubGK/gGGyfuZGSyqoRX6OKHESkP6SSulbIZHyJ5VZkgtXo\\n' +\n      '2XvyRyJ7w5pFyoofrL3Wv0UF8yt/GDszmg==\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIF/zCCA+egAwIBAgIRAMDk/F+rrhdn42SfE+ghPC8wDQYJKoZIhvcNAQEMBQAw\\n' +\n      'gZcxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\n      'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTEwMC4GA1UEAwwn\\n' +\n      'QW1hem9uIFJEUyBldS13ZXN0LTIgUm9vdCBDQSBSU0E0MDk2IEcxMRAwDgYDVQQH\\n' +\n      'DAdTZWF0dGxlMCAXDTIxMDUyMTIyNTEyMloYDzIxMjEwNTIxMjM1MTIyWjCBlzEL\\n' +\n      'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\n      'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTAwLgYDVQQDDCdBbWF6\\n' +\n      'b24gUkRTIGV1LXdlc3QtMiBSb290IENBIFJTQTQwOTYgRzExEDAOBgNVBAcMB1Nl\\n' +\n      'YXR0bGUwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQC2twMALVg9vRVu\\n' +\n      'VNqsr6N8thmp3Dy8jEGTsm3GCQ+C5P2YcGlD/T/5icfWW84uF7Sx3ezcGlvsqFMf\\n' +\n      'Ukj9sQyqtz7qfFFugyy7pa/eH9f48kWFHLbQYm9GEgbYBIrWMp1cy3vyxuMCwQN4\\n' +\n      'DCncqU+yNpy0CprQJEha3PzY+3yJOjDQtc3zr99lyECCFJTDUucxHzyQvX89eL74\\n' +\n      'uh8la0lKH3v9wPpnEoftbrwmm5jHNFdzj7uXUHUJ41N7af7z7QUfghIRhlBDiKtx\\n' +\n      '5lYZemPCXajTc3ryDKUZC/b+B6ViXZmAeMdmQoPE0jwyEp/uaUcdp+FlUQwCfsBk\\n' +\n      'ayPFEApTWgPiku2isjdeTVmEgL8bJTDUZ6FYFR7ZHcYAsDzcwHgIu3GGEMVRS3Uf\\n' +\n      'ILmioiyly9vcK4Sa01ondARmsi/I0s7pWpKflaekyv5boJKD/xqwz9lGejmJHelf\\n' +\n      '8Od2TyqJScMpB7Q8c2ROxBwqwB72jMCEvYigB+Wnbb8RipliqNflIGx938FRCzKL\\n' +\n      'UQUBmNAznR/yRRL0wHf9UAE/8v9a09uZABeiznzOFAl/frHpgdAbC00LkFlnwwgX\\n' +\n      'g8YfEFlkp4fLx5B7LtoO6uVNFVimLxtwirpyKoj3G4M/kvSTux8bTw0heBCmWmKR\\n' +\n      '57MS6k7ODzbv+Kpeht2hqVZCNFMxoQIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/\\n' +\n      'MB0GA1UdDgQWBBRuMnDhJjoj7DcKALj+HbxEqj3r6jAOBgNVHQ8BAf8EBAMCAYYw\\n' +\n      'DQYJKoZIhvcNAQEMBQADggIBALSnXfx72C3ldhBP5kY4Mo2DDaGQ8FGpTOOiD95d\\n' +\n      '0rf7I9LrsBGVqu/Nir+kqqP80PB70+Jy9fHFFigXwcPBX3MpKGxK8Cel7kVf8t1B\\n' +\n      '4YD6A6bqlzP+OUL0uGWfZpdpDxwMDI2Flt4NEldHgXWPjvN1VblEKs0+kPnKowyg\\n' +\n      'jhRMgBbD/y+8yg0fIcjXUDTAw/+INcp21gWaMukKQr/8HswqC1yoqW9in2ijQkpK\\n' +\n      '2RB9vcQ0/gXR0oJUbZQx0jn0OH8Agt7yfMAnJAdnHO4M3gjvlJLzIC5/4aGrRXZl\\n' +\n      'JoZKfJ2fZRnrFMi0nhAYDeInoS+Rwx+QzaBk6fX5VPyCj8foZ0nmqvuYoydzD8W5\\n' +\n      'mMlycgxFqS+DUmO+liWllQC4/MnVBlHGB1Cu3wTj5kgOvNs/k+FW3GXGzD3+rpv0\\n' +\n      'QTLuwSbMr+MbEThxrSZRSXTCQzKfehyC+WZejgLb+8ylLJUA10e62o7H9PvCrwj+\\n' +\n      'ZDVmN7qj6amzvndCP98sZfX7CFZPLfcBd4wVIjHsFjSNEwWHOiFyLPPG7cdolGKA\\n' +\n      'lOFvonvo4A1uRc13/zFeP0Xi5n5OZ2go8aOOeGYdI2vB2sgH9R2IASH/jHmr0gvY\\n' +\n      '0dfBCcfXNgrS0toq0LX/y+5KkKOxh52vEYsJLdhqrveuZhQnsFEm/mFwjRXkyO7c\\n' +\n      '2jpC\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      '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\\n' +\n      'FEv9Bg==\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIICsDCCAjagAwIBAgIRAMgApnfGYPpK/fD0dbN2U4YwCgYIKoZIzj0EAwMwgZcx\\n' +\n      'CzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMu\\n' +\n      'MRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTEwMC4GA1UEAwwnQW1h\\n' +\n      'em9uIFJEUyBldS1zb3V0aC0xIFJvb3QgQ0EgRUNDMzg0IEcxMRAwDgYDVQQHDAdT\\n' +\n      'ZWF0dGxlMCAXDTIxMDUxOTE4MzgxMVoYDzIxMjEwNTE5MTkzODExWjCBlzELMAkG\\n' +\n      'A1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4xEzAR\\n' +\n      'BgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTAwLgYDVQQDDCdBbWF6b24g\\n' +\n      'UkRTIGV1LXNvdXRoLTEgUm9vdCBDQSBFQ0MzODQgRzExEDAOBgNVBAcMB1NlYXR0\\n' +\n      'bGUwdjAQBgcqhkjOPQIBBgUrgQQAIgNiAAQfEWl6d4qSuIoECdZPp+39LaKsfsX7\\n' +\n      'THs3/RrtT0+h/jl3bjZ7Qc68k16x+HGcHbaayHfqD0LPdzH/kKtNSfQKqemdxDQh\\n' +\n      'Z4pwkixJu8T1VpXZ5zzCvBXCl75UqgEFS92jQjBAMA8GA1UdEwEB/wQFMAMBAf8w\\n' +\n      'HQYDVR0OBBYEFFPrSNtWS5JU+Tvi6ABV231XbjbEMA4GA1UdDwEB/wQEAwIBhjAK\\n' +\n      'BggqhkjOPQQDAwNoADBlAjEA+a7hF1IrNkBd2N/l7IQYAQw8chnRZDzh4wiGsZsC\\n' +\n      '6A83maaKFWUKIb3qZYXFSi02AjAbp3wxH3myAmF8WekDHhKcC2zDvyOiKLkg9Y6v\\n' +\n      'ZVmyMR043dscQbcsVoacOYv198c=\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIICtDCCAjqgAwIBAgIRAPhVkIsQ51JFhD2kjFK5uAkwCgYIKoZIzj0EAwMwgZkx\\n' +\n      'CzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMu\\n' +\n      'MRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTEyMDAGA1UEAwwpQW1h\\n' +\n      'em9uIFJEUyBldS1jZW50cmFsLTIgUm9vdCBDQSBFQ0MzODQgRzExEDAOBgNVBAcM\\n' +\n      'B1NlYXR0bGUwIBcNMjIwNjA2MjEyOTE3WhgPMjEyMjA2MDYyMjI5MTdaMIGZMQsw\\n' +\n      'CQYDVQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjET\\n' +\n      'MBEGA1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExMjAwBgNVBAMMKUFtYXpv\\n' +\n      'biBSRFMgZXUtY2VudHJhbC0yIFJvb3QgQ0EgRUNDMzg0IEcxMRAwDgYDVQQHDAdT\\n' +\n      'ZWF0dGxlMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEA5xnIEBtG5b2nmbj49UEwQza\\n' +\n      'yX0844fXjccYzZ8xCDUe9dS2XOUi0aZlGblgSe/3lwjg8fMcKXLObGGQfgIx1+5h\\n' +\n      'AIBjORis/dlyN5q/yH4U5sjS8tcR0GDGVHrsRUZCo0IwQDAPBgNVHRMBAf8EBTAD\\n' +\n      'AQH/MB0GA1UdDgQWBBRK+lSGutXf4DkTjR3WNfv4+KeNFTAOBgNVHQ8BAf8EBAMC\\n' +\n      'AYYwCgYIKoZIzj0EAwMDaAAwZQIxAJ4NxQ1Gerqr70ZrnUqc62Vl8NNqTzInamCG\\n' +\n      'Kce3FTsMWbS9qkgrjZkO9QqOcGIw/gIwSLrwUT+PKr9+H9eHyGvpq9/3AIYSnFkb\\n' +\n      'Cf3dyWPiLKoAtLFwjzB/CkJlsAS1c8dS\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIF/jCCA+agAwIBAgIQGZH12Q7x41qIh9vDu9ikTjANBgkqhkiG9w0BAQwFADCB\\n' +\n      'lzELMAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIElu\\n' +\n      'Yy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTAwLgYDVQQDDCdB\\n' +\n      'bWF6b24gUkRTIGV1LXdlc3QtMyBSb290IENBIFJTQTQwOTYgRzExEDAOBgNVBAcM\\n' +\n      'B1NlYXR0bGUwIBcNMjEwNTI1MjIyMjMzWhgPMjEyMTA1MjUyMzIyMzNaMIGXMQsw\\n' +\n      'CQYDVQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjET\\n' +\n      'MBEGA1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExMDAuBgNVBAMMJ0FtYXpv\\n' +\n      'biBSRFMgZXUtd2VzdC0zIFJvb3QgQ0EgUlNBNDA5NiBHMTEQMA4GA1UEBwwHU2Vh\\n' +\n      'dHRsZTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAMqE47sHXWzdpuqj\\n' +\n      'JHb+6jM9tDbQLDFnYjDWpq4VpLPZhb7xPNh9gnYYTPKG4avG421EblAHqzy9D2pN\\n' +\n      '1z90yKbIfUb/Sy2MhQbmZomsObhONEra06fJ0Dydyjswf1iYRp2kwpx5AgkVoNo7\\n' +\n      '3dlws73zFjD7ImKvUx2C7B75bhnw2pJWkFnGcswl8fZt9B5Yt95sFOKEz2MSJE91\\n' +\n      'kZlHtya19OUxZ/cSGci4MlOySzqzbGwUqGxEIDlY8I39VMwXaYQ8uXUN4G780VcL\\n' +\n      'u46FeyRGxZGz2n3hMc805WAA1V5uir87vuirTvoSVREET97HVRGVVNJJ/FM6GXr1\\n' +\n      'VKtptybbo81nefYJg9KBysxAa2Ao2x2ry/2ZxwhS6VZ6v1+90bpZA1BIYFEDXXn/\\n' +\n      'dW07HSCFnYSlgPtSc+Muh15mdr94LspYeDqNIierK9i4tB6ep7llJAnq0BU91fM2\\n' +\n      'JPeqyoTtc3m06QhLf68ccSxO4l8Hmq9kLSHO7UXgtdjfRVaffngopTNk8qK7bIb7\\n' +\n      'LrgkqhiQw/PRCZjUdyXL153/fUcsj9nFNe25gM4vcFYwH6c5trd2tUl31NTi1MfG\\n' +\n      'Mgp3d2dqxQBIYANkEjtBDMy3SqQLIo9EymqmVP8xx2A/gCBgaxvMAsI6FSWRoC7+\\n' +\n      'hqJ8XH4mFnXSHKtYMe6WPY+/XZgtAgMBAAGjQjBAMA8GA1UdEwEB/wQFMAMBAf8w\\n' +\n      'HQYDVR0OBBYEFIkXqTnllT/VJnI2NqipA4XV8rh1MA4GA1UdDwEB/wQEAwIBhjAN\\n' +\n      'BgkqhkiG9w0BAQwFAAOCAgEAKjSle8eenGeHgT8pltWCw/HzWyQruVKhfYIBfKJd\\n' +\n      'MhV4EnH5BK7LxBIvpXGsFUrb0ThzSw0fn0zoA9jBs3i/Sj6KyeZ9qUF6b8ycDXd+\\n' +\n      'wHonmJiQ7nk7UuMefaYAfs06vosgl1rI7eBHC0itexIQmKh0aX+821l4GEgEoSMf\\n' +\n      'loMFTLXv2w36fPHHCsZ67ODldgcZbKNnpCTX0YrCwEYO3Pz/L398btiRcWGrewrK\\n' +\n      'jdxAAyietra8DRno1Zl87685tfqc6HsL9v8rVw58clAo9XAQvT+fmSOFw/PogRZ7\\n' +\n      'OMHUat3gu/uQ1M5S64nkLLFsKu7jzudBuoNmcJysPlzIbqJ7vYc82OUGe9ucF3wi\\n' +\n      '3tbKQ983hdJiTExVRBLX/fYjPsGbG3JtPTv89eg2tjWHlPhCDMMxyRKl6isu2RTq\\n' +\n      '6VT489Z2zQrC33MYF8ZqO1NKjtyMAMIZwxVu4cGLkVsqFmEV2ScDHa5RadDyD3Ok\\n' +\n      'm+mqybhvEVm5tPgY6p0ILPMN3yvJsMSPSvuBXhO/X5ppNnpw9gnxpwbjQKNhkFaG\\n' +\n      'M5pkADZ14uRguOLM4VthSwUSEAr5VQYCFZhEwK+UOyJAGiB/nJz6IxL5XBNUXmRM\\n' +\n      'Hl8Xvz4riq48LMQbjcVQj0XvH941yPh+P8xOi00SGaQRaWp55Vyr4YKGbV0mEDz1\\n' +\n      'r1o=\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIF/zCCA+egAwIBAgIRAKwYju1QWxUZpn6D1gOtwgQwDQYJKoZIhvcNAQEMBQAw\\n' +\n      'gZcxCzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJ\\n' +\n      'bmMuMRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTEwMC4GA1UEAwwn\\n' +\n      'QW1hem9uIFJEUyBldS13ZXN0LTEgUm9vdCBDQSBSU0E0MDk2IEcxMRAwDgYDVQQH\\n' +\n      'DAdTZWF0dGxlMCAXDTIxMDUyMDE2NTM1NFoYDzIxMjEwNTIwMTc1MzU0WjCBlzEL\\n' +\n      'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\n      'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTAwLgYDVQQDDCdBbWF6\\n' +\n      'b24gUkRTIGV1LXdlc3QtMSBSb290IENBIFJTQTQwOTYgRzExEDAOBgNVBAcMB1Nl\\n' +\n      'YXR0bGUwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQCKdBP1U4lqWWkc\\n' +\n      'Cb25/BKRTsvNVnISiKocva8GAzJyKfcGRa85gmgu41U+Hz6+39K+XkRfM0YS4BvQ\\n' +\n      'F1XxWT0bNyypuvwCvmYShSTjN1TY0ltncDddahTajE/4MdSOZb/c98u0yt03cH+G\\n' +\n      'hVwRyT50h0v/UEol50VfwcVAEZEgcQQYhf1IFUFlIvKpmDOqLuFakOnc7c9akK+i\\n' +\n      'ivST+JO1tgowbnNkn2iLlSSgUWgb1gjaOsNfysagv1RXdlyPw3EyfwkFifAQvF2P\\n' +\n      'Q0ayYZfYS640cccv7efM1MSVyFHR9PrrDsF/zr2S2sGPbeHr7R/HwLl+S5J/l9N9\\n' +\n      'y0rk6IHAWV4dEkOvgpnuJKURwA48iu1Hhi9e4moNS6eqoK2KmY3VFpuiyWcA73nH\\n' +\n      'GSmyaH+YuMrF7Fnuu7GEHZL/o6+F5cL3mj2SJJhL7sz0ryf5Cs5R4yN9BIEj/f49\\n' +\n      'wh84pM6nexoI0Q4wiSFCxWiBpjSmOK6h7z6+2utaB5p20XDZHhxAlmlx4vMuWtjh\\n' +\n      'XckgRFxc+ZpVMU3cAHUpVEoO49e/+qKEpPzp8Xg4cToKw2+AfTk3cmyyXQfGwXMQ\\n' +\n      'ZUHNZ3w9ILMWihGCM2aGUsLcGDRennvNmnmin/SENsOQ8Ku0/a3teEzwV9cmmdYz\\n' +\n      '5iYs1YtgPvKFobY6+T2RXXh+A5kprwIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/\\n' +\n      'MB0GA1UdDgQWBBSyUrsQVnKmA8z6/2Ech0rCvqpNmTAOBgNVHQ8BAf8EBAMCAYYw\\n' +\n      'DQYJKoZIhvcNAQEMBQADggIBAFlj3IFmgiFz5lvTzFTRizhVofhTJsGr14Yfkuc7\\n' +\n      'UrXPuXOwJomd4uot2d/VIeGJpfnuS84qGdmQyGewGTJ9inatHsGZgHl9NHNWRwKZ\\n' +\n      'lTKTbBiq7aqgtUSFa06v202wpzU+1kadxJJePrbABxiXVfOmIW/a1a4hPNcT3syH\\n' +\n      'FIEg1+CGsp71UNjBuwg3JTKWna0sLSKcxLOSOvX1fzxK5djzVpEsvQMB4PSAzXca\\n' +\n      'vENgg2ErTwgTA+4s6rRtiBF9pAusN1QVuBahYP3ftrY6f3ycS4K65GnqscyfvKt5\\n' +\n      'YgjtEKO3ZeeX8NpubMbzC+0Z6tVKfPFk/9TXuJtwvVeqow0YMrLLyRiYvK7EzJ97\\n' +\n      'rrkxoKnHYQSZ+rH2tZ5SE392/rfk1PJL0cdHnkpDkUDO+8cKsFjjYKAQSNC52sKX\\n' +\n      '74AVh6wMwxYwVZZJf2/2XxkjMWWhKNejsZhUkTISSmiLs+qPe3L67IM7GyKm9/m6\\n' +\n      'R3r8x6NGjhTsKH64iYJg7AeKeax4b2e4hBb6GXFftyOs7unpEOIVkJJgM6gh3mwn\\n' +\n      'R7v4gwFbLKADKt1vHuerSZMiTuNTGhSfCeDM53XI/mjZl2HeuCKP1mCDLlaO+gZR\\n' +\n      'Q/G+E0sBKgEX4xTkAc3kgkuQGfExdGtnN2U2ehF80lBHB8+2y2E+xWWXih/ZyIcW\\n' +\n      'wOx+\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      '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\\n' +\n      '89cEIGdbjsA=\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIEADCCAuigAwIBAgIQYjbPSg4+RNRD3zNxO1fuKDANBgkqhkiG9w0BAQsFADCB\\n' +\n      'mDELMAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIElu\\n' +\n      'Yy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTEwLwYDVQQDDChB\\n' +\n      'bWF6b24gUkRTIGV1LW5vcnRoLTEgUm9vdCBDQSBSU0EyMDQ4IEcxMRAwDgYDVQQH\\n' +\n      'DAdTZWF0dGxlMCAXDTIxMDUyNDIwNTkyMVoYDzIwNjEwNTI0MjE1OTIxWjCBmDEL\\n' +\n      'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\n      'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTEwLwYDVQQDDChBbWF6\\n' +\n      'b24gUkRTIGV1LW5vcnRoLTEgUm9vdCBDQSBSU0EyMDQ4IEcxMRAwDgYDVQQHDAdT\\n' +\n      'ZWF0dGxlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA179eQHxcV0YL\\n' +\n      'XMkqEmhSBazHhnRVd8yICbMq82PitE3BZcnv1Z5Zs/oOgNmMkOKae4tCXO/41JCX\\n' +\n      'wAgbs/eWWi+nnCfpQ/FqbLPg0h3dqzAgeszQyNl9IzTzX4Nd7JFRBVJXPIIKzlRf\\n' +\n      '+GmFsAhi3rYgDgO27pz3ciahVSN+CuACIRYnA0K0s9lhYdddmrW/SYeWyoB7jPa2\\n' +\n      'LmWpAs7bDOgS4LlP2H3eFepBPgNufRytSQUVA8f58lsE5w25vNiUSnrdlvDrIU5n\\n' +\n      'Qwzc7NIZCx4qJpRbSKWrUtbyJriWfAkGU7i0IoainHLn0eHp9bWkwb9D+C/tMk1X\\n' +\n      'ERZw2PDGkwIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBSFmR7s\\n' +\n      'dAblusFN+xhf1ae0KUqhWTAOBgNVHQ8BAf8EBAMCAYYwDQYJKoZIhvcNAQELBQAD\\n' +\n      'ggEBAHsXOpjPMyH9lDhPM61zYdja1ebcMVgfUvsDvt+w0xKMKPhBzYDMs/cFOi1N\\n' +\n      'Q8LV79VNNfI2NuvFmGygcvTIR+4h0pqqZ+wjWl3Kk5jVxCrbHg3RBX02QLumKd/i\\n' +\n      'kwGcEtTUvTssn3SM8bgM0/1BDXgImZPC567ciLvWDo0s/Fe9dJJC3E0G7d/4s09n\\n' +\n      'OMdextcxFuWBZrBm/KK3QF0ByA8MG3//VXaGO9OIeeOJCpWn1G1PjT1UklYhkg61\\n' +\n      'EbsTiZVA2DLd1BGzfU4o4M5mo68l0msse/ndR1nEY6IywwpgIFue7+rEleDh6b9d\\n' +\n      'PYkG1rHVw2I0XDG4o17aOn5E94I=\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIEADCCAuigAwIBAgIQC6W4HFghUkkgyQw14a6JljANBgkqhkiG9w0BAQsFADCB\\n' +\n      'mDELMAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIElu\\n' +\n      'Yy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTEwLwYDVQQDDChB\\n' +\n      'bWF6b24gUkRTIGV1LXNvdXRoLTIgUm9vdCBDQSBSU0EyMDQ4IEcxMRAwDgYDVQQH\\n' +\n      'DAdTZWF0dGxlMCAXDTIyMDUyMzE4MTYzMloYDzIwNjIwNTIzMTkxNjMyWjCBmDEL\\n' +\n      'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\n      'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTEwLwYDVQQDDChBbWF6\\n' +\n      'b24gUkRTIGV1LXNvdXRoLTIgUm9vdCBDQSBSU0EyMDQ4IEcxMRAwDgYDVQQHDAdT\\n' +\n      'ZWF0dGxlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAiM/t4FV2R9Nx\\n' +\n      'UQG203UY83jInTa/6TMq0SPyg617FqYZxvz2kkx09x3dmxepUg9ttGMlPgjsRZM5\\n' +\n      'LCFEi1FWk+hxHzt7vAdhHES5tdjwds3aIkgNEillmRDVrUsbrDwufLaa+MMDO2E1\\n' +\n      'wQ/JYFXw16WBCCi2g1EtyQ2Xp+tZDX5IWOTnvhZpW8vVDptZ2AcJ5rMhfOYO3OsK\\n' +\n      '5EF0GGA5ldzuezP+BkrBYGJ4wVKGxeaq9+5AT8iVZrypjwRkD7Y5CurywK3+aBwm\\n' +\n      's9Q5Nd8t45JCOUzYp92rFKsCriD86n/JnEvgDfdP6Hvtm0/DkwXK40Wz2q0Zrd0k\\n' +\n      'mjP054NRPwIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBRR7yqd\\n' +\n      'SfKcX2Q8GzhcVucReIpewTAOBgNVHQ8BAf8EBAMCAYYwDQYJKoZIhvcNAQELBQAD\\n' +\n      'ggEBAEszBRDwXcZyNm07VcFwI1Im94oKwKccuKYeJEsizTBsVon8VpEiMwDs+yGu\\n' +\n      '3p8kBhvkLwWybkD/vv6McH7T5b9jDX2DoOudqYnnaYeypsPH/00Vh3LvKagqzQza\\n' +\n      'orWLx+0tLo8xW4BtU+Wrn3JId8LvAhxyYXTn9bm+EwPcStp8xGLwu53OPD1RXYuy\\n' +\n      'uu+3ps/2piP7GVfou7H6PRaqbFHNfiGg6Y+WA0HGHiJzn8uLmrRJ5YRdIOOG9/xi\\n' +\n      'qTmAZloUNM7VNuurcMM2hWF494tQpsQ6ysg2qPjbBqzlGoOt3GfBTOZmqmwmqtam\\n' +\n      'K7juWM/mdMQAJ3SMlE5wI8nVdx4=\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIICrjCCAjSgAwIBAgIRAL9SdzVPcpq7GOpvdGoM80IwCgYIKoZIzj0EAwMwgZYx\\n' +\n      'CzAJBgNVBAYTAlVTMSIwIAYDVQQKDBlBbWF6b24gV2ViIFNlcnZpY2VzLCBJbmMu\\n' +\n      'MRMwEQYDVQQLDApBbWF6b24gUkRTMQswCQYDVQQIDAJXQTEvMC0GA1UEAwwmQW1h\\n' +\n      'em9uIFJEUyBldS13ZXN0LTEgUm9vdCBDQSBFQ0MzODQgRzExEDAOBgNVBAcMB1Nl\\n' +\n      'YXR0bGUwIBcNMjEwNTIwMTY1ODA3WhgPMjEyMTA1MjAxNzU4MDdaMIGWMQswCQYD\\n' +\n      'VQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjETMBEG\\n' +\n      'A1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExLzAtBgNVBAMMJkFtYXpvbiBS\\n' +\n      'RFMgZXUtd2VzdC0xIFJvb3QgQ0EgRUNDMzg0IEcxMRAwDgYDVQQHDAdTZWF0dGxl\\n' +\n      'MHYwEAYHKoZIzj0CAQYFK4EEACIDYgAEJWDgXebvwjR+Ce+hxKOLbnsfN5W5dOlP\\n' +\n      'Zn8kwWnD+SLkU81Eac/BDJsXGrMk6jFD1vg16PEkoSevsuYWlC8xR6FmT6F6pmeh\\n' +\n      'fsMGOyJpfK4fyoEPhKeQoT23lFIc5Orjo0IwQDAPBgNVHRMBAf8EBTADAQH/MB0G\\n' +\n      'A1UdDgQWBBSVNAN1CHAz0eZ77qz2adeqjm31TzAOBgNVHQ8BAf8EBAMCAYYwCgYI\\n' +\n      'KoZIzj0EAwMDaAAwZQIxAMlQeHbcjor49jqmcJ9gRLWdEWpXG8thIf6zfYQ/OEAg\\n' +\n      'd7GDh4fR/OUk0VfjsBUN/gIwZB0bGdXvK38s6AAE/9IT051cz/wMe9GIrX1MnL1T\\n' +\n      '1F5OqnXJdiwfZRRTHsRQ/L00\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      '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\\n' +\n      '1YfpdH2jp30=\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIID/jCCAuagAwIBAgIQTDc+UgTRtYO7ZGTQ8UWKDDANBgkqhkiG9w0BAQsFADCB\\n' +\n      'lzELMAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIElu\\n' +\n      'Yy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTAwLgYDVQQDDCdB\\n' +\n      'bWF6b24gUkRTIGV1LXdlc3QtMiBSb290IENBIFJTQTIwNDggRzExEDAOBgNVBAcM\\n' +\n      'B1NlYXR0bGUwIBcNMjEwNTIxMjI0NjI0WhgPMjA2MTA1MjEyMzQ2MjRaMIGXMQsw\\n' +\n      'CQYDVQQGEwJVUzEiMCAGA1UECgwZQW1hem9uIFdlYiBTZXJ2aWNlcywgSW5jLjET\\n' +\n      'MBEGA1UECwwKQW1hem9uIFJEUzELMAkGA1UECAwCV0ExMDAuBgNVBAMMJ0FtYXpv\\n' +\n      'biBSRFMgZXUtd2VzdC0yIFJvb3QgQ0EgUlNBMjA0OCBHMTEQMA4GA1UEBwwHU2Vh\\n' +\n      'dHRsZTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAM1oGtthQ1YiVIC2\\n' +\n      'i4u4swMAGxAjc/BZp0yq0eP5ZQFaxnxs7zFAPabEWsrjeDzrRhdVO0h7zskrertP\\n' +\n      'gblGhfD20JfjvCHdP1RUhy/nzG+T+hn6Takan/GIgs8grlBMRHMgBYHW7tklhjaH\\n' +\n      '3F7LujhceAHhhgp6IOrpb6YTaTTaJbF3GTmkqxSJ3l1LtEoWz8Al/nL/Ftzxrtez\\n' +\n      'Vs6ebpvd7sw37sxmXBWX2OlvUrPCTmladw9OrllGXtCFw4YyLe3zozBlZ3cHzQ0q\\n' +\n      'lINhpRcajTMfZrsiGCkQtoJT+AqVJPS2sHjqsEH8yiySW9Jbq4zyMbM1yqQ2vnnx\\n' +\n      'MJgoYMcCAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUaQG88UnV\\n' +\n      'JPTI+Pcti1P+q3H7pGYwDgYDVR0PAQH/BAQDAgGGMA0GCSqGSIb3DQEBCwUAA4IB\\n' +\n      'AQBAkgr75V0sEJimC6QRiTVWEuj2Khy7unjSfudbM6zumhXEU2/sUaVLiYy6cA/x\\n' +\n      '3v0laDle6T07x9g64j5YastE/4jbzrGgIINFlY0JnaYmR3KZEjgi1s1fkRRf3llL\\n' +\n      'PJm9u4Q1mbwAMQK/ZjLuuRcL3uRIHJek18nRqT5h43GB26qXyvJqeYYpYfIjL9+/\\n' +\n      'YiZAbSRRZG+Li23cmPWrbA1CJY121SB+WybCbysbOXzhD3Sl2KSZRwSw4p2HrFtV\\n' +\n      '1Prk0dOBtZxCG9luf87ultuDZpfS0w6oNBAMXocgswk24ylcADkkFxBWW+7BETn1\\n' +\n      'EpK+t1Lm37mU4sxtuha00XAi\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      'MIIEADCCAuigAwIBAgIQcY44/8NUvBwr6LlHfRy7KjANBgkqhkiG9w0BAQsFADCB\\n' +\n      'mDELMAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIElu\\n' +\n      'Yy4xEzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTEwLwYDVQQDDChB\\n' +\n      'bWF6b24gUkRTIGV1LXNvdXRoLTEgUm9vdCBDQSBSU0EyMDQ4IEcxMRAwDgYDVQQH\\n' +\n      'DAdTZWF0dGxlMCAXDTIxMDUxOTE4MjcxOFoYDzIwNjEwNTE5MTkyNzE4WjCBmDEL\\n' +\n      'MAkGA1UEBhMCVVMxIjAgBgNVBAoMGUFtYXpvbiBXZWIgU2VydmljZXMsIEluYy4x\\n' +\n      'EzARBgNVBAsMCkFtYXpvbiBSRFMxCzAJBgNVBAgMAldBMTEwLwYDVQQDDChBbWF6\\n' +\n      'b24gUkRTIGV1LXNvdXRoLTEgUm9vdCBDQSBSU0EyMDQ4IEcxMRAwDgYDVQQHDAdT\\n' +\n      'ZWF0dGxlMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA0UaBeC+Usalu\\n' +\n      'EtXnV7+PnH+gi7/71tI/jkKVGKuhD2JDVvqLVoqbMHRh3+wGMvqKCjbHPcC2XMWv\\n' +\n      '566fpAj4UZ9CLB5fVzss+QVNTl+FH2XhEzigopp+872ajsNzcZxrMkifxGb4i0U+\\n' +\n      't0Zi+UrbL5tsfP2JonKR1crOrbS6/DlzHBjIiJazGOQcMsJjNuTOItLbMohLpraA\\n' +\n      '/nApa3kOvI7Ufool1/34MG0+wL3UUA4YkZ6oBJVxjZvvs6tI7Lzz/SnhK2widGdc\\n' +\n      'snbLqBpHNIZQSorVoiwcFaRBGYX/uzYkiw44Yfa4cK2V/B5zgu1Fbr0gbI2am4eh\\n' +\n      'yVYyg4jPawIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBS9gM1m\\n' +\n      'IIjyh9O5H/7Vj0R/akI7UzAOBgNVHQ8BAf8EBAMCAYYwDQYJKoZIhvcNAQELBQAD\\n' +\n      'ggEBAF0Sm9HC2AUyedBVnwgkVXMibnYChOzz7T+0Y+fOLXYAEXex2s8oqGeZdGYX\\n' +\n      'JHkjBn7JXu7LM+TpTbPbFFDoc1sgMguD/ls+8XsqAl1CssW+amryIL+jfcfbgQ+P\\n' +\n      'ICwEUD9hGdjBgJ5WcuS+qqxHsEIlFNci3HxcxfBa9VsWs5TjI7Vsl4meL5lf7ZyL\\n' +\n      'wDV7dHRuU+cImqG1MIvPRIlvPnT7EghrCYi2VCPhP2pM/UvShuwVnkz4MJ29ebIk\\n' +\n      'WR9kpblFxFdE92D5UUvMCjC2kmtgzNiErvTcwIvOO9YCbBHzRB1fFiWrXUHhJWq9\\n' +\n      'IkaxR5icb/IpAV0A1lYZEWMVsfQ=\\n' +\n      '-----END CERTIFICATE-----\\n',\n    '-----BEGIN CERTIFICATE-----\\n' +\n      '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\\n' +\n      'rM2p0kk=\\n' +\n      '-----END CERTIFICATE-----\\n'\n  ]\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/constants/ssl_profiles.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/constants/types.js":
/*!****************************************************!*\
  !*** ./node_modules/mysql2/lib/constants/types.js ***!
  \****************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = {\n  0x00: 'DECIMAL', // aka DECIMAL \n  0x01: 'TINY', // aka TINYINT, 1 byte\n  0x02: 'SHORT', // aka SMALLINT, 2 bytes\n  0x03: 'LONG', // aka INT, 4 bytes\n  0x04: 'FLOAT', // aka FLOAT, 4-8 bytes\n  0x05: 'DOUBLE', // aka DOUBLE, 8 bytes\n  0x06: 'NULL', // NULL (used for prepared statements, I think)\n  0x07: 'TIMESTAMP', // aka TIMESTAMP\n  0x08: 'LONGLONG', // aka BIGINT, 8 bytes\n  0x09: 'INT24', // aka MEDIUMINT, 3 bytes\n  0x0a: 'DATE', // aka DATE\n  0x0b: 'TIME', // aka TIME\n  0x0c: 'DATETIME', // aka DATETIME\n  0x0d: 'YEAR', // aka YEAR, 1 byte (don't ask)\n  0x0e: 'NEWDATE', // aka ?\n  0x0f: 'VARCHAR', // aka VARCHAR (?)\n  0x10: 'BIT', // aka BIT, 1-8 byte\n  0xf5: 'JSON',\n  0xf6: 'NEWDECIMAL', // aka DECIMAL\n  0xf7: 'ENUM', // aka ENUM\n  0xf8: 'SET', // aka SET\n  0xf9: 'TINY_BLOB', // aka TINYBLOB, TINYTEXT\n  0xfa: 'MEDIUM_BLOB', // aka MEDIUMBLOB, MEDIUMTEXT\n  0xfb: 'LONG_BLOB', // aka LONGBLOG, LONGTEXT\n  0xfc: 'BLOB', // aka BLOB, TEXT\n  0xfd: 'VAR_STRING', // aka VARCHAR, VARBINARY\n  0xfe: 'STRING', // aka CHAR, BINARY\n  0xff: 'GEOMETRY' // aka GEOMETRY\n};\n\n\n// Manually extracted from mysql-5.5.23/include/mysql_com.h\n// some more info here: http://dev.mysql.com/doc/refman/5.5/en/c-api-prepared-statement-type-codes.html\nmodule.exports.DECIMAL = 0x00; // aka DECIMAL (http://dev.mysql.com/doc/refman/5.0/en/precision-math-decimal-changes.html)\nmodule.exports.TINY = 0x01; // aka TINYINT, 1 byte\nmodule.exports.SHORT = 0x02; // aka SMALLINT, 2 bytes\nmodule.exports.LONG = 0x03; // aka INT, 4 bytes\nmodule.exports.FLOAT = 0x04; // aka FLOAT, 4-8 bytes\nmodule.exports.DOUBLE = 0x05; // aka DOUBLE, 8 bytes\nmodule.exports.NULL = 0x06; // NULL (used for prepared statements, I think)\nmodule.exports.TIMESTAMP = 0x07; // aka TIMESTAMP\nmodule.exports.LONGLONG = 0x08; // aka BIGINT, 8 bytes\nmodule.exports.INT24 = 0x09; // aka MEDIUMINT, 3 bytes\nmodule.exports.DATE = 0x0a; // aka DATE\nmodule.exports.TIME = 0x0b; // aka TIME\nmodule.exports.DATETIME = 0x0c; // aka DATETIME\nmodule.exports.YEAR = 0x0d; // aka YEAR, 1 byte (don't ask)\nmodule.exports.NEWDATE = 0x0e; // aka ?\nmodule.exports.VARCHAR = 0x0f; // aka VARCHAR (?)\nmodule.exports.BIT = 0x10; // aka BIT, 1-8 byte\nmodule.exports.JSON = 0xf5;\nmodule.exports.NEWDECIMAL = 0xf6; // aka DECIMAL\nmodule.exports.ENUM = 0xf7; // aka ENUM\nmodule.exports.SET = 0xf8; // aka SET\nmodule.exports.TINY_BLOB = 0xf9; // aka TINYBLOB, TINYTEXT\nmodule.exports.MEDIUM_BLOB = 0xfa; // aka MEDIUMBLOB, MEDIUMTEXT\nmodule.exports.LONG_BLOB = 0xfb; // aka LONGBLOG, LONGTEXT\nmodule.exports.BLOB = 0xfc; // aka BLOB, TEXT\nmodule.exports.VAR_STRING = 0xfd; // aka VARCHAR, VARBINARY\nmodule.exports.STRING = 0xfe; // aka CHAR, BINARY\nmodule.exports.GEOMETRY = 0xff; // aka GEOMETRY\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb25zdGFudHMvdHlwZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0Esc0JBQXNCLFNBQVM7QUFDL0IsbUJBQW1CLFNBQVM7QUFDNUIsb0JBQW9CLFNBQVM7QUFDN0IsbUJBQW1CLFNBQVM7QUFDNUIsb0JBQW9CLFNBQVM7QUFDN0IscUJBQXFCLFNBQVM7QUFDOUIsbUJBQW1CLFNBQVM7QUFDNUIsd0JBQXdCLFNBQVM7QUFDakMsdUJBQXVCLFNBQVM7QUFDaEMsb0JBQW9CLFNBQVM7QUFDN0IsbUJBQW1CLFNBQVM7QUFDNUIsbUJBQW1CLFNBQVM7QUFDNUIsdUJBQXVCLFNBQVM7QUFDaEMsbUJBQW1CLFNBQVM7QUFDNUIsc0JBQXNCLFNBQVM7QUFDL0Isc0JBQXNCLFNBQVM7QUFDL0Isa0JBQWtCLFNBQVM7QUFDM0IsbUJBQW1CO0FBQ25CLHlCQUF5QixTQUFTO0FBQ2xDLG1CQUFtQixTQUFTO0FBQzVCLGtCQUFrQixTQUFTO0FBQzNCLHdCQUF3QixTQUFTO0FBQ2pDLDBCQUEwQixTQUFTO0FBQ25DLHdCQUF3QixTQUFTO0FBQ2pDLG1CQUFtQixTQUFTO0FBQzVCLHlCQUF5QixTQUFTO0FBQ2xDLHFCQUFxQixTQUFTO0FBQzlCLHVCQUF1QixTQUFTIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVhbF9lc3RhdGUvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9jb25zdGFudHMvdHlwZXMuanM/ZGNjMCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAweDAwOiAnREVDSU1BTCcsIC8vIGFrYSBERUNJTUFMIFxuICAweDAxOiAnVElOWScsIC8vIGFrYSBUSU5ZSU5ULCAxIGJ5dGVcbiAgMHgwMjogJ1NIT1JUJywgLy8gYWthIFNNQUxMSU5ULCAyIGJ5dGVzXG4gIDB4MDM6ICdMT05HJywgLy8gYWthIElOVCwgNCBieXRlc1xuICAweDA0OiAnRkxPQVQnLCAvLyBha2EgRkxPQVQsIDQtOCBieXRlc1xuICAweDA1OiAnRE9VQkxFJywgLy8gYWthIERPVUJMRSwgOCBieXRlc1xuICAweDA2OiAnTlVMTCcsIC8vIE5VTEwgKHVzZWQgZm9yIHByZXBhcmVkIHN0YXRlbWVudHMsIEkgdGhpbmspXG4gIDB4MDc6ICdUSU1FU1RBTVAnLCAvLyBha2EgVElNRVNUQU1QXG4gIDB4MDg6ICdMT05HTE9ORycsIC8vIGFrYSBCSUdJTlQsIDggYnl0ZXNcbiAgMHgwOTogJ0lOVDI0JywgLy8gYWthIE1FRElVTUlOVCwgMyBieXRlc1xuICAweDBhOiAnREFURScsIC8vIGFrYSBEQVRFXG4gIDB4MGI6ICdUSU1FJywgLy8gYWthIFRJTUVcbiAgMHgwYzogJ0RBVEVUSU1FJywgLy8gYWthIERBVEVUSU1FXG4gIDB4MGQ6ICdZRUFSJywgLy8gYWthIFlFQVIsIDEgYnl0ZSAoZG9uJ3QgYXNrKVxuICAweDBlOiAnTkVXREFURScsIC8vIGFrYSA/XG4gIDB4MGY6ICdWQVJDSEFSJywgLy8gYWthIFZBUkNIQVIgKD8pXG4gIDB4MTA6ICdCSVQnLCAvLyBha2EgQklULCAxLTggYnl0ZVxuICAweGY1OiAnSlNPTicsXG4gIDB4ZjY6ICdORVdERUNJTUFMJywgLy8gYWthIERFQ0lNQUxcbiAgMHhmNzogJ0VOVU0nLCAvLyBha2EgRU5VTVxuICAweGY4OiAnU0VUJywgLy8gYWthIFNFVFxuICAweGY5OiAnVElOWV9CTE9CJywgLy8gYWthIFRJTllCTE9CLCBUSU5ZVEVYVFxuICAweGZhOiAnTUVESVVNX0JMT0InLCAvLyBha2EgTUVESVVNQkxPQiwgTUVESVVNVEVYVFxuICAweGZiOiAnTE9OR19CTE9CJywgLy8gYWthIExPTkdCTE9HLCBMT05HVEVYVFxuICAweGZjOiAnQkxPQicsIC8vIGFrYSBCTE9CLCBURVhUXG4gIDB4ZmQ6ICdWQVJfU1RSSU5HJywgLy8gYWthIFZBUkNIQVIsIFZBUkJJTkFSWVxuICAweGZlOiAnU1RSSU5HJywgLy8gYWthIENIQVIsIEJJTkFSWVxuICAweGZmOiAnR0VPTUVUUlknIC8vIGFrYSBHRU9NRVRSWVxufTtcblxuXG4vLyBNYW51YWxseSBleHRyYWN0ZWQgZnJvbSBteXNxbC01LjUuMjMvaW5jbHVkZS9teXNxbF9jb20uaFxuLy8gc29tZSBtb3JlIGluZm8gaGVyZTogaHR0cDovL2Rldi5teXNxbC5jb20vZG9jL3JlZm1hbi81LjUvZW4vYy1hcGktcHJlcGFyZWQtc3RhdGVtZW50LXR5cGUtY29kZXMuaHRtbFxubW9kdWxlLmV4cG9ydHMuREVDSU1BTCA9IDB4MDA7IC8vIGFrYSBERUNJTUFMIChodHRwOi8vZGV2Lm15c3FsLmNvbS9kb2MvcmVmbWFuLzUuMC9lbi9wcmVjaXNpb24tbWF0aC1kZWNpbWFsLWNoYW5nZXMuaHRtbClcbm1vZHVsZS5leHBvcnRzLlRJTlkgPSAweDAxOyAvLyBha2EgVElOWUlOVCwgMSBieXRlXG5tb2R1bGUuZXhwb3J0cy5TSE9SVCA9IDB4MDI7IC8vIGFrYSBTTUFMTElOVCwgMiBieXRlc1xubW9kdWxlLmV4cG9ydHMuTE9ORyA9IDB4MDM7IC8vIGFrYSBJTlQsIDQgYnl0ZXNcbm1vZHVsZS5leHBvcnRzLkZMT0FUID0gMHgwNDsgLy8gYWthIEZMT0FULCA0LTggYnl0ZXNcbm1vZHVsZS5leHBvcnRzLkRPVUJMRSA9IDB4MDU7IC8vIGFrYSBET1VCTEUsIDggYnl0ZXNcbm1vZHVsZS5leHBvcnRzLk5VTEwgPSAweDA2OyAvLyBOVUxMICh1c2VkIGZvciBwcmVwYXJlZCBzdGF0ZW1lbnRzLCBJIHRoaW5rKVxubW9kdWxlLmV4cG9ydHMuVElNRVNUQU1QID0gMHgwNzsgLy8gYWthIFRJTUVTVEFNUFxubW9kdWxlLmV4cG9ydHMuTE9OR0xPTkcgPSAweDA4OyAvLyBha2EgQklHSU5ULCA4IGJ5dGVzXG5tb2R1bGUuZXhwb3J0cy5JTlQyNCA9IDB4MDk7IC8vIGFrYSBNRURJVU1JTlQsIDMgYnl0ZXNcbm1vZHVsZS5leHBvcnRzLkRBVEUgPSAweDBhOyAvLyBha2EgREFURVxubW9kdWxlLmV4cG9ydHMuVElNRSA9IDB4MGI7IC8vIGFrYSBUSU1FXG5tb2R1bGUuZXhwb3J0cy5EQVRFVElNRSA9IDB4MGM7IC8vIGFrYSBEQVRFVElNRVxubW9kdWxlLmV4cG9ydHMuWUVBUiA9IDB4MGQ7IC8vIGFrYSBZRUFSLCAxIGJ5dGUgKGRvbid0IGFzaylcbm1vZHVsZS5leHBvcnRzLk5FV0RBVEUgPSAweDBlOyAvLyBha2EgP1xubW9kdWxlLmV4cG9ydHMuVkFSQ0hBUiA9IDB4MGY7IC8vIGFrYSBWQVJDSEFSICg/KVxubW9kdWxlLmV4cG9ydHMuQklUID0gMHgxMDsgLy8gYWthIEJJVCwgMS04IGJ5dGVcbm1vZHVsZS5leHBvcnRzLkpTT04gPSAweGY1O1xubW9kdWxlLmV4cG9ydHMuTkVXREVDSU1BTCA9IDB4ZjY7IC8vIGFrYSBERUNJTUFMXG5tb2R1bGUuZXhwb3J0cy5FTlVNID0gMHhmNzsgLy8gYWthIEVOVU1cbm1vZHVsZS5leHBvcnRzLlNFVCA9IDB4Zjg7IC8vIGFrYSBTRVRcbm1vZHVsZS5leHBvcnRzLlRJTllfQkxPQiA9IDB4Zjk7IC8vIGFrYSBUSU5ZQkxPQiwgVElOWVRFWFRcbm1vZHVsZS5leHBvcnRzLk1FRElVTV9CTE9CID0gMHhmYTsgLy8gYWthIE1FRElVTUJMT0IsIE1FRElVTVRFWFRcbm1vZHVsZS5leHBvcnRzLkxPTkdfQkxPQiA9IDB4ZmI7IC8vIGFrYSBMT05HQkxPRywgTE9OR1RFWFRcbm1vZHVsZS5leHBvcnRzLkJMT0IgPSAweGZjOyAvLyBha2EgQkxPQiwgVEVYVFxubW9kdWxlLmV4cG9ydHMuVkFSX1NUUklORyA9IDB4ZmQ7IC8vIGFrYSBWQVJDSEFSLCBWQVJCSU5BUllcbm1vZHVsZS5leHBvcnRzLlNUUklORyA9IDB4ZmU7IC8vIGFrYSBDSEFSLCBCSU5BUllcbm1vZHVsZS5leHBvcnRzLkdFT01FVFJZID0gMHhmZjsgLy8gYWthIEdFT01FVFJZXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/constants/types.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/helpers.js":
/*!********************************************!*\
  !*** ./node_modules/mysql2/lib/helpers.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\n/*\n\n  this seems to be not only shorter, but faster than\n  string.replace(/\\\\/g, '\\\\\\\\').\n            replace(/\\u0008/g, '\\\\b').\n            replace(/\\t/g, '\\\\t').\n            replace(/\\n/g, '\\\\n').\n            replace(/\\f/g, '\\\\f').\n            replace(/\\r/g, '\\\\r').\n            replace(/'/g, '\\\\\\'').\n            replace(/\"/g, '\\\\\"');\n  or string.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\")\n  see http://jsperf.com/string-escape-regexp-vs-json-stringify\n  */\nfunction srcEscape(str) {\n  return JSON.stringify({\n    [str]: 1,\n  }).slice(1, -3);\n}\n\nexports.srcEscape = srcEscape;\n\nlet highlightFn;\nlet cardinalRecommended = false;\ntry {\n  // the purpose of this is to prevent projects using Webpack from displaying a warning during runtime if cardinal is not a dependency\n  const REQUIRE_TERMINATOR = '';\n  highlightFn = __webpack_require__(\"(rsc)/./node_modules/mysql2/lib sync recursive ^cardinal.*$\")(`cardinal${REQUIRE_TERMINATOR}`).highlight;\n} catch (err) {\n  highlightFn = (text) => {\n    if (!cardinalRecommended) {\n      // eslint-disable-next-line no-console\n      console.log('For nicer debug output consider install cardinal@^2.0.0');\n      cardinalRecommended = true;\n    }\n    return text;\n  };\n}\n\n/**\n * Prints debug message with code frame, will try to use `cardinal` if available.\n */\nfunction printDebugWithCode(msg, code) {\n  // eslint-disable-next-line no-console\n  console.log(`\\n\\n${msg}:\\n`);\n  // eslint-disable-next-line no-console\n  console.log(`${highlightFn(code)}\\n`);\n}\n\nexports.printDebugWithCode = printDebugWithCode;\n\n/**\n * checks whether the `type` is in the `list`\n */\nfunction typeMatch(type, list, Types) {\n  if (Array.isArray(list)) {\n    return list.some((t) => type === Types[t]);\n  }\n\n  return !!list;\n}\n\nexports.typeMatch = typeMatch;\n\nconst privateObjectProps = new Set([\n  '__defineGetter__',\n  '__defineSetter__',\n  '__lookupGetter__',\n  '__lookupSetter__',\n  '__proto__',\n]);\n\nexports.privateObjectProps = privateObjectProps;\n\nconst fieldEscape = (field) => {\n  if (privateObjectProps.has(field)) {\n    throw new Error(\n      `The field name (${field}) can't be the same as an object's private property.`,\n    );\n  }\n\n  return srcEscape(field);\n};\n\nexports.fieldEscape = fieldEscape;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9oZWxwZXJzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyxFQUFFO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUEsaUJBQWlCOztBQUVqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLG1GQUFRLFNBQVMsRUFBRSxtQkFBbUIsQ0FBQyxDQUFDO0FBQ3hELEVBQUU7QUFDRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixJQUFJO0FBQ3pCO0FBQ0EsaUJBQWlCLGtCQUFrQjtBQUNuQzs7QUFFQSwwQkFBMEI7O0FBRTFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsaUJBQWlCOztBQUVqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSwwQkFBMEI7O0FBRTFCO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixNQUFNO0FBQy9CO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSxtQkFBbUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZWFsX2VzdGF0ZS8uL25vZGVfbW9kdWxlcy9teXNxbDIvbGliL2hlbHBlcnMuanM/Mzk2MSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8qXG5cbiAgdGhpcyBzZWVtcyB0byBiZSBub3Qgb25seSBzaG9ydGVyLCBidXQgZmFzdGVyIHRoYW5cbiAgc3RyaW5nLnJlcGxhY2UoL1xcXFwvZywgJ1xcXFxcXFxcJykuXG4gICAgICAgICAgICByZXBsYWNlKC9cXHUwMDA4L2csICdcXFxcYicpLlxuICAgICAgICAgICAgcmVwbGFjZSgvXFx0L2csICdcXFxcdCcpLlxuICAgICAgICAgICAgcmVwbGFjZSgvXFxuL2csICdcXFxcbicpLlxuICAgICAgICAgICAgcmVwbGFjZSgvXFxmL2csICdcXFxcZicpLlxuICAgICAgICAgICAgcmVwbGFjZSgvXFxyL2csICdcXFxccicpLlxuICAgICAgICAgICAgcmVwbGFjZSgvJy9nLCAnXFxcXFxcJycpLlxuICAgICAgICAgICAgcmVwbGFjZSgvXCIvZywgJ1xcXFxcIicpO1xuICBvciBzdHJpbmcucmVwbGFjZSgvW1xcLVxcW1xcXVxcL1xce1xcfVxcKFxcKVxcKlxcK1xcP1xcLlxcXFxcXF5cXCRcXHxdL2csIFwiXFxcXCQmXCIpXG4gIHNlZSBodHRwOi8vanNwZXJmLmNvbS9zdHJpbmctZXNjYXBlLXJlZ2V4cC12cy1qc29uLXN0cmluZ2lmeVxuICAqL1xuZnVuY3Rpb24gc3JjRXNjYXBlKHN0cikge1xuICByZXR1cm4gSlNPTi5zdHJpbmdpZnkoe1xuICAgIFtzdHJdOiAxLFxuICB9KS5zbGljZSgxLCAtMyk7XG59XG5cbmV4cG9ydHMuc3JjRXNjYXBlID0gc3JjRXNjYXBlO1xuXG5sZXQgaGlnaGxpZ2h0Rm47XG5sZXQgY2FyZGluYWxSZWNvbW1lbmRlZCA9IGZhbHNlO1xudHJ5IHtcbiAgLy8gdGhlIHB1cnBvc2Ugb2YgdGhpcyBpcyB0byBwcmV2ZW50IHByb2plY3RzIHVzaW5nIFdlYnBhY2sgZnJvbSBkaXNwbGF5aW5nIGEgd2FybmluZyBkdXJpbmcgcnVudGltZSBpZiBjYXJkaW5hbCBpcyBub3QgYSBkZXBlbmRlbmN5XG4gIGNvbnN0IFJFUVVJUkVfVEVSTUlOQVRPUiA9ICcnO1xuICBoaWdobGlnaHRGbiA9IHJlcXVpcmUoYGNhcmRpbmFsJHtSRVFVSVJFX1RFUk1JTkFUT1J9YCkuaGlnaGxpZ2h0O1xufSBjYXRjaCAoZXJyKSB7XG4gIGhpZ2hsaWdodEZuID0gKHRleHQpID0+IHtcbiAgICBpZiAoIWNhcmRpbmFsUmVjb21tZW5kZWQpIHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgICBjb25zb2xlLmxvZygnRm9yIG5pY2VyIGRlYnVnIG91dHB1dCBjb25zaWRlciBpbnN0YWxsIGNhcmRpbmFsQF4yLjAuMCcpO1xuICAgICAgY2FyZGluYWxSZWNvbW1lbmRlZCA9IHRydWU7XG4gICAgfVxuICAgIHJldHVybiB0ZXh0O1xuICB9O1xufVxuXG4vKipcbiAqIFByaW50cyBkZWJ1ZyBtZXNzYWdlIHdpdGggY29kZSBmcmFtZSwgd2lsbCB0cnkgdG8gdXNlIGBjYXJkaW5hbGAgaWYgYXZhaWxhYmxlLlxuICovXG5mdW5jdGlvbiBwcmludERlYnVnV2l0aENvZGUobXNnLCBjb2RlKSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gIGNvbnNvbGUubG9nKGBcXG5cXG4ke21zZ306XFxuYCk7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gIGNvbnNvbGUubG9nKGAke2hpZ2hsaWdodEZuKGNvZGUpfVxcbmApO1xufVxuXG5leHBvcnRzLnByaW50RGVidWdXaXRoQ29kZSA9IHByaW50RGVidWdXaXRoQ29kZTtcblxuLyoqXG4gKiBjaGVja3Mgd2hldGhlciB0aGUgYHR5cGVgIGlzIGluIHRoZSBgbGlzdGBcbiAqL1xuZnVuY3Rpb24gdHlwZU1hdGNoKHR5cGUsIGxpc3QsIFR5cGVzKSB7XG4gIGlmIChBcnJheS5pc0FycmF5KGxpc3QpKSB7XG4gICAgcmV0dXJuIGxpc3Quc29tZSgodCkgPT4gdHlwZSA9PT0gVHlwZXNbdF0pO1xuICB9XG5cbiAgcmV0dXJuICEhbGlzdDtcbn1cblxuZXhwb3J0cy50eXBlTWF0Y2ggPSB0eXBlTWF0Y2g7XG5cbmNvbnN0IHByaXZhdGVPYmplY3RQcm9wcyA9IG5ldyBTZXQoW1xuICAnX19kZWZpbmVHZXR0ZXJfXycsXG4gICdfX2RlZmluZVNldHRlcl9fJyxcbiAgJ19fbG9va3VwR2V0dGVyX18nLFxuICAnX19sb29rdXBTZXR0ZXJfXycsXG4gICdfX3Byb3RvX18nLFxuXSk7XG5cbmV4cG9ydHMucHJpdmF0ZU9iamVjdFByb3BzID0gcHJpdmF0ZU9iamVjdFByb3BzO1xuXG5jb25zdCBmaWVsZEVzY2FwZSA9IChmaWVsZCkgPT4ge1xuICBpZiAocHJpdmF0ZU9iamVjdFByb3BzLmhhcyhmaWVsZCkpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICBgVGhlIGZpZWxkIG5hbWUgKCR7ZmllbGR9KSBjYW4ndCBiZSB0aGUgc2FtZSBhcyBhbiBvYmplY3QncyBwcml2YXRlIHByb3BlcnR5LmAsXG4gICAgKTtcbiAgfVxuXG4gIHJldHVybiBzcmNFc2NhcGUoZmllbGQpO1xufTtcblxuZXhwb3J0cy5maWVsZEVzY2FwZSA9IGZpZWxkRXNjYXBlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/helpers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/packet_parser.js":
/*!**************************************************!*\
  !*** ./node_modules/mysql2/lib/packet_parser.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst Packet = __webpack_require__(/*! ./packets/packet.js */ \"(rsc)/./node_modules/mysql2/lib/packets/packet.js\");\n\nconst MAX_PACKET_LENGTH = 16777215;\n\nfunction readPacketLength(b, off) {\n  const b0 = b[off];\n  const b1 = b[off + 1];\n  const b2 = b[off + 2];\n  if (b1 + b2 === 0) {\n    return b0;\n  }\n  return b0 + (b1 << 8) + (b2 << 16);\n}\n\nclass PacketParser {\n  constructor(onPacket, packetHeaderLength) {\n    // 4 for normal packets, 7 for comprssed protocol packets\n    if (typeof packetHeaderLength === 'undefined') {\n      packetHeaderLength = 4;\n    }\n    // array of last payload chunks\n    // only used when current payload is not complete\n    this.buffer = [];\n    // total length of chunks on buffer\n    this.bufferLength = 0;\n    this.packetHeaderLength = packetHeaderLength;\n    // incomplete header state: number of header bytes received\n    this.headerLen = 0;\n    // expected payload length\n    this.length = 0;\n    this.largePacketParts = [];\n    this.firstPacketSequenceId = 0;\n    this.onPacket = onPacket;\n    this.execute = PacketParser.prototype.executeStart;\n    this._flushLargePacket =\n      packetHeaderLength === 7\n        ? this._flushLargePacket7\n        : this._flushLargePacket4;\n  }\n\n  _flushLargePacket4() {\n    const numPackets = this.largePacketParts.length;\n    this.largePacketParts.unshift(Buffer.from([0, 0, 0, 0])); // insert header\n    const body = Buffer.concat(this.largePacketParts);\n    const packet = new Packet(this.firstPacketSequenceId, body, 0, body.length);\n    this.largePacketParts.length = 0;\n    packet.numPackets = numPackets;\n    this.onPacket(packet);\n  }\n\n  _flushLargePacket7() {\n    const numPackets = this.largePacketParts.length;\n    this.largePacketParts.unshift(Buffer.from([0, 0, 0, 0, 0, 0, 0])); // insert header\n    const body = Buffer.concat(this.largePacketParts);\n    this.largePacketParts.length = 0;\n    const packet = new Packet(this.firstPacketSequenceId, body, 0, body.length);\n    packet.numPackets = numPackets;\n    this.onPacket(packet);\n  }\n\n  executeStart(chunk) {\n    let start = 0;\n    const end = chunk.length;\n    while (end - start >= 3) {\n      this.length = readPacketLength(chunk, start);\n      if (end - start >= this.length + this.packetHeaderLength) {\n        // at least one full packet\n        const sequenceId = chunk[start + 3];\n        if (\n          this.length < MAX_PACKET_LENGTH &&\n          this.largePacketParts.length === 0\n        ) {\n          this.onPacket(\n            new Packet(\n              sequenceId,\n              chunk,\n              start,\n              start + this.packetHeaderLength + this.length\n            )\n          );\n        } else {\n          // first large packet - remember it's id\n          if (this.largePacketParts.length === 0) {\n            this.firstPacketSequenceId = sequenceId;\n          }\n          this.largePacketParts.push(\n            chunk.slice(\n              start + this.packetHeaderLength,\n              start + this.packetHeaderLength + this.length\n            )\n          );\n          if (this.length < MAX_PACKET_LENGTH) {\n            this._flushLargePacket();\n          }\n        }\n        start += this.packetHeaderLength + this.length;\n      } else {\n        // payload is incomplete\n        this.buffer = [chunk.slice(start + 3, end)];\n        this.bufferLength = end - start - 3;\n        this.execute = PacketParser.prototype.executePayload;\n        return;\n      }\n    }\n    if (end - start > 0) {\n      // there is start of length header, but it's not full 3 bytes\n      this.headerLen = end - start; // 1 or 2 bytes\n      this.length = chunk[start];\n      if (this.headerLen === 2) {\n        this.length = chunk[start] + (chunk[start + 1] << 8);\n        this.execute = PacketParser.prototype.executeHeader3;\n      } else {\n        this.execute = PacketParser.prototype.executeHeader2;\n      }\n    }\n  }\n\n  executePayload(chunk) {\n    let start = 0;\n    const end = chunk.length;\n    const remainingPayload =\n      this.length - this.bufferLength + this.packetHeaderLength - 3;\n    if (end - start >= remainingPayload) {\n      // last chunk for payload\n      const payload = Buffer.allocUnsafe(this.length + this.packetHeaderLength);\n      let offset = 3;\n      for (let i = 0; i < this.buffer.length; ++i) {\n        this.buffer[i].copy(payload, offset);\n        offset += this.buffer[i].length;\n      }\n      chunk.copy(payload, offset, start, start + remainingPayload);\n      const sequenceId = payload[3];\n      if (\n        this.length < MAX_PACKET_LENGTH &&\n        this.largePacketParts.length === 0\n      ) {\n        this.onPacket(\n          new Packet(\n            sequenceId,\n            payload,\n            0,\n            this.length + this.packetHeaderLength\n          )\n        );\n      } else {\n        // first large packet - remember it's id\n        if (this.largePacketParts.length === 0) {\n          this.firstPacketSequenceId = sequenceId;\n        }\n        this.largePacketParts.push(\n          payload.slice(\n            this.packetHeaderLength,\n            this.packetHeaderLength + this.length\n          )\n        );\n        if (this.length < MAX_PACKET_LENGTH) {\n          this._flushLargePacket();\n        }\n      }\n      this.buffer = [];\n      this.bufferLength = 0;\n      this.execute = PacketParser.prototype.executeStart;\n      start += remainingPayload;\n      if (end - start > 0) {\n        return this.execute(chunk.slice(start, end));\n      }\n    } else {\n      this.buffer.push(chunk);\n      this.bufferLength += chunk.length;\n    }\n    return null;\n  }\n\n  executeHeader2(chunk) {\n    this.length += chunk[0] << 8;\n    if (chunk.length > 1) {\n      this.length += chunk[1] << 16;\n      this.execute = PacketParser.prototype.executePayload;\n      return this.executePayload(chunk.slice(2));\n    } \n    this.execute = PacketParser.prototype.executeHeader3;\n    \n    return null;\n  }\n\n  executeHeader3(chunk) {\n    this.length += chunk[0] << 16;\n    this.execute = PacketParser.prototype.executePayload;\n    return this.executePayload(chunk.slice(1));\n  }\n}\n\nmodule.exports = PacketParser;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/packet_parser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/packets/auth_next_factor.js":
/*!*************************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/auth_next_factor.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// Copyright (c) 2021, Oracle and/or its affiliates.\n\n\n\nconst Packet = __webpack_require__(/*! ../packets/packet */ \"(rsc)/./node_modules/mysql2/lib/packets/packet.js\");\n\nclass AuthNextFactor {\n  constructor(opts) {\n    this.pluginName = opts.pluginName;\n    this.pluginData = opts.pluginData;\n  }\n\n  toPacket(encoding) {\n    const length = 6 + this.pluginName.length + this.pluginData.length;\n    const buffer = Buffer.allocUnsafe(length);\n    const packet = new Packet(0, buffer, 0, length);\n    packet.offset = 4;\n    packet.writeInt8(0x02);\n    packet.writeNullTerminatedString(this.pluginName, encoding);\n    packet.writeBuffer(this.pluginData);\n    return packet;\n  }\n\n  static fromPacket(packet, encoding) {\n    packet.readInt8(); // marker\n    const name = packet.readNullTerminatedString(encoding);\n    const data = packet.readBuffer();\n    return new AuthNextFactor({\n      pluginName: name,\n      pluginData: data\n    });\n  }\n}\n\nmodule.exports = AuthNextFactor;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wYWNrZXRzL2F1dGhfbmV4dF9mYWN0b3IuanMiLCJtYXBwaW5ncyI6IkFBQUE7O0FBRWE7O0FBRWIsZUFBZSxtQkFBTyxDQUFDLDRFQUFtQjs7QUFFMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZWFsX2VzdGF0ZS8uL25vZGVfbW9kdWxlcy9teXNxbDIvbGliL3BhY2tldHMvYXV0aF9uZXh0X2ZhY3Rvci5qcz8yOTNmIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgMjAyMSwgT3JhY2xlIGFuZC9vciBpdHMgYWZmaWxpYXRlcy5cblxuJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBQYWNrZXQgPSByZXF1aXJlKCcuLi9wYWNrZXRzL3BhY2tldCcpO1xuXG5jbGFzcyBBdXRoTmV4dEZhY3RvciB7XG4gIGNvbnN0cnVjdG9yKG9wdHMpIHtcbiAgICB0aGlzLnBsdWdpbk5hbWUgPSBvcHRzLnBsdWdpbk5hbWU7XG4gICAgdGhpcy5wbHVnaW5EYXRhID0gb3B0cy5wbHVnaW5EYXRhO1xuICB9XG5cbiAgdG9QYWNrZXQoZW5jb2RpbmcpIHtcbiAgICBjb25zdCBsZW5ndGggPSA2ICsgdGhpcy5wbHVnaW5OYW1lLmxlbmd0aCArIHRoaXMucGx1Z2luRGF0YS5sZW5ndGg7XG4gICAgY29uc3QgYnVmZmVyID0gQnVmZmVyLmFsbG9jVW5zYWZlKGxlbmd0aCk7XG4gICAgY29uc3QgcGFja2V0ID0gbmV3IFBhY2tldCgwLCBidWZmZXIsIDAsIGxlbmd0aCk7XG4gICAgcGFja2V0Lm9mZnNldCA9IDQ7XG4gICAgcGFja2V0LndyaXRlSW50OCgweDAyKTtcbiAgICBwYWNrZXQud3JpdGVOdWxsVGVybWluYXRlZFN0cmluZyh0aGlzLnBsdWdpbk5hbWUsIGVuY29kaW5nKTtcbiAgICBwYWNrZXQud3JpdGVCdWZmZXIodGhpcy5wbHVnaW5EYXRhKTtcbiAgICByZXR1cm4gcGFja2V0O1xuICB9XG5cbiAgc3RhdGljIGZyb21QYWNrZXQocGFja2V0LCBlbmNvZGluZykge1xuICAgIHBhY2tldC5yZWFkSW50OCgpOyAvLyBtYXJrZXJcbiAgICBjb25zdCBuYW1lID0gcGFja2V0LnJlYWROdWxsVGVybWluYXRlZFN0cmluZyhlbmNvZGluZyk7XG4gICAgY29uc3QgZGF0YSA9IHBhY2tldC5yZWFkQnVmZmVyKCk7XG4gICAgcmV0dXJuIG5ldyBBdXRoTmV4dEZhY3Rvcih7XG4gICAgICBwbHVnaW5OYW1lOiBuYW1lLFxuICAgICAgcGx1Z2luRGF0YTogZGF0YVxuICAgIH0pO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gQXV0aE5leHRGYWN0b3I7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/packets/auth_next_factor.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/packets/auth_switch_request.js":
/*!****************************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/auth_switch_request.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n// http://dev.mysql.com/doc/internals/en/connection-phase-packets.html#packet-Protocol::AuthSwitchRequest\nconst Packet = __webpack_require__(/*! ../packets/packet */ \"(rsc)/./node_modules/mysql2/lib/packets/packet.js\");\nclass AuthSwitchRequest {\n    constructor(opts){\n        this.pluginName = opts.pluginName;\n        this.pluginData = opts.pluginData;\n    }\n    toPacket() {\n        const length = 6 + this.pluginName.length + this.pluginData.length;\n        const buffer = Buffer.allocUnsafe(length);\n        const packet = new Packet(0, buffer, 0, length);\n        packet.offset = 4;\n        packet.writeInt8(0xfe);\n        // TODO: use server encoding\n        packet.writeNullTerminatedString(this.pluginName, \"cesu8\");\n        packet.writeBuffer(this.pluginData);\n        return packet;\n    }\n    static fromPacket(packet) {\n        packet.readInt8(); // marker\n        // assert marker == 0xfe?\n        // TODO: use server encoding\n        const name = packet.readNullTerminatedString(\"cesu8\");\n        const data = packet.readBuffer();\n        return new AuthSwitchRequest({\n            pluginName: name,\n            pluginData: data\n        });\n    }\n}\nmodule.exports = AuthSwitchRequest;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wYWNrZXRzL2F1dGhfc3dpdGNoX3JlcXVlc3QuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQSx5R0FBeUc7QUFFekcsTUFBTUEsU0FBU0MsbUJBQU9BLENBQUM7QUFFdkIsTUFBTUM7SUFDSkMsWUFBWUMsSUFBSSxDQUFFO1FBQ2hCLElBQUksQ0FBQ0MsVUFBVSxHQUFHRCxLQUFLQyxVQUFVO1FBQ2pDLElBQUksQ0FBQ0MsVUFBVSxHQUFHRixLQUFLRSxVQUFVO0lBQ25DO0lBRUFDLFdBQVc7UUFDVCxNQUFNQyxTQUFTLElBQUksSUFBSSxDQUFDSCxVQUFVLENBQUNHLE1BQU0sR0FBRyxJQUFJLENBQUNGLFVBQVUsQ0FBQ0UsTUFBTTtRQUNsRSxNQUFNQyxTQUFTQyxPQUFPQyxXQUFXLENBQUNIO1FBQ2xDLE1BQU1JLFNBQVMsSUFBSVosT0FBTyxHQUFHUyxRQUFRLEdBQUdEO1FBQ3hDSSxPQUFPQyxNQUFNLEdBQUc7UUFDaEJELE9BQU9FLFNBQVMsQ0FBQztRQUNqQiw0QkFBNEI7UUFDNUJGLE9BQU9HLHlCQUF5QixDQUFDLElBQUksQ0FBQ1YsVUFBVSxFQUFFO1FBQ2xETyxPQUFPSSxXQUFXLENBQUMsSUFBSSxDQUFDVixVQUFVO1FBQ2xDLE9BQU9NO0lBQ1Q7SUFFQSxPQUFPSyxXQUFXTCxNQUFNLEVBQUU7UUFDeEJBLE9BQU9NLFFBQVEsSUFBSSxTQUFTO1FBQzVCLHlCQUF5QjtRQUN6Qiw0QkFBNEI7UUFDNUIsTUFBTUMsT0FBT1AsT0FBT1Esd0JBQXdCLENBQUM7UUFDN0MsTUFBTUMsT0FBT1QsT0FBT1UsVUFBVTtRQUM5QixPQUFPLElBQUlwQixrQkFBa0I7WUFDM0JHLFlBQVljO1lBQ1piLFlBQVllO1FBQ2Q7SUFDRjtBQUNGO0FBRUFFLE9BQU9DLE9BQU8sR0FBR3RCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVhbF9lc3RhdGUvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wYWNrZXRzL2F1dGhfc3dpdGNoX3JlcXVlc3QuanM/N2RiYyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8vIGh0dHA6Ly9kZXYubXlzcWwuY29tL2RvYy9pbnRlcm5hbHMvZW4vY29ubmVjdGlvbi1waGFzZS1wYWNrZXRzLmh0bWwjcGFja2V0LVByb3RvY29sOjpBdXRoU3dpdGNoUmVxdWVzdFxuXG5jb25zdCBQYWNrZXQgPSByZXF1aXJlKCcuLi9wYWNrZXRzL3BhY2tldCcpO1xuXG5jbGFzcyBBdXRoU3dpdGNoUmVxdWVzdCB7XG4gIGNvbnN0cnVjdG9yKG9wdHMpIHtcbiAgICB0aGlzLnBsdWdpbk5hbWUgPSBvcHRzLnBsdWdpbk5hbWU7XG4gICAgdGhpcy5wbHVnaW5EYXRhID0gb3B0cy5wbHVnaW5EYXRhO1xuICB9XG5cbiAgdG9QYWNrZXQoKSB7XG4gICAgY29uc3QgbGVuZ3RoID0gNiArIHRoaXMucGx1Z2luTmFtZS5sZW5ndGggKyB0aGlzLnBsdWdpbkRhdGEubGVuZ3RoO1xuICAgIGNvbnN0IGJ1ZmZlciA9IEJ1ZmZlci5hbGxvY1Vuc2FmZShsZW5ndGgpO1xuICAgIGNvbnN0IHBhY2tldCA9IG5ldyBQYWNrZXQoMCwgYnVmZmVyLCAwLCBsZW5ndGgpO1xuICAgIHBhY2tldC5vZmZzZXQgPSA0O1xuICAgIHBhY2tldC53cml0ZUludDgoMHhmZSk7XG4gICAgLy8gVE9ETzogdXNlIHNlcnZlciBlbmNvZGluZ1xuICAgIHBhY2tldC53cml0ZU51bGxUZXJtaW5hdGVkU3RyaW5nKHRoaXMucGx1Z2luTmFtZSwgJ2Nlc3U4Jyk7XG4gICAgcGFja2V0LndyaXRlQnVmZmVyKHRoaXMucGx1Z2luRGF0YSk7XG4gICAgcmV0dXJuIHBhY2tldDtcbiAgfVxuXG4gIHN0YXRpYyBmcm9tUGFja2V0KHBhY2tldCkge1xuICAgIHBhY2tldC5yZWFkSW50OCgpOyAvLyBtYXJrZXJcbiAgICAvLyBhc3NlcnQgbWFya2VyID09IDB4ZmU/XG4gICAgLy8gVE9ETzogdXNlIHNlcnZlciBlbmNvZGluZ1xuICAgIGNvbnN0IG5hbWUgPSBwYWNrZXQucmVhZE51bGxUZXJtaW5hdGVkU3RyaW5nKCdjZXN1OCcpO1xuICAgIGNvbnN0IGRhdGEgPSBwYWNrZXQucmVhZEJ1ZmZlcigpO1xuICAgIHJldHVybiBuZXcgQXV0aFN3aXRjaFJlcXVlc3Qoe1xuICAgICAgcGx1Z2luTmFtZTogbmFtZSxcbiAgICAgIHBsdWdpbkRhdGE6IGRhdGFcbiAgICB9KTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEF1dGhTd2l0Y2hSZXF1ZXN0O1xuIl0sIm5hbWVzIjpbIlBhY2tldCIsInJlcXVpcmUiLCJBdXRoU3dpdGNoUmVxdWVzdCIsImNvbnN0cnVjdG9yIiwib3B0cyIsInBsdWdpbk5hbWUiLCJwbHVnaW5EYXRhIiwidG9QYWNrZXQiLCJsZW5ndGgiLCJidWZmZXIiLCJCdWZmZXIiLCJhbGxvY1Vuc2FmZSIsInBhY2tldCIsIm9mZnNldCIsIndyaXRlSW50OCIsIndyaXRlTnVsbFRlcm1pbmF0ZWRTdHJpbmciLCJ3cml0ZUJ1ZmZlciIsImZyb21QYWNrZXQiLCJyZWFkSW50OCIsIm5hbWUiLCJyZWFkTnVsbFRlcm1pbmF0ZWRTdHJpbmciLCJkYXRhIiwicmVhZEJ1ZmZlciIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/packets/auth_switch_request.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/packets/auth_switch_request_more_data.js":
/*!**************************************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/auth_switch_request_more_data.js ***!
  \**************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\n// http://dev.mysql.com/doc/internals/en/connection-phase-packets.html#packet-Protocol::AuthSwitchRequest\n\nconst Packet = __webpack_require__(/*! ../packets/packet */ \"(rsc)/./node_modules/mysql2/lib/packets/packet.js\");\n\nclass AuthSwitchRequestMoreData {\n  constructor(data) {\n    this.data = data;\n  }\n\n  toPacket() {\n    const length = 5 + this.data.length;\n    const buffer = Buffer.allocUnsafe(length);\n    const packet = new Packet(0, buffer, 0, length);\n    packet.offset = 4;\n    packet.writeInt8(0x01);\n    packet.writeBuffer(this.data);\n    return packet;\n  }\n\n  static fromPacket(packet) {\n    packet.readInt8(); // marker\n    const data = packet.readBuffer();\n    return new AuthSwitchRequestMoreData(data);\n  }\n\n  static verifyMarker(packet) {\n    return packet.peekByte() === 0x01;\n  }\n}\n\nmodule.exports = AuthSwitchRequestMoreData;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wYWNrZXRzL2F1dGhfc3dpdGNoX3JlcXVlc3RfbW9yZV9kYXRhLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViOztBQUVBLGVBQWUsbUJBQU8sQ0FBQyw0RUFBbUI7O0FBRTFDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZWFsX2VzdGF0ZS8uL25vZGVfbW9kdWxlcy9teXNxbDIvbGliL3BhY2tldHMvYXV0aF9zd2l0Y2hfcmVxdWVzdF9tb3JlX2RhdGEuanM/MThiYiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8vIGh0dHA6Ly9kZXYubXlzcWwuY29tL2RvYy9pbnRlcm5hbHMvZW4vY29ubmVjdGlvbi1waGFzZS1wYWNrZXRzLmh0bWwjcGFja2V0LVByb3RvY29sOjpBdXRoU3dpdGNoUmVxdWVzdFxuXG5jb25zdCBQYWNrZXQgPSByZXF1aXJlKCcuLi9wYWNrZXRzL3BhY2tldCcpO1xuXG5jbGFzcyBBdXRoU3dpdGNoUmVxdWVzdE1vcmVEYXRhIHtcbiAgY29uc3RydWN0b3IoZGF0YSkge1xuICAgIHRoaXMuZGF0YSA9IGRhdGE7XG4gIH1cblxuICB0b1BhY2tldCgpIHtcbiAgICBjb25zdCBsZW5ndGggPSA1ICsgdGhpcy5kYXRhLmxlbmd0aDtcbiAgICBjb25zdCBidWZmZXIgPSBCdWZmZXIuYWxsb2NVbnNhZmUobGVuZ3RoKTtcbiAgICBjb25zdCBwYWNrZXQgPSBuZXcgUGFja2V0KDAsIGJ1ZmZlciwgMCwgbGVuZ3RoKTtcbiAgICBwYWNrZXQub2Zmc2V0ID0gNDtcbiAgICBwYWNrZXQud3JpdGVJbnQ4KDB4MDEpO1xuICAgIHBhY2tldC53cml0ZUJ1ZmZlcih0aGlzLmRhdGEpO1xuICAgIHJldHVybiBwYWNrZXQ7XG4gIH1cblxuICBzdGF0aWMgZnJvbVBhY2tldChwYWNrZXQpIHtcbiAgICBwYWNrZXQucmVhZEludDgoKTsgLy8gbWFya2VyXG4gICAgY29uc3QgZGF0YSA9IHBhY2tldC5yZWFkQnVmZmVyKCk7XG4gICAgcmV0dXJuIG5ldyBBdXRoU3dpdGNoUmVxdWVzdE1vcmVEYXRhKGRhdGEpO1xuICB9XG5cbiAgc3RhdGljIHZlcmlmeU1hcmtlcihwYWNrZXQpIHtcbiAgICByZXR1cm4gcGFja2V0LnBlZWtCeXRlKCkgPT09IDB4MDE7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBBdXRoU3dpdGNoUmVxdWVzdE1vcmVEYXRhO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/packets/auth_switch_request_more_data.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/packets/auth_switch_response.js":
/*!*****************************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/auth_switch_response.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\n// http://dev.mysql.com/doc/internals/en/connection-phase-packets.html#packet-Protocol::AuthSwitchRequest\n\nconst Packet = __webpack_require__(/*! ../packets/packet */ \"(rsc)/./node_modules/mysql2/lib/packets/packet.js\");\n\nclass AuthSwitchResponse {\n  constructor(data) {\n    if (!Buffer.isBuffer(data)) {\n      data = Buffer.from(data);\n    }\n    this.data = data;\n  }\n\n  toPacket() {\n    const length = 4 + this.data.length;\n    const buffer = Buffer.allocUnsafe(length);\n    const packet = new Packet(0, buffer, 0, length);\n    packet.offset = 4;\n    packet.writeBuffer(this.data);\n    return packet;\n  }\n\n  static fromPacket(packet) {\n    const data = packet.readBuffer();\n    return new AuthSwitchResponse(data);\n  }\n}\n\nmodule.exports = AuthSwitchResponse;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wYWNrZXRzL2F1dGhfc3dpdGNoX3Jlc3BvbnNlLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViOztBQUVBLGVBQWUsbUJBQU8sQ0FBQyw0RUFBbUI7O0FBRTFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JlYWxfZXN0YXRlLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvcGFja2V0cy9hdXRoX3N3aXRjaF9yZXNwb25zZS5qcz85ZDFiIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLy8gaHR0cDovL2Rldi5teXNxbC5jb20vZG9jL2ludGVybmFscy9lbi9jb25uZWN0aW9uLXBoYXNlLXBhY2tldHMuaHRtbCNwYWNrZXQtUHJvdG9jb2w6OkF1dGhTd2l0Y2hSZXF1ZXN0XG5cbmNvbnN0IFBhY2tldCA9IHJlcXVpcmUoJy4uL3BhY2tldHMvcGFja2V0Jyk7XG5cbmNsYXNzIEF1dGhTd2l0Y2hSZXNwb25zZSB7XG4gIGNvbnN0cnVjdG9yKGRhdGEpIHtcbiAgICBpZiAoIUJ1ZmZlci5pc0J1ZmZlcihkYXRhKSkge1xuICAgICAgZGF0YSA9IEJ1ZmZlci5mcm9tKGRhdGEpO1xuICAgIH1cbiAgICB0aGlzLmRhdGEgPSBkYXRhO1xuICB9XG5cbiAgdG9QYWNrZXQoKSB7XG4gICAgY29uc3QgbGVuZ3RoID0gNCArIHRoaXMuZGF0YS5sZW5ndGg7XG4gICAgY29uc3QgYnVmZmVyID0gQnVmZmVyLmFsbG9jVW5zYWZlKGxlbmd0aCk7XG4gICAgY29uc3QgcGFja2V0ID0gbmV3IFBhY2tldCgwLCBidWZmZXIsIDAsIGxlbmd0aCk7XG4gICAgcGFja2V0Lm9mZnNldCA9IDQ7XG4gICAgcGFja2V0LndyaXRlQnVmZmVyKHRoaXMuZGF0YSk7XG4gICAgcmV0dXJuIHBhY2tldDtcbiAgfVxuXG4gIHN0YXRpYyBmcm9tUGFja2V0KHBhY2tldCkge1xuICAgIGNvbnN0IGRhdGEgPSBwYWNrZXQucmVhZEJ1ZmZlcigpO1xuICAgIHJldHVybiBuZXcgQXV0aFN3aXRjaFJlc3BvbnNlKGRhdGEpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gQXV0aFN3aXRjaFJlc3BvbnNlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/packets/auth_switch_response.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/packets/binary_row.js":
/*!*******************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/binary_row.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst Types = __webpack_require__(/*! ../constants/types */ \"(rsc)/./node_modules/mysql2/lib/constants/types.js\");\nconst Packet = __webpack_require__(/*! ../packets/packet */ \"(rsc)/./node_modules/mysql2/lib/packets/packet.js\");\n\nconst binaryReader = new Array(256);\n\nclass BinaryRow {\n  constructor(columns) {\n    this.columns = columns || [];\n  }\n\n  static toPacket(columns, encoding) {\n    // throw new Error('Not implemented');\n    const sequenceId = 0; // TODO remove, this is calculated now in connecton\n    let length = 0;\n    columns.forEach(val => {\n      if (val === null || typeof val === 'undefined') {\n        ++length;\n        return;\n      }\n      length += Packet.lengthCodedStringLength(val.toString(10), encoding);\n    });\n\n    length = length + 2;\n\n    const buffer = Buffer.allocUnsafe(length + 4);\n    const packet = new Packet(sequenceId, buffer, 0, length + 4);\n    packet.offset = 4;\n\n    packet.writeInt8(0);\n\n    let bitmap = 0;\n    let bitValue = 1;\n    columns.forEach(parameter => {\n      if (parameter.type === Types.NULL) {\n        bitmap += bitValue;\n      }\n      bitValue *= 2;\n      if (bitValue === 256) {\n        packet.writeInt8(bitmap);\n        bitmap = 0;\n        bitValue = 1;\n      }\n    });\n    if (bitValue !== 1) {\n      packet.writeInt8(bitmap);\n    }\n\n    columns.forEach(val => {\n      if (val === null) {\n        packet.writeNull();\n        return;\n      }\n      if (typeof val === 'undefined') {\n        packet.writeInt8(0);\n        return;\n      }\n      packet.writeLengthCodedString(val.toString(10), encoding);\n    });\n    return packet;\n  }\n\n  // TODO: complete list of types...\n  static fromPacket(fields, packet) {\n    const columns = new Array(fields.length);\n    packet.readInt8(); // TODO check it's 0\n    const nullBitmapLength = Math.floor((fields.length + 7 + 2) / 8);\n    // TODO: read and interpret null bitmap\n    packet.skip(nullBitmapLength);\n    for (let i = 0; i < columns.length; ++i) {\n      columns[i] = binaryReader[fields[i].columnType].apply(packet);\n    }\n    return new BinaryRow(columns);\n  }\n}\n\n// TODO: replace with constants.MYSQL_TYPE_*\nbinaryReader[Types.DECIMAL] = Packet.prototype.readLengthCodedString;\nbinaryReader[1] = Packet.prototype.readInt8; // tiny\nbinaryReader[2] = Packet.prototype.readInt16; // short\nbinaryReader[3] = Packet.prototype.readInt32; // long\nbinaryReader[4] = Packet.prototype.readFloat; // float\nbinaryReader[5] = Packet.prototype.readDouble; // double\nbinaryReader[6] = Packet.prototype.assertInvalid; // null, should be skipped vie null bitmap\nbinaryReader[7] = Packet.prototype.readTimestamp; // timestamp, http://dev.mysql.com/doc/internals/en/prepared-statements.html#packet-ProtocolBinary::MYSQL_TYPE_TIMESTAMP\nbinaryReader[8] = Packet.prototype.readInt64; // long long\nbinaryReader[9] = Packet.prototype.readInt32; // int24\nbinaryReader[10] = Packet.prototype.readTimestamp; // date\nbinaryReader[11] = Packet.prototype.readTime; // time, http://dev.mysql.com/doc/internals/en/prepared-statements.html#packet-ProtocolBinary::MYSQL_TYPE_TIME\nbinaryReader[12] = Packet.prototype.readDateTime; // datetime, http://dev.mysql.com/doc/internals/en/prepared-statements.html#packet-ProtocolBinary::MYSQL_TYPE_DATETIME\nbinaryReader[13] = Packet.prototype.readInt16; // year\nbinaryReader[Types.VAR_STRING] = Packet.prototype.readLengthCodedString; // var string\n\nmodule.exports = BinaryRow;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wYWNrZXRzL2JpbmFyeV9yb3cuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsY0FBYyxtQkFBTyxDQUFDLDhFQUFvQjtBQUMxQyxlQUFlLG1CQUFPLENBQUMsNEVBQW1COztBQUUxQzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQSxvQkFBb0Isb0JBQW9CO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLDZDQUE2QztBQUM3Qyw4Q0FBOEM7QUFDOUMsOENBQThDO0FBQzlDLDhDQUE4QztBQUM5QywrQ0FBK0M7QUFDL0Msa0RBQWtEO0FBQ2xELGtEQUFrRDtBQUNsRCw4Q0FBOEM7QUFDOUMsOENBQThDO0FBQzlDLG1EQUFtRDtBQUNuRCw4Q0FBOEM7QUFDOUMsa0RBQWtEO0FBQ2xELCtDQUErQztBQUMvQyx5RUFBeUU7O0FBRXpFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVhbF9lc3RhdGUvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wYWNrZXRzL2JpbmFyeV9yb3cuanM/ZTFlZSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IFR5cGVzID0gcmVxdWlyZSgnLi4vY29uc3RhbnRzL3R5cGVzJyk7XG5jb25zdCBQYWNrZXQgPSByZXF1aXJlKCcuLi9wYWNrZXRzL3BhY2tldCcpO1xuXG5jb25zdCBiaW5hcnlSZWFkZXIgPSBuZXcgQXJyYXkoMjU2KTtcblxuY2xhc3MgQmluYXJ5Um93IHtcbiAgY29uc3RydWN0b3IoY29sdW1ucykge1xuICAgIHRoaXMuY29sdW1ucyA9IGNvbHVtbnMgfHwgW107XG4gIH1cblxuICBzdGF0aWMgdG9QYWNrZXQoY29sdW1ucywgZW5jb2RpbmcpIHtcbiAgICAvLyB0aHJvdyBuZXcgRXJyb3IoJ05vdCBpbXBsZW1lbnRlZCcpO1xuICAgIGNvbnN0IHNlcXVlbmNlSWQgPSAwOyAvLyBUT0RPIHJlbW92ZSwgdGhpcyBpcyBjYWxjdWxhdGVkIG5vdyBpbiBjb25uZWN0b25cbiAgICBsZXQgbGVuZ3RoID0gMDtcbiAgICBjb2x1bW5zLmZvckVhY2godmFsID0+IHtcbiAgICAgIGlmICh2YWwgPT09IG51bGwgfHwgdHlwZW9mIHZhbCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgKytsZW5ndGg7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGxlbmd0aCArPSBQYWNrZXQubGVuZ3RoQ29kZWRTdHJpbmdMZW5ndGgodmFsLnRvU3RyaW5nKDEwKSwgZW5jb2RpbmcpO1xuICAgIH0pO1xuXG4gICAgbGVuZ3RoID0gbGVuZ3RoICsgMjtcblxuICAgIGNvbnN0IGJ1ZmZlciA9IEJ1ZmZlci5hbGxvY1Vuc2FmZShsZW5ndGggKyA0KTtcbiAgICBjb25zdCBwYWNrZXQgPSBuZXcgUGFja2V0KHNlcXVlbmNlSWQsIGJ1ZmZlciwgMCwgbGVuZ3RoICsgNCk7XG4gICAgcGFja2V0Lm9mZnNldCA9IDQ7XG5cbiAgICBwYWNrZXQud3JpdGVJbnQ4KDApO1xuXG4gICAgbGV0IGJpdG1hcCA9IDA7XG4gICAgbGV0IGJpdFZhbHVlID0gMTtcbiAgICBjb2x1bW5zLmZvckVhY2gocGFyYW1ldGVyID0+IHtcbiAgICAgIGlmIChwYXJhbWV0ZXIudHlwZSA9PT0gVHlwZXMuTlVMTCkge1xuICAgICAgICBiaXRtYXAgKz0gYml0VmFsdWU7XG4gICAgICB9XG4gICAgICBiaXRWYWx1ZSAqPSAyO1xuICAgICAgaWYgKGJpdFZhbHVlID09PSAyNTYpIHtcbiAgICAgICAgcGFja2V0LndyaXRlSW50OChiaXRtYXApO1xuICAgICAgICBiaXRtYXAgPSAwO1xuICAgICAgICBiaXRWYWx1ZSA9IDE7XG4gICAgICB9XG4gICAgfSk7XG4gICAgaWYgKGJpdFZhbHVlICE9PSAxKSB7XG4gICAgICBwYWNrZXQud3JpdGVJbnQ4KGJpdG1hcCk7XG4gICAgfVxuXG4gICAgY29sdW1ucy5mb3JFYWNoKHZhbCA9PiB7XG4gICAgICBpZiAodmFsID09PSBudWxsKSB7XG4gICAgICAgIHBhY2tldC53cml0ZU51bGwoKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiB2YWwgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHBhY2tldC53cml0ZUludDgoMCk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIHBhY2tldC53cml0ZUxlbmd0aENvZGVkU3RyaW5nKHZhbC50b1N0cmluZygxMCksIGVuY29kaW5nKTtcbiAgICB9KTtcbiAgICByZXR1cm4gcGFja2V0O1xuICB9XG5cbiAgLy8gVE9ETzogY29tcGxldGUgbGlzdCBvZiB0eXBlcy4uLlxuICBzdGF0aWMgZnJvbVBhY2tldChmaWVsZHMsIHBhY2tldCkge1xuICAgIGNvbnN0IGNvbHVtbnMgPSBuZXcgQXJyYXkoZmllbGRzLmxlbmd0aCk7XG4gICAgcGFja2V0LnJlYWRJbnQ4KCk7IC8vIFRPRE8gY2hlY2sgaXQncyAwXG4gICAgY29uc3QgbnVsbEJpdG1hcExlbmd0aCA9IE1hdGguZmxvb3IoKGZpZWxkcy5sZW5ndGggKyA3ICsgMikgLyA4KTtcbiAgICAvLyBUT0RPOiByZWFkIGFuZCBpbnRlcnByZXQgbnVsbCBiaXRtYXBcbiAgICBwYWNrZXQuc2tpcChudWxsQml0bWFwTGVuZ3RoKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGNvbHVtbnMubGVuZ3RoOyArK2kpIHtcbiAgICAgIGNvbHVtbnNbaV0gPSBiaW5hcnlSZWFkZXJbZmllbGRzW2ldLmNvbHVtblR5cGVdLmFwcGx5KHBhY2tldCk7XG4gICAgfVxuICAgIHJldHVybiBuZXcgQmluYXJ5Um93KGNvbHVtbnMpO1xuICB9XG59XG5cbi8vIFRPRE86IHJlcGxhY2Ugd2l0aCBjb25zdGFudHMuTVlTUUxfVFlQRV8qXG5iaW5hcnlSZWFkZXJbVHlwZXMuREVDSU1BTF0gPSBQYWNrZXQucHJvdG90eXBlLnJlYWRMZW5ndGhDb2RlZFN0cmluZztcbmJpbmFyeVJlYWRlclsxXSA9IFBhY2tldC5wcm90b3R5cGUucmVhZEludDg7IC8vIHRpbnlcbmJpbmFyeVJlYWRlclsyXSA9IFBhY2tldC5wcm90b3R5cGUucmVhZEludDE2OyAvLyBzaG9ydFxuYmluYXJ5UmVhZGVyWzNdID0gUGFja2V0LnByb3RvdHlwZS5yZWFkSW50MzI7IC8vIGxvbmdcbmJpbmFyeVJlYWRlcls0XSA9IFBhY2tldC5wcm90b3R5cGUucmVhZEZsb2F0OyAvLyBmbG9hdFxuYmluYXJ5UmVhZGVyWzVdID0gUGFja2V0LnByb3RvdHlwZS5yZWFkRG91YmxlOyAvLyBkb3VibGVcbmJpbmFyeVJlYWRlcls2XSA9IFBhY2tldC5wcm90b3R5cGUuYXNzZXJ0SW52YWxpZDsgLy8gbnVsbCwgc2hvdWxkIGJlIHNraXBwZWQgdmllIG51bGwgYml0bWFwXG5iaW5hcnlSZWFkZXJbN10gPSBQYWNrZXQucHJvdG90eXBlLnJlYWRUaW1lc3RhbXA7IC8vIHRpbWVzdGFtcCwgaHR0cDovL2Rldi5teXNxbC5jb20vZG9jL2ludGVybmFscy9lbi9wcmVwYXJlZC1zdGF0ZW1lbnRzLmh0bWwjcGFja2V0LVByb3RvY29sQmluYXJ5OjpNWVNRTF9UWVBFX1RJTUVTVEFNUFxuYmluYXJ5UmVhZGVyWzhdID0gUGFja2V0LnByb3RvdHlwZS5yZWFkSW50NjQ7IC8vIGxvbmcgbG9uZ1xuYmluYXJ5UmVhZGVyWzldID0gUGFja2V0LnByb3RvdHlwZS5yZWFkSW50MzI7IC8vIGludDI0XG5iaW5hcnlSZWFkZXJbMTBdID0gUGFja2V0LnByb3RvdHlwZS5yZWFkVGltZXN0YW1wOyAvLyBkYXRlXG5iaW5hcnlSZWFkZXJbMTFdID0gUGFja2V0LnByb3RvdHlwZS5yZWFkVGltZTsgLy8gdGltZSwgaHR0cDovL2Rldi5teXNxbC5jb20vZG9jL2ludGVybmFscy9lbi9wcmVwYXJlZC1zdGF0ZW1lbnRzLmh0bWwjcGFja2V0LVByb3RvY29sQmluYXJ5OjpNWVNRTF9UWVBFX1RJTUVcbmJpbmFyeVJlYWRlclsxMl0gPSBQYWNrZXQucHJvdG90eXBlLnJlYWREYXRlVGltZTsgLy8gZGF0ZXRpbWUsIGh0dHA6Ly9kZXYubXlzcWwuY29tL2RvYy9pbnRlcm5hbHMvZW4vcHJlcGFyZWQtc3RhdGVtZW50cy5odG1sI3BhY2tldC1Qcm90b2NvbEJpbmFyeTo6TVlTUUxfVFlQRV9EQVRFVElNRVxuYmluYXJ5UmVhZGVyWzEzXSA9IFBhY2tldC5wcm90b3R5cGUucmVhZEludDE2OyAvLyB5ZWFyXG5iaW5hcnlSZWFkZXJbVHlwZXMuVkFSX1NUUklOR10gPSBQYWNrZXQucHJvdG90eXBlLnJlYWRMZW5ndGhDb2RlZFN0cmluZzsgLy8gdmFyIHN0cmluZ1xuXG5tb2R1bGUuZXhwb3J0cyA9IEJpbmFyeVJvdztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/packets/binary_row.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/packets/binlog_dump.js":
/*!********************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/binlog_dump.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\n// http://dev.mysql.com/doc/internals/en/com-binlog-dump.html#packet-COM_BINLOG_DUMP\n\nconst Packet = __webpack_require__(/*! ../packets/packet */ \"(rsc)/./node_modules/mysql2/lib/packets/packet.js\");\nconst CommandCodes = __webpack_require__(/*! ../constants/commands */ \"(rsc)/./node_modules/mysql2/lib/constants/commands.js\");\n\n// TODO: add flag to constants\n// 0x01 - BINLOG_DUMP_NON_BLOCK\n// send EOF instead of blocking\nclass BinlogDump {\n  constructor(opts) {\n    this.binlogPos = opts.binlogPos || 0;\n    this.serverId = opts.serverId || 0;\n    this.flags = opts.flags || 0;\n    this.filename = opts.filename || '';\n  }\n\n  toPacket() {\n    const length = 15 + Buffer.byteLength(this.filename, 'utf8'); // TODO: should be ascii?\n    const buffer = Buffer.allocUnsafe(length);\n    const packet = new Packet(0, buffer, 0, length);\n    packet.offset = 4;\n    packet.writeInt8(CommandCodes.BINLOG_DUMP);\n    packet.writeInt32(this.binlogPos);\n    packet.writeInt16(this.flags);\n    packet.writeInt32(this.serverId);\n    packet.writeString(this.filename);\n    return packet;\n  }\n}\n\nmodule.exports = BinlogDump;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wYWNrZXRzL2JpbmxvZ19kdW1wLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViOztBQUVBLGVBQWUsbUJBQU8sQ0FBQyw0RUFBbUI7QUFDMUMscUJBQXFCLG1CQUFPLENBQUMsb0ZBQXVCOztBQUVwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGtFQUFrRTtBQUNsRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVhbF9lc3RhdGUvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wYWNrZXRzL2JpbmxvZ19kdW1wLmpzPzJjNDMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vLyBodHRwOi8vZGV2Lm15c3FsLmNvbS9kb2MvaW50ZXJuYWxzL2VuL2NvbS1iaW5sb2ctZHVtcC5odG1sI3BhY2tldC1DT01fQklOTE9HX0RVTVBcblxuY29uc3QgUGFja2V0ID0gcmVxdWlyZSgnLi4vcGFja2V0cy9wYWNrZXQnKTtcbmNvbnN0IENvbW1hbmRDb2RlcyA9IHJlcXVpcmUoJy4uL2NvbnN0YW50cy9jb21tYW5kcycpO1xuXG4vLyBUT0RPOiBhZGQgZmxhZyB0byBjb25zdGFudHNcbi8vIDB4MDEgLSBCSU5MT0dfRFVNUF9OT05fQkxPQ0tcbi8vIHNlbmQgRU9GIGluc3RlYWQgb2YgYmxvY2tpbmdcbmNsYXNzIEJpbmxvZ0R1bXAge1xuICBjb25zdHJ1Y3RvcihvcHRzKSB7XG4gICAgdGhpcy5iaW5sb2dQb3MgPSBvcHRzLmJpbmxvZ1BvcyB8fCAwO1xuICAgIHRoaXMuc2VydmVySWQgPSBvcHRzLnNlcnZlcklkIHx8IDA7XG4gICAgdGhpcy5mbGFncyA9IG9wdHMuZmxhZ3MgfHwgMDtcbiAgICB0aGlzLmZpbGVuYW1lID0gb3B0cy5maWxlbmFtZSB8fCAnJztcbiAgfVxuXG4gIHRvUGFja2V0KCkge1xuICAgIGNvbnN0IGxlbmd0aCA9IDE1ICsgQnVmZmVyLmJ5dGVMZW5ndGgodGhpcy5maWxlbmFtZSwgJ3V0ZjgnKTsgLy8gVE9ETzogc2hvdWxkIGJlIGFzY2lpP1xuICAgIGNvbnN0IGJ1ZmZlciA9IEJ1ZmZlci5hbGxvY1Vuc2FmZShsZW5ndGgpO1xuICAgIGNvbnN0IHBhY2tldCA9IG5ldyBQYWNrZXQoMCwgYnVmZmVyLCAwLCBsZW5ndGgpO1xuICAgIHBhY2tldC5vZmZzZXQgPSA0O1xuICAgIHBhY2tldC53cml0ZUludDgoQ29tbWFuZENvZGVzLkJJTkxPR19EVU1QKTtcbiAgICBwYWNrZXQud3JpdGVJbnQzMih0aGlzLmJpbmxvZ1Bvcyk7XG4gICAgcGFja2V0LndyaXRlSW50MTYodGhpcy5mbGFncyk7XG4gICAgcGFja2V0LndyaXRlSW50MzIodGhpcy5zZXJ2ZXJJZCk7XG4gICAgcGFja2V0LndyaXRlU3RyaW5nKHRoaXMuZmlsZW5hbWUpO1xuICAgIHJldHVybiBwYWNrZXQ7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBCaW5sb2dEdW1wO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/packets/binlog_dump.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/packets/binlog_query_statusvars.js":
/*!********************************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/binlog_query_statusvars.js ***!
  \********************************************************************/
/***/ ((module) => {

eval("\n\n// http://dev.mysql.com/doc/internals/en/query-event.html\n\nconst keys = {\n  FLAGS2: 0,\n  SQL_MODE: 1,\n  CATALOG: 2,\n  AUTO_INCREMENT: 3,\n  CHARSET: 4,\n  TIME_ZONE: 5,\n  CATALOG_NZ: 6,\n  LC_TIME_NAMES: 7,\n  CHARSET_DATABASE: 8,\n  TABLE_MAP_FOR_UPDATE: 9,\n  MASTER_DATA_WRITTEN: 10,\n  INVOKERS: 11,\n  UPDATED_DB_NAMES: 12,\n  MICROSECONDS: 3\n};\n\nmodule.exports = function parseStatusVars(buffer) {\n  const result = {};\n  let offset = 0;\n  let key, length, prevOffset;\n  while (offset < buffer.length) {\n    key = buffer[offset++];\n    switch (key) {\n      case keys.FLAGS2:\n        result.flags = buffer.readUInt32LE(offset);\n        offset += 4;\n        break;\n      case keys.SQL_MODE:\n        // value is 8 bytes, but all dcumented flags are in first 4 bytes\n        result.sqlMode = buffer.readUInt32LE(offset);\n        offset += 8;\n        break;\n      case keys.CATALOG:\n        length = buffer[offset++];\n        result.catalog = buffer.toString('utf8', offset, offset + length);\n        offset += length + 1; // null byte after string\n        break;\n      case keys.CHARSET:\n        result.clientCharset = buffer.readUInt16LE(offset);\n        result.connectionCollation = buffer.readUInt16LE(offset + 2);\n        result.serverCharset = buffer.readUInt16LE(offset + 4);\n        offset += 6;\n        break;\n      case keys.TIME_ZONE:\n        length = buffer[offset++];\n        result.timeZone = buffer.toString('utf8', offset, offset + length);\n        offset += length; // no null byte\n        break;\n      case keys.CATALOG_NZ:\n        length = buffer[offset++];\n        result.catalogNz = buffer.toString('utf8', offset, offset + length);\n        offset += length; // no null byte\n        break;\n      case keys.LC_TIME_NAMES:\n        result.lcTimeNames = buffer.readUInt16LE(offset);\n        offset += 2;\n        break;\n      case keys.CHARSET_DATABASE:\n        result.schemaCharset = buffer.readUInt16LE(offset);\n        offset += 2;\n        break;\n      case keys.TABLE_MAP_FOR_UPDATE:\n        result.mapForUpdate1 = buffer.readUInt32LE(offset);\n        result.mapForUpdate2 = buffer.readUInt32LE(offset + 4);\n        offset += 8;\n        break;\n      case keys.MASTER_DATA_WRITTEN:\n        result.masterDataWritten = buffer.readUInt32LE(offset);\n        offset += 4;\n        break;\n      case keys.INVOKERS:\n        length = buffer[offset++];\n        result.invokerUsername = buffer.toString(\n          'utf8',\n          offset,\n          offset + length\n        );\n        offset += length;\n        length = buffer[offset++];\n        result.invokerHostname = buffer.toString(\n          'utf8',\n          offset,\n          offset + length\n        );\n        offset += length;\n        break;\n      case keys.UPDATED_DB_NAMES:\n        length = buffer[offset++];\n        // length - number of null-terminated strings\n        result.updatedDBs = []; // we'll store them as array here\n        for (; length; --length) {\n          prevOffset = offset;\n          // fast forward to null terminating byte\n          while (buffer[offset++] && offset < buffer.length) {\n            // empty body, everything inside while condition\n          }\n          result.updatedDBs.push(\n            buffer.toString('utf8', prevOffset, offset - 1)\n          );\n        }\n        break;\n      case keys.MICROSECONDS:\n        result.microseconds =\n          // REVIEW: INVALID UNKNOWN VARIABLE!\n          buffer.readInt16LE(offset) + (buffer[offset + 2] << 16);\n        offset += 3;\n    }\n  }\n  return result;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wYWNrZXRzL2JpbmxvZ19xdWVyeV9zdGF0dXN2YXJzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDO0FBQ2hDLGVBQWUsUUFBUTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JlYWxfZXN0YXRlLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvcGFja2V0cy9iaW5sb2dfcXVlcnlfc3RhdHVzdmFycy5qcz8zMTBkIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLy8gaHR0cDovL2Rldi5teXNxbC5jb20vZG9jL2ludGVybmFscy9lbi9xdWVyeS1ldmVudC5odG1sXG5cbmNvbnN0IGtleXMgPSB7XG4gIEZMQUdTMjogMCxcbiAgU1FMX01PREU6IDEsXG4gIENBVEFMT0c6IDIsXG4gIEFVVE9fSU5DUkVNRU5UOiAzLFxuICBDSEFSU0VUOiA0LFxuICBUSU1FX1pPTkU6IDUsXG4gIENBVEFMT0dfTlo6IDYsXG4gIExDX1RJTUVfTkFNRVM6IDcsXG4gIENIQVJTRVRfREFUQUJBU0U6IDgsXG4gIFRBQkxFX01BUF9GT1JfVVBEQVRFOiA5LFxuICBNQVNURVJfREFUQV9XUklUVEVOOiAxMCxcbiAgSU5WT0tFUlM6IDExLFxuICBVUERBVEVEX0RCX05BTUVTOiAxMixcbiAgTUlDUk9TRUNPTkRTOiAzXG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHBhcnNlU3RhdHVzVmFycyhidWZmZXIpIHtcbiAgY29uc3QgcmVzdWx0ID0ge307XG4gIGxldCBvZmZzZXQgPSAwO1xuICBsZXQga2V5LCBsZW5ndGgsIHByZXZPZmZzZXQ7XG4gIHdoaWxlIChvZmZzZXQgPCBidWZmZXIubGVuZ3RoKSB7XG4gICAga2V5ID0gYnVmZmVyW29mZnNldCsrXTtcbiAgICBzd2l0Y2ggKGtleSkge1xuICAgICAgY2FzZSBrZXlzLkZMQUdTMjpcbiAgICAgICAgcmVzdWx0LmZsYWdzID0gYnVmZmVyLnJlYWRVSW50MzJMRShvZmZzZXQpO1xuICAgICAgICBvZmZzZXQgKz0gNDtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIGtleXMuU1FMX01PREU6XG4gICAgICAgIC8vIHZhbHVlIGlzIDggYnl0ZXMsIGJ1dCBhbGwgZGN1bWVudGVkIGZsYWdzIGFyZSBpbiBmaXJzdCA0IGJ5dGVzXG4gICAgICAgIHJlc3VsdC5zcWxNb2RlID0gYnVmZmVyLnJlYWRVSW50MzJMRShvZmZzZXQpO1xuICAgICAgICBvZmZzZXQgKz0gODtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIGtleXMuQ0FUQUxPRzpcbiAgICAgICAgbGVuZ3RoID0gYnVmZmVyW29mZnNldCsrXTtcbiAgICAgICAgcmVzdWx0LmNhdGFsb2cgPSBidWZmZXIudG9TdHJpbmcoJ3V0ZjgnLCBvZmZzZXQsIG9mZnNldCArIGxlbmd0aCk7XG4gICAgICAgIG9mZnNldCArPSBsZW5ndGggKyAxOyAvLyBudWxsIGJ5dGUgYWZ0ZXIgc3RyaW5nXG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBrZXlzLkNIQVJTRVQ6XG4gICAgICAgIHJlc3VsdC5jbGllbnRDaGFyc2V0ID0gYnVmZmVyLnJlYWRVSW50MTZMRShvZmZzZXQpO1xuICAgICAgICByZXN1bHQuY29ubmVjdGlvbkNvbGxhdGlvbiA9IGJ1ZmZlci5yZWFkVUludDE2TEUob2Zmc2V0ICsgMik7XG4gICAgICAgIHJlc3VsdC5zZXJ2ZXJDaGFyc2V0ID0gYnVmZmVyLnJlYWRVSW50MTZMRShvZmZzZXQgKyA0KTtcbiAgICAgICAgb2Zmc2V0ICs9IDY7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBrZXlzLlRJTUVfWk9ORTpcbiAgICAgICAgbGVuZ3RoID0gYnVmZmVyW29mZnNldCsrXTtcbiAgICAgICAgcmVzdWx0LnRpbWVab25lID0gYnVmZmVyLnRvU3RyaW5nKCd1dGY4Jywgb2Zmc2V0LCBvZmZzZXQgKyBsZW5ndGgpO1xuICAgICAgICBvZmZzZXQgKz0gbGVuZ3RoOyAvLyBubyBudWxsIGJ5dGVcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIGtleXMuQ0FUQUxPR19OWjpcbiAgICAgICAgbGVuZ3RoID0gYnVmZmVyW29mZnNldCsrXTtcbiAgICAgICAgcmVzdWx0LmNhdGFsb2dOeiA9IGJ1ZmZlci50b1N0cmluZygndXRmOCcsIG9mZnNldCwgb2Zmc2V0ICsgbGVuZ3RoKTtcbiAgICAgICAgb2Zmc2V0ICs9IGxlbmd0aDsgLy8gbm8gbnVsbCBieXRlXG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBrZXlzLkxDX1RJTUVfTkFNRVM6XG4gICAgICAgIHJlc3VsdC5sY1RpbWVOYW1lcyA9IGJ1ZmZlci5yZWFkVUludDE2TEUob2Zmc2V0KTtcbiAgICAgICAgb2Zmc2V0ICs9IDI7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBrZXlzLkNIQVJTRVRfREFUQUJBU0U6XG4gICAgICAgIHJlc3VsdC5zY2hlbWFDaGFyc2V0ID0gYnVmZmVyLnJlYWRVSW50MTZMRShvZmZzZXQpO1xuICAgICAgICBvZmZzZXQgKz0gMjtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIGtleXMuVEFCTEVfTUFQX0ZPUl9VUERBVEU6XG4gICAgICAgIHJlc3VsdC5tYXBGb3JVcGRhdGUxID0gYnVmZmVyLnJlYWRVSW50MzJMRShvZmZzZXQpO1xuICAgICAgICByZXN1bHQubWFwRm9yVXBkYXRlMiA9IGJ1ZmZlci5yZWFkVUludDMyTEUob2Zmc2V0ICsgNCk7XG4gICAgICAgIG9mZnNldCArPSA4O1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2Uga2V5cy5NQVNURVJfREFUQV9XUklUVEVOOlxuICAgICAgICByZXN1bHQubWFzdGVyRGF0YVdyaXR0ZW4gPSBidWZmZXIucmVhZFVJbnQzMkxFKG9mZnNldCk7XG4gICAgICAgIG9mZnNldCArPSA0O1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2Uga2V5cy5JTlZPS0VSUzpcbiAgICAgICAgbGVuZ3RoID0gYnVmZmVyW29mZnNldCsrXTtcbiAgICAgICAgcmVzdWx0Lmludm9rZXJVc2VybmFtZSA9IGJ1ZmZlci50b1N0cmluZyhcbiAgICAgICAgICAndXRmOCcsXG4gICAgICAgICAgb2Zmc2V0LFxuICAgICAgICAgIG9mZnNldCArIGxlbmd0aFxuICAgICAgICApO1xuICAgICAgICBvZmZzZXQgKz0gbGVuZ3RoO1xuICAgICAgICBsZW5ndGggPSBidWZmZXJbb2Zmc2V0KytdO1xuICAgICAgICByZXN1bHQuaW52b2tlckhvc3RuYW1lID0gYnVmZmVyLnRvU3RyaW5nKFxuICAgICAgICAgICd1dGY4JyxcbiAgICAgICAgICBvZmZzZXQsXG4gICAgICAgICAgb2Zmc2V0ICsgbGVuZ3RoXG4gICAgICAgICk7XG4gICAgICAgIG9mZnNldCArPSBsZW5ndGg7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSBrZXlzLlVQREFURURfREJfTkFNRVM6XG4gICAgICAgIGxlbmd0aCA9IGJ1ZmZlcltvZmZzZXQrK107XG4gICAgICAgIC8vIGxlbmd0aCAtIG51bWJlciBvZiBudWxsLXRlcm1pbmF0ZWQgc3RyaW5nc1xuICAgICAgICByZXN1bHQudXBkYXRlZERCcyA9IFtdOyAvLyB3ZSdsbCBzdG9yZSB0aGVtIGFzIGFycmF5IGhlcmVcbiAgICAgICAgZm9yICg7IGxlbmd0aDsgLS1sZW5ndGgpIHtcbiAgICAgICAgICBwcmV2T2Zmc2V0ID0gb2Zmc2V0O1xuICAgICAgICAgIC8vIGZhc3QgZm9yd2FyZCB0byBudWxsIHRlcm1pbmF0aW5nIGJ5dGVcbiAgICAgICAgICB3aGlsZSAoYnVmZmVyW29mZnNldCsrXSAmJiBvZmZzZXQgPCBidWZmZXIubGVuZ3RoKSB7XG4gICAgICAgICAgICAvLyBlbXB0eSBib2R5LCBldmVyeXRoaW5nIGluc2lkZSB3aGlsZSBjb25kaXRpb25cbiAgICAgICAgICB9XG4gICAgICAgICAgcmVzdWx0LnVwZGF0ZWREQnMucHVzaChcbiAgICAgICAgICAgIGJ1ZmZlci50b1N0cmluZygndXRmOCcsIHByZXZPZmZzZXQsIG9mZnNldCAtIDEpXG4gICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgICAgICBicmVhaztcbiAgICAgIGNhc2Uga2V5cy5NSUNST1NFQ09ORFM6XG4gICAgICAgIHJlc3VsdC5taWNyb3NlY29uZHMgPVxuICAgICAgICAgIC8vIFJFVklFVzogSU5WQUxJRCBVTktOT1dOIFZBUklBQkxFIVxuICAgICAgICAgIGJ1ZmZlci5yZWFkSW50MTZMRShvZmZzZXQpICsgKGJ1ZmZlcltvZmZzZXQgKyAyXSA8PCAxNik7XG4gICAgICAgIG9mZnNldCArPSAzO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/packets/binlog_query_statusvars.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/packets/change_user.js":
/*!********************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/change_user.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst CommandCode = __webpack_require__(/*! ../constants/commands.js */ \"(rsc)/./node_modules/mysql2/lib/constants/commands.js\");\nconst ClientConstants = __webpack_require__(/*! ../constants/client.js */ \"(rsc)/./node_modules/mysql2/lib/constants/client.js\");\nconst Packet = __webpack_require__(/*! ../packets/packet.js */ \"(rsc)/./node_modules/mysql2/lib/packets/packet.js\");\nconst auth41 = __webpack_require__(/*! ../auth_41.js */ \"(rsc)/./node_modules/mysql2/lib/auth_41.js\");\nconst CharsetToEncoding = __webpack_require__(/*! ../constants/charset_encodings.js */ \"(rsc)/./node_modules/mysql2/lib/constants/charset_encodings.js\");\n\n// https://dev.mysql.com/doc/internals/en/com-change-user.html#packet-COM_CHANGE_USER\nclass ChangeUser {\n  constructor(opts) {\n    this.flags = opts.flags;\n    this.user = opts.user || '';\n    this.database = opts.database || '';\n    this.password = opts.password || '';\n    this.passwordSha1 = opts.passwordSha1;\n    this.authPluginData1 = opts.authPluginData1;\n    this.authPluginData2 = opts.authPluginData2;\n    this.connectAttributes = opts.connectAttrinutes || {};\n    let authToken;\n    if (this.passwordSha1) {\n      authToken = auth41.calculateTokenFromPasswordSha(\n        this.passwordSha1,\n        this.authPluginData1,\n        this.authPluginData2\n      );\n    } else {\n      authToken = auth41.calculateToken(\n        this.password,\n        this.authPluginData1,\n        this.authPluginData2\n      );\n    }\n    this.authToken = authToken;\n    this.charsetNumber = opts.charsetNumber;\n  }\n\n  // TODO\n  // ChangeUser.fromPacket = function(packet)\n  // };\n  serializeToBuffer(buffer) {\n    const isSet = flag => this.flags & ClientConstants[flag];\n    const packet = new Packet(0, buffer, 0, buffer.length);\n    packet.offset = 4;\n    const encoding = CharsetToEncoding[this.charsetNumber];\n    packet.writeInt8(CommandCode.CHANGE_USER);\n    packet.writeNullTerminatedString(this.user, encoding);\n    if (isSet('SECURE_CONNECTION')) {\n      packet.writeInt8(this.authToken.length);\n      packet.writeBuffer(this.authToken);\n    } else {\n      packet.writeBuffer(this.authToken);\n      packet.writeInt8(0);\n    }\n    packet.writeNullTerminatedString(this.database, encoding);\n    packet.writeInt16(this.charsetNumber);\n    if (isSet('PLUGIN_AUTH')) {\n      // TODO: read this from parameters\n      packet.writeNullTerminatedString('mysql_native_password', 'latin1');\n    }\n    if (isSet('CONNECT_ATTRS')) {\n      const connectAttributes = this.connectAttributes;\n      const attrNames = Object.keys(connectAttributes);\n      let keysLength = 0;\n      for (let k = 0; k < attrNames.length; ++k) {\n        keysLength += Packet.lengthCodedStringLength(attrNames[k], encoding);\n        keysLength += Packet.lengthCodedStringLength(\n          connectAttributes[attrNames[k]],\n          encoding\n        );\n      }\n      packet.writeLengthCodedNumber(keysLength);\n      for (let k = 0; k < attrNames.length; ++k) {\n        packet.writeLengthCodedString(attrNames[k], encoding);\n        packet.writeLengthCodedString(\n          connectAttributes[attrNames[k]],\n          encoding\n        );\n      }\n    }\n    return packet;\n  }\n\n  toPacket() {\n    if (typeof this.user !== 'string') {\n      throw new Error('\"user\" connection config property must be a string');\n    }\n    if (typeof this.database !== 'string') {\n      throw new Error('\"database\" connection config property must be a string');\n    }\n    // dry run: calculate resulting packet length\n    const p = this.serializeToBuffer(Packet.MockBuffer());\n    return this.serializeToBuffer(Buffer.allocUnsafe(p.offset));\n  }\n}\n\nmodule.exports = ChangeUser;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wYWNrZXRzL2NoYW5nZV91c2VyLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLG9CQUFvQixtQkFBTyxDQUFDLHVGQUEwQjtBQUN0RCx3QkFBd0IsbUJBQU8sQ0FBQyxtRkFBd0I7QUFDeEQsZUFBZSxtQkFBTyxDQUFDLCtFQUFzQjtBQUM3QyxlQUFlLG1CQUFPLENBQUMsaUVBQWU7QUFDdEMsMEJBQTBCLG1CQUFPLENBQUMseUdBQW1DOztBQUVyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLHNCQUFzQjtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixzQkFBc0I7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JlYWxfZXN0YXRlLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvcGFja2V0cy9jaGFuZ2VfdXNlci5qcz85MmU5Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgQ29tbWFuZENvZGUgPSByZXF1aXJlKCcuLi9jb25zdGFudHMvY29tbWFuZHMuanMnKTtcbmNvbnN0IENsaWVudENvbnN0YW50cyA9IHJlcXVpcmUoJy4uL2NvbnN0YW50cy9jbGllbnQuanMnKTtcbmNvbnN0IFBhY2tldCA9IHJlcXVpcmUoJy4uL3BhY2tldHMvcGFja2V0LmpzJyk7XG5jb25zdCBhdXRoNDEgPSByZXF1aXJlKCcuLi9hdXRoXzQxLmpzJyk7XG5jb25zdCBDaGFyc2V0VG9FbmNvZGluZyA9IHJlcXVpcmUoJy4uL2NvbnN0YW50cy9jaGFyc2V0X2VuY29kaW5ncy5qcycpO1xuXG4vLyBodHRwczovL2Rldi5teXNxbC5jb20vZG9jL2ludGVybmFscy9lbi9jb20tY2hhbmdlLXVzZXIuaHRtbCNwYWNrZXQtQ09NX0NIQU5HRV9VU0VSXG5jbGFzcyBDaGFuZ2VVc2VyIHtcbiAgY29uc3RydWN0b3Iob3B0cykge1xuICAgIHRoaXMuZmxhZ3MgPSBvcHRzLmZsYWdzO1xuICAgIHRoaXMudXNlciA9IG9wdHMudXNlciB8fCAnJztcbiAgICB0aGlzLmRhdGFiYXNlID0gb3B0cy5kYXRhYmFzZSB8fCAnJztcbiAgICB0aGlzLnBhc3N3b3JkID0gb3B0cy5wYXNzd29yZCB8fCAnJztcbiAgICB0aGlzLnBhc3N3b3JkU2hhMSA9IG9wdHMucGFzc3dvcmRTaGExO1xuICAgIHRoaXMuYXV0aFBsdWdpbkRhdGExID0gb3B0cy5hdXRoUGx1Z2luRGF0YTE7XG4gICAgdGhpcy5hdXRoUGx1Z2luRGF0YTIgPSBvcHRzLmF1dGhQbHVnaW5EYXRhMjtcbiAgICB0aGlzLmNvbm5lY3RBdHRyaWJ1dGVzID0gb3B0cy5jb25uZWN0QXR0cmludXRlcyB8fCB7fTtcbiAgICBsZXQgYXV0aFRva2VuO1xuICAgIGlmICh0aGlzLnBhc3N3b3JkU2hhMSkge1xuICAgICAgYXV0aFRva2VuID0gYXV0aDQxLmNhbGN1bGF0ZVRva2VuRnJvbVBhc3N3b3JkU2hhKFxuICAgICAgICB0aGlzLnBhc3N3b3JkU2hhMSxcbiAgICAgICAgdGhpcy5hdXRoUGx1Z2luRGF0YTEsXG4gICAgICAgIHRoaXMuYXV0aFBsdWdpbkRhdGEyXG4gICAgICApO1xuICAgIH0gZWxzZSB7XG4gICAgICBhdXRoVG9rZW4gPSBhdXRoNDEuY2FsY3VsYXRlVG9rZW4oXG4gICAgICAgIHRoaXMucGFzc3dvcmQsXG4gICAgICAgIHRoaXMuYXV0aFBsdWdpbkRhdGExLFxuICAgICAgICB0aGlzLmF1dGhQbHVnaW5EYXRhMlxuICAgICAgKTtcbiAgICB9XG4gICAgdGhpcy5hdXRoVG9rZW4gPSBhdXRoVG9rZW47XG4gICAgdGhpcy5jaGFyc2V0TnVtYmVyID0gb3B0cy5jaGFyc2V0TnVtYmVyO1xuICB9XG5cbiAgLy8gVE9ET1xuICAvLyBDaGFuZ2VVc2VyLmZyb21QYWNrZXQgPSBmdW5jdGlvbihwYWNrZXQpXG4gIC8vIH07XG4gIHNlcmlhbGl6ZVRvQnVmZmVyKGJ1ZmZlcikge1xuICAgIGNvbnN0IGlzU2V0ID0gZmxhZyA9PiB0aGlzLmZsYWdzICYgQ2xpZW50Q29uc3RhbnRzW2ZsYWddO1xuICAgIGNvbnN0IHBhY2tldCA9IG5ldyBQYWNrZXQoMCwgYnVmZmVyLCAwLCBidWZmZXIubGVuZ3RoKTtcbiAgICBwYWNrZXQub2Zmc2V0ID0gNDtcbiAgICBjb25zdCBlbmNvZGluZyA9IENoYXJzZXRUb0VuY29kaW5nW3RoaXMuY2hhcnNldE51bWJlcl07XG4gICAgcGFja2V0LndyaXRlSW50OChDb21tYW5kQ29kZS5DSEFOR0VfVVNFUik7XG4gICAgcGFja2V0LndyaXRlTnVsbFRlcm1pbmF0ZWRTdHJpbmcodGhpcy51c2VyLCBlbmNvZGluZyk7XG4gICAgaWYgKGlzU2V0KCdTRUNVUkVfQ09OTkVDVElPTicpKSB7XG4gICAgICBwYWNrZXQud3JpdGVJbnQ4KHRoaXMuYXV0aFRva2VuLmxlbmd0aCk7XG4gICAgICBwYWNrZXQud3JpdGVCdWZmZXIodGhpcy5hdXRoVG9rZW4pO1xuICAgIH0gZWxzZSB7XG4gICAgICBwYWNrZXQud3JpdGVCdWZmZXIodGhpcy5hdXRoVG9rZW4pO1xuICAgICAgcGFja2V0LndyaXRlSW50OCgwKTtcbiAgICB9XG4gICAgcGFja2V0LndyaXRlTnVsbFRlcm1pbmF0ZWRTdHJpbmcodGhpcy5kYXRhYmFzZSwgZW5jb2RpbmcpO1xuICAgIHBhY2tldC53cml0ZUludDE2KHRoaXMuY2hhcnNldE51bWJlcik7XG4gICAgaWYgKGlzU2V0KCdQTFVHSU5fQVVUSCcpKSB7XG4gICAgICAvLyBUT0RPOiByZWFkIHRoaXMgZnJvbSBwYXJhbWV0ZXJzXG4gICAgICBwYWNrZXQud3JpdGVOdWxsVGVybWluYXRlZFN0cmluZygnbXlzcWxfbmF0aXZlX3Bhc3N3b3JkJywgJ2xhdGluMScpO1xuICAgIH1cbiAgICBpZiAoaXNTZXQoJ0NPTk5FQ1RfQVRUUlMnKSkge1xuICAgICAgY29uc3QgY29ubmVjdEF0dHJpYnV0ZXMgPSB0aGlzLmNvbm5lY3RBdHRyaWJ1dGVzO1xuICAgICAgY29uc3QgYXR0ck5hbWVzID0gT2JqZWN0LmtleXMoY29ubmVjdEF0dHJpYnV0ZXMpO1xuICAgICAgbGV0IGtleXNMZW5ndGggPSAwO1xuICAgICAgZm9yIChsZXQgayA9IDA7IGsgPCBhdHRyTmFtZXMubGVuZ3RoOyArK2spIHtcbiAgICAgICAga2V5c0xlbmd0aCArPSBQYWNrZXQubGVuZ3RoQ29kZWRTdHJpbmdMZW5ndGgoYXR0ck5hbWVzW2tdLCBlbmNvZGluZyk7XG4gICAgICAgIGtleXNMZW5ndGggKz0gUGFja2V0Lmxlbmd0aENvZGVkU3RyaW5nTGVuZ3RoKFxuICAgICAgICAgIGNvbm5lY3RBdHRyaWJ1dGVzW2F0dHJOYW1lc1trXV0sXG4gICAgICAgICAgZW5jb2RpbmdcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICAgIHBhY2tldC53cml0ZUxlbmd0aENvZGVkTnVtYmVyKGtleXNMZW5ndGgpO1xuICAgICAgZm9yIChsZXQgayA9IDA7IGsgPCBhdHRyTmFtZXMubGVuZ3RoOyArK2spIHtcbiAgICAgICAgcGFja2V0LndyaXRlTGVuZ3RoQ29kZWRTdHJpbmcoYXR0ck5hbWVzW2tdLCBlbmNvZGluZyk7XG4gICAgICAgIHBhY2tldC53cml0ZUxlbmd0aENvZGVkU3RyaW5nKFxuICAgICAgICAgIGNvbm5lY3RBdHRyaWJ1dGVzW2F0dHJOYW1lc1trXV0sXG4gICAgICAgICAgZW5jb2RpbmdcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHBhY2tldDtcbiAgfVxuXG4gIHRvUGFja2V0KCkge1xuICAgIGlmICh0eXBlb2YgdGhpcy51c2VyICE9PSAnc3RyaW5nJykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdcInVzZXJcIiBjb25uZWN0aW9uIGNvbmZpZyBwcm9wZXJ0eSBtdXN0IGJlIGEgc3RyaW5nJyk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgdGhpcy5kYXRhYmFzZSAhPT0gJ3N0cmluZycpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignXCJkYXRhYmFzZVwiIGNvbm5lY3Rpb24gY29uZmlnIHByb3BlcnR5IG11c3QgYmUgYSBzdHJpbmcnKTtcbiAgICB9XG4gICAgLy8gZHJ5IHJ1bjogY2FsY3VsYXRlIHJlc3VsdGluZyBwYWNrZXQgbGVuZ3RoXG4gICAgY29uc3QgcCA9IHRoaXMuc2VyaWFsaXplVG9CdWZmZXIoUGFja2V0Lk1vY2tCdWZmZXIoKSk7XG4gICAgcmV0dXJuIHRoaXMuc2VyaWFsaXplVG9CdWZmZXIoQnVmZmVyLmFsbG9jVW5zYWZlKHAub2Zmc2V0KSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBDaGFuZ2VVc2VyO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/packets/change_user.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/packets/close_statement.js":
/*!************************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/close_statement.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst Packet = __webpack_require__(/*! ../packets/packet */ \"(rsc)/./node_modules/mysql2/lib/packets/packet.js\");\nconst CommandCodes = __webpack_require__(/*! ../constants/commands */ \"(rsc)/./node_modules/mysql2/lib/constants/commands.js\");\n\nclass CloseStatement {\n  constructor(id) {\n    this.id = id;\n  }\n\n  // note: no response sent back\n  toPacket() {\n    const packet = new Packet(0, Buffer.allocUnsafe(9), 0, 9);\n    packet.offset = 4;\n    packet.writeInt8(CommandCodes.STMT_CLOSE);\n    packet.writeInt32(this.id);\n    return packet;\n  }\n}\n\nmodule.exports = CloseStatement;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wYWNrZXRzL2Nsb3NlX3N0YXRlbWVudC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixlQUFlLG1CQUFPLENBQUMsNEVBQW1CO0FBQzFDLHFCQUFxQixtQkFBTyxDQUFDLG9GQUF1Qjs7QUFFcEQ7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVhbF9lc3RhdGUvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wYWNrZXRzL2Nsb3NlX3N0YXRlbWVudC5qcz9lMGY4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgUGFja2V0ID0gcmVxdWlyZSgnLi4vcGFja2V0cy9wYWNrZXQnKTtcbmNvbnN0IENvbW1hbmRDb2RlcyA9IHJlcXVpcmUoJy4uL2NvbnN0YW50cy9jb21tYW5kcycpO1xuXG5jbGFzcyBDbG9zZVN0YXRlbWVudCB7XG4gIGNvbnN0cnVjdG9yKGlkKSB7XG4gICAgdGhpcy5pZCA9IGlkO1xuICB9XG5cbiAgLy8gbm90ZTogbm8gcmVzcG9uc2Ugc2VudCBiYWNrXG4gIHRvUGFja2V0KCkge1xuICAgIGNvbnN0IHBhY2tldCA9IG5ldyBQYWNrZXQoMCwgQnVmZmVyLmFsbG9jVW5zYWZlKDkpLCAwLCA5KTtcbiAgICBwYWNrZXQub2Zmc2V0ID0gNDtcbiAgICBwYWNrZXQud3JpdGVJbnQ4KENvbW1hbmRDb2Rlcy5TVE1UX0NMT1NFKTtcbiAgICBwYWNrZXQud3JpdGVJbnQzMih0aGlzLmlkKTtcbiAgICByZXR1cm4gcGFja2V0O1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gQ2xvc2VTdGF0ZW1lbnQ7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/packets/close_statement.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/packets/column_definition.js":
/*!**************************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/column_definition.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst Packet = __webpack_require__(/*! ../packets/packet */ \"(rsc)/./node_modules/mysql2/lib/packets/packet.js\");\nconst StringParser = __webpack_require__(/*! ../parsers/string */ \"(rsc)/./node_modules/mysql2/lib/parsers/string.js\");\nconst CharsetToEncoding = __webpack_require__(/*! ../constants/charset_encodings.js */ \"(rsc)/./node_modules/mysql2/lib/constants/charset_encodings.js\");\n\nconst fields = ['catalog', 'schema', 'table', 'orgTable', 'name', 'orgName'];\n\n// creating JS string is relatively expensive (compared to\n// reading few bytes from buffer) because all string properties\n// except for name are unlikely to be used we postpone\n// string conversion until property access\n//\n// TODO: watch for integration benchmarks (one with real network buffer)\n// there could be bad side effect as keeping reference to a buffer makes it\n// sit in the memory longer (usually until final .query() callback)\n// Latest v8 perform much better in regard to bufferer -> string conversion,\n// at some point of time this optimisation might become unnecessary\n// see https://github.com/sidorares/node-mysql2/pull/137\n//\nclass ColumnDefinition {\n  constructor(packet, clientEncoding) {\n    this._buf = packet.buffer;\n    this._clientEncoding = clientEncoding;\n    this._catalogLength = packet.readLengthCodedNumber();\n    this._catalogStart = packet.offset;\n    packet.offset += this._catalogLength;\n    this._schemaLength = packet.readLengthCodedNumber();\n    this._schemaStart = packet.offset;\n    packet.offset += this._schemaLength;\n    this._tableLength = packet.readLengthCodedNumber();\n    this._tableStart = packet.offset;\n    packet.offset += this._tableLength;\n    this._orgTableLength = packet.readLengthCodedNumber();\n    this._orgTableStart = packet.offset;\n    packet.offset += this._orgTableLength;\n    // name is always used, don't make it lazy\n    const _nameLength = packet.readLengthCodedNumber();\n    const _nameStart = packet.offset;\n    packet.offset += _nameLength;\n    this._orgNameLength = packet.readLengthCodedNumber();\n    this._orgNameStart = packet.offset;\n    packet.offset += this._orgNameLength;\n    packet.skip(1); //  length of the following fields (always 0x0c)\n    this.characterSet = packet.readInt16();\n    this.encoding = CharsetToEncoding[this.characterSet];\n    this.name = StringParser.decode(\n      this._buf,\n      this.encoding === 'binary' ? this._clientEncoding : this.encoding,\n      _nameStart,\n      _nameStart + _nameLength\n    );\n    this.columnLength = packet.readInt32();\n    this.columnType = packet.readInt8();\n    this.type = this.columnType;\n    this.flags = packet.readInt16();\n    this.decimals = packet.readInt8();\n  }\n\n  inspect() {\n    return {\n      catalog: this.catalog,\n      schema: this.schema,\n      name: this.name,\n      orgName: this.orgName,\n      table: this.table,\n      orgTable: this.orgTable,\n      characterSet: this.characterSet,\n      encoding: this.encoding,\n      columnLength: this.columnLength,\n      type: this.columnType,\n      flags: this.flags,\n      decimals: this.decimals\n    };\n  }\n\n  [Symbol.for('nodejs.util.inspect.custom')](depth, inspectOptions, inspect) {\n    const Types = __webpack_require__(/*! ../constants/types.js */ \"(rsc)/./node_modules/mysql2/lib/constants/types.js\");\n    const typeNames = [];\n    for (const t in Types) {\n      typeNames[Types[t]] = t;\n    }\n    const fiedFlags = __webpack_require__(/*! ../constants/field_flags.js */ \"(rsc)/./node_modules/mysql2/lib/constants/field_flags.js\");\n    const flagNames = [];\n    // TODO: respect inspectOptions.showHidden\n    //const inspectFlags = inspectOptions.showHidden ? this.flags : this.flags & ~fiedFlags.PRI_KEY;\n    const inspectFlags = this.flags;\n    for (const f in fiedFlags) {\n      if (inspectFlags & fiedFlags[f]) {\n        if (f === 'PRI_KEY') {\n          flagNames.push('PRIMARY KEY');\n        } else if (f === 'NOT_NULL') {\n          flagNames.push('NOT NULL');\n        } else if (f === 'BINARY') {\n          // ignore flag for now\n        } else if (f === 'MULTIPLE_KEY') {\n          // not sure if that should be part of inspection.\n          // in the schema usually this is part of index definition\n          // example: UNIQUE KEY `my_uniq_id` (`id_box_elements`,`id_router`)\n          // note that only first column has MULTIPLE_KEY flag set in this case\n          // so there is no good way of knowing that this is part of index just\n          // by looking at indifidual field flags\n        } else if (f === 'NO_DEFAULT_VALUE') {\n          // almost the same as NOT_NULL?\n        } else if (f === 'BLOB') {\n          // included in the type\n        } else if (f === 'UNSIGNED') {\n          // this should be first after type\n        } else if (f === 'TIMESTAMP') {\n          // timestamp flag is redundant for inspection - already included in type\n        } else if (f === 'ON_UPDATE_NOW') {\n          flagNames.push('ON UPDATE CURRENT_TIMESTAMP');\n        } else {\n          flagNames.push(f);\n        }\n      }\n    }\n\n    if (depth > 1) {\n      return inspect({\n        ...this.inspect(),\n        typeName: typeNames[this.columnType],\n        flags: flagNames,\n      });\n    }\n\n    const isUnsigned = this.flags & fiedFlags.UNSIGNED;\n\n    let typeName = typeNames[this.columnType];\n    if (typeName === 'BLOB') {\n      // TODO: check for non-utf8mb4 encoding\n      if (this.columnLength === 4294967295) {\n        typeName = 'LONGTEXT';\n      } else if (this.columnLength === 67108860) {\n        typeName = 'MEDIUMTEXT';\n      } else if (this.columnLength === 262140) {\n        typeName = 'TEXT';\n      } else if (this.columnLength === 1020) { // 255*4\n        typeName = 'TINYTEXT';\n      } else {\n        typeName = `BLOB(${this.columnLength})`;\n      }\n    } else if (typeName === 'VAR_STRING') {\n      // TODO: check for non-utf8mb4 encoding\n      typeName = `VARCHAR(${Math.ceil(this.columnLength/4)})`;\n    } else if (typeName === 'TINY') {\n      if (\n        (this.columnLength === 3 && isUnsigned) ||\n        (this.columnLength === 4 && !isUnsigned) ) {\n        typeName = 'TINYINT';\n      } else {\n        typeName = `TINYINT(${this.columnLength})`;\n      }\n    } else if (typeName === 'LONGLONG') {\n      if (this.columnLength === 20) {\n        typeName = 'BIGINT';\n      } else {\n        typeName = `BIGINT(${this.columnLength})`;\n      }\n    } else if (typeName === 'SHORT') {\n      if (isUnsigned && this.columnLength === 5) {\n        typeName = 'SMALLINT';\n      } else if (!isUnsigned && this.columnLength === 6) {\n        typeName = 'SMALLINT';\n      } else {\n        typeName = `SMALLINT(${this.columnLength})`;\n      }\n\n    } else if (typeName === 'LONG') {\n      if (isUnsigned &&  this.columnLength === 10) {\n        typeName = 'INT';\n      } else if (!isUnsigned && this.columnLength === 11) {\n        typeName = 'INT';\n      } else {\n        typeName = `INT(${this.columnLength})`;\n      }\n    } else if (typeName === 'INT24') {\n      if (isUnsigned && this.columnLength === 8) {\n        typeName = 'MEDIUMINT';\n      } else if (!isUnsigned && this.columnLength === 9) {\n        typeName = 'MEDIUMINT';\n      } else {\n        typeName = `MEDIUMINT(${this.columnLength})`;\n      }\n    } else if (typeName === 'DOUBLE') {\n      // DOUBLE without modifiers is reported as DOUBLE(22, 31)\n      if (this.columnLength === 22 && this.decimals === 31) {\n        typeName = 'DOUBLE';\n      } else {\n        typeName = `DOUBLE(${this.columnLength},${this.decimals})`;\n      }\n    } else if (typeName === 'FLOAT') {\n      // FLOAT without modifiers is reported as FLOAT(12, 31)\n      if (this.columnLength === 12 && this.decimals === 31) {\n        typeName = 'FLOAT';\n      } else {\n        typeName = `FLOAT(${this.columnLength},${this.decimals})`;\n      }\n    } else if (typeName === 'NEWDECIMAL') {\n      if (this.columnLength === 11 && this.decimals === 0) {\n        typeName = 'DECIMAL';\n      } else if (this.decimals === 0) {\n        // not sure why, but DECIMAL(13) is reported as DECIMAL(14, 0)\n        // and DECIMAL(13, 9) is reported as NEWDECIMAL(15, 9)\n        if (isUnsigned) {\n          typeName = `DECIMAL(${this.columnLength})`;\n        } else {\n          typeName = `DECIMAL(${this.columnLength - 1})`;\n        }\n      } else {\n        typeName = `DECIMAL(${this.columnLength - 2},${this.decimals})`;\n      }\n    } else {\n      typeName = `${typeNames[this.columnType]}(${this.columnLength})`;\n    }\n\n    if (isUnsigned) {\n      typeName += ' UNSIGNED';\n    }\n\n    // TODO respect colors option\n    return `\\`${this.name}\\` ${[typeName, ...flagNames].join(' ')}`;\n  }\n\n  static toPacket(column, sequenceId) {\n    let length = 17; // = 4 padding + 1 + 12 for the rest\n    fields.forEach(field => {\n      length += Packet.lengthCodedStringLength(\n        column[field],\n        CharsetToEncoding[column.characterSet]\n      );\n    });\n    const buffer = Buffer.allocUnsafe(length);\n\n    const packet = new Packet(sequenceId, buffer, 0, length);\n    function writeField(name) {\n      packet.writeLengthCodedString(\n        column[name],\n        CharsetToEncoding[column.characterSet]\n      );\n    }\n    packet.offset = 4;\n    fields.forEach(writeField);\n    packet.writeInt8(0x0c);\n    packet.writeInt16(column.characterSet);\n    packet.writeInt32(column.columnLength);\n    packet.writeInt8(column.columnType);\n    packet.writeInt16(column.flags);\n    packet.writeInt8(column.decimals);\n    packet.writeInt16(0); // filler\n    return packet;\n  }\n\n  // node-mysql compatibility: alias \"db\" to \"schema\"\n  get db() {\n    return this.schema;\n  }\n}\n\nconst addString = function(name) {\n  Object.defineProperty(ColumnDefinition.prototype, name, {\n    get: function() {\n      const start = this[`_${name}Start`];\n      const end = start + this[`_${name}Length`];\n      const val = StringParser.decode(\n        this._buf,\n        this.encoding === 'binary' ? this._clientEncoding : this.encoding,\n        start,\n        end\n      );\n\n      Object.defineProperty(this, name, {\n        value: val,\n        writable: false,\n        configurable: false,\n        enumerable: false\n      });\n\n      return val;\n    }\n  });\n};\n\naddString('catalog');\naddString('schema');\naddString('table');\naddString('orgTable');\naddString('orgName');\n\nmodule.exports = ColumnDefinition;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/packets/column_definition.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/packets/execute.js":
/*!****************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/execute.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst CursorType = __webpack_require__(/*! ../constants/cursor */ \"(rsc)/./node_modules/mysql2/lib/constants/cursor.js\");\nconst CommandCodes = __webpack_require__(/*! ../constants/commands */ \"(rsc)/./node_modules/mysql2/lib/constants/commands.js\");\nconst Types = __webpack_require__(/*! ../constants/types */ \"(rsc)/./node_modules/mysql2/lib/constants/types.js\");\nconst Packet = __webpack_require__(/*! ../packets/packet */ \"(rsc)/./node_modules/mysql2/lib/packets/packet.js\");\nconst CharsetToEncoding = __webpack_require__(/*! ../constants/charset_encodings.js */ \"(rsc)/./node_modules/mysql2/lib/constants/charset_encodings.js\");\n\nfunction isJSON(value) {\n  return (\n    Array.isArray(value) ||\n    value.constructor === Object ||\n    (typeof value.toJSON === 'function' && !Buffer.isBuffer(value))\n  );\n}\n\n/**\n * Converts a value to an object describing type, String/Buffer representation and length\n * @param {*} value\n */\nfunction toParameter(value, encoding, timezone) {\n  let type = Types.VAR_STRING;\n  let length;\n  let writer = function(value) {\n    // eslint-disable-next-line no-invalid-this\n    return Packet.prototype.writeLengthCodedString.call(this, value, encoding);\n  };\n  if (value !== null) {\n    switch (typeof value) {\n      case 'undefined':\n        throw new TypeError('Bind parameters must not contain undefined');\n\n      case 'number':\n        type = Types.DOUBLE;\n        length = 8;\n        writer = Packet.prototype.writeDouble;\n        break;\n\n      case 'boolean':\n        value = value | 0;\n        type = Types.TINY;\n        length = 1;\n        writer = Packet.prototype.writeInt8;\n        break;\n\n      case 'object':\n        if (Object.prototype.toString.call(value) === '[object Date]') {\n          type = Types.DATETIME;\n          length = 12;\n          writer = function(value) {\n            // eslint-disable-next-line no-invalid-this\n            return Packet.prototype.writeDate.call(this, value, timezone);\n          };\n        } else if (isJSON(value)) {\n          value = JSON.stringify(value);\n          type = Types.JSON;\n        } else if (Buffer.isBuffer(value)) {\n          length = Packet.lengthCodedNumberLength(value.length) + value.length;\n          writer = Packet.prototype.writeLengthCodedBuffer;\n        }\n        break;\n\n      default:\n        value = value.toString();\n    }\n  } else {\n    value = '';\n    type = Types.NULL;\n  }\n  if (!length) {\n    length = Packet.lengthCodedStringLength(value, encoding);\n  }\n  return { value, type, length, writer };\n}\n\nclass Execute {\n  constructor(id, parameters, charsetNumber, timezone) {\n    this.id = id;\n    this.parameters = parameters;\n    this.encoding = CharsetToEncoding[charsetNumber];\n    this.timezone = timezone;\n  }\n\n  static fromPacket(packet, encoding) {\n    const stmtId = packet.readInt32();\n    const flags = packet.readInt8();\n    const iterationCount = packet.readInt32();\n\n    let i = packet.offset;\n    while (i < packet.end - 1) {\n      if((packet.buffer[i+1] === Types.VAR_STRING \n        || packet.buffer[i+1] === Types.NULL \n        || packet.buffer[i+1] === Types.DOUBLE\n        || packet.buffer[i+1] === Types.TINY\n        || packet.buffer[i+1] === Types.DATETIME\n        || packet.buffer[i+1] === Types.JSON) && packet.buffer[i] === 1 && packet.buffer[i+2] === 0) {\n        break;\n      }\n      else {\n        packet.readInt8()\n      }\n      i++;\n    }\n\n    const types = [];\n\n    for(let i = packet.offset + 1; i < packet.end - 1; i++) {\n      if((packet.buffer[i] === Types.VAR_STRING \n        || packet.buffer[i] === Types.NULL \n        || packet.buffer[i] === Types.DOUBLE\n        || packet.buffer[i] === Types.TINY\n        || packet.buffer[i] === Types.DATETIME\n        || packet.buffer[i] === Types.JSON) && packet.buffer[i + 1] === 0) {\n        types.push(packet.buffer[i]);\n        packet.skip(2);\n      }\n    }\n\n    packet.skip(1);\n\n    const values = [];\n    for(let i = 0; i < types.length; i++) {\n      if(types[i] === Types.VAR_STRING) {\n        values.push(packet.readLengthCodedString(encoding))\n      }\n      else if(types[i] === Types.DOUBLE) {\n        values.push(packet.readDouble())\n      }\n      else if(types[i] === Types.TINY) {\n        values.push(packet.readInt8())\n      }\n      else if(types[i] === Types.DATETIME) {\n        values.push(packet.readDateTime())\n      }\n      else if(types[i] === Types.JSON) {\n        values.push(JSON.parse(packet.readLengthCodedString(encoding)))\n      }\n      if(types[i] === Types.NULL) {\n        values.push(null)\n      }\n    }\n\n    return { stmtId, flags, iterationCount, values };\n  }\n\n  toPacket() {\n    // TODO: don't try to calculate packet length in advance, allocate some big buffer in advance (header + 256 bytes?)\n    // and copy + reallocate if not enough\n    // 0 + 4 - length, seqId\n    // 4 + 1 - COM_EXECUTE\n    // 5 + 4 - stmtId\n    // 9 + 1 - flags\n    // 10 + 4 - iteration-count (always 1)\n    let length = 14;\n    let parameters;\n    if (this.parameters && this.parameters.length > 0) {\n      length += Math.floor((this.parameters.length + 7) / 8);\n      length += 1; // new-params-bound-flag\n      length += 2 * this.parameters.length; // type byte for each parameter if new-params-bound-flag is set\n      parameters = this.parameters.map(value =>\n        toParameter(value, this.encoding, this.timezone)\n      );\n      length += parameters.reduce(\n        (accumulator, parameter) => accumulator + parameter.length,\n        0\n      );\n    }\n    const buffer = Buffer.allocUnsafe(length);\n    const packet = new Packet(0, buffer, 0, length);\n    packet.offset = 4;\n    packet.writeInt8(CommandCodes.STMT_EXECUTE);\n    packet.writeInt32(this.id);\n    packet.writeInt8(CursorType.NO_CURSOR); // flags\n    packet.writeInt32(1); // iteration-count, always 1\n    if (parameters) {\n      let bitmap = 0;\n      let bitValue = 1;\n      parameters.forEach(parameter => {\n        if (parameter.type === Types.NULL) {\n          bitmap += bitValue;\n        }\n        bitValue *= 2;\n        if (bitValue === 256) {\n          packet.writeInt8(bitmap);\n          bitmap = 0;\n          bitValue = 1;\n        }\n      });\n      if (bitValue !== 1) {\n        packet.writeInt8(bitmap);\n      }\n      // TODO: explain meaning of the flag\n      // afaik, if set n*2 bytes with type of parameter are sent before parameters\n      // if not, previous execution types are used (TODO prooflink)\n      packet.writeInt8(1); // new-params-bound-flag\n      // Write parameter types\n      parameters.forEach(parameter => {\n        packet.writeInt8(parameter.type); // field type\n        packet.writeInt8(0); // parameter flag\n      });\n      // Write parameter values\n      parameters.forEach(parameter => {\n        if (parameter.type !== Types.NULL) {\n          parameter.writer.call(packet, parameter.value);\n        }\n      });\n    }\n    return packet;\n  }\n}\n\nmodule.exports = Execute;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/packets/execute.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/packets/handshake.js":
/*!******************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/handshake.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst Packet = __webpack_require__(/*! ../packets/packet */ \"(rsc)/./node_modules/mysql2/lib/packets/packet.js\");\nconst ClientConstants = __webpack_require__(/*! ../constants/client.js */ \"(rsc)/./node_modules/mysql2/lib/constants/client.js\");\n\n// https://dev.mysql.com/doc/internals/en/connection-phase-packets.html#packet-Protocol::Handshake\n\nclass Handshake {\n  constructor(args) {\n    this.protocolVersion = args.protocolVersion;\n    this.serverVersion = args.serverVersion;\n    this.capabilityFlags = args.capabilityFlags;\n    this.connectionId = args.connectionId;\n    this.authPluginData1 = args.authPluginData1;\n    this.authPluginData2 = args.authPluginData2;\n    this.characterSet = args.characterSet;\n    this.statusFlags = args.statusFlags;\n    this.autPluginName = args.autPluginName;\n  }\n\n  setScrambleData(cb) {\n    (__webpack_require__(/*! crypto */ \"crypto\").randomBytes)(20, (err, data) => {\n      if (err) {\n        cb(err);\n        return;\n      }\n      this.authPluginData1 = data.slice(0, 8);\n      this.authPluginData2 = data.slice(8, 20);\n      cb();\n    });\n  }\n\n  toPacket(sequenceId) {\n    const length = 68 + Buffer.byteLength(this.serverVersion, 'utf8');\n    const buffer = Buffer.alloc(length + 4, 0); // zero fill, 10 bytes filler later needs to contain zeros\n    const packet = new Packet(sequenceId, buffer, 0, length + 4);\n    packet.offset = 4;\n    packet.writeInt8(this.protocolVersion);\n    packet.writeString(this.serverVersion, 'cesu8');\n    packet.writeInt8(0);\n    packet.writeInt32(this.connectionId);\n    packet.writeBuffer(this.authPluginData1);\n    packet.writeInt8(0);\n    const capabilityFlagsBuffer = Buffer.allocUnsafe(4);\n    capabilityFlagsBuffer.writeUInt32LE(this.capabilityFlags, 0);\n    packet.writeBuffer(capabilityFlagsBuffer.slice(0, 2));\n    packet.writeInt8(this.characterSet);\n    packet.writeInt16(this.statusFlags);\n    packet.writeBuffer(capabilityFlagsBuffer.slice(2, 4));\n    packet.writeInt8(21); // authPluginDataLength\n    packet.skip(10);\n    packet.writeBuffer(this.authPluginData2);\n    packet.writeInt8(0);\n    packet.writeString('mysql_native_password', 'latin1');\n    packet.writeInt8(0);\n    return packet;\n  }\n\n  static fromPacket(packet) {\n    const args = {};\n    args.protocolVersion = packet.readInt8();\n    args.serverVersion = packet.readNullTerminatedString('cesu8');\n    args.connectionId = packet.readInt32();\n    args.authPluginData1 = packet.readBuffer(8);\n    packet.skip(1);\n    const capabilityFlagsBuffer = Buffer.allocUnsafe(4);\n    capabilityFlagsBuffer[0] = packet.readInt8();\n    capabilityFlagsBuffer[1] = packet.readInt8();\n    if (packet.haveMoreData()) {\n      args.characterSet = packet.readInt8();\n      args.statusFlags = packet.readInt16();\n      // upper 2 bytes\n      capabilityFlagsBuffer[2] = packet.readInt8();\n      capabilityFlagsBuffer[3] = packet.readInt8();\n      args.capabilityFlags = capabilityFlagsBuffer.readUInt32LE(0);\n      if (args.capabilityFlags & ClientConstants.PLUGIN_AUTH) {\n        args.authPluginDataLength = packet.readInt8();\n      } else {\n        args.authPluginDataLength = 0;\n        packet.skip(1);\n      }\n      packet.skip(10);\n    } else {\n      args.capabilityFlags = capabilityFlagsBuffer.readUInt16LE(0);\n    }\n\n    const isSecureConnection =\n      args.capabilityFlags & ClientConstants.SECURE_CONNECTION;\n    if (isSecureConnection) {\n      const authPluginDataLength = args.authPluginDataLength;\n      if (authPluginDataLength === 0) {\n        // for Secure Password Authentication\n        args.authPluginDataLength = 20;\n        args.authPluginData2 = packet.readBuffer(12);\n        packet.skip(1);\n      } else {\n        // length > 0\n        // for Custom Auth Plugin (PLUGIN_AUTH)\n        const len = Math.max(13, authPluginDataLength - 8);\n        args.authPluginData2 = packet.readBuffer(len);\n      }\n    }\n\n    if (args.capabilityFlags & ClientConstants.PLUGIN_AUTH) {\n      args.autPluginName = packet.readNullTerminatedString('ascii');\n    }\n\n    return new Handshake(args);\n  }\n}\n\nmodule.exports = Handshake;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wYWNrZXRzL2hhbmRzaGFrZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixlQUFlLG1CQUFPLENBQUMsNEVBQW1CO0FBQzFDLHdCQUF3QixtQkFBTyxDQUFDLG1GQUF3Qjs7QUFFeEQ7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsSUFBSSx5REFBNkI7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTtBQUNBLGdEQUFnRDtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVhbF9lc3RhdGUvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wYWNrZXRzL2hhbmRzaGFrZS5qcz80NDVmIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgUGFja2V0ID0gcmVxdWlyZSgnLi4vcGFja2V0cy9wYWNrZXQnKTtcbmNvbnN0IENsaWVudENvbnN0YW50cyA9IHJlcXVpcmUoJy4uL2NvbnN0YW50cy9jbGllbnQuanMnKTtcblxuLy8gaHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYy9pbnRlcm5hbHMvZW4vY29ubmVjdGlvbi1waGFzZS1wYWNrZXRzLmh0bWwjcGFja2V0LVByb3RvY29sOjpIYW5kc2hha2VcblxuY2xhc3MgSGFuZHNoYWtlIHtcbiAgY29uc3RydWN0b3IoYXJncykge1xuICAgIHRoaXMucHJvdG9jb2xWZXJzaW9uID0gYXJncy5wcm90b2NvbFZlcnNpb247XG4gICAgdGhpcy5zZXJ2ZXJWZXJzaW9uID0gYXJncy5zZXJ2ZXJWZXJzaW9uO1xuICAgIHRoaXMuY2FwYWJpbGl0eUZsYWdzID0gYXJncy5jYXBhYmlsaXR5RmxhZ3M7XG4gICAgdGhpcy5jb25uZWN0aW9uSWQgPSBhcmdzLmNvbm5lY3Rpb25JZDtcbiAgICB0aGlzLmF1dGhQbHVnaW5EYXRhMSA9IGFyZ3MuYXV0aFBsdWdpbkRhdGExO1xuICAgIHRoaXMuYXV0aFBsdWdpbkRhdGEyID0gYXJncy5hdXRoUGx1Z2luRGF0YTI7XG4gICAgdGhpcy5jaGFyYWN0ZXJTZXQgPSBhcmdzLmNoYXJhY3RlclNldDtcbiAgICB0aGlzLnN0YXR1c0ZsYWdzID0gYXJncy5zdGF0dXNGbGFncztcbiAgICB0aGlzLmF1dFBsdWdpbk5hbWUgPSBhcmdzLmF1dFBsdWdpbk5hbWU7XG4gIH1cblxuICBzZXRTY3JhbWJsZURhdGEoY2IpIHtcbiAgICByZXF1aXJlKCdjcnlwdG8nKS5yYW5kb21CeXRlcygyMCwgKGVyciwgZGF0YSkgPT4ge1xuICAgICAgaWYgKGVycikge1xuICAgICAgICBjYihlcnIpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICB0aGlzLmF1dGhQbHVnaW5EYXRhMSA9IGRhdGEuc2xpY2UoMCwgOCk7XG4gICAgICB0aGlzLmF1dGhQbHVnaW5EYXRhMiA9IGRhdGEuc2xpY2UoOCwgMjApO1xuICAgICAgY2IoKTtcbiAgICB9KTtcbiAgfVxuXG4gIHRvUGFja2V0KHNlcXVlbmNlSWQpIHtcbiAgICBjb25zdCBsZW5ndGggPSA2OCArIEJ1ZmZlci5ieXRlTGVuZ3RoKHRoaXMuc2VydmVyVmVyc2lvbiwgJ3V0ZjgnKTtcbiAgICBjb25zdCBidWZmZXIgPSBCdWZmZXIuYWxsb2MobGVuZ3RoICsgNCwgMCk7IC8vIHplcm8gZmlsbCwgMTAgYnl0ZXMgZmlsbGVyIGxhdGVyIG5lZWRzIHRvIGNvbnRhaW4gemVyb3NcbiAgICBjb25zdCBwYWNrZXQgPSBuZXcgUGFja2V0KHNlcXVlbmNlSWQsIGJ1ZmZlciwgMCwgbGVuZ3RoICsgNCk7XG4gICAgcGFja2V0Lm9mZnNldCA9IDQ7XG4gICAgcGFja2V0LndyaXRlSW50OCh0aGlzLnByb3RvY29sVmVyc2lvbik7XG4gICAgcGFja2V0LndyaXRlU3RyaW5nKHRoaXMuc2VydmVyVmVyc2lvbiwgJ2Nlc3U4Jyk7XG4gICAgcGFja2V0LndyaXRlSW50OCgwKTtcbiAgICBwYWNrZXQud3JpdGVJbnQzMih0aGlzLmNvbm5lY3Rpb25JZCk7XG4gICAgcGFja2V0LndyaXRlQnVmZmVyKHRoaXMuYXV0aFBsdWdpbkRhdGExKTtcbiAgICBwYWNrZXQud3JpdGVJbnQ4KDApO1xuICAgIGNvbnN0IGNhcGFiaWxpdHlGbGFnc0J1ZmZlciA9IEJ1ZmZlci5hbGxvY1Vuc2FmZSg0KTtcbiAgICBjYXBhYmlsaXR5RmxhZ3NCdWZmZXIud3JpdGVVSW50MzJMRSh0aGlzLmNhcGFiaWxpdHlGbGFncywgMCk7XG4gICAgcGFja2V0LndyaXRlQnVmZmVyKGNhcGFiaWxpdHlGbGFnc0J1ZmZlci5zbGljZSgwLCAyKSk7XG4gICAgcGFja2V0LndyaXRlSW50OCh0aGlzLmNoYXJhY3RlclNldCk7XG4gICAgcGFja2V0LndyaXRlSW50MTYodGhpcy5zdGF0dXNGbGFncyk7XG4gICAgcGFja2V0LndyaXRlQnVmZmVyKGNhcGFiaWxpdHlGbGFnc0J1ZmZlci5zbGljZSgyLCA0KSk7XG4gICAgcGFja2V0LndyaXRlSW50OCgyMSk7IC8vIGF1dGhQbHVnaW5EYXRhTGVuZ3RoXG4gICAgcGFja2V0LnNraXAoMTApO1xuICAgIHBhY2tldC53cml0ZUJ1ZmZlcih0aGlzLmF1dGhQbHVnaW5EYXRhMik7XG4gICAgcGFja2V0LndyaXRlSW50OCgwKTtcbiAgICBwYWNrZXQud3JpdGVTdHJpbmcoJ215c3FsX25hdGl2ZV9wYXNzd29yZCcsICdsYXRpbjEnKTtcbiAgICBwYWNrZXQud3JpdGVJbnQ4KDApO1xuICAgIHJldHVybiBwYWNrZXQ7XG4gIH1cblxuICBzdGF0aWMgZnJvbVBhY2tldChwYWNrZXQpIHtcbiAgICBjb25zdCBhcmdzID0ge307XG4gICAgYXJncy5wcm90b2NvbFZlcnNpb24gPSBwYWNrZXQucmVhZEludDgoKTtcbiAgICBhcmdzLnNlcnZlclZlcnNpb24gPSBwYWNrZXQucmVhZE51bGxUZXJtaW5hdGVkU3RyaW5nKCdjZXN1OCcpO1xuICAgIGFyZ3MuY29ubmVjdGlvbklkID0gcGFja2V0LnJlYWRJbnQzMigpO1xuICAgIGFyZ3MuYXV0aFBsdWdpbkRhdGExID0gcGFja2V0LnJlYWRCdWZmZXIoOCk7XG4gICAgcGFja2V0LnNraXAoMSk7XG4gICAgY29uc3QgY2FwYWJpbGl0eUZsYWdzQnVmZmVyID0gQnVmZmVyLmFsbG9jVW5zYWZlKDQpO1xuICAgIGNhcGFiaWxpdHlGbGFnc0J1ZmZlclswXSA9IHBhY2tldC5yZWFkSW50OCgpO1xuICAgIGNhcGFiaWxpdHlGbGFnc0J1ZmZlclsxXSA9IHBhY2tldC5yZWFkSW50OCgpO1xuICAgIGlmIChwYWNrZXQuaGF2ZU1vcmVEYXRhKCkpIHtcbiAgICAgIGFyZ3MuY2hhcmFjdGVyU2V0ID0gcGFja2V0LnJlYWRJbnQ4KCk7XG4gICAgICBhcmdzLnN0YXR1c0ZsYWdzID0gcGFja2V0LnJlYWRJbnQxNigpO1xuICAgICAgLy8gdXBwZXIgMiBieXRlc1xuICAgICAgY2FwYWJpbGl0eUZsYWdzQnVmZmVyWzJdID0gcGFja2V0LnJlYWRJbnQ4KCk7XG4gICAgICBjYXBhYmlsaXR5RmxhZ3NCdWZmZXJbM10gPSBwYWNrZXQucmVhZEludDgoKTtcbiAgICAgIGFyZ3MuY2FwYWJpbGl0eUZsYWdzID0gY2FwYWJpbGl0eUZsYWdzQnVmZmVyLnJlYWRVSW50MzJMRSgwKTtcbiAgICAgIGlmIChhcmdzLmNhcGFiaWxpdHlGbGFncyAmIENsaWVudENvbnN0YW50cy5QTFVHSU5fQVVUSCkge1xuICAgICAgICBhcmdzLmF1dGhQbHVnaW5EYXRhTGVuZ3RoID0gcGFja2V0LnJlYWRJbnQ4KCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBhcmdzLmF1dGhQbHVnaW5EYXRhTGVuZ3RoID0gMDtcbiAgICAgICAgcGFja2V0LnNraXAoMSk7XG4gICAgICB9XG4gICAgICBwYWNrZXQuc2tpcCgxMCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFyZ3MuY2FwYWJpbGl0eUZsYWdzID0gY2FwYWJpbGl0eUZsYWdzQnVmZmVyLnJlYWRVSW50MTZMRSgwKTtcbiAgICB9XG5cbiAgICBjb25zdCBpc1NlY3VyZUNvbm5lY3Rpb24gPVxuICAgICAgYXJncy5jYXBhYmlsaXR5RmxhZ3MgJiBDbGllbnRDb25zdGFudHMuU0VDVVJFX0NPTk5FQ1RJT047XG4gICAgaWYgKGlzU2VjdXJlQ29ubmVjdGlvbikge1xuICAgICAgY29uc3QgYXV0aFBsdWdpbkRhdGFMZW5ndGggPSBhcmdzLmF1dGhQbHVnaW5EYXRhTGVuZ3RoO1xuICAgICAgaWYgKGF1dGhQbHVnaW5EYXRhTGVuZ3RoID09PSAwKSB7XG4gICAgICAgIC8vIGZvciBTZWN1cmUgUGFzc3dvcmQgQXV0aGVudGljYXRpb25cbiAgICAgICAgYXJncy5hdXRoUGx1Z2luRGF0YUxlbmd0aCA9IDIwO1xuICAgICAgICBhcmdzLmF1dGhQbHVnaW5EYXRhMiA9IHBhY2tldC5yZWFkQnVmZmVyKDEyKTtcbiAgICAgICAgcGFja2V0LnNraXAoMSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBsZW5ndGggPiAwXG4gICAgICAgIC8vIGZvciBDdXN0b20gQXV0aCBQbHVnaW4gKFBMVUdJTl9BVVRIKVxuICAgICAgICBjb25zdCBsZW4gPSBNYXRoLm1heCgxMywgYXV0aFBsdWdpbkRhdGFMZW5ndGggLSA4KTtcbiAgICAgICAgYXJncy5hdXRoUGx1Z2luRGF0YTIgPSBwYWNrZXQucmVhZEJ1ZmZlcihsZW4pO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChhcmdzLmNhcGFiaWxpdHlGbGFncyAmIENsaWVudENvbnN0YW50cy5QTFVHSU5fQVVUSCkge1xuICAgICAgYXJncy5hdXRQbHVnaW5OYW1lID0gcGFja2V0LnJlYWROdWxsVGVybWluYXRlZFN0cmluZygnYXNjaWknKTtcbiAgICB9XG5cbiAgICByZXR1cm4gbmV3IEhhbmRzaGFrZShhcmdzKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEhhbmRzaGFrZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/packets/handshake.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/packets/handshake_response.js":
/*!***************************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/handshake_response.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst ClientConstants = __webpack_require__(/*! ../constants/client.js */ \"(rsc)/./node_modules/mysql2/lib/constants/client.js\");\nconst CharsetToEncoding = __webpack_require__(/*! ../constants/charset_encodings.js */ \"(rsc)/./node_modules/mysql2/lib/constants/charset_encodings.js\");\nconst Packet = __webpack_require__(/*! ../packets/packet.js */ \"(rsc)/./node_modules/mysql2/lib/packets/packet.js\");\n\nconst auth41 = __webpack_require__(/*! ../auth_41.js */ \"(rsc)/./node_modules/mysql2/lib/auth_41.js\");\n\nclass HandshakeResponse {\n  constructor(handshake) {\n    this.user = handshake.user || '';\n    this.database = handshake.database || '';\n    this.password = handshake.password || '';\n    this.passwordSha1 = handshake.passwordSha1;\n    this.authPluginData1 = handshake.authPluginData1;\n    this.authPluginData2 = handshake.authPluginData2;\n    this.compress = handshake.compress;\n    this.clientFlags = handshake.flags;\n    // TODO: pre-4.1 auth support\n    let authToken;\n    if (this.passwordSha1) {\n      authToken = auth41.calculateTokenFromPasswordSha(\n        this.passwordSha1,\n        this.authPluginData1,\n        this.authPluginData2\n      );\n    } else {\n      authToken = auth41.calculateToken(\n        this.password,\n        this.authPluginData1,\n        this.authPluginData2\n      );\n    }\n    this.authToken = authToken;\n    this.charsetNumber = handshake.charsetNumber;\n    this.encoding = CharsetToEncoding[handshake.charsetNumber];\n    this.connectAttributes = handshake.connectAttributes;\n  }\n\n  serializeResponse(buffer) {\n    const isSet = flag => this.clientFlags & ClientConstants[flag];\n    const packet = new Packet(0, buffer, 0, buffer.length);\n    packet.offset = 4;\n    packet.writeInt32(this.clientFlags);\n    packet.writeInt32(0); // max packet size. todo: move to config\n    packet.writeInt8(this.charsetNumber);\n    packet.skip(23);\n    const encoding = this.encoding;\n    packet.writeNullTerminatedString(this.user, encoding);\n    let k;\n    if (isSet('PLUGIN_AUTH_LENENC_CLIENT_DATA')) {\n      packet.writeLengthCodedNumber(this.authToken.length);\n      packet.writeBuffer(this.authToken);\n    } else if (isSet('SECURE_CONNECTION')) {\n      packet.writeInt8(this.authToken.length);\n      packet.writeBuffer(this.authToken);\n    } else {\n      packet.writeBuffer(this.authToken);\n      packet.writeInt8(0);\n    }\n    if (isSet('CONNECT_WITH_DB')) {\n      packet.writeNullTerminatedString(this.database, encoding);\n    }\n    if (isSet('PLUGIN_AUTH')) {\n      // TODO: pass from config\n      packet.writeNullTerminatedString('mysql_native_password', 'latin1');\n    }\n    if (isSet('CONNECT_ATTRS')) {\n      const connectAttributes = this.connectAttributes || {};\n      const attrNames = Object.keys(connectAttributes);\n      let keysLength = 0;\n      for (k = 0; k < attrNames.length; ++k) {\n        keysLength += Packet.lengthCodedStringLength(attrNames[k], encoding);\n        keysLength += Packet.lengthCodedStringLength(\n          connectAttributes[attrNames[k]],\n          encoding\n        );\n      }\n      packet.writeLengthCodedNumber(keysLength);\n      for (k = 0; k < attrNames.length; ++k) {\n        packet.writeLengthCodedString(attrNames[k], encoding);\n        packet.writeLengthCodedString(\n          connectAttributes[attrNames[k]],\n          encoding\n        );\n      }\n    }\n    return packet;\n  }\n\n  toPacket() {\n    if (typeof this.user !== 'string') {\n      throw new Error('\"user\" connection config property must be a string');\n    }\n    if (typeof this.database !== 'string') {\n      throw new Error('\"database\" connection config property must be a string');\n    }\n    // dry run: calculate resulting packet length\n    const p = this.serializeResponse(Packet.MockBuffer());\n    return this.serializeResponse(Buffer.alloc(p.offset));\n  }\n  static fromPacket(packet) {\n    const args = {};\n    args.clientFlags = packet.readInt32();\n    function isSet(flag) {\n      return args.clientFlags & ClientConstants[flag];\n    }\n    args.maxPacketSize = packet.readInt32();\n    args.charsetNumber = packet.readInt8();\n    const encoding = CharsetToEncoding[args.charsetNumber];\n    args.encoding = encoding;\n    packet.skip(23);\n    args.user = packet.readNullTerminatedString(encoding);\n    let authTokenLength;\n    if (isSet('PLUGIN_AUTH_LENENC_CLIENT_DATA')) {\n      authTokenLength = packet.readLengthCodedNumber(encoding);\n      args.authToken = packet.readBuffer(authTokenLength);\n    } else if (isSet('SECURE_CONNECTION')) {\n      authTokenLength = packet.readInt8();\n      args.authToken = packet.readBuffer(authTokenLength);\n    } else {\n      args.authToken = packet.readNullTerminatedString(encoding);\n    }\n    if (isSet('CONNECT_WITH_DB')) {\n      args.database = packet.readNullTerminatedString(encoding);\n    }\n    if (isSet('PLUGIN_AUTH')) {\n      args.authPluginName = packet.readNullTerminatedString(encoding);\n    }\n    if (isSet('CONNECT_ATTRS')) {\n      const keysLength = packet.readLengthCodedNumber(encoding);\n      const keysEnd = packet.offset + keysLength;\n      const attrs = {};\n      while (packet.offset < keysEnd) {\n        attrs[\n          packet.readLengthCodedString(encoding)\n        ] = packet.readLengthCodedString(encoding);\n      }\n      args.connectAttributes = attrs;\n    }\n    return args;\n  }\n}\n\nmodule.exports = HandshakeResponse;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/packets/handshake_response.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/packets/index.js":
/*!**************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/index.js ***!
  \**************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("// This file was modified by Oracle on June 1, 2021.\n// A utility method was introduced to generate an Error instance from a\n// binary server packet.\n// Modifications copyright (c) 2021, Oracle and/or its affiliates.\n\n// This file was modified by Oracle on September 21, 2021.\n// The new AuthNextFactor packet is now available.\n// Modifications copyright (c) 2021, Oracle and/or its affiliates.\n\n\n\nconst process = __webpack_require__(/*! process */ \"process\");\n\nconst AuthNextFactor = __webpack_require__(/*! ./auth_next_factor */ \"(rsc)/./node_modules/mysql2/lib/packets/auth_next_factor.js\");\nconst AuthSwitchRequest = __webpack_require__(/*! ./auth_switch_request */ \"(rsc)/./node_modules/mysql2/lib/packets/auth_switch_request.js\");\nconst AuthSwitchRequestMoreData = __webpack_require__(/*! ./auth_switch_request_more_data */ \"(rsc)/./node_modules/mysql2/lib/packets/auth_switch_request_more_data.js\");\nconst AuthSwitchResponse = __webpack_require__(/*! ./auth_switch_response */ \"(rsc)/./node_modules/mysql2/lib/packets/auth_switch_response.js\");\nconst BinaryRow = __webpack_require__(/*! ./binary_row */ \"(rsc)/./node_modules/mysql2/lib/packets/binary_row.js\");\nconst BinlogDump = __webpack_require__(/*! ./binlog_dump */ \"(rsc)/./node_modules/mysql2/lib/packets/binlog_dump.js\");\nconst ChangeUser = __webpack_require__(/*! ./change_user */ \"(rsc)/./node_modules/mysql2/lib/packets/change_user.js\");\nconst CloseStatement = __webpack_require__(/*! ./close_statement */ \"(rsc)/./node_modules/mysql2/lib/packets/close_statement.js\");\nconst ColumnDefinition = __webpack_require__(/*! ./column_definition */ \"(rsc)/./node_modules/mysql2/lib/packets/column_definition.js\");\nconst Execute = __webpack_require__(/*! ./execute */ \"(rsc)/./node_modules/mysql2/lib/packets/execute.js\");\nconst Handshake = __webpack_require__(/*! ./handshake */ \"(rsc)/./node_modules/mysql2/lib/packets/handshake.js\");\nconst HandshakeResponse = __webpack_require__(/*! ./handshake_response */ \"(rsc)/./node_modules/mysql2/lib/packets/handshake_response.js\");\nconst PrepareStatement = __webpack_require__(/*! ./prepare_statement */ \"(rsc)/./node_modules/mysql2/lib/packets/prepare_statement.js\");\nconst PreparedStatementHeader = __webpack_require__(/*! ./prepared_statement_header */ \"(rsc)/./node_modules/mysql2/lib/packets/prepared_statement_header.js\");\nconst Query = __webpack_require__(/*! ./query */ \"(rsc)/./node_modules/mysql2/lib/packets/query.js\");\nconst RegisterSlave = __webpack_require__(/*! ./register_slave */ \"(rsc)/./node_modules/mysql2/lib/packets/register_slave.js\");\nconst ResultSetHeader = __webpack_require__(/*! ./resultset_header */ \"(rsc)/./node_modules/mysql2/lib/packets/resultset_header.js\");\nconst SSLRequest = __webpack_require__(/*! ./ssl_request */ \"(rsc)/./node_modules/mysql2/lib/packets/ssl_request.js\");\nconst TextRow = __webpack_require__(/*! ./text_row */ \"(rsc)/./node_modules/mysql2/lib/packets/text_row.js\");\n\nconst ctorMap = {\n  AuthNextFactor,\n  AuthSwitchRequest,\n  AuthSwitchRequestMoreData,\n  AuthSwitchResponse,\n  BinaryRow,\n  BinlogDump,\n  ChangeUser,\n  CloseStatement,\n  ColumnDefinition,\n  Execute,\n  Handshake,\n  HandshakeResponse,\n  PrepareStatement,\n  PreparedStatementHeader,\n  Query,\n  RegisterSlave,\n  ResultSetHeader,\n  SSLRequest,\n  TextRow\n};\nObject.entries(ctorMap).forEach(([name, ctor]) => {\n  module.exports[name] = ctor;\n  // monkey-patch it to include name if debug is on\n  if (process.env.NODE_DEBUG) {\n    if (ctor.prototype.toPacket) {\n      const old = ctor.prototype.toPacket;\n      ctor.prototype.toPacket = function() {\n        const p = old.call(this);\n        p._name = name;\n        return p;\n      };\n    }\n  }\n});\n\n// simple packets:\nconst Packet = __webpack_require__(/*! ./packet */ \"(rsc)/./node_modules/mysql2/lib/packets/packet.js\");\nexports.Packet = Packet;\n\nclass OK {\n  static toPacket(args, encoding) {\n    args = args || {};\n    const affectedRows = args.affectedRows || 0;\n    const insertId = args.insertId || 0;\n    const serverStatus = args.serverStatus || 0;\n    const warningCount = args.warningCount || 0;\n    const message = args.message || '';\n\n    let length = 9 + Packet.lengthCodedNumberLength(affectedRows);\n    length += Packet.lengthCodedNumberLength(insertId);\n\n    const buffer = Buffer.allocUnsafe(length);\n    const packet = new Packet(0, buffer, 0, length);\n    packet.offset = 4;\n    packet.writeInt8(0);\n    packet.writeLengthCodedNumber(affectedRows);\n    packet.writeLengthCodedNumber(insertId);\n    packet.writeInt16(serverStatus);\n    packet.writeInt16(warningCount);\n    packet.writeString(message, encoding);\n    packet._name = 'OK';\n    return packet;\n  }\n}\n\nexports.OK = OK;\n\n// warnings, statusFlags\nclass EOF {\n  static toPacket(warnings, statusFlags) {\n    if (typeof warnings === 'undefined') {\n      warnings = 0;\n    }\n    if (typeof statusFlags === 'undefined') {\n      statusFlags = 0;\n    }\n    const packet = new Packet(0, Buffer.allocUnsafe(9), 0, 9);\n    packet.offset = 4;\n    packet.writeInt8(0xfe);\n    packet.writeInt16(warnings);\n    packet.writeInt16(statusFlags);\n    packet._name = 'EOF';\n    return packet;\n  }\n}\n\nexports.EOF = EOF;\n\nclass Error {\n  static toPacket(args, encoding) {\n    const length = 13 + Buffer.byteLength(args.message, 'utf8');\n    const packet = new Packet(0, Buffer.allocUnsafe(length), 0, length);\n    packet.offset = 4;\n    packet.writeInt8(0xff);\n    packet.writeInt16(args.code);\n    // TODO: sql state parameter\n    packet.writeString('#_____', encoding);\n    packet.writeString(args.message, encoding);\n    packet._name = 'Error';\n    return packet;\n  }\n\n  static fromPacket(packet) {\n    packet.readInt8(); // marker\n    const code = packet.readInt16();\n    packet.readString(1, 'ascii'); // sql state marker\n    // The SQL state of the ERR_Packet which is always 5 bytes long.\n    // https://dev.mysql.com/doc/dev/mysql-server/8.0.11/page_protocol_basic_dt_strings.html#sect_protocol_basic_dt_string_fix\n    packet.readString(5, 'ascii'); // sql state (ignore for now)\n    const message = packet.readNullTerminatedString('utf8');\n    const error = new Error();\n    error.message = message;\n    error.code = code;\n    return error;\n  }\n}\n\nexports.Error = Error;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/packets/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/packets/packet.js":
/*!***************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/packet.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("// This file was modified by Oracle on June 1, 2021.\n// A comment describing some changes in the strict default SQL mode regarding\n// non-standard dates was introduced.\n// Modifications copyright (c) 2021, Oracle and/or its affiliates.\n\n\n\nconst ErrorCodeToName = __webpack_require__(/*! ../constants/errors.js */ \"(rsc)/./node_modules/mysql2/lib/constants/errors.js\");\nconst NativeBuffer = (__webpack_require__(/*! buffer */ \"buffer\").Buffer);\nconst Long = __webpack_require__(/*! long */ \"(rsc)/./node_modules/long/umd/index.js\");\nconst StringParser = __webpack_require__(/*! ../parsers/string.js */ \"(rsc)/./node_modules/mysql2/lib/parsers/string.js\");\n\nconst INVALID_DATE = new Date(NaN);\n\n// this is nearly duplicate of previous function so generated code is not slower\n// due to \"if (dateStrings)\" branching\nconst pad = '000000000000';\nfunction leftPad(num, value) {\n  const s = value.toString();\n  // if we don't need to pad\n  if (s.length >= num) {\n    return s;\n  }\n  return (pad + s).slice(-num);\n}\n\n// The whole reason parse* function below exist\n// is because String creation is relatively expensive (at least with V8), and if we have\n// a buffer with \"12345\" content ideally we would like to bypass intermediate\n// \"12345\" string creation and directly build 12345 number out of\n// <Buffer 31 32 33 34 35> data.\n// In my benchmarks the difference is ~25M 8-digit numbers per second vs\n// 4.5 M using Number(packet.readLengthCodedString())\n// not used when size is close to max precision as series of *10 accumulate error\n// and approximate result mihgt be diffreent from (approximate as well) Number(bigNumStringValue))\n// In the futire node version if speed difference is smaller parse* functions might be removed\n// don't consider them as Packet public API\n\nconst minus = '-'.charCodeAt(0);\nconst plus = '+'.charCodeAt(0);\n\n// TODO: handle E notation\nconst dot = '.'.charCodeAt(0);\nconst exponent = 'e'.charCodeAt(0);\nconst exponentCapital = 'E'.charCodeAt(0);\n\nclass Packet {\n  constructor(id, buffer, start, end) {\n    // hot path, enable checks when testing only\n    // if (!Buffer.isBuffer(buffer) || typeof start == 'undefined' || typeof end == 'undefined')\n    //  throw new Error('invalid packet');\n    this.sequenceId = id;\n    this.numPackets = 1;\n    this.buffer = buffer;\n    this.start = start;\n    this.offset = start + 4;\n    this.end = end;\n  }\n\n  // ==============================\n  // readers\n  // ==============================\n  reset() {\n    this.offset = this.start + 4;\n  }\n\n  length() {\n    return this.end - this.start;\n  }\n\n  slice() {\n    return this.buffer.slice(this.start, this.end);\n  }\n\n  dump() {\n    // eslint-disable-next-line no-console\n    console.log(\n      [this.buffer.asciiSlice(this.start, this.end)],\n      this.buffer.slice(this.start, this.end),\n      this.length(),\n      this.sequenceId\n    );\n  }\n\n  haveMoreData() {\n    return this.end > this.offset;\n  }\n\n  skip(num) {\n    this.offset += num;\n  }\n\n  readInt8() {\n    return this.buffer[this.offset++];\n  }\n\n  readInt16() {\n    this.offset += 2;\n    return this.buffer.readUInt16LE(this.offset - 2);\n  }\n\n  readInt24() {\n    return this.readInt16() + (this.readInt8() << 16);\n  }\n\n  readInt32() {\n    this.offset += 4;\n    return this.buffer.readUInt32LE(this.offset - 4);\n  }\n\n  readSInt8() {\n    return this.buffer.readInt8(this.offset++);\n  }\n\n  readSInt16() {\n    this.offset += 2;\n    return this.buffer.readInt16LE(this.offset - 2);\n  }\n\n  readSInt32() {\n    this.offset += 4;\n    return this.buffer.readInt32LE(this.offset - 4);\n  }\n\n  readInt64JSNumber() {\n    const word0 = this.readInt32();\n    const word1 = this.readInt32();\n    const l = new Long(word0, word1, true);\n    return l.toNumber();\n  }\n\n  readSInt64JSNumber() {\n    const word0 = this.readInt32();\n    const word1 = this.readInt32();\n    if (!(word1 & 0x80000000)) {\n      return word0 + 0x100000000 * word1;\n    }\n    const l = new Long(word0, word1, false);\n    return l.toNumber();\n  }\n\n  readInt64String() {\n    const word0 = this.readInt32();\n    const word1 = this.readInt32();\n    const res = new Long(word0, word1, true);\n    return res.toString();\n  }\n\n  readSInt64String() {\n    const word0 = this.readInt32();\n    const word1 = this.readInt32();\n    const res = new Long(word0, word1, false);\n    return res.toString();\n  }\n\n  readInt64() {\n    const word0 = this.readInt32();\n    const word1 = this.readInt32();\n    let res = new Long(word0, word1, true);\n    const resNumber = res.toNumber();\n    const resString = res.toString();\n    res = resNumber.toString() === resString ? resNumber : resString;\n    return res;\n  }\n\n  readSInt64() {\n    const word0 = this.readInt32();\n    const word1 = this.readInt32();\n    let res = new Long(word0, word1, false);\n    const resNumber = res.toNumber();\n    const resString = res.toString();\n    res = resNumber.toString() === resString ? resNumber : resString;\n    return res;\n  }\n\n  isEOF() {\n    return this.buffer[this.offset] === 0xfe && this.length() < 13;\n  }\n\n  eofStatusFlags() {\n    return this.buffer.readInt16LE(this.offset + 3);\n  }\n\n  eofWarningCount() {\n    return this.buffer.readInt16LE(this.offset + 1);\n  }\n\n  readLengthCodedNumber(bigNumberStrings, signed) {\n    const byte1 = this.buffer[this.offset++];\n    if (byte1 < 251) {\n      return byte1;\n    }\n    return this.readLengthCodedNumberExt(byte1, bigNumberStrings, signed);\n  }\n\n  readLengthCodedNumberSigned(bigNumberStrings) {\n    return this.readLengthCodedNumber(bigNumberStrings, true);\n  }\n\n  readLengthCodedNumberExt(tag, bigNumberStrings, signed) {\n    let word0, word1;\n    let res;\n    if (tag === 0xfb) {\n      return null;\n    }\n    if (tag === 0xfc) {\n      return this.readInt8() + (this.readInt8() << 8);\n    }\n    if (tag === 0xfd) {\n      return this.readInt8() + (this.readInt8() << 8) + (this.readInt8() << 16);\n    }\n    if (tag === 0xfe) {\n      // TODO: check version\n      // Up to MySQL 3.22, 0xfe was followed by a 4-byte integer.\n      word0 = this.readInt32();\n      word1 = this.readInt32();\n      if (word1 === 0) {\n        return word0; // don't convert to float if possible\n      }\n      if (word1 < 2097152) {\n        // max exact float point int, 2^52 / 2^32\n        return word1 * 0x100000000 + word0;\n      }\n      res = new Long(word0, word1, !signed); // Long need unsigned\n      const resNumber = res.toNumber();\n      const resString = res.toString();\n      res = resNumber.toString() === resString ? resNumber : resString;\n      return bigNumberStrings ? resString : res;\n    }\n    // eslint-disable-next-line no-console\n    console.trace();\n    throw new Error(`Should not reach here: ${tag}`);\n  }\n\n  readFloat() {\n    const res = this.buffer.readFloatLE(this.offset);\n    this.offset += 4;\n    return res;\n  }\n\n  readDouble() {\n    const res = this.buffer.readDoubleLE(this.offset);\n    this.offset += 8;\n    return res;\n  }\n\n  readBuffer(len) {\n    if (typeof len === 'undefined') {\n      len = this.end - this.offset;\n    }\n    this.offset += len;\n    return this.buffer.slice(this.offset - len, this.offset);\n  }\n\n  // DATE, DATETIME and TIMESTAMP\n  readDateTime(timezone) {\n    if (!timezone || timezone === 'Z' || timezone === 'local') {\n      const length = this.readInt8();\n      if (length === 0xfb) {\n        return null;\n      }\n      let y = 0;\n      let m = 0;\n      let d = 0;\n      let H = 0;\n      let M = 0;\n      let S = 0;\n      let ms = 0;\n      if (length > 3) {\n        y = this.readInt16();\n        m = this.readInt8();\n        d = this.readInt8();\n      }\n      if (length > 6) {\n        H = this.readInt8();\n        M = this.readInt8();\n        S = this.readInt8();\n      }\n      if (length > 10) {\n        ms = this.readInt32() / 1000;\n      }\n      // NO_ZERO_DATE mode and NO_ZERO_IN_DATE mode are part of the strict\n      // default SQL mode used by MySQL 8.0. This means that non-standard\n      // dates like '0000-00-00' become NULL. For older versions and other\n      // possible MySQL flavours we still need to account for the\n      // non-standard behaviour.\n      if (y + m + d + H + M + S + ms === 0) {\n        return INVALID_DATE;\n      }\n      if (timezone === 'Z') {\n        return new Date(Date.UTC(y, m - 1, d, H, M, S, ms));\n      }\n      return new Date(y, m - 1, d, H, M, S, ms);\n    }\n    let str = this.readDateTimeString(6, 'T');\n    if (str.length === 10) {\n      str += 'T00:00:00';\n    }\n    return new Date(str + timezone);\n  }\n\n  readDateTimeString(decimals, timeSep) {\n    const length = this.readInt8();\n    let y = 0;\n    let m = 0;\n    let d = 0;\n    let H = 0;\n    let M = 0;\n    let S = 0;\n    let ms = 0;\n    let str;\n    if (length > 3) {\n      y = this.readInt16();\n      m = this.readInt8();\n      d = this.readInt8();\n      str = [leftPad(4, y), leftPad(2, m), leftPad(2, d)].join('-');\n    }\n    if (length > 6) {\n      H = this.readInt8();\n      M = this.readInt8();\n      S = this.readInt8();\n      str += `${timeSep || ' '}${[\n        leftPad(2, H),\n        leftPad(2, M),\n        leftPad(2, S)\n      ].join(':')}`;\n    }\n    if (length > 10) {\n      ms = this.readInt32();\n      str += '.';\n      if (decimals) {\n        ms = leftPad(6, ms);\n        if (ms.length > decimals) {\n          ms = ms.substring(0, decimals); // rounding is done at the MySQL side, only 0 are here\n        }\n      }\n      str += ms;\n    }\n    return str;\n  }\n\n  // TIME - value as a string, Can be negative\n  readTimeString(convertTtoMs) {\n    const length = this.readInt8();\n    if (length === 0) {\n      return '00:00:00';\n    }\n    const sign = this.readInt8() ? -1 : 1; // 'isNegative' flag byte\n    let d = 0;\n    let H = 0;\n    let M = 0;\n    let S = 0;\n    let ms = 0;\n    if (length > 6) {\n      d = this.readInt32();\n      H = this.readInt8();\n      M = this.readInt8();\n      S = this.readInt8();\n    }\n    if (length > 10) {\n      ms = this.readInt32();\n    }\n    if (convertTtoMs) {\n      H += d * 24;\n      M += H * 60;\n      S += M * 60;\n      ms += S * 1000;\n      ms *= sign;\n      return ms;\n    }\n    // Format follows mySQL TIME format ([-][h]hh:mm:ss[.u[u[u[u[u[u]]]]]])\n    // For positive times below 24 hours, this makes it equal to ISO 8601 times\n    return (\n      (sign === -1 ? '-' : '') +\n      [leftPad(2, d * 24 + H), leftPad(2, M), leftPad(2, S)].join(':') +\n      (ms ? `.${ms}`.replace(/0+$/, '') : '')\n    );\n  }\n\n  readLengthCodedString(encoding) {\n    const len = this.readLengthCodedNumber();\n    // TODO: check manually first byte here to avoid polymorphic return type?\n    if (len === null) {\n      return null;\n    }\n    this.offset += len;\n    // TODO: Use characterSetCode to get proper encoding\n    // https://github.com/sidorares/node-mysql2/pull/374\n    return StringParser.decode(\n      this.buffer,\n      encoding,\n      this.offset - len,\n      this.offset\n    );\n  }\n\n  readLengthCodedBuffer() {\n    const len = this.readLengthCodedNumber();\n    if (len === null) {\n      return null;\n    }\n    return this.readBuffer(len);\n  }\n\n  readNullTerminatedString(encoding) {\n    const start = this.offset;\n    let end = this.offset;\n    while (this.buffer[end]) {\n      end = end + 1; // TODO: handle OOB check\n    }\n    this.offset = end + 1;\n    return StringParser.decode(this.buffer, encoding, start, end);\n  }\n\n  // TODO reuse?\n  readString(len, encoding) {\n    if (typeof len === 'string' && typeof encoding === 'undefined') {\n      encoding = len;\n      len = undefined;\n    }\n    if (typeof len === 'undefined') {\n      len = this.end - this.offset;\n    }\n    this.offset += len;\n    return StringParser.decode(\n      this.buffer,\n      encoding,\n      this.offset - len, \n      this.offset\n    );\n  }\n\n  parseInt(len, supportBigNumbers) {\n    if (len === null) {\n      return null;\n    }\n    if (len >= 14 && !supportBigNumbers) {\n      const s = this.buffer.toString('ascii', this.offset, this.offset + len);\n      this.offset += len;\n      return Number(s);\n    }\n    let result = 0;\n    const start = this.offset;\n    const end = this.offset + len;\n    let sign = 1;\n    if (len === 0) {\n      return 0; // TODO: assert? exception?\n    }\n    if (this.buffer[this.offset] === minus) {\n      this.offset++;\n      sign = -1;\n    }\n    // max precise int is 9007199254740992\n    let str;\n    const numDigits = end - this.offset;\n    if (supportBigNumbers) {\n      if (numDigits >= 15) {\n        str = this.readString(end - this.offset, 'binary');\n        result = parseInt(str, 10);\n        if (result.toString() === str) {\n          return sign * result;\n        }\n        return sign === -1 ? `-${str}` : str;\n      }\n      if (numDigits > 16) {\n        str = this.readString(end - this.offset);\n        return sign === -1 ? `-${str}` : str;\n      }\n    }\n    if (this.buffer[this.offset] === plus) {\n      this.offset++; // just ignore\n    }\n    while (this.offset < end) {\n      result *= 10;\n      result += this.buffer[this.offset] - 48;\n      this.offset++;\n    }\n    const num = result * sign;\n    if (!supportBigNumbers) {\n      return num;\n    }\n    str = this.buffer.toString('ascii', start, end);\n    if (num.toString() === str) {\n      return num;\n    }\n    return str;\n  }\n\n  // note that if value of inputNumberAsString is bigger than MAX_SAFE_INTEGER\n  // ( or smaller than MIN_SAFE_INTEGER ) the parseIntNoBigCheck result might be\n  // different from what you would get from Number(inputNumberAsString)\n  // String(parseIntNoBigCheck) <> String(Number(inputNumberAsString)) <> inputNumberAsString\n  parseIntNoBigCheck(len) {\n    if (len === null) {\n      return null;\n    }\n    let result = 0;\n    const end = this.offset + len;\n    let sign = 1;\n    if (len === 0) {\n      return 0; // TODO: assert? exception?\n    }\n    if (this.buffer[this.offset] === minus) {\n      this.offset++;\n      sign = -1;\n    }\n    if (this.buffer[this.offset] === plus) {\n      this.offset++; // just ignore\n    }\n    while (this.offset < end) {\n      result *= 10;\n      result += this.buffer[this.offset] - 48;\n      this.offset++;\n    }\n    return result * sign;\n  }\n\n  // copy-paste from https://github.com/mysqljs/mysql/blob/master/lib/protocol/Parser.js\n  parseGeometryValue() {\n    const buffer = this.readLengthCodedBuffer();\n    let offset = 4;\n    if (buffer === null || !buffer.length) {\n      return null;\n    }\n    function parseGeometry() {\n      let x, y, i, j, numPoints, line;\n      let result = null;\n      const byteOrder = buffer.readUInt8(offset);\n      offset += 1;\n      const wkbType = byteOrder\n        ? buffer.readUInt32LE(offset)\n        : buffer.readUInt32BE(offset);\n      offset += 4;\n      switch (wkbType) {\n        case 1: // WKBPoint\n          x = byteOrder\n            ? buffer.readDoubleLE(offset)\n            : buffer.readDoubleBE(offset);\n          offset += 8;\n          y = byteOrder\n            ? buffer.readDoubleLE(offset)\n            : buffer.readDoubleBE(offset);\n          offset += 8;\n          result = { x: x, y: y };\n          break;\n        case 2: // WKBLineString\n          numPoints = byteOrder\n            ? buffer.readUInt32LE(offset)\n            : buffer.readUInt32BE(offset);\n          offset += 4;\n          result = [];\n          for (i = numPoints; i > 0; i--) {\n            x = byteOrder\n              ? buffer.readDoubleLE(offset)\n              : buffer.readDoubleBE(offset);\n            offset += 8;\n            y = byteOrder\n              ? buffer.readDoubleLE(offset)\n              : buffer.readDoubleBE(offset);\n            offset += 8;\n            result.push({ x: x, y: y });\n          }\n          break;\n        case 3: // WKBPolygon\n          // eslint-disable-next-line no-case-declarations\n          const numRings = byteOrder\n            ? buffer.readUInt32LE(offset)\n            : buffer.readUInt32BE(offset);\n          offset += 4;\n          result = [];\n          for (i = numRings; i > 0; i--) {\n            numPoints = byteOrder\n              ? buffer.readUInt32LE(offset)\n              : buffer.readUInt32BE(offset);\n            offset += 4;\n            line = [];\n            for (j = numPoints; j > 0; j--) {\n              x = byteOrder\n                ? buffer.readDoubleLE(offset)\n                : buffer.readDoubleBE(offset);\n              offset += 8;\n              y = byteOrder\n                ? buffer.readDoubleLE(offset)\n                : buffer.readDoubleBE(offset);\n              offset += 8;\n              line.push({ x: x, y: y });\n            }\n            result.push(line);\n          }\n          break;\n        case 4: // WKBMultiPoint\n        case 5: // WKBMultiLineString\n        case 6: // WKBMultiPolygon\n        case 7: // WKBGeometryCollection\n          // eslint-disable-next-line no-case-declarations\n          const num = byteOrder\n            ? buffer.readUInt32LE(offset)\n            : buffer.readUInt32BE(offset);\n          offset += 4;\n          result = [];\n          for (i = num; i > 0; i--) {\n            result.push(parseGeometry());\n          }\n          break;\n      }\n      return result;\n    }\n    return parseGeometry();\n  }\n\n  parseDate(timezone) {\n    const strLen = this.readLengthCodedNumber();\n    if (strLen === null) {\n      return null;\n    }\n    if (strLen !== 10) {\n      // we expect only YYYY-MM-DD here.\n      // if for some reason it's not the case return invalid date\n      return new Date(NaN);\n    }\n    const y = this.parseInt(4);\n    this.offset++; // -\n    const m = this.parseInt(2);\n    this.offset++; // -\n    const d = this.parseInt(2);\n    if (!timezone || timezone === 'local') {\n      return new Date(y, m - 1, d);\n    }\n    if (timezone === 'Z') {\n      return new Date(Date.UTC(y, m - 1, d));\n    }\n    return new Date(\n      `${leftPad(4, y)}-${leftPad(2, m)}-${leftPad(2, d)}T00:00:00${timezone}`\n    );\n  }\n\n  parseDateTime(timezone) {\n    const str = this.readLengthCodedString('binary');\n    if (str === null) {\n      return null;\n    }\n    if (!timezone || timezone === 'local') {\n      return new Date(str);\n    }\n    return new Date(`${str}${timezone}`);\n  }\n\n  parseFloat(len) {\n    if (len === null) {\n      return null;\n    }\n    let result = 0;\n    const end = this.offset + len;\n    let factor = 1;\n    let pastDot = false;\n    let charCode = 0;\n    if (len === 0) {\n      return 0; // TODO: assert? exception?\n    }\n    if (this.buffer[this.offset] === minus) {\n      this.offset++;\n      factor = -1;\n    }\n    if (this.buffer[this.offset] === plus) {\n      this.offset++; // just ignore\n    }\n    while (this.offset < end) {\n      charCode = this.buffer[this.offset];\n      if (charCode === dot) {\n        pastDot = true;\n        this.offset++;\n      } else if (charCode === exponent || charCode === exponentCapital) {\n        this.offset++;\n        const exponentValue = this.parseInt(end - this.offset);\n        return (result / factor) * Math.pow(10, exponentValue);\n      } else {\n        result *= 10;\n        result += this.buffer[this.offset] - 48;\n        this.offset++;\n        if (pastDot) {\n          factor = factor * 10;\n        }\n      }\n    }\n    return result / factor;\n  }\n\n  parseLengthCodedIntNoBigCheck() {\n    return this.parseIntNoBigCheck(this.readLengthCodedNumber());\n  }\n\n  parseLengthCodedInt(supportBigNumbers) {\n    return this.parseInt(this.readLengthCodedNumber(), supportBigNumbers);\n  }\n\n  parseLengthCodedIntString() {\n    return this.readLengthCodedString('binary');\n  }\n\n  parseLengthCodedFloat() {\n    return this.parseFloat(this.readLengthCodedNumber());\n  }\n\n  peekByte() {\n    return this.buffer[this.offset];\n  }\n\n  // OxFE is often used as \"Alt\" flag - not ok, not error.\n  // For example, it's first byte of AuthSwitchRequest\n  isAlt() {\n    return this.peekByte() === 0xfe;\n  }\n\n  isError() {\n    return this.peekByte() === 0xff;\n  }\n\n  asError(encoding) {\n    this.reset();\n    this.readInt8(); // fieldCount\n    const errorCode = this.readInt16();\n    let sqlState = '';\n    if (this.buffer[this.offset] === 0x23) {\n      this.skip(1);\n      sqlState = this.readBuffer(5).toString();\n    }\n    const message = this.readString(undefined, encoding);\n    const err = new Error(message);\n    err.code = ErrorCodeToName[errorCode];\n    err.errno = errorCode;\n    err.sqlState = sqlState;\n    err.sqlMessage = message;\n    return err;\n  }\n\n  writeInt32(n) {\n    this.buffer.writeUInt32LE(n, this.offset);\n    this.offset += 4;\n  }\n\n  writeInt24(n) {\n    this.writeInt8(n & 0xff);\n    this.writeInt16(n >> 8);\n  }\n\n  writeInt16(n) {\n    this.buffer.writeUInt16LE(n, this.offset);\n    this.offset += 2;\n  }\n\n  writeInt8(n) {\n    this.buffer.writeUInt8(n, this.offset);\n    this.offset++;\n  }\n\n  writeDouble(n) {\n    this.buffer.writeDoubleLE(n, this.offset);\n    this.offset += 8;\n  }\n\n  writeBuffer(b) {\n    b.copy(this.buffer, this.offset);\n    this.offset += b.length;\n  }\n\n  writeNull() {\n    this.buffer[this.offset] = 0xfb;\n    this.offset++;\n  }\n\n  // TODO: refactor following three?\n  writeNullTerminatedString(s, encoding) {\n    const buf = StringParser.encode(s, encoding);\n    this.buffer.length && buf.copy(this.buffer, this.offset);\n    this.offset += buf.length;\n    this.writeInt8(0);\n  }\n\n  writeString(s, encoding) {\n    if (s === null) {\n      this.writeInt8(0xfb);\n      return;\n    }\n    if (s.length === 0) {\n      return;\n    }\n    // const bytes = Buffer.byteLength(s, 'utf8');\n    // this.buffer.write(s, this.offset, bytes, 'utf8');\n    // this.offset += bytes;\n    const buf = StringParser.encode(s, encoding);\n    this.buffer.length && buf.copy(this.buffer, this.offset);\n    this.offset += buf.length;\n  }\n\n  writeLengthCodedString(s, encoding) {\n    const buf = StringParser.encode(s, encoding);\n    this.writeLengthCodedNumber(buf.length);\n    this.buffer.length && buf.copy(this.buffer, this.offset);\n    this.offset += buf.length;\n  }\n\n  writeLengthCodedBuffer(b) {\n    this.writeLengthCodedNumber(b.length);\n    b.copy(this.buffer, this.offset);\n    this.offset += b.length;\n  }\n\n  writeLengthCodedNumber(n) {\n    if (n < 0xfb) {\n      return this.writeInt8(n);\n    }\n    if (n < 0xffff) {\n      this.writeInt8(0xfc);\n      return this.writeInt16(n);\n    }\n    if (n < 0xffffff) {\n      this.writeInt8(0xfd);\n      return this.writeInt24(n);\n    }\n    if (n === null) {\n      return this.writeInt8(0xfb);\n    }\n    // TODO: check that n is out of int precision\n    this.writeInt8(0xfe);\n    this.buffer.writeUInt32LE(n, this.offset);\n    this.offset += 4;\n    this.buffer.writeUInt32LE(n >> 32, this.offset);\n    this.offset += 4;\n    return this.offset;\n  }\n\n  writeDate(d, timezone) {\n    this.buffer.writeUInt8(11, this.offset);\n    if (!timezone || timezone === 'local') {\n      this.buffer.writeUInt16LE(d.getFullYear(), this.offset + 1);\n      this.buffer.writeUInt8(d.getMonth() + 1, this.offset + 3);\n      this.buffer.writeUInt8(d.getDate(), this.offset + 4);\n      this.buffer.writeUInt8(d.getHours(), this.offset + 5);\n      this.buffer.writeUInt8(d.getMinutes(), this.offset + 6);\n      this.buffer.writeUInt8(d.getSeconds(), this.offset + 7);\n      this.buffer.writeUInt32LE(d.getMilliseconds() * 1000, this.offset + 8);\n    } else {\n      if (timezone !== 'Z') {\n        const offset =\n          (timezone[0] === '-' ? -1 : 1) *\n          (parseInt(timezone.substring(1, 3), 10) * 60 +\n            parseInt(timezone.substring(4), 10));\n        if (offset !== 0) {\n          d = new Date(d.getTime() + 60000 * offset);\n        }\n      }\n      this.buffer.writeUInt16LE(d.getUTCFullYear(), this.offset + 1);\n      this.buffer.writeUInt8(d.getUTCMonth() + 1, this.offset + 3);\n      this.buffer.writeUInt8(d.getUTCDate(), this.offset + 4);\n      this.buffer.writeUInt8(d.getUTCHours(), this.offset + 5);\n      this.buffer.writeUInt8(d.getUTCMinutes(), this.offset + 6);\n      this.buffer.writeUInt8(d.getUTCSeconds(), this.offset + 7);\n      this.buffer.writeUInt32LE(d.getUTCMilliseconds() * 1000, this.offset + 8);\n    }\n    this.offset += 12;\n  }\n\n  writeHeader(sequenceId) {\n    const offset = this.offset;\n    this.offset = 0;\n    this.writeInt24(this.buffer.length - 4);\n    this.writeInt8(sequenceId);\n    this.offset = offset;\n  }\n\n  clone() {\n    return new Packet(this.sequenceId, this.buffer, this.start, this.end);\n  }\n\n  type() {\n    if (this.isEOF()) {\n      return 'EOF';\n    }\n    if (this.isError()) {\n      return 'Error';\n    }\n    if (this.buffer[this.offset] === 0) {\n      return 'maybeOK'; // could be other packet types as well\n    }\n    return '';\n  }\n\n  static lengthCodedNumberLength(n) {\n    if (n < 0xfb) {\n      return 1;\n    }\n    if (n < 0xffff) {\n      return 3;\n    }\n    if (n < 0xffffff) {\n      return 5;\n    }\n    return 9;\n  }\n\n  static lengthCodedStringLength(str, encoding) {\n    const buf = StringParser.encode(str, encoding);\n    const slen = buf.length;\n    return Packet.lengthCodedNumberLength(slen) + slen;\n  }\n\n  static MockBuffer() {\n    const noop = function () {};\n    const res = Buffer.alloc(0);\n    for (const op in NativeBuffer.prototype) {\n      if (typeof res[op] === 'function') {\n        res[op] = noop;\n      }\n    }\n    return res;\n  }\n}\n\nmodule.exports = Packet;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/packets/packet.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/packets/prepare_statement.js":
/*!**************************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/prepare_statement.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst Packet = __webpack_require__(/*! ../packets/packet */ \"(rsc)/./node_modules/mysql2/lib/packets/packet.js\");\nconst CommandCodes = __webpack_require__(/*! ../constants/commands */ \"(rsc)/./node_modules/mysql2/lib/constants/commands.js\");\nconst StringParser = __webpack_require__(/*! ../parsers/string.js */ \"(rsc)/./node_modules/mysql2/lib/parsers/string.js\");\nconst CharsetToEncoding = __webpack_require__(/*! ../constants/charset_encodings.js */ \"(rsc)/./node_modules/mysql2/lib/constants/charset_encodings.js\");\n\nclass PrepareStatement {\n  constructor(sql, charsetNumber) {\n    this.query = sql;\n    this.charsetNumber = charsetNumber;\n    this.encoding = CharsetToEncoding[charsetNumber];\n  }\n\n  toPacket() {\n    const buf = StringParser.encode(this.query, this.encoding);\n    const length = 5 + buf.length;\n    const buffer = Buffer.allocUnsafe(length);\n    const packet = new Packet(0, buffer, 0, length);\n    packet.offset = 4;\n    packet.writeInt8(CommandCodes.STMT_PREPARE);\n    packet.writeBuffer(buf);\n    return packet;\n  }\n}\n\nmodule.exports = PrepareStatement;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wYWNrZXRzL3ByZXBhcmVfc3RhdGVtZW50LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLGVBQWUsbUJBQU8sQ0FBQyw0RUFBbUI7QUFDMUMscUJBQXFCLG1CQUFPLENBQUMsb0ZBQXVCO0FBQ3BELHFCQUFxQixtQkFBTyxDQUFDLCtFQUFzQjtBQUNuRCwwQkFBMEIsbUJBQU8sQ0FBQyx5R0FBbUM7O0FBRXJFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVhbF9lc3RhdGUvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wYWNrZXRzL3ByZXBhcmVfc3RhdGVtZW50LmpzPzE0ODYiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBQYWNrZXQgPSByZXF1aXJlKCcuLi9wYWNrZXRzL3BhY2tldCcpO1xuY29uc3QgQ29tbWFuZENvZGVzID0gcmVxdWlyZSgnLi4vY29uc3RhbnRzL2NvbW1hbmRzJyk7XG5jb25zdCBTdHJpbmdQYXJzZXIgPSByZXF1aXJlKCcuLi9wYXJzZXJzL3N0cmluZy5qcycpO1xuY29uc3QgQ2hhcnNldFRvRW5jb2RpbmcgPSByZXF1aXJlKCcuLi9jb25zdGFudHMvY2hhcnNldF9lbmNvZGluZ3MuanMnKTtcblxuY2xhc3MgUHJlcGFyZVN0YXRlbWVudCB7XG4gIGNvbnN0cnVjdG9yKHNxbCwgY2hhcnNldE51bWJlcikge1xuICAgIHRoaXMucXVlcnkgPSBzcWw7XG4gICAgdGhpcy5jaGFyc2V0TnVtYmVyID0gY2hhcnNldE51bWJlcjtcbiAgICB0aGlzLmVuY29kaW5nID0gQ2hhcnNldFRvRW5jb2RpbmdbY2hhcnNldE51bWJlcl07XG4gIH1cblxuICB0b1BhY2tldCgpIHtcbiAgICBjb25zdCBidWYgPSBTdHJpbmdQYXJzZXIuZW5jb2RlKHRoaXMucXVlcnksIHRoaXMuZW5jb2RpbmcpO1xuICAgIGNvbnN0IGxlbmd0aCA9IDUgKyBidWYubGVuZ3RoO1xuICAgIGNvbnN0IGJ1ZmZlciA9IEJ1ZmZlci5hbGxvY1Vuc2FmZShsZW5ndGgpO1xuICAgIGNvbnN0IHBhY2tldCA9IG5ldyBQYWNrZXQoMCwgYnVmZmVyLCAwLCBsZW5ndGgpO1xuICAgIHBhY2tldC5vZmZzZXQgPSA0O1xuICAgIHBhY2tldC53cml0ZUludDgoQ29tbWFuZENvZGVzLlNUTVRfUFJFUEFSRSk7XG4gICAgcGFja2V0LndyaXRlQnVmZmVyKGJ1Zik7XG4gICAgcmV0dXJuIHBhY2tldDtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IFByZXBhcmVTdGF0ZW1lbnQ7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/packets/prepare_statement.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/packets/prepared_statement_header.js":
/*!**********************************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/prepared_statement_header.js ***!
  \**********************************************************************/
/***/ ((module) => {

eval("\n\nclass PreparedStatementHeader {\n  constructor(packet) {\n    packet.skip(1); // should be 0\n    this.id = packet.readInt32();\n    this.fieldCount = packet.readInt16();\n    this.parameterCount = packet.readInt16();\n    packet.skip(1); // should be 0\n    this.warningCount = packet.readInt16();\n  }\n}\n\n// TODO: toPacket\n\nmodule.exports = PreparedStatementHeader;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wYWNrZXRzL3ByZXBhcmVkX3N0YXRlbWVudF9oZWFkZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBLG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBOztBQUVBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVhbF9lc3RhdGUvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wYWNrZXRzL3ByZXBhcmVkX3N0YXRlbWVudF9oZWFkZXIuanM/MTY4NSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNsYXNzIFByZXBhcmVkU3RhdGVtZW50SGVhZGVyIHtcbiAgY29uc3RydWN0b3IocGFja2V0KSB7XG4gICAgcGFja2V0LnNraXAoMSk7IC8vIHNob3VsZCBiZSAwXG4gICAgdGhpcy5pZCA9IHBhY2tldC5yZWFkSW50MzIoKTtcbiAgICB0aGlzLmZpZWxkQ291bnQgPSBwYWNrZXQucmVhZEludDE2KCk7XG4gICAgdGhpcy5wYXJhbWV0ZXJDb3VudCA9IHBhY2tldC5yZWFkSW50MTYoKTtcbiAgICBwYWNrZXQuc2tpcCgxKTsgLy8gc2hvdWxkIGJlIDBcbiAgICB0aGlzLndhcm5pbmdDb3VudCA9IHBhY2tldC5yZWFkSW50MTYoKTtcbiAgfVxufVxuXG4vLyBUT0RPOiB0b1BhY2tldFxuXG5tb2R1bGUuZXhwb3J0cyA9IFByZXBhcmVkU3RhdGVtZW50SGVhZGVyO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/packets/prepared_statement_header.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/packets/query.js":
/*!**************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/query.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst Packet = __webpack_require__(/*! ../packets/packet.js */ \"(rsc)/./node_modules/mysql2/lib/packets/packet.js\");\nconst CommandCode = __webpack_require__(/*! ../constants/commands.js */ \"(rsc)/./node_modules/mysql2/lib/constants/commands.js\");\nconst StringParser = __webpack_require__(/*! ../parsers/string.js */ \"(rsc)/./node_modules/mysql2/lib/parsers/string.js\");\nconst CharsetToEncoding = __webpack_require__(/*! ../constants/charset_encodings.js */ \"(rsc)/./node_modules/mysql2/lib/constants/charset_encodings.js\");\n\nclass Query {\n  constructor(sql, charsetNumber) {\n    this.query = sql;\n    this.charsetNumber = charsetNumber;\n    this.encoding = CharsetToEncoding[charsetNumber];\n  }\n\n  toPacket() {\n    const buf = StringParser.encode(this.query, this.encoding);\n    const length = 5 + buf.length;\n    const buffer = Buffer.allocUnsafe(length);\n    const packet = new Packet(0, buffer, 0, length);\n    packet.offset = 4;\n    packet.writeInt8(CommandCode.QUERY);\n    packet.writeBuffer(buf);\n    return packet;\n  }\n}\n\nmodule.exports = Query;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wYWNrZXRzL3F1ZXJ5LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLGVBQWUsbUJBQU8sQ0FBQywrRUFBc0I7QUFDN0Msb0JBQW9CLG1CQUFPLENBQUMsdUZBQTBCO0FBQ3RELHFCQUFxQixtQkFBTyxDQUFDLCtFQUFzQjtBQUNuRCwwQkFBMEIsbUJBQU8sQ0FBQyx5R0FBbUM7O0FBRXJFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVhbF9lc3RhdGUvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wYWNrZXRzL3F1ZXJ5LmpzP2VmMTMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBQYWNrZXQgPSByZXF1aXJlKCcuLi9wYWNrZXRzL3BhY2tldC5qcycpO1xuY29uc3QgQ29tbWFuZENvZGUgPSByZXF1aXJlKCcuLi9jb25zdGFudHMvY29tbWFuZHMuanMnKTtcbmNvbnN0IFN0cmluZ1BhcnNlciA9IHJlcXVpcmUoJy4uL3BhcnNlcnMvc3RyaW5nLmpzJyk7XG5jb25zdCBDaGFyc2V0VG9FbmNvZGluZyA9IHJlcXVpcmUoJy4uL2NvbnN0YW50cy9jaGFyc2V0X2VuY29kaW5ncy5qcycpO1xuXG5jbGFzcyBRdWVyeSB7XG4gIGNvbnN0cnVjdG9yKHNxbCwgY2hhcnNldE51bWJlcikge1xuICAgIHRoaXMucXVlcnkgPSBzcWw7XG4gICAgdGhpcy5jaGFyc2V0TnVtYmVyID0gY2hhcnNldE51bWJlcjtcbiAgICB0aGlzLmVuY29kaW5nID0gQ2hhcnNldFRvRW5jb2RpbmdbY2hhcnNldE51bWJlcl07XG4gIH1cblxuICB0b1BhY2tldCgpIHtcbiAgICBjb25zdCBidWYgPSBTdHJpbmdQYXJzZXIuZW5jb2RlKHRoaXMucXVlcnksIHRoaXMuZW5jb2RpbmcpO1xuICAgIGNvbnN0IGxlbmd0aCA9IDUgKyBidWYubGVuZ3RoO1xuICAgIGNvbnN0IGJ1ZmZlciA9IEJ1ZmZlci5hbGxvY1Vuc2FmZShsZW5ndGgpO1xuICAgIGNvbnN0IHBhY2tldCA9IG5ldyBQYWNrZXQoMCwgYnVmZmVyLCAwLCBsZW5ndGgpO1xuICAgIHBhY2tldC5vZmZzZXQgPSA0O1xuICAgIHBhY2tldC53cml0ZUludDgoQ29tbWFuZENvZGUuUVVFUlkpO1xuICAgIHBhY2tldC53cml0ZUJ1ZmZlcihidWYpO1xuICAgIHJldHVybiBwYWNrZXQ7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBRdWVyeTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/packets/query.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/packets/register_slave.js":
/*!***********************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/register_slave.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\n// http://dev.mysql.com/doc/internals/en/com-register-slave.html\n// note that documentation is incorrect, for example command code is actually 0x15 but documented as 0x14\n\nconst Packet = __webpack_require__(/*! ../packets/packet */ \"(rsc)/./node_modules/mysql2/lib/packets/packet.js\");\nconst CommandCodes = __webpack_require__(/*! ../constants/commands */ \"(rsc)/./node_modules/mysql2/lib/constants/commands.js\");\n\nclass RegisterSlave {\n  constructor(opts) {\n    this.serverId = opts.serverId || 0;\n    this.slaveHostname = opts.slaveHostname || '';\n    this.slaveUser = opts.slaveUser || '';\n    this.slavePassword = opts.slavePassword || '';\n    this.slavePort = opts.slavePort || 0;\n    this.replicationRank = opts.replicationRank || 0;\n    this.masterId = opts.masterId || 0;\n  }\n\n  toPacket() {\n    const length =\n      15 + // TODO: should be ascii?\n      Buffer.byteLength(this.slaveHostname, 'utf8') +\n      Buffer.byteLength(this.slaveUser, 'utf8') +\n      Buffer.byteLength(this.slavePassword, 'utf8') +\n      3 +\n      4;\n    const buffer = Buffer.allocUnsafe(length);\n    const packet = new Packet(0, buffer, 0, length);\n    packet.offset = 4;\n    packet.writeInt8(CommandCodes.REGISTER_SLAVE);\n    packet.writeInt32(this.serverId);\n    packet.writeInt8(Buffer.byteLength(this.slaveHostname, 'utf8'));\n    packet.writeString(this.slaveHostname);\n    packet.writeInt8(Buffer.byteLength(this.slaveUser, 'utf8'));\n    packet.writeString(this.slaveUser);\n    packet.writeInt8(Buffer.byteLength(this.slavePassword, 'utf8'));\n    packet.writeString(this.slavePassword);\n    packet.writeInt16(this.slavePort);\n    packet.writeInt32(this.replicationRank);\n    packet.writeInt32(this.masterId);\n    return packet;\n  }\n}\n\nmodule.exports = RegisterSlave;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wYWNrZXRzL3JlZ2lzdGVyX3NsYXZlLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7O0FBRUEsZUFBZSxtQkFBTyxDQUFDLDRFQUFtQjtBQUMxQyxxQkFBcUIsbUJBQU8sQ0FBQyxvRkFBdUI7O0FBRXBEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVhbF9lc3RhdGUvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wYWNrZXRzL3JlZ2lzdGVyX3NsYXZlLmpzPzJmNTYiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vLyBodHRwOi8vZGV2Lm15c3FsLmNvbS9kb2MvaW50ZXJuYWxzL2VuL2NvbS1yZWdpc3Rlci1zbGF2ZS5odG1sXG4vLyBub3RlIHRoYXQgZG9jdW1lbnRhdGlvbiBpcyBpbmNvcnJlY3QsIGZvciBleGFtcGxlIGNvbW1hbmQgY29kZSBpcyBhY3R1YWxseSAweDE1IGJ1dCBkb2N1bWVudGVkIGFzIDB4MTRcblxuY29uc3QgUGFja2V0ID0gcmVxdWlyZSgnLi4vcGFja2V0cy9wYWNrZXQnKTtcbmNvbnN0IENvbW1hbmRDb2RlcyA9IHJlcXVpcmUoJy4uL2NvbnN0YW50cy9jb21tYW5kcycpO1xuXG5jbGFzcyBSZWdpc3RlclNsYXZlIHtcbiAgY29uc3RydWN0b3Iob3B0cykge1xuICAgIHRoaXMuc2VydmVySWQgPSBvcHRzLnNlcnZlcklkIHx8IDA7XG4gICAgdGhpcy5zbGF2ZUhvc3RuYW1lID0gb3B0cy5zbGF2ZUhvc3RuYW1lIHx8ICcnO1xuICAgIHRoaXMuc2xhdmVVc2VyID0gb3B0cy5zbGF2ZVVzZXIgfHwgJyc7XG4gICAgdGhpcy5zbGF2ZVBhc3N3b3JkID0gb3B0cy5zbGF2ZVBhc3N3b3JkIHx8ICcnO1xuICAgIHRoaXMuc2xhdmVQb3J0ID0gb3B0cy5zbGF2ZVBvcnQgfHwgMDtcbiAgICB0aGlzLnJlcGxpY2F0aW9uUmFuayA9IG9wdHMucmVwbGljYXRpb25SYW5rIHx8IDA7XG4gICAgdGhpcy5tYXN0ZXJJZCA9IG9wdHMubWFzdGVySWQgfHwgMDtcbiAgfVxuXG4gIHRvUGFja2V0KCkge1xuICAgIGNvbnN0IGxlbmd0aCA9XG4gICAgICAxNSArIC8vIFRPRE86IHNob3VsZCBiZSBhc2NpaT9cbiAgICAgIEJ1ZmZlci5ieXRlTGVuZ3RoKHRoaXMuc2xhdmVIb3N0bmFtZSwgJ3V0ZjgnKSArXG4gICAgICBCdWZmZXIuYnl0ZUxlbmd0aCh0aGlzLnNsYXZlVXNlciwgJ3V0ZjgnKSArXG4gICAgICBCdWZmZXIuYnl0ZUxlbmd0aCh0aGlzLnNsYXZlUGFzc3dvcmQsICd1dGY4JykgK1xuICAgICAgMyArXG4gICAgICA0O1xuICAgIGNvbnN0IGJ1ZmZlciA9IEJ1ZmZlci5hbGxvY1Vuc2FmZShsZW5ndGgpO1xuICAgIGNvbnN0IHBhY2tldCA9IG5ldyBQYWNrZXQoMCwgYnVmZmVyLCAwLCBsZW5ndGgpO1xuICAgIHBhY2tldC5vZmZzZXQgPSA0O1xuICAgIHBhY2tldC53cml0ZUludDgoQ29tbWFuZENvZGVzLlJFR0lTVEVSX1NMQVZFKTtcbiAgICBwYWNrZXQud3JpdGVJbnQzMih0aGlzLnNlcnZlcklkKTtcbiAgICBwYWNrZXQud3JpdGVJbnQ4KEJ1ZmZlci5ieXRlTGVuZ3RoKHRoaXMuc2xhdmVIb3N0bmFtZSwgJ3V0ZjgnKSk7XG4gICAgcGFja2V0LndyaXRlU3RyaW5nKHRoaXMuc2xhdmVIb3N0bmFtZSk7XG4gICAgcGFja2V0LndyaXRlSW50OChCdWZmZXIuYnl0ZUxlbmd0aCh0aGlzLnNsYXZlVXNlciwgJ3V0ZjgnKSk7XG4gICAgcGFja2V0LndyaXRlU3RyaW5nKHRoaXMuc2xhdmVVc2VyKTtcbiAgICBwYWNrZXQud3JpdGVJbnQ4KEJ1ZmZlci5ieXRlTGVuZ3RoKHRoaXMuc2xhdmVQYXNzd29yZCwgJ3V0ZjgnKSk7XG4gICAgcGFja2V0LndyaXRlU3RyaW5nKHRoaXMuc2xhdmVQYXNzd29yZCk7XG4gICAgcGFja2V0LndyaXRlSW50MTYodGhpcy5zbGF2ZVBvcnQpO1xuICAgIHBhY2tldC53cml0ZUludDMyKHRoaXMucmVwbGljYXRpb25SYW5rKTtcbiAgICBwYWNrZXQud3JpdGVJbnQzMih0aGlzLm1hc3RlcklkKTtcbiAgICByZXR1cm4gcGFja2V0O1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gUmVnaXN0ZXJTbGF2ZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/packets/register_slave.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/packets/resultset_header.js":
/*!*************************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/resultset_header.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\n// TODO: rename to OK packet\n// https://dev.mysql.com/doc/internals/en/packet-OK_Packet.html\n\nconst Packet = __webpack_require__(/*! ./packet.js */ \"(rsc)/./node_modules/mysql2/lib/packets/packet.js\");\nconst ClientConstants = __webpack_require__(/*! ../constants/client.js */ \"(rsc)/./node_modules/mysql2/lib/constants/client.js\");\nconst ServerSatusFlags = __webpack_require__(/*! ../constants/server_status.js */ \"(rsc)/./node_modules/mysql2/lib/constants/server_status.js\");\n\nconst EncodingToCharset = __webpack_require__(/*! ../constants/encoding_charset.js */ \"(rsc)/./node_modules/mysql2/lib/constants/encoding_charset.js\");\nconst sessionInfoTypes = __webpack_require__(/*! ../constants/session_track.js */ \"(rsc)/./node_modules/mysql2/lib/constants/session_track.js\");\n\nclass ResultSetHeader {\n  constructor(packet, connection) {\n    const bigNumberStrings = connection.config.bigNumberStrings;\n    const encoding = connection.serverEncoding;\n    const flags = connection._handshakePacket.capabilityFlags;\n    const isSet = function(flag) {\n      return flags & ClientConstants[flag];\n    };\n    if (packet.buffer[packet.offset] !== 0) {\n      this.fieldCount = packet.readLengthCodedNumber();\n      if (this.fieldCount === null) {\n        this.infileName = packet.readString(undefined, encoding);\n      }\n      return;\n    }\n    this.fieldCount = packet.readInt8(); // skip OK byte\n    this.affectedRows = packet.readLengthCodedNumber(bigNumberStrings);\n    this.insertId = packet.readLengthCodedNumberSigned(bigNumberStrings);\n    this.info = '';\n    if (isSet('PROTOCOL_41')) {\n      this.serverStatus = packet.readInt16();\n      this.warningStatus = packet.readInt16();\n    } else if (isSet('TRANSACTIONS')) {\n      this.serverStatus = packet.readInt16();\n    }\n    let stateChanges = null;\n    if (isSet('SESSION_TRACK') && packet.offset < packet.end) {\n      this.info = packet.readLengthCodedString(encoding);\n\n      if (this.serverStatus && ServerSatusFlags.SERVER_SESSION_STATE_CHANGED) {\n        // session change info record - see\n        // https://dev.mysql.com/doc/internals/en/packet-OK_Packet.html#cs-sect-packet-ok-sessioninfo\n        let len =\n          packet.offset < packet.end ? packet.readLengthCodedNumber() : 0;\n        const end = packet.offset + len;\n        let type, key, stateEnd;\n        if (len > 0) {\n          stateChanges = {\n            systemVariables: {},\n            schema: null,\n            gtids: [],\n            trackStateChange: null\n          };\n        }\n        while (packet.offset < end) {\n          type = packet.readInt8();\n          len = packet.readLengthCodedNumber();\n          stateEnd = packet.offset + len;\n          if (type === sessionInfoTypes.SYSTEM_VARIABLES) {\n            key = packet.readLengthCodedString(encoding);\n            const val = packet.readLengthCodedString(encoding);\n            stateChanges.systemVariables[key] = val;\n            if (key === 'character_set_client') {\n              const charsetNumber = EncodingToCharset[val];\n              connection.config.charsetNumber = charsetNumber;\n            }\n          } else if (type === sessionInfoTypes.SCHEMA) {\n            key = packet.readLengthCodedString(encoding);\n            stateChanges.schema = key;\n          } else if (type === sessionInfoTypes.STATE_CHANGE) {\n            stateChanges.trackStateChange = packet.readLengthCodedString(\n              encoding\n            );\n          } else if (type === sessionInfoTypes.STATE_GTIDS) {\n            // TODO: find if the first length coded string means anything. Usually comes as empty\n            // eslint-disable-next-line no-unused-vars\n            const _unknownString = packet.readLengthCodedString(encoding);\n            const gtid = packet.readLengthCodedString(encoding);\n            stateChanges.gtids = gtid.split(',');\n          } else {\n            // unsupported session track type. For now just ignore\n          }\n          packet.offset = stateEnd;\n        }\n      }\n    } else {\n      this.info = packet.readString(undefined, encoding);\n    }\n    if (stateChanges) {\n      this.stateChanges = stateChanges;\n    }\n    const m = this.info.match(/\\schanged:\\s*(\\d+)/i);\n    if (m !== null) {\n      this.changedRows = parseInt(m[1], 10);\n    } else {\n      this.changedRows = 0;\n    }\n  }\n\n  // TODO: should be consistent instance member, but it's just easier here to have just function\n  static toPacket(fieldCount, insertId) {\n    let length = 4 + Packet.lengthCodedNumberLength(fieldCount);\n    if (typeof insertId !== 'undefined') {\n      length += Packet.lengthCodedNumberLength(insertId);\n    }\n    const buffer = Buffer.allocUnsafe(length);\n    const packet = new Packet(0, buffer, 0, length);\n    packet.offset = 4;\n    packet.writeLengthCodedNumber(fieldCount);\n    if (typeof insertId !== 'undefined') {\n      packet.writeLengthCodedNumber(insertId);\n    }\n    return packet;\n  }\n}\n\nmodule.exports = ResultSetHeader;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wYWNrZXRzL3Jlc3VsdHNldF9oZWFkZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTs7QUFFQSxlQUFlLG1CQUFPLENBQUMsc0VBQWE7QUFDcEMsd0JBQXdCLG1CQUFPLENBQUMsbUZBQXdCO0FBQ3hELHlCQUF5QixtQkFBTyxDQUFDLGlHQUErQjs7QUFFaEUsMEJBQTBCLG1CQUFPLENBQUMsdUdBQWtDO0FBQ3BFLHlCQUF5QixtQkFBTyxDQUFDLGlHQUErQjs7QUFFaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUNBQXlDO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JlYWxfZXN0YXRlLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvcGFja2V0cy9yZXN1bHRzZXRfaGVhZGVyLmpzPzk2ZWUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vLyBUT0RPOiByZW5hbWUgdG8gT0sgcGFja2V0XG4vLyBodHRwczovL2Rldi5teXNxbC5jb20vZG9jL2ludGVybmFscy9lbi9wYWNrZXQtT0tfUGFja2V0Lmh0bWxcblxuY29uc3QgUGFja2V0ID0gcmVxdWlyZSgnLi9wYWNrZXQuanMnKTtcbmNvbnN0IENsaWVudENvbnN0YW50cyA9IHJlcXVpcmUoJy4uL2NvbnN0YW50cy9jbGllbnQuanMnKTtcbmNvbnN0IFNlcnZlclNhdHVzRmxhZ3MgPSByZXF1aXJlKCcuLi9jb25zdGFudHMvc2VydmVyX3N0YXR1cy5qcycpO1xuXG5jb25zdCBFbmNvZGluZ1RvQ2hhcnNldCA9IHJlcXVpcmUoJy4uL2NvbnN0YW50cy9lbmNvZGluZ19jaGFyc2V0LmpzJyk7XG5jb25zdCBzZXNzaW9uSW5mb1R5cGVzID0gcmVxdWlyZSgnLi4vY29uc3RhbnRzL3Nlc3Npb25fdHJhY2suanMnKTtcblxuY2xhc3MgUmVzdWx0U2V0SGVhZGVyIHtcbiAgY29uc3RydWN0b3IocGFja2V0LCBjb25uZWN0aW9uKSB7XG4gICAgY29uc3QgYmlnTnVtYmVyU3RyaW5ncyA9IGNvbm5lY3Rpb24uY29uZmlnLmJpZ051bWJlclN0cmluZ3M7XG4gICAgY29uc3QgZW5jb2RpbmcgPSBjb25uZWN0aW9uLnNlcnZlckVuY29kaW5nO1xuICAgIGNvbnN0IGZsYWdzID0gY29ubmVjdGlvbi5faGFuZHNoYWtlUGFja2V0LmNhcGFiaWxpdHlGbGFncztcbiAgICBjb25zdCBpc1NldCA9IGZ1bmN0aW9uKGZsYWcpIHtcbiAgICAgIHJldHVybiBmbGFncyAmIENsaWVudENvbnN0YW50c1tmbGFnXTtcbiAgICB9O1xuICAgIGlmIChwYWNrZXQuYnVmZmVyW3BhY2tldC5vZmZzZXRdICE9PSAwKSB7XG4gICAgICB0aGlzLmZpZWxkQ291bnQgPSBwYWNrZXQucmVhZExlbmd0aENvZGVkTnVtYmVyKCk7XG4gICAgICBpZiAodGhpcy5maWVsZENvdW50ID09PSBudWxsKSB7XG4gICAgICAgIHRoaXMuaW5maWxlTmFtZSA9IHBhY2tldC5yZWFkU3RyaW5nKHVuZGVmaW5lZCwgZW5jb2RpbmcpO1xuICAgICAgfVxuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB0aGlzLmZpZWxkQ291bnQgPSBwYWNrZXQucmVhZEludDgoKTsgLy8gc2tpcCBPSyBieXRlXG4gICAgdGhpcy5hZmZlY3RlZFJvd3MgPSBwYWNrZXQucmVhZExlbmd0aENvZGVkTnVtYmVyKGJpZ051bWJlclN0cmluZ3MpO1xuICAgIHRoaXMuaW5zZXJ0SWQgPSBwYWNrZXQucmVhZExlbmd0aENvZGVkTnVtYmVyU2lnbmVkKGJpZ051bWJlclN0cmluZ3MpO1xuICAgIHRoaXMuaW5mbyA9ICcnO1xuICAgIGlmIChpc1NldCgnUFJPVE9DT0xfNDEnKSkge1xuICAgICAgdGhpcy5zZXJ2ZXJTdGF0dXMgPSBwYWNrZXQucmVhZEludDE2KCk7XG4gICAgICB0aGlzLndhcm5pbmdTdGF0dXMgPSBwYWNrZXQucmVhZEludDE2KCk7XG4gICAgfSBlbHNlIGlmIChpc1NldCgnVFJBTlNBQ1RJT05TJykpIHtcbiAgICAgIHRoaXMuc2VydmVyU3RhdHVzID0gcGFja2V0LnJlYWRJbnQxNigpO1xuICAgIH1cbiAgICBsZXQgc3RhdGVDaGFuZ2VzID0gbnVsbDtcbiAgICBpZiAoaXNTZXQoJ1NFU1NJT05fVFJBQ0snKSAmJiBwYWNrZXQub2Zmc2V0IDwgcGFja2V0LmVuZCkge1xuICAgICAgdGhpcy5pbmZvID0gcGFja2V0LnJlYWRMZW5ndGhDb2RlZFN0cmluZyhlbmNvZGluZyk7XG5cbiAgICAgIGlmICh0aGlzLnNlcnZlclN0YXR1cyAmJiBTZXJ2ZXJTYXR1c0ZsYWdzLlNFUlZFUl9TRVNTSU9OX1NUQVRFX0NIQU5HRUQpIHtcbiAgICAgICAgLy8gc2Vzc2lvbiBjaGFuZ2UgaW5mbyByZWNvcmQgLSBzZWVcbiAgICAgICAgLy8gaHR0cHM6Ly9kZXYubXlzcWwuY29tL2RvYy9pbnRlcm5hbHMvZW4vcGFja2V0LU9LX1BhY2tldC5odG1sI2NzLXNlY3QtcGFja2V0LW9rLXNlc3Npb25pbmZvXG4gICAgICAgIGxldCBsZW4gPVxuICAgICAgICAgIHBhY2tldC5vZmZzZXQgPCBwYWNrZXQuZW5kID8gcGFja2V0LnJlYWRMZW5ndGhDb2RlZE51bWJlcigpIDogMDtcbiAgICAgICAgY29uc3QgZW5kID0gcGFja2V0Lm9mZnNldCArIGxlbjtcbiAgICAgICAgbGV0IHR5cGUsIGtleSwgc3RhdGVFbmQ7XG4gICAgICAgIGlmIChsZW4gPiAwKSB7XG4gICAgICAgICAgc3RhdGVDaGFuZ2VzID0ge1xuICAgICAgICAgICAgc3lzdGVtVmFyaWFibGVzOiB7fSxcbiAgICAgICAgICAgIHNjaGVtYTogbnVsbCxcbiAgICAgICAgICAgIGd0aWRzOiBbXSxcbiAgICAgICAgICAgIHRyYWNrU3RhdGVDaGFuZ2U6IG51bGxcbiAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIHdoaWxlIChwYWNrZXQub2Zmc2V0IDwgZW5kKSB7XG4gICAgICAgICAgdHlwZSA9IHBhY2tldC5yZWFkSW50OCgpO1xuICAgICAgICAgIGxlbiA9IHBhY2tldC5yZWFkTGVuZ3RoQ29kZWROdW1iZXIoKTtcbiAgICAgICAgICBzdGF0ZUVuZCA9IHBhY2tldC5vZmZzZXQgKyBsZW47XG4gICAgICAgICAgaWYgKHR5cGUgPT09IHNlc3Npb25JbmZvVHlwZXMuU1lTVEVNX1ZBUklBQkxFUykge1xuICAgICAgICAgICAga2V5ID0gcGFja2V0LnJlYWRMZW5ndGhDb2RlZFN0cmluZyhlbmNvZGluZyk7XG4gICAgICAgICAgICBjb25zdCB2YWwgPSBwYWNrZXQucmVhZExlbmd0aENvZGVkU3RyaW5nKGVuY29kaW5nKTtcbiAgICAgICAgICAgIHN0YXRlQ2hhbmdlcy5zeXN0ZW1WYXJpYWJsZXNba2V5XSA9IHZhbDtcbiAgICAgICAgICAgIGlmIChrZXkgPT09ICdjaGFyYWN0ZXJfc2V0X2NsaWVudCcpIHtcbiAgICAgICAgICAgICAgY29uc3QgY2hhcnNldE51bWJlciA9IEVuY29kaW5nVG9DaGFyc2V0W3ZhbF07XG4gICAgICAgICAgICAgIGNvbm5lY3Rpb24uY29uZmlnLmNoYXJzZXROdW1iZXIgPSBjaGFyc2V0TnVtYmVyO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0gZWxzZSBpZiAodHlwZSA9PT0gc2Vzc2lvbkluZm9UeXBlcy5TQ0hFTUEpIHtcbiAgICAgICAgICAgIGtleSA9IHBhY2tldC5yZWFkTGVuZ3RoQ29kZWRTdHJpbmcoZW5jb2RpbmcpO1xuICAgICAgICAgICAgc3RhdGVDaGFuZ2VzLnNjaGVtYSA9IGtleTtcbiAgICAgICAgICB9IGVsc2UgaWYgKHR5cGUgPT09IHNlc3Npb25JbmZvVHlwZXMuU1RBVEVfQ0hBTkdFKSB7XG4gICAgICAgICAgICBzdGF0ZUNoYW5nZXMudHJhY2tTdGF0ZUNoYW5nZSA9IHBhY2tldC5yZWFkTGVuZ3RoQ29kZWRTdHJpbmcoXG4gICAgICAgICAgICAgIGVuY29kaW5nXG4gICAgICAgICAgICApO1xuICAgICAgICAgIH0gZWxzZSBpZiAodHlwZSA9PT0gc2Vzc2lvbkluZm9UeXBlcy5TVEFURV9HVElEUykge1xuICAgICAgICAgICAgLy8gVE9ETzogZmluZCBpZiB0aGUgZmlyc3QgbGVuZ3RoIGNvZGVkIHN0cmluZyBtZWFucyBhbnl0aGluZy4gVXN1YWxseSBjb21lcyBhcyBlbXB0eVxuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzXG4gICAgICAgICAgICBjb25zdCBfdW5rbm93blN0cmluZyA9IHBhY2tldC5yZWFkTGVuZ3RoQ29kZWRTdHJpbmcoZW5jb2RpbmcpO1xuICAgICAgICAgICAgY29uc3QgZ3RpZCA9IHBhY2tldC5yZWFkTGVuZ3RoQ29kZWRTdHJpbmcoZW5jb2RpbmcpO1xuICAgICAgICAgICAgc3RhdGVDaGFuZ2VzLmd0aWRzID0gZ3RpZC5zcGxpdCgnLCcpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAvLyB1bnN1cHBvcnRlZCBzZXNzaW9uIHRyYWNrIHR5cGUuIEZvciBub3cganVzdCBpZ25vcmVcbiAgICAgICAgICB9XG4gICAgICAgICAgcGFja2V0Lm9mZnNldCA9IHN0YXRlRW5kO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuaW5mbyA9IHBhY2tldC5yZWFkU3RyaW5nKHVuZGVmaW5lZCwgZW5jb2RpbmcpO1xuICAgIH1cbiAgICBpZiAoc3RhdGVDaGFuZ2VzKSB7XG4gICAgICB0aGlzLnN0YXRlQ2hhbmdlcyA9IHN0YXRlQ2hhbmdlcztcbiAgICB9XG4gICAgY29uc3QgbSA9IHRoaXMuaW5mby5tYXRjaCgvXFxzY2hhbmdlZDpcXHMqKFxcZCspL2kpO1xuICAgIGlmIChtICE9PSBudWxsKSB7XG4gICAgICB0aGlzLmNoYW5nZWRSb3dzID0gcGFyc2VJbnQobVsxXSwgMTApO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmNoYW5nZWRSb3dzID0gMDtcbiAgICB9XG4gIH1cblxuICAvLyBUT0RPOiBzaG91bGQgYmUgY29uc2lzdGVudCBpbnN0YW5jZSBtZW1iZXIsIGJ1dCBpdCdzIGp1c3QgZWFzaWVyIGhlcmUgdG8gaGF2ZSBqdXN0IGZ1bmN0aW9uXG4gIHN0YXRpYyB0b1BhY2tldChmaWVsZENvdW50LCBpbnNlcnRJZCkge1xuICAgIGxldCBsZW5ndGggPSA0ICsgUGFja2V0Lmxlbmd0aENvZGVkTnVtYmVyTGVuZ3RoKGZpZWxkQ291bnQpO1xuICAgIGlmICh0eXBlb2YgaW5zZXJ0SWQgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBsZW5ndGggKz0gUGFja2V0Lmxlbmd0aENvZGVkTnVtYmVyTGVuZ3RoKGluc2VydElkKTtcbiAgICB9XG4gICAgY29uc3QgYnVmZmVyID0gQnVmZmVyLmFsbG9jVW5zYWZlKGxlbmd0aCk7XG4gICAgY29uc3QgcGFja2V0ID0gbmV3IFBhY2tldCgwLCBidWZmZXIsIDAsIGxlbmd0aCk7XG4gICAgcGFja2V0Lm9mZnNldCA9IDQ7XG4gICAgcGFja2V0LndyaXRlTGVuZ3RoQ29kZWROdW1iZXIoZmllbGRDb3VudCk7XG4gICAgaWYgKHR5cGVvZiBpbnNlcnRJZCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHBhY2tldC53cml0ZUxlbmd0aENvZGVkTnVtYmVyKGluc2VydElkKTtcbiAgICB9XG4gICAgcmV0dXJuIHBhY2tldDtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IFJlc3VsdFNldEhlYWRlcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/packets/resultset_header.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/packets/ssl_request.js":
/*!********************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/ssl_request.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst ClientConstants = __webpack_require__(/*! ../constants/client */ \"(rsc)/./node_modules/mysql2/lib/constants/client.js\");\nconst Packet = __webpack_require__(/*! ../packets/packet */ \"(rsc)/./node_modules/mysql2/lib/packets/packet.js\");\n\nclass SSLRequest {\n  constructor(flags, charset) {\n    this.clientFlags = flags | ClientConstants.SSL;\n    this.charset = charset;\n  }\n\n  toPacket() {\n    const length = 36;\n    const buffer = Buffer.allocUnsafe(length);\n    const packet = new Packet(0, buffer, 0, length);\n    buffer.fill(0);\n    packet.offset = 4;\n    packet.writeInt32(this.clientFlags);\n    packet.writeInt32(0); // max packet size. todo: move to config\n    packet.writeInt8(this.charset);\n    return packet;\n  }\n}\n\nmodule.exports = SSLRequest;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wYWNrZXRzL3NzbF9yZXF1ZXN0LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLHdCQUF3QixtQkFBTyxDQUFDLGdGQUFxQjtBQUNyRCxlQUFlLG1CQUFPLENBQUMsNEVBQW1COztBQUUxQztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVhbF9lc3RhdGUvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wYWNrZXRzL3NzbF9yZXF1ZXN0LmpzP2RiY2EiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBDbGllbnRDb25zdGFudHMgPSByZXF1aXJlKCcuLi9jb25zdGFudHMvY2xpZW50Jyk7XG5jb25zdCBQYWNrZXQgPSByZXF1aXJlKCcuLi9wYWNrZXRzL3BhY2tldCcpO1xuXG5jbGFzcyBTU0xSZXF1ZXN0IHtcbiAgY29uc3RydWN0b3IoZmxhZ3MsIGNoYXJzZXQpIHtcbiAgICB0aGlzLmNsaWVudEZsYWdzID0gZmxhZ3MgfCBDbGllbnRDb25zdGFudHMuU1NMO1xuICAgIHRoaXMuY2hhcnNldCA9IGNoYXJzZXQ7XG4gIH1cblxuICB0b1BhY2tldCgpIHtcbiAgICBjb25zdCBsZW5ndGggPSAzNjtcbiAgICBjb25zdCBidWZmZXIgPSBCdWZmZXIuYWxsb2NVbnNhZmUobGVuZ3RoKTtcbiAgICBjb25zdCBwYWNrZXQgPSBuZXcgUGFja2V0KDAsIGJ1ZmZlciwgMCwgbGVuZ3RoKTtcbiAgICBidWZmZXIuZmlsbCgwKTtcbiAgICBwYWNrZXQub2Zmc2V0ID0gNDtcbiAgICBwYWNrZXQud3JpdGVJbnQzMih0aGlzLmNsaWVudEZsYWdzKTtcbiAgICBwYWNrZXQud3JpdGVJbnQzMigwKTsgLy8gbWF4IHBhY2tldCBzaXplLiB0b2RvOiBtb3ZlIHRvIGNvbmZpZ1xuICAgIHBhY2tldC53cml0ZUludDgodGhpcy5jaGFyc2V0KTtcbiAgICByZXR1cm4gcGFja2V0O1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gU1NMUmVxdWVzdDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/packets/ssl_request.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/packets/text_row.js":
/*!*****************************************************!*\
  !*** ./node_modules/mysql2/lib/packets/text_row.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst Packet = __webpack_require__(/*! ../packets/packet */ \"(rsc)/./node_modules/mysql2/lib/packets/packet.js\");\n\nclass TextRow {\n  constructor(columns) {\n    this.columns = columns || [];\n  }\n\n  static fromPacket(packet) {\n    // packet.reset(); // set offset to starting point?\n    const columns = [];\n    while (packet.haveMoreData()) {\n      columns.push(packet.readLengthCodedString());\n    }\n    return new TextRow(columns);\n  }\n\n  static toPacket(columns, encoding) {\n    const sequenceId = 0; // TODO remove, this is calculated now in connecton\n    let length = 0;\n    columns.forEach(val => {\n      if (val === null || typeof val === 'undefined') {\n        ++length;\n        return;\n      }\n      length += Packet.lengthCodedStringLength(val.toString(10), encoding);\n    });\n    const buffer = Buffer.allocUnsafe(length + 4);\n    const packet = new Packet(sequenceId, buffer, 0, length + 4);\n    packet.offset = 4;\n    columns.forEach(val => {\n      if (val === null) {\n        packet.writeNull();\n        return;\n      }\n      if (typeof val === 'undefined') {\n        packet.writeInt8(0);\n        return;\n      }\n      packet.writeLengthCodedString(val.toString(10), encoding);\n    });\n    return packet;\n  }\n}\n\nmodule.exports = TextRow;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wYWNrZXRzL3RleHRfcm93LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLGVBQWUsbUJBQU8sQ0FBQyw0RUFBbUI7O0FBRTFDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZWFsX2VzdGF0ZS8uL25vZGVfbW9kdWxlcy9teXNxbDIvbGliL3BhY2tldHMvdGV4dF9yb3cuanM/YmJlYiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IFBhY2tldCA9IHJlcXVpcmUoJy4uL3BhY2tldHMvcGFja2V0Jyk7XG5cbmNsYXNzIFRleHRSb3cge1xuICBjb25zdHJ1Y3Rvcihjb2x1bW5zKSB7XG4gICAgdGhpcy5jb2x1bW5zID0gY29sdW1ucyB8fCBbXTtcbiAgfVxuXG4gIHN0YXRpYyBmcm9tUGFja2V0KHBhY2tldCkge1xuICAgIC8vIHBhY2tldC5yZXNldCgpOyAvLyBzZXQgb2Zmc2V0IHRvIHN0YXJ0aW5nIHBvaW50P1xuICAgIGNvbnN0IGNvbHVtbnMgPSBbXTtcbiAgICB3aGlsZSAocGFja2V0LmhhdmVNb3JlRGF0YSgpKSB7XG4gICAgICBjb2x1bW5zLnB1c2gocGFja2V0LnJlYWRMZW5ndGhDb2RlZFN0cmluZygpKTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBUZXh0Um93KGNvbHVtbnMpO1xuICB9XG5cbiAgc3RhdGljIHRvUGFja2V0KGNvbHVtbnMsIGVuY29kaW5nKSB7XG4gICAgY29uc3Qgc2VxdWVuY2VJZCA9IDA7IC8vIFRPRE8gcmVtb3ZlLCB0aGlzIGlzIGNhbGN1bGF0ZWQgbm93IGluIGNvbm5lY3RvblxuICAgIGxldCBsZW5ndGggPSAwO1xuICAgIGNvbHVtbnMuZm9yRWFjaCh2YWwgPT4ge1xuICAgICAgaWYgKHZhbCA9PT0gbnVsbCB8fCB0eXBlb2YgdmFsID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICArK2xlbmd0aDtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgbGVuZ3RoICs9IFBhY2tldC5sZW5ndGhDb2RlZFN0cmluZ0xlbmd0aCh2YWwudG9TdHJpbmcoMTApLCBlbmNvZGluZyk7XG4gICAgfSk7XG4gICAgY29uc3QgYnVmZmVyID0gQnVmZmVyLmFsbG9jVW5zYWZlKGxlbmd0aCArIDQpO1xuICAgIGNvbnN0IHBhY2tldCA9IG5ldyBQYWNrZXQoc2VxdWVuY2VJZCwgYnVmZmVyLCAwLCBsZW5ndGggKyA0KTtcbiAgICBwYWNrZXQub2Zmc2V0ID0gNDtcbiAgICBjb2x1bW5zLmZvckVhY2godmFsID0+IHtcbiAgICAgIGlmICh2YWwgPT09IG51bGwpIHtcbiAgICAgICAgcGFja2V0LndyaXRlTnVsbCgpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBpZiAodHlwZW9mIHZhbCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgcGFja2V0LndyaXRlSW50OCgwKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgcGFja2V0LndyaXRlTGVuZ3RoQ29kZWRTdHJpbmcodmFsLnRvU3RyaW5nKDEwKSwgZW5jb2RpbmcpO1xuICAgIH0pO1xuICAgIHJldHVybiBwYWNrZXQ7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBUZXh0Um93O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/packets/text_row.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/parsers/binary_parser.js":
/*!**********************************************************!*\
  !*** ./node_modules/mysql2/lib/parsers/binary_parser.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst FieldFlags = __webpack_require__(/*! ../constants/field_flags.js */ \"(rsc)/./node_modules/mysql2/lib/constants/field_flags.js\");\nconst Charsets = __webpack_require__(/*! ../constants/charsets.js */ \"(rsc)/./node_modules/mysql2/lib/constants/charsets.js\");\nconst Types = __webpack_require__(/*! ../constants/types.js */ \"(rsc)/./node_modules/mysql2/lib/constants/types.js\");\nconst helpers = __webpack_require__(/*! ../helpers */ \"(rsc)/./node_modules/mysql2/lib/helpers.js\");\nconst genFunc = __webpack_require__(/*! generate-function */ \"(rsc)/./node_modules/generate-function/index.js\");\nconst parserCache = __webpack_require__(/*! ./parser_cache.js */ \"(rsc)/./node_modules/mysql2/lib/parsers/parser_cache.js\");\nconst typeNames = [];\nfor (const t in Types) {\n  typeNames[Types[t]] = t;\n}\n\nfunction readCodeFor(field, config, options, fieldNum) {\n  const supportBigNumbers = Boolean(\n    options.supportBigNumbers || config.supportBigNumbers,\n  );\n  const bigNumberStrings = Boolean(\n    options.bigNumberStrings || config.bigNumberStrings,\n  );\n  const timezone = options.timezone || config.timezone;\n  const dateStrings = options.dateStrings || config.dateStrings;\n  const unsigned = field.flags & FieldFlags.UNSIGNED;\n  switch (field.columnType) {\n    case Types.TINY:\n      return unsigned ? 'packet.readInt8();' : 'packet.readSInt8();';\n    case Types.SHORT:\n      return unsigned ? 'packet.readInt16();' : 'packet.readSInt16();';\n    case Types.LONG:\n    case Types.INT24: // in binary protocol int24 is encoded in 4 bytes int32\n      return unsigned ? 'packet.readInt32();' : 'packet.readSInt32();';\n    case Types.YEAR:\n      return 'packet.readInt16()';\n    case Types.FLOAT:\n      return 'packet.readFloat();';\n    case Types.DOUBLE:\n      return 'packet.readDouble();';\n    case Types.NULL:\n      return 'null;';\n    case Types.DATE:\n    case Types.DATETIME:\n    case Types.TIMESTAMP:\n    case Types.NEWDATE:\n      if (helpers.typeMatch(field.columnType, dateStrings, Types)) {\n        return `packet.readDateTimeString(${parseInt(field.decimals, 10)});`;\n      }\n      return `packet.readDateTime(${helpers.srcEscape(timezone)});`;\n    case Types.TIME:\n      return 'packet.readTimeString()';\n    case Types.DECIMAL:\n    case Types.NEWDECIMAL:\n      if (config.decimalNumbers) {\n        return 'packet.parseLengthCodedFloat();';\n      }\n      return 'packet.readLengthCodedString(\"ascii\");';\n    case Types.GEOMETRY:\n      return 'packet.parseGeometryValue();';\n    case Types.JSON:\n      // Since for JSON columns mysql always returns charset 63 (BINARY),\n      // we have to handle it according to JSON specs and use \"utf8\",\n      // see https://github.com/sidorares/node-mysql2/issues/409\n      return config.jsonStrings ? 'packet.readLengthCodedString(\"utf8\")' : 'JSON.parse(packet.readLengthCodedString(\"utf8\"));';\n    case Types.LONGLONG:\n      if (!supportBigNumbers) {\n        return unsigned\n          ? 'packet.readInt64JSNumber();'\n          : 'packet.readSInt64JSNumber();';\n      }\n      if (bigNumberStrings) {\n        return unsigned\n          ? 'packet.readInt64String();'\n          : 'packet.readSInt64String();';\n      }\n      return unsigned ? 'packet.readInt64();' : 'packet.readSInt64();';\n\n    default:\n      if (field.characterSet === Charsets.BINARY) {\n        return 'packet.readLengthCodedBuffer();';\n      }\n      return `packet.readLengthCodedString(fields[${fieldNum}].encoding)`;\n  }\n}\n\nfunction compile(fields, options, config) {\n  const parserFn = genFunc();\n  const nullBitmapLength = Math.floor((fields.length + 7 + 2) / 8);\n\n  function wrap(field, packet) {\n    return {\n      type: typeNames[field.columnType],\n      length: field.columnLength,\n      db: field.schema,\n      table: field.table,\n      name: field.name,\n      string: function (encoding = field.encoding) {\n        if (field.columnType === Types.JSON && encoding === field.encoding) {\n          // Since for JSON columns mysql always returns charset 63 (BINARY),\n          // we have to handle it according to JSON specs and use \"utf8\",\n          // see https://github.com/sidorares/node-mysql2/issues/1661\n          console.warn(\n            `typeCast: JSON column \"${field.name}\" is interpreted as BINARY by default, recommended to manually set utf8 encoding: \\`field.string(\"utf8\")\\``,\n          );\n        }\n\n        return packet.readLengthCodedString(encoding);\n      },\n      buffer: function () {\n        return packet.readLengthCodedBuffer();\n      },\n      geometry: function () {\n        return packet.parseGeometryValue();\n      },\n    };\n  }\n\n  parserFn('(function(){');\n  parserFn('return class BinaryRow {');\n  parserFn('constructor() {');\n  parserFn('}');\n\n  parserFn('next(packet, fields, options) {');\n  if (options.rowsAsArray) {\n    parserFn(`const result = new Array(${fields.length});`);\n  } else {\n    parserFn('const result = {};');\n  }\n\n  // Global typeCast\n  if (\n    typeof config.typeCast === 'function' &&\n    typeof options.typeCast !== 'function'\n  ) {\n    options.typeCast = config.typeCast;\n  }\n\n  parserFn('packet.readInt8();'); // status byte\n  for (let i = 0; i < nullBitmapLength; ++i) {\n    parserFn(`const nullBitmaskByte${i} = packet.readInt8();`);\n  }\n\n  let lvalue = '';\n  let currentFieldNullBit = 4;\n  let nullByteIndex = 0;\n  let fieldName = '';\n  let tableName = '';\n\n  for (let i = 0; i < fields.length; i++) {\n    fieldName = helpers.fieldEscape(fields[i].name);\n    // parserFn(`// ${fieldName}: ${typeNames[fields[i].columnType]}`);\n\n    if (typeof options.nestTables === 'string') {\n      lvalue = `result[${helpers.fieldEscape(fields[i].table + options.nestTables + fields[i].name)}]`;\n    } else if (options.nestTables === true) {\n      tableName = helpers.fieldEscape(fields[i].table);\n\n      parserFn(`if (!result[${tableName}]) result[${tableName}] = {};`);\n      lvalue = `result[${tableName}][${fieldName}]`;\n    } else if (options.rowsAsArray) {\n      lvalue = `result[${i.toString(10)}]`;\n    } else {\n      lvalue = `result[${fieldName}]`;\n    }\n\n    parserFn(`if (nullBitmaskByte${nullByteIndex} & ${currentFieldNullBit}) `);\n    parserFn(`${lvalue} = null;`);\n    parserFn('else {');\n\n    if (options.typeCast === false) {\n      parserFn(`${lvalue} = packet.readLengthCodedBuffer();`);\n    } else {\n      const fieldWrapperVar = `fieldWrapper${i}`;\n      parserFn(`const ${fieldWrapperVar} = wrap(fields[${i}], packet);`);\n      const readCode = readCodeFor(fields[i], config, options, i);\n\n      if (typeof options.typeCast === 'function') {\n        parserFn(\n          `${lvalue} = options.typeCast(${fieldWrapperVar}, function() { return ${readCode} });`,\n        );\n      } else {\n        parserFn(`${lvalue} = ${readCode};`);\n      }\n    }\n    parserFn('}');\n\n    currentFieldNullBit *= 2;\n    if (currentFieldNullBit === 0x100) {\n      currentFieldNullBit = 1;\n      nullByteIndex++;\n    }\n  }\n\n  parserFn('return result;');\n  parserFn('}');\n  parserFn('};')('})()');\n\n  if (config.debug) {\n    helpers.printDebugWithCode(\n      'Compiled binary protocol row parser',\n      parserFn.toString(),\n    );\n  }\n  return parserFn.toFunction({ wrap });\n}\n\nfunction getBinaryParser(fields, options, config) {\n  return parserCache.getParser('binary', fields, options, config, compile);\n}\n\nmodule.exports = getBinaryParser;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/parsers/binary_parser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/parsers/parser_cache.js":
/*!*********************************************************!*\
  !*** ./node_modules/mysql2/lib/parsers/parser_cache.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst LRU = (__webpack_require__(/*! lru-cache */ \"(rsc)/./node_modules/mysql2/node_modules/lru-cache/dist/cjs/index-cjs.js\")[\"default\"]);\n\nconst parserCache = new LRU({\n  max: 15000,\n});\n\nfunction keyFromFields(type, fields, options, config) {\n  const res = [\n    type,\n    typeof options.nestTables,\n    options.nestTables,\n    Boolean(options.rowsAsArray),\n    Boolean(options.supportBigNumbers || config.supportBigNumbers),\n    Boolean(options.bigNumberStrings || config.bigNumberStrings),\n    typeof options.typeCast,\n    options.timezone || config.timezone,\n    Boolean(options.decimalNumbers),\n    options.dateStrings,\n  ];\n\n  for (let i = 0; i < fields.length; ++i) {\n    const field = fields[i];\n\n    res.push([\n      field.name,\n      field.columnType,\n      field.length,\n      field.schema,\n      field.table,\n      field.flags,\n      field.characterSet,\n    ]);\n  }\n\n  return JSON.stringify(res, null, 0);\n}\n\nfunction getParser(type, fields, options, config, compiler) {\n  const key = keyFromFields(type, fields, options, config);\n  let parser = parserCache.get(key);\n\n  if (parser) {\n    return parser;\n  }\n\n  parser = compiler(fields, options, config);\n  parserCache.set(key, parser);\n  return parser;\n}\n\nfunction setMaxCache(max) {\n  parserCache.max = max;\n}\n\nfunction clearCache() {\n  parserCache.clear();\n}\n\nmodule.exports = {\n  getParser: getParser,\n  setMaxCache: setMaxCache,\n  clearCache: clearCache,\n  _keyFromFields: keyFromFields,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wYXJzZXJzL3BhcnNlcl9jYWNoZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixZQUFZLDZIQUE0Qjs7QUFFeEM7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsa0JBQWtCLG1CQUFtQjtBQUNyQzs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZWFsX2VzdGF0ZS8uL25vZGVfbW9kdWxlcy9teXNxbDIvbGliL3BhcnNlcnMvcGFyc2VyX2NhY2hlLmpzPzZjOTQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBMUlUgPSByZXF1aXJlKCdscnUtY2FjaGUnKS5kZWZhdWx0O1xuXG5jb25zdCBwYXJzZXJDYWNoZSA9IG5ldyBMUlUoe1xuICBtYXg6IDE1MDAwLFxufSk7XG5cbmZ1bmN0aW9uIGtleUZyb21GaWVsZHModHlwZSwgZmllbGRzLCBvcHRpb25zLCBjb25maWcpIHtcbiAgY29uc3QgcmVzID0gW1xuICAgIHR5cGUsXG4gICAgdHlwZW9mIG9wdGlvbnMubmVzdFRhYmxlcyxcbiAgICBvcHRpb25zLm5lc3RUYWJsZXMsXG4gICAgQm9vbGVhbihvcHRpb25zLnJvd3NBc0FycmF5KSxcbiAgICBCb29sZWFuKG9wdGlvbnMuc3VwcG9ydEJpZ051bWJlcnMgfHwgY29uZmlnLnN1cHBvcnRCaWdOdW1iZXJzKSxcbiAgICBCb29sZWFuKG9wdGlvbnMuYmlnTnVtYmVyU3RyaW5ncyB8fCBjb25maWcuYmlnTnVtYmVyU3RyaW5ncyksXG4gICAgdHlwZW9mIG9wdGlvbnMudHlwZUNhc3QsXG4gICAgb3B0aW9ucy50aW1lem9uZSB8fCBjb25maWcudGltZXpvbmUsXG4gICAgQm9vbGVhbihvcHRpb25zLmRlY2ltYWxOdW1iZXJzKSxcbiAgICBvcHRpb25zLmRhdGVTdHJpbmdzLFxuICBdO1xuXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgZmllbGRzLmxlbmd0aDsgKytpKSB7XG4gICAgY29uc3QgZmllbGQgPSBmaWVsZHNbaV07XG5cbiAgICByZXMucHVzaChbXG4gICAgICBmaWVsZC5uYW1lLFxuICAgICAgZmllbGQuY29sdW1uVHlwZSxcbiAgICAgIGZpZWxkLmxlbmd0aCxcbiAgICAgIGZpZWxkLnNjaGVtYSxcbiAgICAgIGZpZWxkLnRhYmxlLFxuICAgICAgZmllbGQuZmxhZ3MsXG4gICAgICBmaWVsZC5jaGFyYWN0ZXJTZXQsXG4gICAgXSk7XG4gIH1cblxuICByZXR1cm4gSlNPTi5zdHJpbmdpZnkocmVzLCBudWxsLCAwKTtcbn1cblxuZnVuY3Rpb24gZ2V0UGFyc2VyKHR5cGUsIGZpZWxkcywgb3B0aW9ucywgY29uZmlnLCBjb21waWxlcikge1xuICBjb25zdCBrZXkgPSBrZXlGcm9tRmllbGRzKHR5cGUsIGZpZWxkcywgb3B0aW9ucywgY29uZmlnKTtcbiAgbGV0IHBhcnNlciA9IHBhcnNlckNhY2hlLmdldChrZXkpO1xuXG4gIGlmIChwYXJzZXIpIHtcbiAgICByZXR1cm4gcGFyc2VyO1xuICB9XG5cbiAgcGFyc2VyID0gY29tcGlsZXIoZmllbGRzLCBvcHRpb25zLCBjb25maWcpO1xuICBwYXJzZXJDYWNoZS5zZXQoa2V5LCBwYXJzZXIpO1xuICByZXR1cm4gcGFyc2VyO1xufVxuXG5mdW5jdGlvbiBzZXRNYXhDYWNoZShtYXgpIHtcbiAgcGFyc2VyQ2FjaGUubWF4ID0gbWF4O1xufVxuXG5mdW5jdGlvbiBjbGVhckNhY2hlKCkge1xuICBwYXJzZXJDYWNoZS5jbGVhcigpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgZ2V0UGFyc2VyOiBnZXRQYXJzZXIsXG4gIHNldE1heENhY2hlOiBzZXRNYXhDYWNoZSxcbiAgY2xlYXJDYWNoZTogY2xlYXJDYWNoZSxcbiAgX2tleUZyb21GaWVsZHM6IGtleUZyb21GaWVsZHMsXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/parsers/parser_cache.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/parsers/string.js":
/*!***************************************************!*\
  !*** ./node_modules/mysql2/lib/parsers/string.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nconst Iconv = __webpack_require__(/*! iconv-lite */ \"(rsc)/./node_modules/iconv-lite/lib/index.js\");\nconst LRU = (__webpack_require__(/*! lru-cache */ \"(rsc)/./node_modules/mysql2/node_modules/lru-cache/dist/cjs/index-cjs.js\")[\"default\"]);\n\nconst decoderCache = new LRU({\n  max: 500,\n});\n\nexports.decode = function (buffer, encoding, start, end, options) {\n  if (Buffer.isEncoding(encoding)) {\n    return buffer.toString(encoding, start, end);\n  }\n\n  // Optimize for common case: encoding=\"short_string\", options=undefined.\n  let decoder;\n  if (!options) {\n    decoder = decoderCache.get(encoding);\n    if (!decoder) {\n      decoder = Iconv.getDecoder(encoding);\n      decoderCache.set(encoding, decoder);\n    }\n  } else {\n    const decoderArgs = { encoding, options };\n    const decoderKey = JSON.stringify(decoderArgs);\n    decoder = decoderCache.get(decoderKey);\n    if (!decoder) {\n      decoder = Iconv.getDecoder(decoderArgs.encoding, decoderArgs.options);\n      decoderCache.set(decoderKey, decoder);\n    }\n  }\n\n  const res = decoder.write(buffer.slice(start, end));\n  const trail = decoder.end();\n\n  return trail ? res + trail : res;\n};\n\nexports.encode = function (string, encoding, options) {\n  if (Buffer.isEncoding(encoding)) {\n    return Buffer.from(string, encoding);\n  }\n\n  const encoder = Iconv.getEncoder(encoding, options || {});\n\n  const res = encoder.write(string);\n  const trail = encoder.end();\n\n  return trail && trail.length > 0 ? Buffer.concat([res, trail]) : res;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wYXJzZXJzL3N0cmluZy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixjQUFjLG1CQUFPLENBQUMsZ0VBQVk7QUFDbEMsWUFBWSw2SEFBNEI7O0FBRXhDO0FBQ0E7QUFDQSxDQUFDOztBQUVELGNBQWM7QUFDZDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSiwwQkFBMEI7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7O0FBRUEsMERBQTBEOztBQUUxRDtBQUNBOztBQUVBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZWFsX2VzdGF0ZS8uL25vZGVfbW9kdWxlcy9teXNxbDIvbGliL3BhcnNlcnMvc3RyaW5nLmpzP2IzOWEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBJY29udiA9IHJlcXVpcmUoJ2ljb252LWxpdGUnKTtcbmNvbnN0IExSVSA9IHJlcXVpcmUoJ2xydS1jYWNoZScpLmRlZmF1bHQ7XG5cbmNvbnN0IGRlY29kZXJDYWNoZSA9IG5ldyBMUlUoe1xuICBtYXg6IDUwMCxcbn0pO1xuXG5leHBvcnRzLmRlY29kZSA9IGZ1bmN0aW9uIChidWZmZXIsIGVuY29kaW5nLCBzdGFydCwgZW5kLCBvcHRpb25zKSB7XG4gIGlmIChCdWZmZXIuaXNFbmNvZGluZyhlbmNvZGluZykpIHtcbiAgICByZXR1cm4gYnVmZmVyLnRvU3RyaW5nKGVuY29kaW5nLCBzdGFydCwgZW5kKTtcbiAgfVxuXG4gIC8vIE9wdGltaXplIGZvciBjb21tb24gY2FzZTogZW5jb2Rpbmc9XCJzaG9ydF9zdHJpbmdcIiwgb3B0aW9ucz11bmRlZmluZWQuXG4gIGxldCBkZWNvZGVyO1xuICBpZiAoIW9wdGlvbnMpIHtcbiAgICBkZWNvZGVyID0gZGVjb2RlckNhY2hlLmdldChlbmNvZGluZyk7XG4gICAgaWYgKCFkZWNvZGVyKSB7XG4gICAgICBkZWNvZGVyID0gSWNvbnYuZ2V0RGVjb2RlcihlbmNvZGluZyk7XG4gICAgICBkZWNvZGVyQ2FjaGUuc2V0KGVuY29kaW5nLCBkZWNvZGVyKTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgY29uc3QgZGVjb2RlckFyZ3MgPSB7IGVuY29kaW5nLCBvcHRpb25zIH07XG4gICAgY29uc3QgZGVjb2RlcktleSA9IEpTT04uc3RyaW5naWZ5KGRlY29kZXJBcmdzKTtcbiAgICBkZWNvZGVyID0gZGVjb2RlckNhY2hlLmdldChkZWNvZGVyS2V5KTtcbiAgICBpZiAoIWRlY29kZXIpIHtcbiAgICAgIGRlY29kZXIgPSBJY29udi5nZXREZWNvZGVyKGRlY29kZXJBcmdzLmVuY29kaW5nLCBkZWNvZGVyQXJncy5vcHRpb25zKTtcbiAgICAgIGRlY29kZXJDYWNoZS5zZXQoZGVjb2RlcktleSwgZGVjb2Rlcik7XG4gICAgfVxuICB9XG5cbiAgY29uc3QgcmVzID0gZGVjb2Rlci53cml0ZShidWZmZXIuc2xpY2Uoc3RhcnQsIGVuZCkpO1xuICBjb25zdCB0cmFpbCA9IGRlY29kZXIuZW5kKCk7XG5cbiAgcmV0dXJuIHRyYWlsID8gcmVzICsgdHJhaWwgOiByZXM7XG59O1xuXG5leHBvcnRzLmVuY29kZSA9IGZ1bmN0aW9uIChzdHJpbmcsIGVuY29kaW5nLCBvcHRpb25zKSB7XG4gIGlmIChCdWZmZXIuaXNFbmNvZGluZyhlbmNvZGluZykpIHtcbiAgICByZXR1cm4gQnVmZmVyLmZyb20oc3RyaW5nLCBlbmNvZGluZyk7XG4gIH1cblxuICBjb25zdCBlbmNvZGVyID0gSWNvbnYuZ2V0RW5jb2RlcihlbmNvZGluZywgb3B0aW9ucyB8fCB7fSk7XG5cbiAgY29uc3QgcmVzID0gZW5jb2Rlci53cml0ZShzdHJpbmcpO1xuICBjb25zdCB0cmFpbCA9IGVuY29kZXIuZW5kKCk7XG5cbiAgcmV0dXJuIHRyYWlsICYmIHRyYWlsLmxlbmd0aCA+IDAgPyBCdWZmZXIuY29uY2F0KFtyZXMsIHRyYWlsXSkgOiByZXM7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/parsers/string.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/parsers/text_parser.js":
/*!********************************************************!*\
  !*** ./node_modules/mysql2/lib/parsers/text_parser.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst Types = __webpack_require__(/*! ../constants/types.js */ \"(rsc)/./node_modules/mysql2/lib/constants/types.js\");\nconst Charsets = __webpack_require__(/*! ../constants/charsets.js */ \"(rsc)/./node_modules/mysql2/lib/constants/charsets.js\");\nconst helpers = __webpack_require__(/*! ../helpers */ \"(rsc)/./node_modules/mysql2/lib/helpers.js\");\nconst genFunc = __webpack_require__(/*! generate-function */ \"(rsc)/./node_modules/generate-function/index.js\");\nconst parserCache = __webpack_require__(/*! ./parser_cache.js */ \"(rsc)/./node_modules/mysql2/lib/parsers/parser_cache.js\");\n\nconst typeNames = [];\nfor (const t in Types) {\n  typeNames[Types[t]] = t;\n}\n\nfunction readCodeFor(type, charset, encodingExpr, config, options) {\n  const supportBigNumbers = Boolean(\n    options.supportBigNumbers || config.supportBigNumbers,\n  );\n  const bigNumberStrings = Boolean(\n    options.bigNumberStrings || config.bigNumberStrings,\n  );\n  const timezone = options.timezone || config.timezone;\n  const dateStrings = options.dateStrings || config.dateStrings;\n\n  switch (type) {\n    case Types.TINY:\n    case Types.SHORT:\n    case Types.LONG:\n    case Types.INT24:\n    case Types.YEAR:\n      return 'packet.parseLengthCodedIntNoBigCheck()';\n    case Types.LONGLONG:\n      if (supportBigNumbers && bigNumberStrings) {\n        return 'packet.parseLengthCodedIntString()';\n      }\n      return `packet.parseLengthCodedInt(${supportBigNumbers})`;\n    case Types.FLOAT:\n    case Types.DOUBLE:\n      return 'packet.parseLengthCodedFloat()';\n    case Types.NULL:\n      return 'packet.readLengthCodedNumber()';\n    case Types.DECIMAL:\n    case Types.NEWDECIMAL:\n      if (config.decimalNumbers) {\n        return 'packet.parseLengthCodedFloat()';\n      }\n      return 'packet.readLengthCodedString(\"ascii\")';\n    case Types.DATE:\n      if (helpers.typeMatch(type, dateStrings, Types)) {\n        return 'packet.readLengthCodedString(\"ascii\")';\n      }\n      return `packet.parseDate(${helpers.srcEscape(timezone)})`;\n    case Types.DATETIME:\n    case Types.TIMESTAMP:\n      if (helpers.typeMatch(type, dateStrings, Types)) {\n        return 'packet.readLengthCodedString(\"ascii\")';\n      }\n      return `packet.parseDateTime(${helpers.srcEscape(timezone)})`;\n    case Types.TIME:\n      return 'packet.readLengthCodedString(\"ascii\")';\n    case Types.GEOMETRY:\n      return 'packet.parseGeometryValue()';\n    case Types.JSON:\n      // Since for JSON columns mysql always returns charset 63 (BINARY),\n      // we have to handle it according to JSON specs and use \"utf8\",\n      // see https://github.com/sidorares/node-mysql2/issues/409\n      return config.jsonStrings ? 'packet.readLengthCodedString(\"utf8\")' : 'JSON.parse(packet.readLengthCodedString(\"utf8\"))';\n    default:\n      if (charset === Charsets.BINARY) {\n        return 'packet.readLengthCodedBuffer()';\n      }\n      return `packet.readLengthCodedString(${encodingExpr})`;\n  }\n}\n\nfunction compile(fields, options, config) {\n  // use global typeCast if current query doesn't specify one\n  if (\n    typeof config.typeCast === 'function' &&\n    typeof options.typeCast !== 'function'\n  ) {\n    options.typeCast = config.typeCast;\n  }\n\n  function wrap(field, _this) {\n    return {\n      type: typeNames[field.columnType],\n      length: field.columnLength,\n      db: field.schema,\n      table: field.table,\n      name: field.name,\n      string: function (encoding = field.encoding) {\n        if (field.columnType === Types.JSON && encoding === field.encoding) {\n          // Since for JSON columns mysql always returns charset 63 (BINARY),\n          // we have to handle it according to JSON specs and use \"utf8\",\n          // see https://github.com/sidorares/node-mysql2/issues/1661\n          console.warn(\n            `typeCast: JSON column \"${field.name}\" is interpreted as BINARY by default, recommended to manually set utf8 encoding: \\`field.string(\"utf8\")\\``,\n          );\n        }\n\n        return _this.packet.readLengthCodedString(encoding);\n      },\n      buffer: function () {\n        return _this.packet.readLengthCodedBuffer();\n      },\n      geometry: function () {\n        return _this.packet.parseGeometryValue();\n      },\n    };\n  }\n\n  const parserFn = genFunc();\n\n  parserFn('(function () {')('return class TextRow {');\n\n  // constructor method\n  parserFn('constructor(fields) {');\n  // node-mysql typeCast compatibility wrapper\n  // see https://github.com/mysqljs/mysql/blob/96fdd0566b654436624e2375c7b6604b1f50f825/lib/protocol/packets/Field.js\n  if (typeof options.typeCast === 'function') {\n    parserFn('const _this = this;');\n    parserFn('for(let i=0; i<fields.length; ++i) {');\n    parserFn('this[`wrap${i}`] = wrap(fields[i], _this);');\n    parserFn('}');\n  }\n  parserFn('}');\n\n  // next method\n  parserFn('next(packet, fields, options) {');\n  parserFn('this.packet = packet;');\n  if (options.rowsAsArray) {\n    parserFn(`const result = new Array(${fields.length});`);\n  } else {\n    parserFn('const result = {};');\n  }\n\n  const resultTables = {};\n  let resultTablesArray = [];\n\n  if (options.nestTables === true) {\n    for (let i = 0; i < fields.length; i++) {\n      resultTables[fields[i].table] = 1;\n    }\n    resultTablesArray = Object.keys(resultTables);\n    for (let i = 0; i < resultTablesArray.length; i++) {\n      parserFn(`result[${helpers.fieldEscape(resultTablesArray[i])}] = {};`);\n    }\n  }\n\n  let lvalue = '';\n  let fieldName = '';\n  let tableName = '';\n  for (let i = 0; i < fields.length; i++) {\n    fieldName = helpers.fieldEscape(fields[i].name);\n    // parserFn(`// ${fieldName}: ${typeNames[fields[i].columnType]}`);\n\n    if (typeof options.nestTables === 'string') {\n      lvalue = `result[${helpers.fieldEscape(fields[i].table + options.nestTables + fields[i].name)}]`;\n    } else if (options.nestTables === true) {\n      tableName = helpers.fieldEscape(fields[i].table);\n\n      parserFn(`if (!result[${tableName}]) result[${tableName}] = {};`);\n      lvalue = `result[${tableName}][${fieldName}]`;\n    } else if (options.rowsAsArray) {\n      lvalue = `result[${i.toString(10)}]`;\n    } else {\n      lvalue = `result[${fieldName}]`;\n    }\n    if (options.typeCast === false) {\n      parserFn(`${lvalue} = packet.readLengthCodedBuffer();`);\n    } else {\n      const encodingExpr = `fields[${i}].encoding`;\n      const readCode = readCodeFor(\n        fields[i].columnType,\n        fields[i].characterSet,\n        encodingExpr,\n        config,\n        options,\n      );\n      if (typeof options.typeCast === 'function') {\n        parserFn(\n          `${lvalue} = options.typeCast(this.wrap${i}, function() { return ${readCode} });`,\n        );\n      } else {\n        parserFn(`${lvalue} = ${readCode};`);\n      }\n    }\n  }\n\n  parserFn('return result;');\n  parserFn('}');\n  parserFn('};')('})()');\n\n  if (config.debug) {\n    helpers.printDebugWithCode(\n      'Compiled text protocol row parser',\n      parserFn.toString(),\n    );\n  }\n  if (typeof options.typeCast === 'function') {\n    return parserFn.toFunction({ wrap });\n  }\n  return parserFn.toFunction();\n}\n\nfunction getTextParser(fields, options, config) {\n  return parserCache.getParser('text', fields, options, config, compile);\n}\n\nmodule.exports = getTextParser;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/parsers/text_parser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/pool.js":
/*!*****************************************!*\
  !*** ./node_modules/mysql2/lib/pool.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst process = __webpack_require__(/*! process */ \"process\");\nconst mysql = __webpack_require__(/*! ../index.js */ \"(rsc)/./node_modules/mysql2/index.js\");\n\nconst EventEmitter = (__webpack_require__(/*! events */ \"events\").EventEmitter);\nconst PoolConnection = __webpack_require__(/*! ./pool_connection.js */ \"(rsc)/./node_modules/mysql2/lib/pool_connection.js\");\nconst Queue = __webpack_require__(/*! denque */ \"(rsc)/./node_modules/denque/index.js\");\nconst Connection = __webpack_require__(/*! ./connection.js */ \"(rsc)/./node_modules/mysql2/lib/connection.js\");\n\nfunction spliceConnection(queue, connection) {\n  const len = queue.length;\n  for (let i = 0; i < len; i++) {\n    if (queue.get(i) === connection) {\n      queue.removeOne(i);\n      break;\n    }\n  }\n}\n\nclass Pool extends EventEmitter {\n  constructor(options) {\n    super();\n    this.config = options.config;\n    this.config.connectionConfig.pool = this;\n    this._allConnections = new Queue();\n    this._freeConnections = new Queue();\n    this._connectionQueue = new Queue();\n    this._closed = false;\n    if (this.config.maxIdle < this.config.connectionLimit) {\n      // create idle connection timeout automatically release job\n      this._removeIdleTimeoutConnections();\n    }\n  }\n\n  promise(promiseImpl) {\n    const PromisePool = (__webpack_require__(/*! ../promise */ \"(rsc)/./node_modules/mysql2/promise.js\").PromisePool);\n    return new PromisePool(this, promiseImpl);\n  }\n\n  getConnection(cb) {\n    if (this._closed) {\n      return process.nextTick(() => cb(new Error('Pool is closed.')));\n    }\n    let connection;\n    if (this._freeConnections.length > 0) {\n      connection = this._freeConnections.pop();\n      this.emit('acquire', connection);\n      return process.nextTick(() => cb(null, connection));\n    }\n    if (\n      this.config.connectionLimit === 0 ||\n      this._allConnections.length < this.config.connectionLimit\n    ) {\n      connection = new PoolConnection(this, {\n        config: this.config.connectionConfig\n      });\n      this._allConnections.push(connection);\n      return connection.connect(err => {\n        if (this._closed) {\n          return cb(new Error('Pool is closed.'));\n        }\n        if (err) {\n          return cb(err);\n        }\n        this.emit('connection', connection);\n        this.emit('acquire', connection);\n        return cb(null, connection);\n      });\n    }\n    if (!this.config.waitForConnections) {\n      return process.nextTick(() => cb(new Error('No connections available.')));\n    }\n    if (\n      this.config.queueLimit &&\n      this._connectionQueue.length >= this.config.queueLimit\n    ) {\n      return cb(new Error('Queue limit reached.'));\n    }\n    this.emit('enqueue');\n    return this._connectionQueue.push(cb);\n  }\n\n  releaseConnection(connection) {\n    let cb;\n    if (!connection._pool) {\n      // The connection has been removed from the pool and is no longer good.\n      if (this._connectionQueue.length) {\n        cb = this._connectionQueue.shift();\n        process.nextTick(this.getConnection.bind(this, cb));\n      }\n    } else if (this._connectionQueue.length) {\n      cb = this._connectionQueue.shift();\n      process.nextTick(cb.bind(null, null, connection));\n    } else {\n      this._freeConnections.push(connection);\n      this.emit('release', connection);\n    }\n  }\n\n  end(cb) {\n    this._closed = true;\n    clearTimeout(this._removeIdleTimeoutConnectionsTimer);\n    if (typeof cb !== 'function') {\n      cb = function(err) {\n        if (err) {\n          throw err;\n        }\n      };\n    }\n    let calledBack = false;\n    let closedConnections = 0;\n    let connection;\n    const endCB = function(err) {\n      if (calledBack) {\n        return;\n      }\n      if (err || ++closedConnections >= this._allConnections.length) {\n        calledBack = true;\n        cb(err);\n        return;\n      }\n    }.bind(this);\n    if (this._allConnections.length === 0) {\n      endCB();\n      return;\n    }\n    for (let i = 0; i < this._allConnections.length; i++) {\n      connection = this._allConnections.get(i);\n      connection._realEnd(endCB);\n    }\n  }\n\n  query(sql, values, cb) {\n    const cmdQuery = Connection.createQuery(\n      sql,\n      values,\n      cb,\n      this.config.connectionConfig\n    );\n    if (typeof cmdQuery.namedPlaceholders === 'undefined') {\n      cmdQuery.namedPlaceholders = this.config.connectionConfig.namedPlaceholders;\n    }\n    this.getConnection((err, conn) => {\n      if (err) {\n        if (typeof cmdQuery.onResult === 'function') {\n          cmdQuery.onResult(err);\n        } else {\n          cmdQuery.emit('error', err);\n        }\n        return;\n      }\n      try {\n        conn.query(cmdQuery).once('end', () => {\n          conn.release();\n        });\n      } catch (e) {\n        conn.release();\n        throw e;\n      }\n    });\n    return cmdQuery;\n  }\n\n  execute(sql, values, cb) {\n    // TODO construct execute command first here and pass it to connection.execute\n    // so that polymorphic arguments logic is there in one place\n    if (typeof values === 'function') {\n      cb = values;\n      values = [];\n    }\n    this.getConnection((err, conn) => {\n      if (err) {\n        return cb(err);\n      }\n      try {\n        conn.execute(sql, values, cb).once('end', () => {\n          conn.release();\n        });\n      } catch (e) {\n        conn.release();\n        return cb(e);\n      }\n    });\n  }\n\n  _removeConnection(connection) {\n    // Remove connection from all connections\n    spliceConnection(this._allConnections, connection);\n    // Remove connection from free connections\n    spliceConnection(this._freeConnections, connection);\n    this.releaseConnection(connection);\n  }\n\n  _removeIdleTimeoutConnections() {\n    if (this._removeIdleTimeoutConnectionsTimer) {\n      clearTimeout(this._removeIdleTimeoutConnectionsTimer);\n    }\n\n    this._removeIdleTimeoutConnectionsTimer = setTimeout(() => {\n      try {\n        while (\n          this._freeConnections.length > this.config.maxIdle &&\n          Date.now() - this._freeConnections.get(0).lastActiveTime >\n            this.config.idleTimeout\n        ) {\n          this._freeConnections.get(0).destroy();\n        }\n      } finally {\n        this._removeIdleTimeoutConnections();\n      }\n    }, 1000);\n  }\n\n  format(sql, values) {\n    return mysql.format(\n      sql,\n      values,\n      this.config.connectionConfig.stringifyObjects,\n      this.config.connectionConfig.timezone\n    );\n  }\n\n  escape(value) {\n    return mysql.escape(\n      value,\n      this.config.connectionConfig.stringifyObjects,\n      this.config.connectionConfig.timezone\n    );\n  }\n\n  escapeId(value) {\n    return mysql.escapeId(value, false);\n  }\n}\n\nmodule.exports = Pool;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/pool.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/pool_cluster.js":
/*!*************************************************!*\
  !*** ./node_modules/mysql2/lib/pool_cluster.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst process = __webpack_require__(/*! process */ \"process\");\n\nconst Pool = __webpack_require__(/*! ./pool.js */ \"(rsc)/./node_modules/mysql2/lib/pool.js\");\nconst PoolConfig = __webpack_require__(/*! ./pool_config.js */ \"(rsc)/./node_modules/mysql2/lib/pool_config.js\");\nconst Connection = __webpack_require__(/*! ./connection.js */ \"(rsc)/./node_modules/mysql2/lib/connection.js\");\nconst EventEmitter = (__webpack_require__(/*! events */ \"events\").EventEmitter);\n\n/**\n * Selector\n */\nconst makeSelector = {\n  RR() {\n    let index = 0;\n    return clusterIds => clusterIds[index++ % clusterIds.length];\n  },\n  RANDOM() {\n    return clusterIds =>\n      clusterIds[Math.floor(Math.random() * clusterIds.length)];\n  },\n  ORDER() {\n    return clusterIds => clusterIds[0];\n  }\n};\n\nclass PoolNamespace {\n  constructor(cluster, pattern, selector) {\n    this._cluster = cluster;\n    this._pattern = pattern;\n    this._selector = makeSelector[selector]();\n  }\n\n  getConnection(cb) {\n    const clusterNode = this._getClusterNode();\n    if (clusterNode === null) {\n      return cb(new Error('Pool does Not exists.'));\n    }\n    return this._cluster._getConnection(clusterNode, (err, connection) => {\n      if (err) {\n        return cb(err);\n      }\n      if (connection === 'retry') {\n        return this.getConnection(cb);\n      }\n      return cb(null, connection);\n    });\n  }\n\n  /**\n   * pool cluster query\n   * @param {*} sql\n   * @param {*} values\n   * @param {*} cb\n   * @returns query\n   */\n  query(sql, values, cb) {\n    const query = Connection.createQuery(sql, values, cb, {});\n    this.getConnection((err, conn) => {\n      if (err) {\n        if (typeof query.onResult === 'function') {\n          query.onResult(err);\n        } else {\n          query.emit('error', err);\n        }\n        return;\n      }\n      try {\n        conn.query(query).once('end', () => {\n          conn.release();\n        });\n      } catch (e) {\n        conn.release();\n        throw e;\n      }\n    });\n    return query;\n  }\n\n  /**\n   * pool cluster execute\n   * @param {*} sql \n   * @param {*} values \n   * @param {*} cb \n   */\n  execute(sql, values, cb) {\n    if (typeof values === 'function') {\n      cb = values;\n      values = [];\n    }\n    this.getConnection((err, conn) => {\n      if (err) {\n        return cb(err);\n      }\n      try {\n        conn.execute(sql, values, cb).once('end', () => {\n          conn.release();\n        });\n      } catch (e) {\n        conn.release();\n        throw e;\n      }\n    });\n  }\n\n  _getClusterNode() {\n    const foundNodeIds = this._cluster._findNodeIds(this._pattern);\n    if (foundNodeIds.length === 0) {\n      return null;\n    }\n    const nodeId =\n      foundNodeIds.length === 1\n        ? foundNodeIds[0]\n        : this._selector(foundNodeIds);\n    return this._cluster._getNode(nodeId);\n  }\n}\n\nclass PoolCluster extends EventEmitter {\n  constructor(config) {\n    super();\n    config = config || {};\n    this._canRetry =\n      typeof config.canRetry === 'undefined' ? true : config.canRetry;\n    this._removeNodeErrorCount = config.removeNodeErrorCount || 5;\n    this._defaultSelector = config.defaultSelector || 'RR';\n    this._closed = false;\n    this._lastId = 0;\n    this._nodes = {};\n    this._serviceableNodeIds = [];\n    this._namespaces = {};\n    this._findCaches = {};\n  }\n\n  of(pattern, selector) {\n    pattern = pattern || '*';\n    selector = selector || this._defaultSelector;\n    selector = selector.toUpperCase();\n    if (!makeSelector[selector] === 'undefined') {\n      selector = this._defaultSelector;\n    }\n    const key = pattern + selector;\n    if (typeof this._namespaces[key] === 'undefined') {\n      this._namespaces[key] = new PoolNamespace(this, pattern, selector);\n    }\n    return this._namespaces[key];\n  }\n\n  add(id, config) {\n    if (typeof id === 'object') {\n      config = id;\n      id = `CLUSTER::${++this._lastId}`;\n    }\n    if (typeof this._nodes[id] === 'undefined') {\n      this._nodes[id] = {\n        id: id,\n        errorCount: 0,\n        pool: new Pool({ config: new PoolConfig(config) })\n      };\n      this._serviceableNodeIds.push(id);\n      this._clearFindCaches();\n    }\n  }\n\n  getConnection(pattern, selector, cb) {\n    let namespace;\n    if (typeof pattern === 'function') {\n      cb = pattern;\n      namespace = this.of();\n    } else {\n      if (typeof selector === 'function') {\n        cb = selector;\n        selector = this._defaultSelector;\n      }\n      namespace = this.of(pattern, selector);\n    }\n    namespace.getConnection(cb);\n  }\n\n  end(callback) {\n    const cb =\n      callback !== undefined\n        ? callback\n        : err => {\n          if (err) {\n            throw err;\n          }\n        };\n    if (this._closed) {\n      process.nextTick(cb);\n      return;\n    }\n    this._closed = true;\n\n    let calledBack = false;\n    let waitingClose = 0;\n    const onEnd = err => {\n      if (!calledBack && (err || --waitingClose <= 0)) {\n        calledBack = true;\n        return cb(err);\n      }\n    };\n\n    for (const id in this._nodes) {\n      waitingClose++;\n      this._nodes[id].pool.end(onEnd);\n    }\n    if (waitingClose === 0) {\n      process.nextTick(onEnd);\n    }\n  }\n\n  _findNodeIds(pattern) {\n    if (typeof this._findCaches[pattern] !== 'undefined') {\n      return this._findCaches[pattern];\n    }\n    let foundNodeIds;\n    if (pattern === '*') {\n      // all\n      foundNodeIds = this._serviceableNodeIds;\n    } else if (this._serviceableNodeIds.indexOf(pattern) !== -1) {\n      // one\n      foundNodeIds = [pattern];\n    } else {\n      // wild matching\n      const keyword = pattern.substring(pattern.length - 1, 0);\n      foundNodeIds = this._serviceableNodeIds.filter(id =>\n        id.startsWith(keyword)\n      );\n    }\n    this._findCaches[pattern] = foundNodeIds;\n    return foundNodeIds;\n  }\n\n  _getNode(id) {\n    return this._nodes[id] || null;\n  }\n\n  _increaseErrorCount(node) {\n    if (++node.errorCount >= this._removeNodeErrorCount) {\n      const index = this._serviceableNodeIds.indexOf(node.id);\n      if (index !== -1) {\n        this._serviceableNodeIds.splice(index, 1);\n        delete this._nodes[node.id];\n        this._clearFindCaches();\n        node.pool.end();\n        this.emit('remove', node.id);\n      }\n    }\n  }\n\n  _decreaseErrorCount(node) {\n    if (node.errorCount > 0) {\n      --node.errorCount;\n    }\n  }\n\n  _getConnection(node, cb) {\n    node.pool.getConnection((err, connection) => {\n      if (err) {\n        this._increaseErrorCount(node);\n        if (this._canRetry) {\n          // REVIEW: this seems wrong?\n          this.emit('warn', err);\n          // eslint-disable-next-line no-console\n          console.warn(`[Error] PoolCluster : ${err}`);\n          return cb(null, 'retry');\n        }\n        return cb(err);\n      }\n      this._decreaseErrorCount(node);\n\n      connection._clusterId = node.id;\n      return cb(null, connection);\n    });\n  }\n\n  _clearFindCaches() {\n    this._findCaches = {};\n  }\n}\n\nmodule.exports = PoolCluster;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/pool_cluster.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/pool_config.js":
/*!************************************************!*\
  !*** ./node_modules/mysql2/lib/pool_config.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst ConnectionConfig = __webpack_require__(/*! ./connection_config.js */ \"(rsc)/./node_modules/mysql2/lib/connection_config.js\");\n\nclass PoolConfig {\n  constructor(options) {\n    if (typeof options === 'string') {\n      options = ConnectionConfig.parseUrl(options);\n    }\n    this.connectionConfig = new ConnectionConfig(options);\n    this.waitForConnections =\n      options.waitForConnections === undefined\n        ? true\n        : Boolean(options.waitForConnections);\n    this.connectionLimit = isNaN(options.connectionLimit)\n      ? 10\n      : Number(options.connectionLimit);\n    this.maxIdle = isNaN(options.maxIdle)\n      ? this.connectionLimit\n      : Number(options.maxIdle);\n    this.idleTimeout = isNaN(options.idleTimeout)\n      ? 60000\n      : Number(options.idleTimeout);\n    this.queueLimit = isNaN(options.queueLimit)\n      ? 0\n      : Number(options.queueLimit);\n  }\n}\n\nmodule.exports = PoolConfig;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wb29sX2NvbmZpZy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYix5QkFBeUIsbUJBQU8sQ0FBQyxvRkFBd0I7O0FBRXpEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JlYWxfZXN0YXRlLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvcG9vbF9jb25maWcuanM/MzI5YSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IENvbm5lY3Rpb25Db25maWcgPSByZXF1aXJlKCcuL2Nvbm5lY3Rpb25fY29uZmlnLmpzJyk7XG5cbmNsYXNzIFBvb2xDb25maWcge1xuICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7XG4gICAgaWYgKHR5cGVvZiBvcHRpb25zID09PSAnc3RyaW5nJykge1xuICAgICAgb3B0aW9ucyA9IENvbm5lY3Rpb25Db25maWcucGFyc2VVcmwob3B0aW9ucyk7XG4gICAgfVxuICAgIHRoaXMuY29ubmVjdGlvbkNvbmZpZyA9IG5ldyBDb25uZWN0aW9uQ29uZmlnKG9wdGlvbnMpO1xuICAgIHRoaXMud2FpdEZvckNvbm5lY3Rpb25zID1cbiAgICAgIG9wdGlvbnMud2FpdEZvckNvbm5lY3Rpb25zID09PSB1bmRlZmluZWRcbiAgICAgICAgPyB0cnVlXG4gICAgICAgIDogQm9vbGVhbihvcHRpb25zLndhaXRGb3JDb25uZWN0aW9ucyk7XG4gICAgdGhpcy5jb25uZWN0aW9uTGltaXQgPSBpc05hTihvcHRpb25zLmNvbm5lY3Rpb25MaW1pdClcbiAgICAgID8gMTBcbiAgICAgIDogTnVtYmVyKG9wdGlvbnMuY29ubmVjdGlvbkxpbWl0KTtcbiAgICB0aGlzLm1heElkbGUgPSBpc05hTihvcHRpb25zLm1heElkbGUpXG4gICAgICA/IHRoaXMuY29ubmVjdGlvbkxpbWl0XG4gICAgICA6IE51bWJlcihvcHRpb25zLm1heElkbGUpO1xuICAgIHRoaXMuaWRsZVRpbWVvdXQgPSBpc05hTihvcHRpb25zLmlkbGVUaW1lb3V0KVxuICAgICAgPyA2MDAwMFxuICAgICAgOiBOdW1iZXIob3B0aW9ucy5pZGxlVGltZW91dCk7XG4gICAgdGhpcy5xdWV1ZUxpbWl0ID0gaXNOYU4ob3B0aW9ucy5xdWV1ZUxpbWl0KVxuICAgICAgPyAwXG4gICAgICA6IE51bWJlcihvcHRpb25zLnF1ZXVlTGltaXQpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gUG9vbENvbmZpZztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/pool_config.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/pool_connection.js":
/*!****************************************************!*\
  !*** ./node_modules/mysql2/lib/pool_connection.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst Connection = (__webpack_require__(/*! ../index.js */ \"(rsc)/./node_modules/mysql2/index.js\").Connection);\n\nclass PoolConnection extends Connection {\n  constructor(pool, options) {\n    super(options);\n    this._pool = pool;\n    // The last active time of this connection\n    this.lastActiveTime = Date.now();\n    // When a fatal error occurs the connection's protocol ends, which will cause\n    // the connection to end as well, thus we only need to watch for the end event\n    // and we will be notified of disconnects.\n    // REVIEW: Moved to `once`\n    this.once('end', () => {\n      this._removeFromPool();\n    });\n    this.once('error', () => {\n      this._removeFromPool();\n    });\n  }\n\n  release() {\n    if (!this._pool || this._pool._closed) {\n      return;\n    }\n    // update last active time\n    this.lastActiveTime = Date.now();\n    this._pool.releaseConnection(this);\n  }\n\n  promise(promiseImpl) {\n    const PromisePoolConnection = (__webpack_require__(/*! ../promise */ \"(rsc)/./node_modules/mysql2/promise.js\").PromisePoolConnection);\n    return new PromisePoolConnection(this, promiseImpl);\n  }\n\n  end() {\n    const err = new Error(\n      'Calling conn.end() to release a pooled connection is ' +\n        'deprecated. In next version calling conn.end() will be ' +\n        'restored to default conn.end() behavior. Use ' +\n        'conn.release() instead.'\n    );\n    this.emit('warn', err);\n    // eslint-disable-next-line no-console\n    console.warn(err.message);\n    this.release();\n  }\n\n  destroy() {\n    this._removeFromPool();\n    super.destroy();\n  }\n\n  _removeFromPool() {\n    if (!this._pool || this._pool._closed) {\n      return;\n    }\n    const pool = this._pool;\n    this._pool = null;\n    pool._removeConnection(this);\n  }\n}\n\nPoolConnection.statementKey = Connection.statementKey;\nmodule.exports = PoolConnection;\n\n// TODO: Remove this when we are removing PoolConnection#end\nPoolConnection.prototype._realEnd = Connection.prototype.end;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9wb29sX2Nvbm5lY3Rpb24uanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsbUJBQW1CLDJGQUFpQzs7QUFFcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGtDQUFrQyx1R0FBMkM7QUFDN0U7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JlYWxfZXN0YXRlLy4vbm9kZV9tb2R1bGVzL215c3FsMi9saWIvcG9vbF9jb25uZWN0aW9uLmpzPzNlMTMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBDb25uZWN0aW9uID0gcmVxdWlyZSgnLi4vaW5kZXguanMnKS5Db25uZWN0aW9uO1xuXG5jbGFzcyBQb29sQ29ubmVjdGlvbiBleHRlbmRzIENvbm5lY3Rpb24ge1xuICBjb25zdHJ1Y3Rvcihwb29sLCBvcHRpb25zKSB7XG4gICAgc3VwZXIob3B0aW9ucyk7XG4gICAgdGhpcy5fcG9vbCA9IHBvb2w7XG4gICAgLy8gVGhlIGxhc3QgYWN0aXZlIHRpbWUgb2YgdGhpcyBjb25uZWN0aW9uXG4gICAgdGhpcy5sYXN0QWN0aXZlVGltZSA9IERhdGUubm93KCk7XG4gICAgLy8gV2hlbiBhIGZhdGFsIGVycm9yIG9jY3VycyB0aGUgY29ubmVjdGlvbidzIHByb3RvY29sIGVuZHMsIHdoaWNoIHdpbGwgY2F1c2VcbiAgICAvLyB0aGUgY29ubmVjdGlvbiB0byBlbmQgYXMgd2VsbCwgdGh1cyB3ZSBvbmx5IG5lZWQgdG8gd2F0Y2ggZm9yIHRoZSBlbmQgZXZlbnRcbiAgICAvLyBhbmQgd2Ugd2lsbCBiZSBub3RpZmllZCBvZiBkaXNjb25uZWN0cy5cbiAgICAvLyBSRVZJRVc6IE1vdmVkIHRvIGBvbmNlYFxuICAgIHRoaXMub25jZSgnZW5kJywgKCkgPT4ge1xuICAgICAgdGhpcy5fcmVtb3ZlRnJvbVBvb2woKTtcbiAgICB9KTtcbiAgICB0aGlzLm9uY2UoJ2Vycm9yJywgKCkgPT4ge1xuICAgICAgdGhpcy5fcmVtb3ZlRnJvbVBvb2woKTtcbiAgICB9KTtcbiAgfVxuXG4gIHJlbGVhc2UoKSB7XG4gICAgaWYgKCF0aGlzLl9wb29sIHx8IHRoaXMuX3Bvb2wuX2Nsb3NlZCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICAvLyB1cGRhdGUgbGFzdCBhY3RpdmUgdGltZVxuICAgIHRoaXMubGFzdEFjdGl2ZVRpbWUgPSBEYXRlLm5vdygpO1xuICAgIHRoaXMuX3Bvb2wucmVsZWFzZUNvbm5lY3Rpb24odGhpcyk7XG4gIH1cblxuICBwcm9taXNlKHByb21pc2VJbXBsKSB7XG4gICAgY29uc3QgUHJvbWlzZVBvb2xDb25uZWN0aW9uID0gcmVxdWlyZSgnLi4vcHJvbWlzZScpLlByb21pc2VQb29sQ29ubmVjdGlvbjtcbiAgICByZXR1cm4gbmV3IFByb21pc2VQb29sQ29ubmVjdGlvbih0aGlzLCBwcm9taXNlSW1wbCk7XG4gIH1cblxuICBlbmQoKSB7XG4gICAgY29uc3QgZXJyID0gbmV3IEVycm9yKFxuICAgICAgJ0NhbGxpbmcgY29ubi5lbmQoKSB0byByZWxlYXNlIGEgcG9vbGVkIGNvbm5lY3Rpb24gaXMgJyArXG4gICAgICAgICdkZXByZWNhdGVkLiBJbiBuZXh0IHZlcnNpb24gY2FsbGluZyBjb25uLmVuZCgpIHdpbGwgYmUgJyArXG4gICAgICAgICdyZXN0b3JlZCB0byBkZWZhdWx0IGNvbm4uZW5kKCkgYmVoYXZpb3IuIFVzZSAnICtcbiAgICAgICAgJ2Nvbm4ucmVsZWFzZSgpIGluc3RlYWQuJ1xuICAgICk7XG4gICAgdGhpcy5lbWl0KCd3YXJuJywgZXJyKTtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICAgIGNvbnNvbGUud2FybihlcnIubWVzc2FnZSk7XG4gICAgdGhpcy5yZWxlYXNlKCk7XG4gIH1cblxuICBkZXN0cm95KCkge1xuICAgIHRoaXMuX3JlbW92ZUZyb21Qb29sKCk7XG4gICAgc3VwZXIuZGVzdHJveSgpO1xuICB9XG5cbiAgX3JlbW92ZUZyb21Qb29sKCkge1xuICAgIGlmICghdGhpcy5fcG9vbCB8fCB0aGlzLl9wb29sLl9jbG9zZWQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY29uc3QgcG9vbCA9IHRoaXMuX3Bvb2w7XG4gICAgdGhpcy5fcG9vbCA9IG51bGw7XG4gICAgcG9vbC5fcmVtb3ZlQ29ubmVjdGlvbih0aGlzKTtcbiAgfVxufVxuXG5Qb29sQ29ubmVjdGlvbi5zdGF0ZW1lbnRLZXkgPSBDb25uZWN0aW9uLnN0YXRlbWVudEtleTtcbm1vZHVsZS5leHBvcnRzID0gUG9vbENvbm5lY3Rpb247XG5cbi8vIFRPRE86IFJlbW92ZSB0aGlzIHdoZW4gd2UgYXJlIHJlbW92aW5nIFBvb2xDb25uZWN0aW9uI2VuZFxuUG9vbENvbm5lY3Rpb24ucHJvdG90eXBlLl9yZWFsRW5kID0gQ29ubmVjdGlvbi5wcm90b3R5cGUuZW5kO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/pool_connection.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/lib/server.js":
/*!*******************************************!*\
  !*** ./node_modules/mysql2/lib/server.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst net = __webpack_require__(/*! net */ \"net\");\nconst EventEmitter = (__webpack_require__(/*! events */ \"events\").EventEmitter);\n\nconst Connection = __webpack_require__(/*! ./connection */ \"(rsc)/./node_modules/mysql2/lib/connection.js\");\nconst ConnectionConfig = __webpack_require__(/*! ./connection_config */ \"(rsc)/./node_modules/mysql2/lib/connection_config.js\");\n\n// TODO: inherit Server from net.Server\nclass Server extends EventEmitter {\n  constructor() {\n    super();\n    this.connections = [];\n    this._server = net.createServer(this._handleConnection.bind(this));\n  }\n\n  _handleConnection(socket) {\n    const connectionConfig = new ConnectionConfig({\n      stream: socket,\n      isServer: true\n    });\n    const connection = new Connection({ config: connectionConfig });\n    this.emit('connection', connection);\n  }\n\n  listen(port) {\n    this._port = port;\n    this._server.listen.apply(this._server, arguments);\n    return this;\n  }\n\n  close(cb) {\n    this._server.close(cb);\n  }\n}\n\nmodule.exports = Server;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL2xpYi9zZXJ2ZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsWUFBWSxtQkFBTyxDQUFDLGdCQUFLO0FBQ3pCLHFCQUFxQiwwREFBOEI7O0FBRW5ELG1CQUFtQixtQkFBTyxDQUFDLG1FQUFjO0FBQ3pDLHlCQUF5QixtQkFBTyxDQUFDLGlGQUFxQjs7QUFFdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsd0NBQXdDLDBCQUEwQjtBQUNsRTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZWFsX2VzdGF0ZS8uL25vZGVfbW9kdWxlcy9teXNxbDIvbGliL3NlcnZlci5qcz8yYzRhIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgbmV0ID0gcmVxdWlyZSgnbmV0Jyk7XG5jb25zdCBFdmVudEVtaXR0ZXIgPSByZXF1aXJlKCdldmVudHMnKS5FdmVudEVtaXR0ZXI7XG5cbmNvbnN0IENvbm5lY3Rpb24gPSByZXF1aXJlKCcuL2Nvbm5lY3Rpb24nKTtcbmNvbnN0IENvbm5lY3Rpb25Db25maWcgPSByZXF1aXJlKCcuL2Nvbm5lY3Rpb25fY29uZmlnJyk7XG5cbi8vIFRPRE86IGluaGVyaXQgU2VydmVyIGZyb20gbmV0LlNlcnZlclxuY2xhc3MgU2VydmVyIGV4dGVuZHMgRXZlbnRFbWl0dGVyIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLmNvbm5lY3Rpb25zID0gW107XG4gICAgdGhpcy5fc2VydmVyID0gbmV0LmNyZWF0ZVNlcnZlcih0aGlzLl9oYW5kbGVDb25uZWN0aW9uLmJpbmQodGhpcykpO1xuICB9XG5cbiAgX2hhbmRsZUNvbm5lY3Rpb24oc29ja2V0KSB7XG4gICAgY29uc3QgY29ubmVjdGlvbkNvbmZpZyA9IG5ldyBDb25uZWN0aW9uQ29uZmlnKHtcbiAgICAgIHN0cmVhbTogc29ja2V0LFxuICAgICAgaXNTZXJ2ZXI6IHRydWVcbiAgICB9KTtcbiAgICBjb25zdCBjb25uZWN0aW9uID0gbmV3IENvbm5lY3Rpb24oeyBjb25maWc6IGNvbm5lY3Rpb25Db25maWcgfSk7XG4gICAgdGhpcy5lbWl0KCdjb25uZWN0aW9uJywgY29ubmVjdGlvbik7XG4gIH1cblxuICBsaXN0ZW4ocG9ydCkge1xuICAgIHRoaXMuX3BvcnQgPSBwb3J0O1xuICAgIHRoaXMuX3NlcnZlci5saXN0ZW4uYXBwbHkodGhpcy5fc2VydmVyLCBhcmd1bWVudHMpO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgY2xvc2UoY2IpIHtcbiAgICB0aGlzLl9zZXJ2ZXIuY2xvc2UoY2IpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gU2VydmVyO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/lib/server.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/promise.js":
/*!****************************************!*\
  !*** ./node_modules/mysql2/promise.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nconst core = __webpack_require__(/*! ./index.js */ \"(rsc)/./node_modules/mysql2/index.js\");\nconst EventEmitter = (__webpack_require__(/*! events */ \"events\").EventEmitter);\nconst parserCache = __webpack_require__(/*! ./lib/parsers/parser_cache.js */ \"(rsc)/./node_modules/mysql2/lib/parsers/parser_cache.js\");\n\nfunction makeDoneCb(resolve, reject, localErr) {\n  return function (err, rows, fields) {\n    if (err) {\n      localErr.message = err.message;\n      localErr.code = err.code;\n      localErr.errno = err.errno;\n      localErr.sql = err.sql;\n      localErr.sqlState = err.sqlState;\n      localErr.sqlMessage = err.sqlMessage;\n      reject(localErr);\n    } else {\n      resolve([rows, fields]);\n    }\n  };\n}\n\nfunction inheritEvents(source, target, events) {\n  const listeners = {};\n  target\n    .on('newListener', eventName => {\n      if (events.indexOf(eventName) >= 0 && !target.listenerCount(eventName)) {\n        source.on(\n          eventName,\n          (listeners[eventName] = function () {\n            const args = [].slice.call(arguments);\n            args.unshift(eventName);\n\n            target.emit.apply(target, args);\n          })\n        );\n      }\n    })\n    .on('removeListener', eventName => {\n      if (events.indexOf(eventName) >= 0 && !target.listenerCount(eventName)) {\n        source.removeListener(eventName, listeners[eventName]);\n        delete listeners[eventName];\n      }\n    });\n}\n\nclass PromisePreparedStatementInfo {\n  constructor(statement, promiseImpl) {\n    this.statement = statement;\n    this.Promise = promiseImpl;\n  }\n\n  execute(parameters) {\n    const s = this.statement;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n      if (parameters) {\n        s.execute(parameters, done);\n      } else {\n        s.execute(done);\n      }\n    });\n  }\n\n  close() {\n    return new this.Promise(resolve => {\n      this.statement.close();\n      resolve();\n    });\n  }\n}\n\nclass PromiseConnection extends EventEmitter {\n  constructor(connection, promiseImpl) {\n    super();\n    this.connection = connection;\n    this.Promise = promiseImpl || Promise;\n    inheritEvents(connection, this, [\n      'error',\n      'drain',\n      'connect',\n      'end',\n      'enqueue'\n    ]);\n  }\n\n  release() {\n    this.connection.release();\n  }\n\n  query(query, params) {\n    const c = this.connection;\n    const localErr = new Error();\n    if (typeof params === 'function') {\n      throw new Error(\n        'Callback function is not available with promise clients.'\n      );\n    }\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n      if (params !== undefined) {\n        c.query(query, params, done);\n      } else {\n        c.query(query, done);\n      }\n    });\n  }\n\n  execute(query, params) {\n    const c = this.connection;\n    const localErr = new Error();\n    if (typeof params === 'function') {\n      throw new Error(\n        'Callback function is not available with promise clients.'\n      );\n    }\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n      if (params !== undefined) {\n        c.execute(query, params, done);\n      } else {\n        c.execute(query, done);\n      }\n    });\n  }\n\n  end() {\n    return new this.Promise(resolve => {\n      this.connection.end(resolve);\n    });\n  }\n\n  beginTransaction() {\n    const c = this.connection;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n      c.beginTransaction(done);\n    });\n  }\n\n  commit() {\n    const c = this.connection;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n      c.commit(done);\n    });\n  }\n\n  rollback() {\n    const c = this.connection;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n      c.rollback(done);\n    });\n  }\n\n  ping() {\n    const c = this.connection;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      c.ping(err => {\n        if (err) {\n          localErr.message = err.message;\n          localErr.code = err.code;\n          localErr.errno = err.errno;\n          localErr.sqlState = err.sqlState;\n          localErr.sqlMessage = err.sqlMessage;\n          reject(localErr);\n        } else {\n          resolve(true);\n        }\n      });\n    });\n  }\n\n  connect() {\n    const c = this.connection;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      c.connect((err, param) => {\n        if (err) {\n          localErr.message = err.message;\n          localErr.code = err.code;\n          localErr.errno = err.errno;\n          localErr.sqlState = err.sqlState;\n          localErr.sqlMessage = err.sqlMessage;\n          reject(localErr);\n        } else {\n          resolve(param);\n        }\n      });\n    });\n  }\n\n  prepare(options) {\n    const c = this.connection;\n    const promiseImpl = this.Promise;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      c.prepare(options, (err, statement) => {\n        if (err) {\n          localErr.message = err.message;\n          localErr.code = err.code;\n          localErr.errno = err.errno;\n          localErr.sqlState = err.sqlState;\n          localErr.sqlMessage = err.sqlMessage;\n          reject(localErr);\n        } else {\n          const wrappedStatement = new PromisePreparedStatementInfo(\n            statement,\n            promiseImpl\n          );\n          resolve(wrappedStatement);\n        }\n      });\n    });\n  }\n\n  changeUser(options) {\n    const c = this.connection;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      c.changeUser(options, err => {\n        if (err) {\n          localErr.message = err.message;\n          localErr.code = err.code;\n          localErr.errno = err.errno;\n          localErr.sqlState = err.sqlState;\n          localErr.sqlMessage = err.sqlMessage;\n          reject(localErr);\n        } else {\n          resolve();\n        }\n      });\n    });\n  }\n\n  get config() {\n    return this.connection.config;\n  }\n\n  get threadId() {\n    return this.connection.threadId;\n  }\n}\n\nfunction createConnection(opts) {\n  const coreConnection = core.createConnection(opts);\n  const createConnectionErr = new Error();\n  const thePromise = opts.Promise || Promise;\n  if (!thePromise) {\n    throw new Error(\n      'no Promise implementation available.' +\n      'Use promise-enabled node version or pass userland Promise' +\n      \" implementation as parameter, for example: { Promise: require('bluebird') }\"\n    );\n  }\n  return new thePromise((resolve, reject) => {\n    coreConnection.once('connect', () => {\n      resolve(new PromiseConnection(coreConnection, thePromise));\n    });\n    coreConnection.once('error', err => {\n      createConnectionErr.message = err.message;\n      createConnectionErr.code = err.code;\n      createConnectionErr.errno = err.errno;\n      createConnectionErr.sqlState = err.sqlState;\n      reject(createConnectionErr);\n    });\n  });\n}\n\n// note: the callback of \"changeUser\" is not called on success\n// hence there is no possibility to call \"resolve\"\n\n// patching PromiseConnection\n// create facade functions for prototype functions on \"Connection\" that are not yet\n// implemented with PromiseConnection\n\n// proxy synchronous functions only\n(function (functionsToWrap) {\n  for (let i = 0; functionsToWrap && i < functionsToWrap.length; i++) {\n    const func = functionsToWrap[i];\n\n    if (\n      typeof core.Connection.prototype[func] === 'function' &&\n      PromiseConnection.prototype[func] === undefined\n    ) {\n      PromiseConnection.prototype[func] = (function factory(funcName) {\n        return function () {\n          return core.Connection.prototype[funcName].apply(\n            this.connection,\n            arguments\n          );\n        };\n      })(func);\n    }\n  }\n})([\n  // synchronous functions\n  'close',\n  'createBinlogStream',\n  'destroy',\n  'escape',\n  'escapeId',\n  'format',\n  'pause',\n  'pipe',\n  'resume',\n  'unprepare'\n]);\n\nclass PromisePoolConnection extends PromiseConnection {\n  constructor(connection, promiseImpl) {\n    super(connection, promiseImpl);\n  }\n\n  destroy() {\n    return core.PoolConnection.prototype.destroy.apply(\n      this.connection,\n      arguments\n    );\n  }\n}\n\nclass PromisePool extends EventEmitter {\n  constructor(pool, thePromise) {\n    super();\n    this.pool = pool;\n    this.Promise = thePromise || Promise;\n    inheritEvents(pool, this, ['acquire', 'connection', 'enqueue', 'release']);\n  }\n\n  getConnection() {\n    const corePool = this.pool;\n    return new this.Promise((resolve, reject) => {\n      corePool.getConnection((err, coreConnection) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(new PromisePoolConnection(coreConnection, this.Promise));\n        }\n      });\n    });\n  }\n\n  releaseConnection(connection) {\n    if (connection instanceof PromisePoolConnection) connection.release();\n  }\n\n  query(sql, args) {\n    const corePool = this.pool;\n    const localErr = new Error();\n    if (typeof args === 'function') {\n      throw new Error(\n        'Callback function is not available with promise clients.'\n      );\n    }\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n      if (args !== undefined) {\n        corePool.query(sql, args, done);\n      } else {\n        corePool.query(sql, done);\n      }\n    });\n  }\n\n  execute(sql, args) {\n    const corePool = this.pool;\n    const localErr = new Error();\n    if (typeof args === 'function') {\n      throw new Error(\n        'Callback function is not available with promise clients.'\n      );\n    }\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n      if (args) {\n        corePool.execute(sql, args, done);\n      } else {\n        corePool.execute(sql, done);\n      }\n    });\n  }\n\n  end() {\n    const corePool = this.pool;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      corePool.end(err => {\n        if (err) {\n          localErr.message = err.message;\n          localErr.code = err.code;\n          localErr.errno = err.errno;\n          localErr.sqlState = err.sqlState;\n          localErr.sqlMessage = err.sqlMessage;\n          reject(localErr);\n        } else {\n          resolve();\n        }\n      });\n    });\n  }\n}\n\nfunction createPool(opts) {\n  const corePool = core.createPool(opts);\n  const thePromise = opts.Promise || Promise;\n  if (!thePromise) {\n    throw new Error(\n      'no Promise implementation available.' +\n      'Use promise-enabled node version or pass userland Promise' +\n      \" implementation as parameter, for example: { Promise: require('bluebird') }\"\n    );\n  }\n\n  return new PromisePool(corePool, thePromise);\n}\n\n(function (functionsToWrap) {\n  for (let i = 0; functionsToWrap && i < functionsToWrap.length; i++) {\n    const func = functionsToWrap[i];\n\n    if (\n      typeof core.Pool.prototype[func] === 'function' &&\n      PromisePool.prototype[func] === undefined\n    ) {\n      PromisePool.prototype[func] = (function factory(funcName) {\n        return function () {\n          return core.Pool.prototype[funcName].apply(this.pool, arguments);\n        };\n      })(func);\n    }\n  }\n})([\n  // synchronous functions\n  'escape',\n  'escapeId',\n  'format'\n]);\n\nclass PromisePoolCluster extends EventEmitter {\n  constructor(poolCluster, thePromise) {\n    super();\n    this.poolCluster = poolCluster;\n    this.Promise = thePromise || Promise;\n    inheritEvents(poolCluster, this, ['warn', 'remove']);\n  }\n\n  getConnection() {\n    const corePoolCluster = this.poolCluster;\n    return new this.Promise((resolve, reject) => {\n      corePoolCluster.getConnection((err, coreConnection) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(new PromisePoolConnection(coreConnection, this.Promise));\n        }\n      });\n    });\n  }\n\n  query(sql, args) {\n    const corePoolCluster = this.poolCluster;\n    const localErr = new Error();\n    if (typeof args === 'function') {\n      throw new Error(\n        'Callback function is not available with promise clients.'\n      );\n    }\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n      corePoolCluster.query(sql, args, done);\n    });\n  }\n\n  execute(sql, args) {\n    const corePoolCluster = this.poolCluster;\n    const localErr = new Error();\n    if (typeof args === 'function') {\n      throw new Error(\n        'Callback function is not available with promise clients.'\n      );\n    }\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n      corePoolCluster.execute(sql, args, done);\n    });\n  }\n\n  of(pattern, selector) {\n    return new PromisePoolCluster(\n      this.poolCluster.of(pattern, selector),\n      this.Promise\n    );\n  }\n\n  end() {\n    const corePoolCluster = this.poolCluster;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      corePoolCluster.end(err => {\n        if (err) {\n          localErr.message = err.message;\n          localErr.code = err.code;\n          localErr.errno = err.errno;\n          localErr.sqlState = err.sqlState;\n          localErr.sqlMessage = err.sqlMessage;\n          reject(localErr);\n        } else {\n          resolve();\n        }\n      });\n    });\n  }\n}\n\n/**\n * proxy poolCluster synchronous functions\n */\n(function (functionsToWrap) {\n  for (let i = 0; functionsToWrap && i < functionsToWrap.length; i++) {\n    const func = functionsToWrap[i];\n\n    if (\n      typeof core.PoolCluster.prototype[func] === 'function' &&\n      PromisePoolCluster.prototype[func] === undefined\n    ) {\n      PromisePoolCluster.prototype[func] = (function factory(funcName) {\n        return function () {\n          return core.PoolCluster.prototype[funcName].apply(this.poolCluster, arguments);\n        };\n      })(func);\n    }\n  }\n})([\n  'add'\n]);\n\nfunction createPoolCluster(opts) {\n  const corePoolCluster = core.createPoolCluster(opts);\n  const thePromise = (opts && opts.Promise) || Promise;\n  if (!thePromise) {\n    throw new Error(\n      'no Promise implementation available.' +\n      'Use promise-enabled node version or pass userland Promise' +\n      \" implementation as parameter, for example: { Promise: require('bluebird') }\"\n    );\n  }\n  return new PromisePoolCluster(corePoolCluster, thePromise);\n}\n\nexports.createConnection = createConnection;\nexports.createPool = createPool;\nexports.createPoolCluster = createPoolCluster;\nexports.escape = core.escape;\nexports.escapeId = core.escapeId;\nexports.format = core.format;\nexports.raw = core.raw;\nexports.PromisePool = PromisePool;\nexports.PromiseConnection = PromiseConnection;\nexports.PromisePoolConnection = PromisePoolConnection;\n\nexports.__defineGetter__('Types', () => __webpack_require__(/*! ./lib/constants/types.js */ \"(rsc)/./node_modules/mysql2/lib/constants/types.js\"));\n\nexports.__defineGetter__('Charsets', () =>\n  __webpack_require__(/*! ./lib/constants/charsets.js */ \"(rsc)/./node_modules/mysql2/lib/constants/charsets.js\")\n);\n\nexports.__defineGetter__('CharsetToEncoding', () =>\n  __webpack_require__(/*! ./lib/constants/charset_encodings.js */ \"(rsc)/./node_modules/mysql2/lib/constants/charset_encodings.js\")\n);\n\nexports.setMaxParserCache = function(max) {\n  parserCache.setMaxCache(max);\n};\n\nexports.clearParserCache = function() {\n  parserCache.clearCache();\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/promise.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/node_modules/lru-cache/dist/cjs/index-cjs.js":
/*!**************************************************************************!*\
  !*** ./node_modules/mysql2/node_modules/lru-cache/dist/cjs/index-cjs.js ***!
  \**************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nconst index_js_1 = __importDefault(__webpack_require__(/*! ./index.js */ \"(rsc)/./node_modules/mysql2/node_modules/lru-cache/dist/cjs/index.js\"));\nmodule.exports = Object.assign(index_js_1.default, { default: index_js_1.default, LRUCache: index_js_1.default });\n//# sourceMappingURL=index-cjs.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbXlzcWwyL25vZGVfbW9kdWxlcy9scnUtY2FjaGUvZGlzdC9janMvaW5kZXgtY2pzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSxtQ0FBbUMsbUJBQU8sQ0FBQyx3RkFBWTtBQUN2RCxxREFBcUQsMkRBQTJEO0FBQ2hIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVhbF9lc3RhdGUvLi9ub2RlX21vZHVsZXMvbXlzcWwyL25vZGVfbW9kdWxlcy9scnUtY2FjaGUvZGlzdC9janMvaW5kZXgtY2pzLmpzPzE3NmIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5jb25zdCBpbmRleF9qc18xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL2luZGV4LmpzXCIpKTtcbm1vZHVsZS5leHBvcnRzID0gT2JqZWN0LmFzc2lnbihpbmRleF9qc18xLmRlZmF1bHQsIHsgZGVmYXVsdDogaW5kZXhfanNfMS5kZWZhdWx0LCBMUlVDYWNoZTogaW5kZXhfanNfMS5kZWZhdWx0IH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXgtY2pzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/node_modules/lru-cache/dist/cjs/index-cjs.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/node_modules/lru-cache/dist/cjs/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/mysql2/node_modules/lru-cache/dist/cjs/index.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/**\n * @module LRUCache\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.LRUCache = void 0;\nconst perf = typeof performance === 'object' &&\n    performance &&\n    typeof performance.now === 'function'\n    ? performance\n    : Date;\nconst warned = new Set();\nconst emitWarning = (msg, type, code, fn) => {\n    typeof process === 'object' &&\n        process &&\n        typeof process.emitWarning === 'function'\n        ? process.emitWarning(msg, type, code, fn)\n        : console.error(`[${code}] ${type}: ${msg}`);\n};\nconst shouldWarn = (code) => !warned.has(code);\nconst TYPE = Symbol('type');\nconst isPosInt = (n) => n && n === Math.floor(n) && n > 0 && isFinite(n);\n/* c8 ignore start */\n// This is a little bit ridiculous, tbh.\n// The maximum array length is 2^32-1 or thereabouts on most JS impls.\n// And well before that point, you're caching the entire world, I mean,\n// that's ~32GB of just integers for the next/prev links, plus whatever\n// else to hold that many keys and values.  Just filling the memory with\n// zeroes at init time is brutal when you get that big.\n// But why not be complete?\n// Maybe in the future, these limits will have expanded.\nconst getUintArray = (max) => !isPosInt(max)\n    ? null\n    : max <= Math.pow(2, 8)\n        ? Uint8Array\n        : max <= Math.pow(2, 16)\n            ? Uint16Array\n            : max <= Math.pow(2, 32)\n                ? Uint32Array\n                : max <= Number.MAX_SAFE_INTEGER\n                    ? ZeroArray\n                    : null;\n/* c8 ignore stop */\nclass ZeroArray extends Array {\n    constructor(size) {\n        super(size);\n        this.fill(0);\n    }\n}\nclass Stack {\n    heap;\n    length;\n    // private constructor\n    static #constructing = false;\n    static create(max) {\n        const HeapCls = getUintArray(max);\n        if (!HeapCls)\n            return [];\n        Stack.#constructing = true;\n        const s = new Stack(max, HeapCls);\n        Stack.#constructing = false;\n        return s;\n    }\n    constructor(max, HeapCls) {\n        /* c8 ignore start */\n        if (!Stack.#constructing) {\n            throw new TypeError('instantiate Stack using Stack.create(n)');\n        }\n        /* c8 ignore stop */\n        this.heap = new HeapCls(max);\n        this.length = 0;\n    }\n    push(n) {\n        this.heap[this.length++] = n;\n    }\n    pop() {\n        return this.heap[--this.length];\n    }\n}\n/**\n * Default export, the thing you're using this module to get.\n *\n * All properties from the options object (with the exception of\n * {@link OptionsBase.max} and {@link OptionsBase.maxSize}) are added as\n * normal public members. (`max` and `maxBase` are read-only getters.)\n * Changing any of these will alter the defaults for subsequent method calls,\n * but is otherwise safe.\n */\nclass LRUCache {\n    // properties coming in from the options of these, only max and maxSize\n    // really *need* to be protected. The rest can be modified, as they just\n    // set defaults for various methods.\n    #max;\n    #maxSize;\n    #dispose;\n    #disposeAfter;\n    #fetchMethod;\n    /**\n     * {@link LRUCache.OptionsBase.ttl}\n     */\n    ttl;\n    /**\n     * {@link LRUCache.OptionsBase.ttlResolution}\n     */\n    ttlResolution;\n    /**\n     * {@link LRUCache.OptionsBase.ttlAutopurge}\n     */\n    ttlAutopurge;\n    /**\n     * {@link LRUCache.OptionsBase.updateAgeOnGet}\n     */\n    updateAgeOnGet;\n    /**\n     * {@link LRUCache.OptionsBase.updateAgeOnHas}\n     */\n    updateAgeOnHas;\n    /**\n     * {@link LRUCache.OptionsBase.allowStale}\n     */\n    allowStale;\n    /**\n     * {@link LRUCache.OptionsBase.noDisposeOnSet}\n     */\n    noDisposeOnSet;\n    /**\n     * {@link LRUCache.OptionsBase.noUpdateTTL}\n     */\n    noUpdateTTL;\n    /**\n     * {@link LRUCache.OptionsBase.maxEntrySize}\n     */\n    maxEntrySize;\n    /**\n     * {@link LRUCache.OptionsBase.sizeCalculation}\n     */\n    sizeCalculation;\n    /**\n     * {@link LRUCache.OptionsBase.noDeleteOnFetchRejection}\n     */\n    noDeleteOnFetchRejection;\n    /**\n     * {@link LRUCache.OptionsBase.noDeleteOnStaleGet}\n     */\n    noDeleteOnStaleGet;\n    /**\n     * {@link LRUCache.OptionsBase.allowStaleOnFetchAbort}\n     */\n    allowStaleOnFetchAbort;\n    /**\n     * {@link LRUCache.OptionsBase.allowStaleOnFetchRejection}\n     */\n    allowStaleOnFetchRejection;\n    /**\n     * {@link LRUCache.OptionsBase.ignoreFetchAbort}\n     */\n    ignoreFetchAbort;\n    // computed properties\n    #size;\n    #calculatedSize;\n    #keyMap;\n    #keyList;\n    #valList;\n    #next;\n    #prev;\n    #head;\n    #tail;\n    #free;\n    #disposed;\n    #sizes;\n    #starts;\n    #ttls;\n    #hasDispose;\n    #hasFetchMethod;\n    #hasDisposeAfter;\n    /**\n     * Do not call this method unless you need to inspect the\n     * inner workings of the cache.  If anything returned by this\n     * object is modified in any way, strange breakage may occur.\n     *\n     * These fields are private for a reason!\n     *\n     * @internal\n     */\n    static unsafeExposeInternals(c) {\n        return {\n            // properties\n            starts: c.#starts,\n            ttls: c.#ttls,\n            sizes: c.#sizes,\n            keyMap: c.#keyMap,\n            keyList: c.#keyList,\n            valList: c.#valList,\n            next: c.#next,\n            prev: c.#prev,\n            get head() {\n                return c.#head;\n            },\n            get tail() {\n                return c.#tail;\n            },\n            free: c.#free,\n            // methods\n            isBackgroundFetch: (p) => c.#isBackgroundFetch(p),\n            backgroundFetch: (k, index, options, context) => c.#backgroundFetch(k, index, options, context),\n            moveToTail: (index) => c.#moveToTail(index),\n            indexes: (options) => c.#indexes(options),\n            rindexes: (options) => c.#rindexes(options),\n            isStale: (index) => c.#isStale(index),\n        };\n    }\n    // Protected read-only members\n    /**\n     * {@link LRUCache.OptionsBase.max} (read-only)\n     */\n    get max() {\n        return this.#max;\n    }\n    /**\n     * {@link LRUCache.OptionsBase.maxSize} (read-only)\n     */\n    get maxSize() {\n        return this.#maxSize;\n    }\n    /**\n     * The total computed size of items in the cache (read-only)\n     */\n    get calculatedSize() {\n        return this.#calculatedSize;\n    }\n    /**\n     * The number of items stored in the cache (read-only)\n     */\n    get size() {\n        return this.#size;\n    }\n    /**\n     * {@link LRUCache.OptionsBase.fetchMethod} (read-only)\n     */\n    get fetchMethod() {\n        return this.#fetchMethod;\n    }\n    /**\n     * {@link LRUCache.OptionsBase.dispose} (read-only)\n     */\n    get dispose() {\n        return this.#dispose;\n    }\n    /**\n     * {@link LRUCache.OptionsBase.disposeAfter} (read-only)\n     */\n    get disposeAfter() {\n        return this.#disposeAfter;\n    }\n    constructor(options) {\n        const { max = 0, ttl, ttlResolution = 1, ttlAutopurge, updateAgeOnGet, updateAgeOnHas, allowStale, dispose, disposeAfter, noDisposeOnSet, noUpdateTTL, maxSize = 0, maxEntrySize = 0, sizeCalculation, fetchMethod, noDeleteOnFetchRejection, noDeleteOnStaleGet, allowStaleOnFetchRejection, allowStaleOnFetchAbort, ignoreFetchAbort, } = options;\n        if (max !== 0 && !isPosInt(max)) {\n            throw new TypeError('max option must be a nonnegative integer');\n        }\n        const UintArray = max ? getUintArray(max) : Array;\n        if (!UintArray) {\n            throw new Error('invalid max value: ' + max);\n        }\n        this.#max = max;\n        this.#maxSize = maxSize;\n        this.maxEntrySize = maxEntrySize || this.#maxSize;\n        this.sizeCalculation = sizeCalculation;\n        if (this.sizeCalculation) {\n            if (!this.#maxSize && !this.maxEntrySize) {\n                throw new TypeError('cannot set sizeCalculation without setting maxSize or maxEntrySize');\n            }\n            if (typeof this.sizeCalculation !== 'function') {\n                throw new TypeError('sizeCalculation set to non-function');\n            }\n        }\n        if (fetchMethod !== undefined &&\n            typeof fetchMethod !== 'function') {\n            throw new TypeError('fetchMethod must be a function if specified');\n        }\n        this.#fetchMethod = fetchMethod;\n        this.#hasFetchMethod = !!fetchMethod;\n        this.#keyMap = new Map();\n        this.#keyList = new Array(max).fill(undefined);\n        this.#valList = new Array(max).fill(undefined);\n        this.#next = new UintArray(max);\n        this.#prev = new UintArray(max);\n        this.#head = 0;\n        this.#tail = 0;\n        this.#free = Stack.create(max);\n        this.#size = 0;\n        this.#calculatedSize = 0;\n        if (typeof dispose === 'function') {\n            this.#dispose = dispose;\n        }\n        if (typeof disposeAfter === 'function') {\n            this.#disposeAfter = disposeAfter;\n            this.#disposed = [];\n        }\n        else {\n            this.#disposeAfter = undefined;\n            this.#disposed = undefined;\n        }\n        this.#hasDispose = !!this.#dispose;\n        this.#hasDisposeAfter = !!this.#disposeAfter;\n        this.noDisposeOnSet = !!noDisposeOnSet;\n        this.noUpdateTTL = !!noUpdateTTL;\n        this.noDeleteOnFetchRejection = !!noDeleteOnFetchRejection;\n        this.allowStaleOnFetchRejection = !!allowStaleOnFetchRejection;\n        this.allowStaleOnFetchAbort = !!allowStaleOnFetchAbort;\n        this.ignoreFetchAbort = !!ignoreFetchAbort;\n        // NB: maxEntrySize is set to maxSize if it's set\n        if (this.maxEntrySize !== 0) {\n            if (this.#maxSize !== 0) {\n                if (!isPosInt(this.#maxSize)) {\n                    throw new TypeError('maxSize must be a positive integer if specified');\n                }\n            }\n            if (!isPosInt(this.maxEntrySize)) {\n                throw new TypeError('maxEntrySize must be a positive integer if specified');\n            }\n            this.#initializeSizeTracking();\n        }\n        this.allowStale = !!allowStale;\n        this.noDeleteOnStaleGet = !!noDeleteOnStaleGet;\n        this.updateAgeOnGet = !!updateAgeOnGet;\n        this.updateAgeOnHas = !!updateAgeOnHas;\n        this.ttlResolution =\n            isPosInt(ttlResolution) || ttlResolution === 0\n                ? ttlResolution\n                : 1;\n        this.ttlAutopurge = !!ttlAutopurge;\n        this.ttl = ttl || 0;\n        if (this.ttl) {\n            if (!isPosInt(this.ttl)) {\n                throw new TypeError('ttl must be a positive integer if specified');\n            }\n            this.#initializeTTLTracking();\n        }\n        // do not allow completely unbounded caches\n        if (this.#max === 0 && this.ttl === 0 && this.#maxSize === 0) {\n            throw new TypeError('At least one of max, maxSize, or ttl is required');\n        }\n        if (!this.ttlAutopurge && !this.#max && !this.#maxSize) {\n            const code = 'LRU_CACHE_UNBOUNDED';\n            if (shouldWarn(code)) {\n                warned.add(code);\n                const msg = 'TTL caching without ttlAutopurge, max, or maxSize can ' +\n                    'result in unbounded memory consumption.';\n                emitWarning(msg, 'UnboundedCacheWarning', code, LRUCache);\n            }\n        }\n    }\n    /**\n     * Return the remaining TTL time for a given entry key\n     */\n    getRemainingTTL(key) {\n        return this.#keyMap.has(key) ? Infinity : 0;\n    }\n    #initializeTTLTracking() {\n        const ttls = new ZeroArray(this.#max);\n        const starts = new ZeroArray(this.#max);\n        this.#ttls = ttls;\n        this.#starts = starts;\n        this.#setItemTTL = (index, ttl, start = perf.now()) => {\n            starts[index] = ttl !== 0 ? start : 0;\n            ttls[index] = ttl;\n            if (ttl !== 0 && this.ttlAutopurge) {\n                const t = setTimeout(() => {\n                    if (this.#isStale(index)) {\n                        this.delete(this.#keyList[index]);\n                    }\n                }, ttl + 1);\n                // unref() not supported on all platforms\n                /* c8 ignore start */\n                if (t.unref) {\n                    t.unref();\n                }\n                /* c8 ignore stop */\n            }\n        };\n        this.#updateItemAge = index => {\n            starts[index] = ttls[index] !== 0 ? perf.now() : 0;\n        };\n        this.#statusTTL = (status, index) => {\n            if (ttls[index]) {\n                const ttl = ttls[index];\n                const start = starts[index];\n                status.ttl = ttl;\n                status.start = start;\n                status.now = cachedNow || getNow();\n                status.remainingTTL = status.now + ttl - start;\n            }\n        };\n        // debounce calls to perf.now() to 1s so we're not hitting\n        // that costly call repeatedly.\n        let cachedNow = 0;\n        const getNow = () => {\n            const n = perf.now();\n            if (this.ttlResolution > 0) {\n                cachedNow = n;\n                const t = setTimeout(() => (cachedNow = 0), this.ttlResolution);\n                // not available on all platforms\n                /* c8 ignore start */\n                if (t.unref) {\n                    t.unref();\n                }\n                /* c8 ignore stop */\n            }\n            return n;\n        };\n        this.getRemainingTTL = key => {\n            const index = this.#keyMap.get(key);\n            if (index === undefined) {\n                return 0;\n            }\n            return ttls[index] === 0 || starts[index] === 0\n                ? Infinity\n                : starts[index] + ttls[index] - (cachedNow || getNow());\n        };\n        this.#isStale = index => {\n            return (ttls[index] !== 0 &&\n                starts[index] !== 0 &&\n                (cachedNow || getNow()) - starts[index] > ttls[index]);\n        };\n    }\n    // conditionally set private methods related to TTL\n    #updateItemAge = () => { };\n    #statusTTL = () => { };\n    #setItemTTL = () => { };\n    /* c8 ignore stop */\n    #isStale = () => false;\n    #initializeSizeTracking() {\n        const sizes = new ZeroArray(this.#max);\n        this.#calculatedSize = 0;\n        this.#sizes = sizes;\n        this.#removeItemSize = index => {\n            this.#calculatedSize -= sizes[index];\n            sizes[index] = 0;\n        };\n        this.#requireSize = (k, v, size, sizeCalculation) => {\n            // provisionally accept background fetches.\n            // actual value size will be checked when they return.\n            if (this.#isBackgroundFetch(v)) {\n                return 0;\n            }\n            if (!isPosInt(size)) {\n                if (sizeCalculation) {\n                    if (typeof sizeCalculation !== 'function') {\n                        throw new TypeError('sizeCalculation must be a function');\n                    }\n                    size = sizeCalculation(v, k);\n                    if (!isPosInt(size)) {\n                        throw new TypeError('sizeCalculation return invalid (expect positive integer)');\n                    }\n                }\n                else {\n                    throw new TypeError('invalid size value (must be positive integer). ' +\n                        'When maxSize or maxEntrySize is used, sizeCalculation ' +\n                        'or size must be set.');\n                }\n            }\n            return size;\n        };\n        this.#addItemSize = (index, size, status) => {\n            sizes[index] = size;\n            if (this.#maxSize) {\n                const maxSize = this.#maxSize - sizes[index];\n                while (this.#calculatedSize > maxSize) {\n                    this.#evict(true);\n                }\n            }\n            this.#calculatedSize += sizes[index];\n            if (status) {\n                status.entrySize = size;\n                status.totalCalculatedSize = this.#calculatedSize;\n            }\n        };\n    }\n    #removeItemSize = _i => { };\n    #addItemSize = (_i, _s, _st) => { };\n    #requireSize = (_k, _v, size, sizeCalculation) => {\n        if (size || sizeCalculation) {\n            throw new TypeError('cannot set size without setting maxSize or maxEntrySize on cache');\n        }\n        return 0;\n    };\n    *#indexes({ allowStale = this.allowStale } = {}) {\n        if (this.#size) {\n            for (let i = this.#tail; true;) {\n                if (!this.#isValidIndex(i)) {\n                    break;\n                }\n                if (allowStale || !this.#isStale(i)) {\n                    yield i;\n                }\n                if (i === this.#head) {\n                    break;\n                }\n                else {\n                    i = this.#prev[i];\n                }\n            }\n        }\n    }\n    *#rindexes({ allowStale = this.allowStale } = {}) {\n        if (this.#size) {\n            for (let i = this.#head; true;) {\n                if (!this.#isValidIndex(i)) {\n                    break;\n                }\n                if (allowStale || !this.#isStale(i)) {\n                    yield i;\n                }\n                if (i === this.#tail) {\n                    break;\n                }\n                else {\n                    i = this.#next[i];\n                }\n            }\n        }\n    }\n    #isValidIndex(index) {\n        return (index !== undefined &&\n            this.#keyMap.get(this.#keyList[index]) === index);\n    }\n    /**\n     * Return a generator yielding `[key, value]` pairs,\n     * in order from most recently used to least recently used.\n     */\n    *entries() {\n        for (const i of this.#indexes()) {\n            if (this.#valList[i] !== undefined &&\n                this.#keyList[i] !== undefined &&\n                !this.#isBackgroundFetch(this.#valList[i])) {\n                yield [this.#keyList[i], this.#valList[i]];\n            }\n        }\n    }\n    /**\n     * Inverse order version of {@link LRUCache.entries}\n     *\n     * Return a generator yielding `[key, value]` pairs,\n     * in order from least recently used to most recently used.\n     */\n    *rentries() {\n        for (const i of this.#rindexes()) {\n            if (this.#valList[i] !== undefined &&\n                this.#keyList[i] !== undefined &&\n                !this.#isBackgroundFetch(this.#valList[i])) {\n                yield [this.#keyList[i], this.#valList[i]];\n            }\n        }\n    }\n    /**\n     * Return a generator yielding the keys in the cache,\n     * in order from most recently used to least recently used.\n     */\n    *keys() {\n        for (const i of this.#indexes()) {\n            const k = this.#keyList[i];\n            if (k !== undefined &&\n                !this.#isBackgroundFetch(this.#valList[i])) {\n                yield k;\n            }\n        }\n    }\n    /**\n     * Inverse order version of {@link LRUCache.keys}\n     *\n     * Return a generator yielding the keys in the cache,\n     * in order from least recently used to most recently used.\n     */\n    *rkeys() {\n        for (const i of this.#rindexes()) {\n            const k = this.#keyList[i];\n            if (k !== undefined &&\n                !this.#isBackgroundFetch(this.#valList[i])) {\n                yield k;\n            }\n        }\n    }\n    /**\n     * Return a generator yielding the values in the cache,\n     * in order from most recently used to least recently used.\n     */\n    *values() {\n        for (const i of this.#indexes()) {\n            const v = this.#valList[i];\n            if (v !== undefined &&\n                !this.#isBackgroundFetch(this.#valList[i])) {\n                yield this.#valList[i];\n            }\n        }\n    }\n    /**\n     * Inverse order version of {@link LRUCache.values}\n     *\n     * Return a generator yielding the values in the cache,\n     * in order from least recently used to most recently used.\n     */\n    *rvalues() {\n        for (const i of this.#rindexes()) {\n            const v = this.#valList[i];\n            if (v !== undefined &&\n                !this.#isBackgroundFetch(this.#valList[i])) {\n                yield this.#valList[i];\n            }\n        }\n    }\n    /**\n     * Iterating over the cache itself yields the same results as\n     * {@link LRUCache.entries}\n     */\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n    /**\n     * Find a value for which the supplied fn method returns a truthy value,\n     * similar to Array.find().  fn is called as fn(value, key, cache).\n     */\n    find(fn, getOptions = {}) {\n        for (const i of this.#indexes()) {\n            const v = this.#valList[i];\n            const value = this.#isBackgroundFetch(v)\n                ? v.__staleWhileFetching\n                : v;\n            if (value === undefined)\n                continue;\n            if (fn(value, this.#keyList[i], this)) {\n                return this.get(this.#keyList[i], getOptions);\n            }\n        }\n    }\n    /**\n     * Call the supplied function on each item in the cache, in order from\n     * most recently used to least recently used.  fn is called as\n     * fn(value, key, cache).  Does not update age or recenty of use.\n     * Does not iterate over stale values.\n     */\n    forEach(fn, thisp = this) {\n        for (const i of this.#indexes()) {\n            const v = this.#valList[i];\n            const value = this.#isBackgroundFetch(v)\n                ? v.__staleWhileFetching\n                : v;\n            if (value === undefined)\n                continue;\n            fn.call(thisp, value, this.#keyList[i], this);\n        }\n    }\n    /**\n     * The same as {@link LRUCache.forEach} but items are iterated over in\n     * reverse order.  (ie, less recently used items are iterated over first.)\n     */\n    rforEach(fn, thisp = this) {\n        for (const i of this.#rindexes()) {\n            const v = this.#valList[i];\n            const value = this.#isBackgroundFetch(v)\n                ? v.__staleWhileFetching\n                : v;\n            if (value === undefined)\n                continue;\n            fn.call(thisp, value, this.#keyList[i], this);\n        }\n    }\n    /**\n     * Delete any stale entries. Returns true if anything was removed,\n     * false otherwise.\n     */\n    purgeStale() {\n        let deleted = false;\n        for (const i of this.#rindexes({ allowStale: true })) {\n            if (this.#isStale(i)) {\n                this.delete(this.#keyList[i]);\n                deleted = true;\n            }\n        }\n        return deleted;\n    }\n    /**\n     * Return an array of [key, {@link LRUCache.Entry}] tuples which can be\n     * passed to cache.load()\n     */\n    dump() {\n        const arr = [];\n        for (const i of this.#indexes({ allowStale: true })) {\n            const key = this.#keyList[i];\n            const v = this.#valList[i];\n            const value = this.#isBackgroundFetch(v)\n                ? v.__staleWhileFetching\n                : v;\n            if (value === undefined || key === undefined)\n                continue;\n            const entry = { value };\n            if (this.#ttls && this.#starts) {\n                entry.ttl = this.#ttls[i];\n                // always dump the start relative to a portable timestamp\n                // it's ok for this to be a bit slow, it's a rare operation.\n                const age = perf.now() - this.#starts[i];\n                entry.start = Math.floor(Date.now() - age);\n            }\n            if (this.#sizes) {\n                entry.size = this.#sizes[i];\n            }\n            arr.unshift([key, entry]);\n        }\n        return arr;\n    }\n    /**\n     * Reset the cache and load in the items in entries in the order listed.\n     * Note that the shape of the resulting cache may be different if the\n     * same options are not used in both caches.\n     */\n    load(arr) {\n        this.clear();\n        for (const [key, entry] of arr) {\n            if (entry.start) {\n                // entry.start is a portable timestamp, but we may be using\n                // node's performance.now(), so calculate the offset, so that\n                // we get the intended remaining TTL, no matter how long it's\n                // been on ice.\n                //\n                // it's ok for this to be a bit slow, it's a rare operation.\n                const age = Date.now() - entry.start;\n                entry.start = perf.now() - age;\n            }\n            this.set(key, entry.value, entry);\n        }\n    }\n    /**\n     * Add a value to the cache.\n     */\n    set(k, v, setOptions = {}) {\n        const { ttl = this.ttl, start, noDisposeOnSet = this.noDisposeOnSet, sizeCalculation = this.sizeCalculation, status, } = setOptions;\n        let { noUpdateTTL = this.noUpdateTTL } = setOptions;\n        const size = this.#requireSize(k, v, setOptions.size || 0, sizeCalculation);\n        // if the item doesn't fit, don't do anything\n        // NB: maxEntrySize set to maxSize by default\n        if (this.maxEntrySize && size > this.maxEntrySize) {\n            if (status) {\n                status.set = 'miss';\n                status.maxEntrySizeExceeded = true;\n            }\n            // have to delete, in case something is there already.\n            this.delete(k);\n            return this;\n        }\n        let index = this.#size === 0 ? undefined : this.#keyMap.get(k);\n        if (index === undefined) {\n            // addition\n            index = (this.#size === 0\n                ? this.#tail\n                : this.#free.length !== 0\n                    ? this.#free.pop()\n                    : this.#size === this.#max\n                        ? this.#evict(false)\n                        : this.#size);\n            this.#keyList[index] = k;\n            this.#valList[index] = v;\n            this.#keyMap.set(k, index);\n            this.#next[this.#tail] = index;\n            this.#prev[index] = this.#tail;\n            this.#tail = index;\n            this.#size++;\n            this.#addItemSize(index, size, status);\n            if (status)\n                status.set = 'add';\n            noUpdateTTL = false;\n        }\n        else {\n            // update\n            this.#moveToTail(index);\n            const oldVal = this.#valList[index];\n            if (v !== oldVal) {\n                if (this.#hasFetchMethod && this.#isBackgroundFetch(oldVal)) {\n                    oldVal.__abortController.abort(new Error('replaced'));\n                }\n                else if (!noDisposeOnSet) {\n                    if (this.#hasDispose) {\n                        this.#dispose?.(oldVal, k, 'set');\n                    }\n                    if (this.#hasDisposeAfter) {\n                        this.#disposed?.push([oldVal, k, 'set']);\n                    }\n                }\n                this.#removeItemSize(index);\n                this.#addItemSize(index, size, status);\n                this.#valList[index] = v;\n                if (status) {\n                    status.set = 'replace';\n                    const oldValue = oldVal && this.#isBackgroundFetch(oldVal)\n                        ? oldVal.__staleWhileFetching\n                        : oldVal;\n                    if (oldValue !== undefined)\n                        status.oldValue = oldValue;\n                }\n            }\n            else if (status) {\n                status.set = 'update';\n            }\n        }\n        if (ttl !== 0 && !this.#ttls) {\n            this.#initializeTTLTracking();\n        }\n        if (this.#ttls) {\n            if (!noUpdateTTL) {\n                this.#setItemTTL(index, ttl, start);\n            }\n            if (status)\n                this.#statusTTL(status, index);\n        }\n        if (!noDisposeOnSet && this.#hasDisposeAfter && this.#disposed) {\n            const dt = this.#disposed;\n            let task;\n            while ((task = dt?.shift())) {\n                this.#disposeAfter?.(...task);\n            }\n        }\n        return this;\n    }\n    /**\n     * Evict the least recently used item, returning its value or\n     * `undefined` if cache is empty.\n     */\n    pop() {\n        try {\n            while (this.#size) {\n                const val = this.#valList[this.#head];\n                this.#evict(true);\n                if (this.#isBackgroundFetch(val)) {\n                    if (val.__staleWhileFetching) {\n                        return val.__staleWhileFetching;\n                    }\n                }\n                else if (val !== undefined) {\n                    return val;\n                }\n            }\n        }\n        finally {\n            if (this.#hasDisposeAfter && this.#disposed) {\n                const dt = this.#disposed;\n                let task;\n                while ((task = dt?.shift())) {\n                    this.#disposeAfter?.(...task);\n                }\n            }\n        }\n    }\n    #evict(free) {\n        const head = this.#head;\n        const k = this.#keyList[head];\n        const v = this.#valList[head];\n        if (this.#hasFetchMethod && this.#isBackgroundFetch(v)) {\n            v.__abortController.abort(new Error('evicted'));\n        }\n        else if (this.#hasDispose || this.#hasDisposeAfter) {\n            if (this.#hasDispose) {\n                this.#dispose?.(v, k, 'evict');\n            }\n            if (this.#hasDisposeAfter) {\n                this.#disposed?.push([v, k, 'evict']);\n            }\n        }\n        this.#removeItemSize(head);\n        // if we aren't about to use the index, then null these out\n        if (free) {\n            this.#keyList[head] = undefined;\n            this.#valList[head] = undefined;\n            this.#free.push(head);\n        }\n        if (this.#size === 1) {\n            this.#head = this.#tail = 0;\n            this.#free.length = 0;\n        }\n        else {\n            this.#head = this.#next[head];\n        }\n        this.#keyMap.delete(k);\n        this.#size--;\n        return head;\n    }\n    /**\n     * Check if a key is in the cache, without updating the recency of use.\n     * Will return false if the item is stale, even though it is technically\n     * in the cache.\n     *\n     * Will not update item age unless\n     * {@link LRUCache.OptionsBase.updateAgeOnHas} is set.\n     */\n    has(k, hasOptions = {}) {\n        const { updateAgeOnHas = this.updateAgeOnHas, status } = hasOptions;\n        const index = this.#keyMap.get(k);\n        if (index !== undefined) {\n            const v = this.#valList[index];\n            if (this.#isBackgroundFetch(v) &&\n                v.__staleWhileFetching === undefined) {\n                return false;\n            }\n            if (!this.#isStale(index)) {\n                if (updateAgeOnHas) {\n                    this.#updateItemAge(index);\n                }\n                if (status) {\n                    status.has = 'hit';\n                    this.#statusTTL(status, index);\n                }\n                return true;\n            }\n            else if (status) {\n                status.has = 'stale';\n                this.#statusTTL(status, index);\n            }\n        }\n        else if (status) {\n            status.has = 'miss';\n        }\n        return false;\n    }\n    /**\n     * Like {@link LRUCache#get} but doesn't update recency or delete stale\n     * items.\n     *\n     * Returns `undefined` if the item is stale, unless\n     * {@link LRUCache.OptionsBase.allowStale} is set.\n     */\n    peek(k, peekOptions = {}) {\n        const { allowStale = this.allowStale } = peekOptions;\n        const index = this.#keyMap.get(k);\n        if (index !== undefined &&\n            (allowStale || !this.#isStale(index))) {\n            const v = this.#valList[index];\n            // either stale and allowed, or forcing a refresh of non-stale value\n            return this.#isBackgroundFetch(v) ? v.__staleWhileFetching : v;\n        }\n    }\n    #backgroundFetch(k, index, options, context) {\n        const v = index === undefined ? undefined : this.#valList[index];\n        if (this.#isBackgroundFetch(v)) {\n            return v;\n        }\n        const ac = new AbortController();\n        const { signal } = options;\n        // when/if our AC signals, then stop listening to theirs.\n        signal?.addEventListener('abort', () => ac.abort(signal.reason), {\n            signal: ac.signal,\n        });\n        const fetchOpts = {\n            signal: ac.signal,\n            options,\n            context,\n        };\n        const cb = (v, updateCache = false) => {\n            const { aborted } = ac.signal;\n            const ignoreAbort = options.ignoreFetchAbort && v !== undefined;\n            if (options.status) {\n                if (aborted && !updateCache) {\n                    options.status.fetchAborted = true;\n                    options.status.fetchError = ac.signal.reason;\n                    if (ignoreAbort)\n                        options.status.fetchAbortIgnored = true;\n                }\n                else {\n                    options.status.fetchResolved = true;\n                }\n            }\n            if (aborted && !ignoreAbort && !updateCache) {\n                return fetchFail(ac.signal.reason);\n            }\n            // either we didn't abort, and are still here, or we did, and ignored\n            const bf = p;\n            if (this.#valList[index] === p) {\n                if (v === undefined) {\n                    if (bf.__staleWhileFetching) {\n                        this.#valList[index] = bf.__staleWhileFetching;\n                    }\n                    else {\n                        this.delete(k);\n                    }\n                }\n                else {\n                    if (options.status)\n                        options.status.fetchUpdated = true;\n                    this.set(k, v, fetchOpts.options);\n                }\n            }\n            return v;\n        };\n        const eb = (er) => {\n            if (options.status) {\n                options.status.fetchRejected = true;\n                options.status.fetchError = er;\n            }\n            return fetchFail(er);\n        };\n        const fetchFail = (er) => {\n            const { aborted } = ac.signal;\n            const allowStaleAborted = aborted && options.allowStaleOnFetchAbort;\n            const allowStale = allowStaleAborted || options.allowStaleOnFetchRejection;\n            const noDelete = allowStale || options.noDeleteOnFetchRejection;\n            const bf = p;\n            if (this.#valList[index] === p) {\n                // if we allow stale on fetch rejections, then we need to ensure that\n                // the stale value is not removed from the cache when the fetch fails.\n                const del = !noDelete || bf.__staleWhileFetching === undefined;\n                if (del) {\n                    this.delete(k);\n                }\n                else if (!allowStaleAborted) {\n                    // still replace the *promise* with the stale value,\n                    // since we are done with the promise at this point.\n                    // leave it untouched if we're still waiting for an\n                    // aborted background fetch that hasn't yet returned.\n                    this.#valList[index] = bf.__staleWhileFetching;\n                }\n            }\n            if (allowStale) {\n                if (options.status && bf.__staleWhileFetching !== undefined) {\n                    options.status.returnedStale = true;\n                }\n                return bf.__staleWhileFetching;\n            }\n            else if (bf.__returned === bf) {\n                throw er;\n            }\n        };\n        const pcall = (res, rej) => {\n            const fmp = this.#fetchMethod?.(k, v, fetchOpts);\n            if (fmp && fmp instanceof Promise) {\n                fmp.then(v => res(v), rej);\n            }\n            // ignored, we go until we finish, regardless.\n            // defer check until we are actually aborting,\n            // so fetchMethod can override.\n            ac.signal.addEventListener('abort', () => {\n                if (!options.ignoreFetchAbort ||\n                    options.allowStaleOnFetchAbort) {\n                    res();\n                    // when it eventually resolves, update the cache.\n                    if (options.allowStaleOnFetchAbort) {\n                        res = v => cb(v, true);\n                    }\n                }\n            });\n        };\n        if (options.status)\n            options.status.fetchDispatched = true;\n        const p = new Promise(pcall).then(cb, eb);\n        const bf = Object.assign(p, {\n            __abortController: ac,\n            __staleWhileFetching: v,\n            __returned: undefined,\n        });\n        if (index === undefined) {\n            // internal, don't expose status.\n            this.set(k, bf, { ...fetchOpts.options, status: undefined });\n            index = this.#keyMap.get(k);\n        }\n        else {\n            this.#valList[index] = bf;\n        }\n        return bf;\n    }\n    #isBackgroundFetch(p) {\n        if (!this.#hasFetchMethod)\n            return false;\n        const b = p;\n        return (!!b &&\n            b instanceof Promise &&\n            b.hasOwnProperty('__staleWhileFetching') &&\n            b.__abortController instanceof AbortController);\n    }\n    async fetch(k, fetchOptions = {}) {\n        const { \n        // get options\n        allowStale = this.allowStale, updateAgeOnGet = this.updateAgeOnGet, noDeleteOnStaleGet = this.noDeleteOnStaleGet, \n        // set options\n        ttl = this.ttl, noDisposeOnSet = this.noDisposeOnSet, size = 0, sizeCalculation = this.sizeCalculation, noUpdateTTL = this.noUpdateTTL, \n        // fetch exclusive options\n        noDeleteOnFetchRejection = this.noDeleteOnFetchRejection, allowStaleOnFetchRejection = this.allowStaleOnFetchRejection, ignoreFetchAbort = this.ignoreFetchAbort, allowStaleOnFetchAbort = this.allowStaleOnFetchAbort, context, forceRefresh = false, status, signal, } = fetchOptions;\n        if (!this.#hasFetchMethod) {\n            if (status)\n                status.fetch = 'get';\n            return this.get(k, {\n                allowStale,\n                updateAgeOnGet,\n                noDeleteOnStaleGet,\n                status,\n            });\n        }\n        const options = {\n            allowStale,\n            updateAgeOnGet,\n            noDeleteOnStaleGet,\n            ttl,\n            noDisposeOnSet,\n            size,\n            sizeCalculation,\n            noUpdateTTL,\n            noDeleteOnFetchRejection,\n            allowStaleOnFetchRejection,\n            allowStaleOnFetchAbort,\n            ignoreFetchAbort,\n            status,\n            signal,\n        };\n        let index = this.#keyMap.get(k);\n        if (index === undefined) {\n            if (status)\n                status.fetch = 'miss';\n            const p = this.#backgroundFetch(k, index, options, context);\n            return (p.__returned = p);\n        }\n        else {\n            // in cache, maybe already fetching\n            const v = this.#valList[index];\n            if (this.#isBackgroundFetch(v)) {\n                const stale = allowStale && v.__staleWhileFetching !== undefined;\n                if (status) {\n                    status.fetch = 'inflight';\n                    if (stale)\n                        status.returnedStale = true;\n                }\n                return stale ? v.__staleWhileFetching : (v.__returned = v);\n            }\n            // if we force a refresh, that means do NOT serve the cached value,\n            // unless we are already in the process of refreshing the cache.\n            const isStale = this.#isStale(index);\n            if (!forceRefresh && !isStale) {\n                if (status)\n                    status.fetch = 'hit';\n                this.#moveToTail(index);\n                if (updateAgeOnGet) {\n                    this.#updateItemAge(index);\n                }\n                if (status)\n                    this.#statusTTL(status, index);\n                return v;\n            }\n            // ok, it is stale or a forced refresh, and not already fetching.\n            // refresh the cache.\n            const p = this.#backgroundFetch(k, index, options, context);\n            const hasStale = p.__staleWhileFetching !== undefined;\n            const staleVal = hasStale && allowStale;\n            if (status) {\n                status.fetch = isStale ? 'stale' : 'refresh';\n                if (staleVal && isStale)\n                    status.returnedStale = true;\n            }\n            return staleVal ? p.__staleWhileFetching : (p.__returned = p);\n        }\n    }\n    /**\n     * Return a value from the cache. Will update the recency of the cache\n     * entry found.\n     *\n     * If the key is not found, get() will return `undefined`.\n     */\n    get(k, getOptions = {}) {\n        const { allowStale = this.allowStale, updateAgeOnGet = this.updateAgeOnGet, noDeleteOnStaleGet = this.noDeleteOnStaleGet, status, } = getOptions;\n        const index = this.#keyMap.get(k);\n        if (index !== undefined) {\n            const value = this.#valList[index];\n            const fetching = this.#isBackgroundFetch(value);\n            if (status)\n                this.#statusTTL(status, index);\n            if (this.#isStale(index)) {\n                if (status)\n                    status.get = 'stale';\n                // delete only if not an in-flight background fetch\n                if (!fetching) {\n                    if (!noDeleteOnStaleGet) {\n                        this.delete(k);\n                    }\n                    if (status && allowStale)\n                        status.returnedStale = true;\n                    return allowStale ? value : undefined;\n                }\n                else {\n                    if (status &&\n                        allowStale &&\n                        value.__staleWhileFetching !== undefined) {\n                        status.returnedStale = true;\n                    }\n                    return allowStale ? value.__staleWhileFetching : undefined;\n                }\n            }\n            else {\n                if (status)\n                    status.get = 'hit';\n                // if we're currently fetching it, we don't actually have it yet\n                // it's not stale, which means this isn't a staleWhileRefetching.\n                // If it's not stale, and fetching, AND has a __staleWhileFetching\n                // value, then that means the user fetched with {forceRefresh:true},\n                // so it's safe to return that value.\n                if (fetching) {\n                    return value.__staleWhileFetching;\n                }\n                this.#moveToTail(index);\n                if (updateAgeOnGet) {\n                    this.#updateItemAge(index);\n                }\n                return value;\n            }\n        }\n        else if (status) {\n            status.get = 'miss';\n        }\n    }\n    #connect(p, n) {\n        this.#prev[n] = p;\n        this.#next[p] = n;\n    }\n    #moveToTail(index) {\n        // if tail already, nothing to do\n        // if head, move head to next[index]\n        // else\n        //   move next[prev[index]] to next[index] (head has no prev)\n        //   move prev[next[index]] to prev[index]\n        // prev[index] = tail\n        // next[tail] = index\n        // tail = index\n        if (index !== this.#tail) {\n            if (index === this.#head) {\n                this.#head = this.#next[index];\n            }\n            else {\n                this.#connect(this.#prev[index], this.#next[index]);\n            }\n            this.#connect(this.#tail, index);\n            this.#tail = index;\n        }\n    }\n    /**\n     * Deletes a key out of the cache.\n     * Returns true if the key was deleted, false otherwise.\n     */\n    delete(k) {\n        let deleted = false;\n        if (this.#size !== 0) {\n            const index = this.#keyMap.get(k);\n            if (index !== undefined) {\n                deleted = true;\n                if (this.#size === 1) {\n                    this.clear();\n                }\n                else {\n                    this.#removeItemSize(index);\n                    const v = this.#valList[index];\n                    if (this.#isBackgroundFetch(v)) {\n                        v.__abortController.abort(new Error('deleted'));\n                    }\n                    else if (this.#hasDispose || this.#hasDisposeAfter) {\n                        if (this.#hasDispose) {\n                            this.#dispose?.(v, k, 'delete');\n                        }\n                        if (this.#hasDisposeAfter) {\n                            this.#disposed?.push([v, k, 'delete']);\n                        }\n                    }\n                    this.#keyMap.delete(k);\n                    this.#keyList[index] = undefined;\n                    this.#valList[index] = undefined;\n                    if (index === this.#tail) {\n                        this.#tail = this.#prev[index];\n                    }\n                    else if (index === this.#head) {\n                        this.#head = this.#next[index];\n                    }\n                    else {\n                        this.#next[this.#prev[index]] = this.#next[index];\n                        this.#prev[this.#next[index]] = this.#prev[index];\n                    }\n                    this.#size--;\n                    this.#free.push(index);\n                }\n            }\n        }\n        if (this.#hasDisposeAfter && this.#disposed?.length) {\n            const dt = this.#disposed;\n            let task;\n            while ((task = dt?.shift())) {\n                this.#disposeAfter?.(...task);\n            }\n        }\n        return deleted;\n    }\n    /**\n     * Clear the cache entirely, throwing away all values.\n     */\n    clear() {\n        for (const index of this.#rindexes({ allowStale: true })) {\n            const v = this.#valList[index];\n            if (this.#isBackgroundFetch(v)) {\n                v.__abortController.abort(new Error('deleted'));\n            }\n            else {\n                const k = this.#keyList[index];\n                if (this.#hasDispose) {\n                    this.#dispose?.(v, k, 'delete');\n                }\n                if (this.#hasDisposeAfter) {\n                    this.#disposed?.push([v, k, 'delete']);\n                }\n            }\n        }\n        this.#keyMap.clear();\n        this.#valList.fill(undefined);\n        this.#keyList.fill(undefined);\n        if (this.#ttls && this.#starts) {\n            this.#ttls.fill(0);\n            this.#starts.fill(0);\n        }\n        if (this.#sizes) {\n            this.#sizes.fill(0);\n        }\n        this.#head = 0;\n        this.#tail = 0;\n        this.#free.length = 0;\n        this.#calculatedSize = 0;\n        this.#size = 0;\n        if (this.#hasDisposeAfter && this.#disposed) {\n            const dt = this.#disposed;\n            let task;\n            while ((task = dt?.shift())) {\n                this.#disposeAfter?.(...task);\n            }\n        }\n    }\n}\nexports.LRUCache = LRUCache;\nexports[\"default\"] = LRUCache;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/mysql2/node_modules/lru-cache/dist/cjs/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/mysql2/package.json":
/*!******************************************!*\
  !*** ./node_modules/mysql2/package.json ***!
  \******************************************/
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"name":"mysql2","version":"3.10.0","description":"fast mysql driver. Implements core protocol, prepared statements, ssl and compression in native JS","main":"index.js","typings":"typings/mysql/index","scripts":{"lint":"npm run lint:docs && npm run lint:code","lint:code":"eslint index.js promise.js index.d.ts promise.d.ts \\"typings/**/*.ts\\" \\"lib/**/*.js\\" \\"test/**/*.{js,cjs,mjs,ts}\\" \\"benchmarks/**/*.js\\"","lint:docs":"eslint Contributing.md README.md","lint:typings":"npx prettier --check ./typings","lint:tests":"npx prettier --check ./test","test":"poku --debug --include=\\"test/esm,test/unit,test/integration\\"","test:bun":"poku --debug --platform=\\"bun\\" --include=\\"test/esm,test/unit,test/integration\\"","test:deno":"deno run --allow-read --allow-env --allow-run npm:poku --debug --platform=\\"deno\\" --deno-allow=\\"read,env,net,sys\\" --deno-cjs=\\".js,.cjs\\" --include=\\"test/esm,test/unit,test/integration\\"","test:tsc-build":"cd \\"test/tsc-build\\" && npx tsc -p \\"tsconfig.json\\"","coverage-test":"c8 npm run test","benchmark":"node ./benchmarks/benchmark.js","prettier":"prettier --single-quote --trailing-comma none --write \\"{lib,test}/**/*.js\\"","prettier:docs":"prettier --single-quote --trailing-comma none --write README.md","precommit":"lint-staged","eslint-check":"eslint --print-config .eslintrc | eslint-config-prettier-check","wait-port":"wait-on"},"lint-staged":{"*.js":["prettier --single-quote --trailing-comma none --write","git add"]},"repository":{"type":"git","url":"https://github.com/sidorares/node-mysql2"},"homepage":"https://sidorares.github.io/node-mysql2/docs","keywords":["mysql","client","server"],"files":["lib","typings/mysql","index.js","index.d.ts","promise.js","promise.d.ts"],"exports":{".":"./index.js","./package.json":"./package.json","./promise":"./promise.js","./promise.js":"./promise.js"},"engines":{"node":">= 8.0"},"author":"Andrey Sidorov <andrey.sidorov@gmail.com>","license":"MIT","dependencies":{"denque":"^2.1.0","generate-function":"^2.3.1","iconv-lite":"^0.6.3","long":"^5.2.1","lru-cache":"^8.0.0","named-placeholders":"^1.1.3","seq-queue":"^0.0.5","sqlstring":"^2.3.2"},"devDependencies":{"@types/node":"^20.0.0","@typescript-eslint/eslint-plugin":"^5.42.1","@typescript-eslint/parser":"^5.42.1","assert-diff":"^3.0.2","benchmark":"^2.1.4","c8":"^9.0.0","error-stack-parser":"^2.0.3","eslint":"^8.27.0","eslint-config-prettier":"^9.0.0","eslint-plugin-async-await":"0.0.0","eslint-plugin-markdown":"^5.0.0","lint-staged":"^15.0.1","poku":"^1.14.0","portfinder":"^1.0.28","prettier":"^3.0.0","progress":"^2.0.3","typescript":"^5.0.2"}}');

/***/ })

};
;